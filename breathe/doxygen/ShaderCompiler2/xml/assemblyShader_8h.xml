<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="assemblyShader_8h" kind="file" language="C++">
    <compoundname>assemblyShader.h</compoundname>
    <includedby refid="assemblyShader_8cpp" local="yes">assemblyShader.cpp</includedby>
    <includedby refid="shExpr_8cpp" local="yes">shExpr.cpp</includedby>
    <includedby refid="shExprParser_8cpp" local="yes">shExprParser.cpp</includedby>
    <includedby refid="shsem_8cpp" local="yes">shsem.cpp</includedby>
    <includedby refid="variablesMerger_8cpp" local="yes">variablesMerger.cpp</includedby>
    <invincdepgraph>
      <node id="2">
        <label>assemblyShader.cpp</label>
        <link refid="assemblyShader_8cpp"/>
      </node>
      <node id="1">
        <label>assemblyShader.h</label>
        <link refid="assemblyShader_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>shExpr.cpp</label>
        <link refid="shExpr_8cpp"/>
      </node>
      <node id="4">
        <label>shExprParser.cpp</label>
        <link refid="shExprParser_8cpp"/>
      </node>
      <node id="5">
        <label>shsem.cpp</label>
        <link refid="shsem_8cpp"/>
      </node>
      <node id="6">
        <label>variablesMerger.cpp</label>
        <link refid="variablesMerger_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classShaderParser_1_1AssembleShaderEvalCB" prot="public">ShaderParser::AssembleShaderEvalCB</innerclass>
    <innerclass refid="structShaderParser_1_1AssembleShaderEvalCB_1_1HlslCompile" prot="public">ShaderParser::AssembleShaderEvalCB::HlslCompile</innerclass>
    <innerclass refid="structShaderParser_1_1AssembleShaderEvalCB_1_1PreshaderStat" prot="public">ShaderParser::AssembleShaderEvalCB::PreshaderStat</innerclass>
    <innernamespace refid="namespaceShaderParser">ShaderParser</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="assemblyShader_8h_1a0f794d6b691ebbcb2261a57b0844976f" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool useScarlettWave32</definition>
        <argsstring></argsstring>
        <name>useScarlettWave32</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="assemblyShader.h" line="33" column="16" bodyfile="assemblyShader.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>shader<sp/>assembler</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shsem_8h" kindref="compound">shsem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shsyn.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shlexterm_8h" kindref="compound">shlexterm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shcode_8h" kindref="compound">shcode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shSemCode_8h" kindref="compound">shSemCode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shVariantContext_8h" kindref="compound">shVariantContext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hwSemantic_8h" kindref="compound">hwSemantic.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="variantSemantic_8h" kindref="compound">variantSemantic.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="globalConfig_8h" kindref="compound">globalConfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shExprParser_8h" kindref="compound">shExprParser.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="namedConst_8h" kindref="compound">namedConst.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nameMap_8h" kindref="compound">nameMap.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hlslStage_8h" kindref="compound">hlslStage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="variablesMerger_8h" kindref="compound">variablesMerger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shErrorReporting_8h" kindref="compound">shErrorReporting.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fast__isalnum_8h" kindref="compound">fast_isalnum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/vector_map.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="defer_8h" kindref="compound">defer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>forwards</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structShHardwareOptions" kindref="compound">ShHardwareOptions</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCodeSourceBlocks" kindref="compound">CodeSourceBlocks</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="assemblyShader_8h_1a0f794d6b691ebbcb2261a57b0844976f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="assemblyShader_8h_1a0f794d6b691ebbcb2261a57b0844976f" kindref="member">useScarlettWave32</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="namespaceShaderParser" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceShaderParser" kindref="compound">ShaderParser</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*********************************</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>class<sp/>AssembleShaderEvalCB</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*********************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classShaderParser_1_1AssembleShaderEvalCB" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classShaderParser_1_1AssembleShaderEvalCB" kindref="compound">AssembleShaderEvalCB</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1ShaderEvalCB" kindref="compound">ShaderEvalCB</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classsemantic_1_1VariantBoolExprEvalCB" kindref="compound">semantic::VariantBoolExprEvalCB</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45" refid="structShaderParser_1_1AssembleShaderEvalCB_1_1HlslCompile" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structShaderParser_1_1AssembleShaderEvalCB_1_1HlslCompile" kindref="compound">HlslCompile</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="47" refid="structShaderParser_1_1AssembleShaderEvalCB_1_1HlslCompile_1a45c6bf0047fc5f3bbca3976db9a9f775" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>eastl::optional&lt;semantic::HlslCompileDirective&gt;<sp/><ref refid="structShaderParser_1_1AssembleShaderEvalCB_1_1HlslCompile_1a45c6bf0047fc5f3bbca3976db9a9f775" kindref="member">compile</ref>{};</highlight></codeline>
<codeline lineno="48" refid="structShaderParser_1_1AssembleShaderEvalCB_1_1HlslCompile_1a95df4c466fa20f95016b4d70b4dad134" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>hlsl_compile_class<sp/>*<ref refid="structShaderParser_1_1AssembleShaderEvalCB_1_1HlslCompile_1a95df4c466fa20f95016b4d70b4dad134" kindref="member">symbol</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49" refid="structShaderParser_1_1AssembleShaderEvalCB_1_1HlslCompile_1ac08c310bbcadfda3d12831adf631ac35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structShaderParser_1_1AssembleShaderEvalCB_1_1HlslCompile_1ac08c310bbcadfda3d12831adf631ac35" kindref="member">stageName</ref>;</highlight></codeline>
<codeline lineno="50" refid="structShaderParser_1_1AssembleShaderEvalCB_1_1HlslCompile_1a3d10d2539cccac1845837e4c5332314f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/><ref refid="structShaderParser_1_1AssembleShaderEvalCB_1_1HlslCompile_1a3d10d2539cccac1845837e4c5332314f" kindref="member">defaultTarget</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structShaderParser_1_1AssembleShaderEvalCB_1_1HlslCompile_1ad937640261f7025bb67293d3b22f60bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structShaderParser_1_1AssembleShaderEvalCB_1_1HlslCompile_1ad937640261f7025bb67293d3b22f60bd" kindref="member">reset</ref>()<sp/>{<sp/><ref refid="structShaderParser_1_1AssembleShaderEvalCB_1_1HlslCompile_1a45c6bf0047fc5f3bbca3976db9a9f775" kindref="member">compile</ref><sp/>=<sp/>{};<sp/>}</highlight></codeline>
<codeline lineno="53" refid="structShaderParser_1_1AssembleShaderEvalCB_1_1HlslCompile_1afb5883dcf9c6d0624d33ffd4da9df460" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structShaderParser_1_1AssembleShaderEvalCB_1_1HlslCompile_1afb5883dcf9c6d0624d33ffd4da9df460" kindref="member">hasCompilation</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structShaderParser_1_1AssembleShaderEvalCB_1_1HlslCompile_1a45c6bf0047fc5f3bbca3976db9a9f775" kindref="member">compile</ref>.has_value();<sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structShaderParser_1_1AssembleShaderEvalCB_1_1PreshaderStat" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structShaderParser_1_1AssembleShaderEvalCB_1_1PreshaderStat" kindref="compound">PreshaderStat</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="58" refid="structShaderParser_1_1AssembleShaderEvalCB_1_1PreshaderStat_1a3afe4d09a9a2d753e0ba75fafd71db9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>state_block_stat<sp/>*<ref refid="structShaderParser_1_1AssembleShaderEvalCB_1_1PreshaderStat_1a3afe4d09a9a2d753e0ba75fafd71db9e" kindref="member">stat</ref>;</highlight></codeline>
<codeline lineno="59" refid="structShaderParser_1_1AssembleShaderEvalCB_1_1PreshaderStat_1a01744817374c0d3000f90b2cacbe6b45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ShaderStage<sp/><ref refid="structShaderParser_1_1AssembleShaderEvalCB_1_1PreshaderStat_1a01744817374c0d3000f90b2cacbe6b45" kindref="member">stage</ref>;</highlight></codeline>
<codeline lineno="60" refid="structShaderParser_1_1AssembleShaderEvalCB_1_1PreshaderStat_1ae3e373c56d3d0b19d86e20a1c9b0a0ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacesemantic_1a1fd7ba909c618ad56fbacae8b3226182" kindref="member">semantic::VariableType</ref><sp/><ref refid="structShaderParser_1_1AssembleShaderEvalCB_1_1PreshaderStat_1ae3e373c56d3d0b19d86e20a1c9b0a0ea" kindref="member">vt</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classShaderParser_1_1AssembleShaderEvalCB_1a3058e4d1c01fc25c4a62bf0e150fe6ca" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classshc_1_1VariantContext" kindref="compound">shc::VariantContext</ref><sp/>&amp;<ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a3058e4d1c01fc25c4a62bf0e150fe6ca" kindref="member">ctx</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Cached<sp/>refs<sp/>from<sp/>ctx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classShaderParser_1_1AssembleShaderEvalCB_1a2e5aa16f073ae06f6d67c338553e8c6b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classShaderClass" kindref="compound">ShaderClass</ref><sp/>&amp;<ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a2e5aa16f073ae06f6d67c338553e8c6b" kindref="member">sclass</ref>;<sp/></highlight><highlight class="comment">//<sp/>@TODO:<sp/>this<sp/>should<sp/>be<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classShaderParser_1_1AssembleShaderEvalCB_1a2ba6fb52310a3ced7b31ede7fd8cbc8b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classShaderSemCode" kindref="compound">ShaderSemCode</ref><sp/>&amp;<ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a2ba6fb52310a3ced7b31ede7fd8cbc8b" kindref="member">code</ref>;</highlight></codeline>
<codeline lineno="68" refid="classShaderParser_1_1AssembleShaderEvalCB_1a5f188611e0ec12c9ca4259dcc5ec1be5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structShaderSemCode_1_1PassTab" kindref="compound">ShaderSemCode::PassTab</ref><sp/>*<ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a5f188611e0ec12c9ca4259dcc5ec1be5" kindref="member">curvariant</ref>;</highlight></codeline>
<codeline lineno="69" refid="classShaderParser_1_1AssembleShaderEvalCB_1afc3b519f4870906d37b91b0c43d9dd3d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structSemanticShaderPass" kindref="compound">SemanticShaderPass</ref><sp/>*<ref refid="classShaderParser_1_1AssembleShaderEvalCB_1afc3b519f4870906d37b91b0c43d9dd3d" kindref="member">curpass</ref>;</highlight></codeline>
<codeline lineno="70" refid="classShaderParser_1_1AssembleShaderEvalCB_1a13773638b08aa98d58ad65a92533a4e8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structStcodeBytecodeAccumulator" kindref="compound">StcodeBytecodeAccumulator</ref><sp/>&amp;<ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a13773638b08aa98d58ad65a92533a4e8" kindref="member">stBytecodeAccum</ref>;</highlight></codeline>
<codeline lineno="71" refid="classShaderParser_1_1AssembleShaderEvalCB_1ae6d873c03dd1eb2d1d3df5df90875819" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structStcodePass" kindref="compound">StcodePass</ref><sp/>&amp;<ref refid="classShaderParser_1_1AssembleShaderEvalCB_1ae6d873c03dd1eb2d1d3df5df90875819" kindref="member">stCppcodeAccum</ref>;</highlight></codeline>
<codeline lineno="72" refid="classShaderParser_1_1AssembleShaderEvalCB_1a9fce8bcafff541a352da46dc6bb3e441" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structNamedConstBlock" kindref="compound">NamedConstBlock</ref><sp/>&amp;<ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a9fce8bcafff541a352da46dc6bb3e441" kindref="member">shConst</ref>;</highlight></codeline>
<codeline lineno="73" refid="classShaderParser_1_1AssembleShaderEvalCB_1afabaa52e0ea25f004960aacc342b3c84" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structParser" kindref="compound">Parser</ref><sp/>&amp;<ref refid="classShaderParser_1_1AssembleShaderEvalCB_1afabaa52e0ea25f004960aacc342b3c84" kindref="member">parser</ref>;</highlight></codeline>
<codeline lineno="74" refid="classShaderParser_1_1AssembleShaderEvalCB_1acd8eb6b1e5a36d30cc261b2f860856e3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1ExpressionParser" kindref="compound">ExpressionParser</ref><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1acd8eb6b1e5a36d30cc261b2f860856e3" kindref="member">exprParser</ref>;<sp/></highlight><highlight class="comment">//<sp/>Isn&apos;t<sp/>a<sp/>ref,<sp/>but<sp/>is<sp/>actually<sp/>a<sp/>pair<sp/>of<sp/>refs<sp/>to<sp/>ctx<sp/>and<sp/>parser<sp/>with<sp/>behaviour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classShaderParser_1_1AssembleShaderEvalCB_1a24fe31141b2ba1fbf952b0e8dd4bec22" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1TypeTable" kindref="compound">ShaderVariant::TypeTable</ref><sp/>&amp;<ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a24fe31141b2ba1fbf952b0e8dd4bec22" kindref="member">allRefStaticVars</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classShaderParser_1_1AssembleShaderEvalCB_1a4c3cbc6db4d70ab44ab3c36ae1592827" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a4c3cbc6db4d70ab44ab3c36ae1592827" kindref="member">dont_render</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78" refid="classShaderParser_1_1AssembleShaderEvalCB_1a427ca9934008b70bad704563c42c617b" refkind="member"><highlight class="normal"><sp/><sp/>Terminal<sp/>*<ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a427ca9934008b70bad704563c42c617b" kindref="member">no_dynstcode</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79" refid="classShaderParser_1_1AssembleShaderEvalCB_1ab9cab3d8f792289893c0ea004fb65110" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;Terminal<sp/>*&gt;<sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1ab9cab3d8f792289893c0ea004fb65110" kindref="member">stcode_vars</ref>;</highlight></codeline>
<codeline lineno="80" refid="classShaderParser_1_1AssembleShaderEvalCB_1a7c80bebc9e0a9217fa0568c9e7ab1ec9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structShaderVariant_1_1VariantInfo" kindref="compound">ShaderVariant::VariantInfo</ref><sp/>&amp;<ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a7c80bebc9e0a9217fa0568c9e7ab1ec9" kindref="member">variant</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classShaderParser_1_1AssembleShaderEvalCB_1a6860b6f93232191e96b1ccada7510d8d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structPerHlslStage" kindref="compound">PerHlslStage&lt;HlslCompile&gt;</ref><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a6860b6f93232191e96b1ccada7510d8d" kindref="member">hlsls</ref>{};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classShaderParser_1_1AssembleShaderEvalCB_1a14130d2479772469a8e6df8580f83c1a" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;eastl::variant&lt;PreshaderStat,<sp/>local_var_decl<sp/>*&gt;&gt;<sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a14130d2479772469a8e6df8580f83c1a" kindref="member">preshaderScalarStats</ref>{};</highlight></codeline>
<codeline lineno="85" refid="classShaderParser_1_1AssembleShaderEvalCB_1a6ea7a67aa6b841f14f12d1b2e02759d6" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;PreshaderStat&gt;<sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a6ea7a67aa6b841f14f12d1b2e02759d6" kindref="member">preshaderStaticTextureStats</ref>{};</highlight></codeline>
<codeline lineno="86" refid="classShaderParser_1_1AssembleShaderEvalCB_1a92a00236fa1ab932b4046af012d3799b" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;PreshaderStat&gt;<sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a92a00236fa1ab932b4046af012d3799b" kindref="member">preshaderDynamicResourceStats</ref>{};</highlight></codeline>
<codeline lineno="87" refid="classShaderParser_1_1AssembleShaderEvalCB_1a83ff86702f67548a6b715f02e8ebecf6" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;PreshaderStat&gt;<sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a83ff86702f67548a6b715f02e8ebecf6" kindref="member">preshaderHardcodedStats</ref>{};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>multidraw<sp/>validation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classShaderParser_1_1AssembleShaderEvalCB_1a39ca44997c80a1fdda49317b73bc8151" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a39ca44997c80a1fdda49317b73bc8151" kindref="member">hasDynStcodeRelyingOnMaterialParams</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91" refid="classShaderParser_1_1AssembleShaderEvalCB_1ab4b7f4890dc105b84683fbadd463351d" refkind="member"><highlight class="normal"><sp/><sp/>Symbol<sp/>*<ref refid="classShaderParser_1_1AssembleShaderEvalCB_1ab4b7f4890dc105b84683fbadd463351d" kindref="member">exprWithDynamicAndMaterialTerms</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classShaderParser_1_1AssembleShaderEvalCB_1a2507936d16835c9e6a9269dae3b5b9cf" refkind="member"><highlight class="normal"><sp/><sp/>eastl::vector_map&lt;eastl::string_view,<sp/>Symbol<sp/>*&gt;<sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a14bbbcbe63f36f84456a546fd36f1f2c" kindref="member">uavGlobalShadervarRefs</ref>{},<sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a2507936d16835c9e6a9269dae3b5b9cf" kindref="member">srvGlobalShadervarRefs</ref>{},<sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a1d333fad79171cbd841277824bd2fa8f" kindref="member">uavLocalShadervarRefs</ref>{},</highlight></codeline>
<codeline lineno="94" refid="classShaderParser_1_1AssembleShaderEvalCB_1a00e1da3808ed324516f05116b65d4794" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a00e1da3808ed324516f05116b65d4794" kindref="member">srvLocalShadervarRefs</ref>{};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classShaderParser_1_1AssembleShaderEvalCB_1a34667529acbb189246a907737c79f2dd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structShaderParser_1_1VariablesMerger" kindref="compound">VariablesMerger</ref><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a34667529acbb189246a907737c79f2dd" kindref="member">varMerger</ref>;</highlight></codeline>
<codeline lineno="97" refid="classShaderParser_1_1AssembleShaderEvalCB_1a73469f9521c5c8ca69fd45c4698dda74" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="structShaderParser_1_1VariablesMerger" kindref="compound">VariablesMerger</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classShaderParser_1_1AssembleShaderEvalCB_1aa0a30867edef6bbfacd9e7286672d2f2" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;uintptr_t&gt;<sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1aa0a30867edef6bbfacd9e7286672d2f2" kindref="member">usedPreshaderStatements</ref>{};</highlight></codeline>
<codeline lineno="100" refid="classShaderParser_1_1AssembleShaderEvalCB_1a78718c8e3e4a81b09d11890c5d7f362b" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;eastl::pair&lt;uintptr_t,<sp/>ShVarBool&gt;&gt;<sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a78718c8e3e4a81b09d11890c5d7f362b" kindref="member">boolElementsEvaluationResults</ref>{};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>BlockPipelineType</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOCK_COMPUTE<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOCK_GRAPHICS_PS<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOCK_GRAPHICS_VERTEX<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOCK_GRAPHICS_MESH<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOCK_MAX</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>declaredBlockTypes[BLOCK_MAX]<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>AssemblyShader.cpp</highlight></codeline>
<codeline lineno="117"><highlight class="comment"></highlight><highlight class="comment"><sp/><sp/>/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1af72de12b5e67f69286b9fdb0c6913fe5" kindref="member">AssembleShaderEvalCB</ref>(<ref refid="classshc_1_1VariantContext" kindref="compound">shc::VariantContext</ref><sp/>&amp;<ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a3058e4d1c01fc25c4a62bf0e150fe6ca" kindref="member">ctx</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a8547081625f30f139a633db30fdef8b3" kindref="member">eval_static</ref>(static_var_decl<sp/>&amp;s)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121" refid="classShaderParser_1_1AssembleShaderEvalCB_1a3766a5b39d47f20c878a715af4d5b947" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a3766a5b39d47f20c878a715af4d5b947" kindref="member">eval_interval_decl</ref>(interval<sp/>&amp;interv)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a86f0e5f34abfab44d24408407ec9fdd8" kindref="member">eval_bool_decl</ref>(bool_decl<sp/>&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a480c8889867db4476ba58b6a24f224d0" kindref="member">eval_init_stat</ref>(SHTOK_ident<sp/>*var,<sp/>shader_init_value<sp/>&amp;v);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a3e8154a7f96876f610141f55f60b1df2" kindref="member">eval_channel_decl</ref>(channel_decl<sp/>&amp;s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stream_id<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a0292aa556aa46a5382fc848545707b9b" kindref="member">get_blend_k</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Terminal<sp/>&amp;s);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a95994dc93e46ff28ada30d35fed26a1c" kindref="member">get_blend_op_k</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Terminal<sp/>&amp;s);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a24fee822ee6d7b1f95ebc4d26abee7c2" kindref="member">get_stencil_cmpf_k</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Terminal<sp/>&amp;s);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a1e335ec618c1855de86a27862763d629" kindref="member">get_stensil_op_k</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Terminal<sp/>&amp;s);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a424f366a6638e8386b30cead6b91f905" kindref="member">get_bool_const</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Terminal<sp/>&amp;s);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a2c157ef42d3454c48841426347e84113" kindref="member">get_depth_cmpf_k</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Terminal<sp/>&amp;s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;cmpf);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a336c7cd326496ed18d4c80dd3fcbb7ec" kindref="member">eval_state</ref>(state_stat<sp/>&amp;s)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a8d1dd1a14d6d7533dab6195ea1c0c858" kindref="member">eval_zbias_state</ref>(zbias_state_stat<sp/>&amp;s)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1ac5a6d090c23e495087cdda988448979b" kindref="member">eval_external_block</ref>(external_state_block<sp/>&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136" refid="classShaderParser_1_1AssembleShaderEvalCB_1a5a8a17df94ef7badf4bfb19910ad2a78" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a5a8a17df94ef7badf4bfb19910ad2a78" kindref="member">eval</ref>(immediate_const_block<sp/>&amp;)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1aba32b080ce1cb3cf207c3c19affa6fba" kindref="member">eval_error_stat</ref>(error_stat<sp/>&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1ac2ae9bc248d946e895701b0ed15c3ed2" kindref="member">eval_render_stage</ref>(render_stage_stat<sp/>&amp;s)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139" refid="classShaderParser_1_1AssembleShaderEvalCB_1a380f90903c94fbc7d7150f8d4039fb4a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a380f90903c94fbc7d7150f8d4039fb4a" kindref="member">eval_assume_stat</ref>(assume_stat<sp/>&amp;s)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="140" refid="classShaderParser_1_1AssembleShaderEvalCB_1ae573845abdba8e6308f76202c1f08375" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1ae573845abdba8e6308f76202c1f08375" kindref="member">eval_assume_if_not_assumed_stat</ref>(assume_if_not_assumed_stat<sp/>&amp;s)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a8bc58fb62ecbcc9971c041aa354c25ff" kindref="member">eval_command</ref>(shader_directive<sp/>&amp;s)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a2fbcfc2d67b6deefd9dd09711f92b1a3" kindref="member">eval_supports</ref>(supports_stat<sp/>&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143" refid="classShaderParser_1_1AssembleShaderEvalCB_1af08835abccd6bc11220cf91b6ae85e5c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1af08835abccd6bc11220cf91b6ae85e5c" kindref="member">BlendValueType</ref></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1af08835abccd6bc11220cf91b6ae85e5ca3c3ba615798db7340cd94c6e2d59e74e" kindref="member">Factor</ref>,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1af08835abccd6bc11220cf91b6ae85e5ca8d6afc555354627f9706e93f0c452720" kindref="member">BlendFunc</ref></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a49c2d527b890a4a01b14a9e0ba660d65" kindref="member">eval_blend_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Terminal<sp/>&amp;blend_func_tok,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SHTOK_intnum<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSemanticShaderPass_1a8c92d0de5ee5a7daefe489906978b789" kindref="member">SemanticShaderPass::BlendValues</ref><sp/>&amp;blend_factors,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1af08835abccd6bc11220cf91b6ae85e5c" kindref="member">BlendValueType</ref><sp/>type);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a5e9a6d3c7f86c43bd326f57002c3254c" kindref="member">eval_if</ref>(bool_expr<sp/>&amp;e)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152" refid="classShaderParser_1_1AssembleShaderEvalCB_1ac2ee7f22e484cd1d5ddccda6c664ddbf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1ac2ee7f22e484cd1d5ddccda6c664ddbf" kindref="member">eval_else</ref>(bool_expr<sp/>&amp;)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="153" refid="classShaderParser_1_1AssembleShaderEvalCB_1aa6a89d6146622fbd7e464ce6466bc2c2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1aa6a89d6146622fbd7e464ce6466bc2c2" kindref="member">eval_endif</ref>(bool_expr<sp/>&amp;)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classShaderParser_1_1AssembleShaderEvalCB_1aa4a451b226975e4146bd01448f46db4e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classShVarBool" kindref="compound">ShVarBool</ref><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1aa4a451b226975e4146bd01448f46db4e" kindref="member">eval_expr</ref>(bool_expr<sp/>&amp;e)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="156"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>res<sp/>=<sp/><ref refid="classsemantic_1_1VariantBoolExprEvalCB_1ae0c062f5b1f34d1d8fd6f9a7a2fca859" kindref="member">semantic::VariantBoolExprEvalCB::eval_expr</ref>(e);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().cppStcodeMode<sp/>==<sp/>shader_layout::ExternalStcodeMode::BRANCHED_CPP)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a78718c8e3e4a81b09d11890c5d7f362b" kindref="member">boolElementsEvaluationResults</ref>.emplace_back(uintptr_t(&amp;e),<sp/>res);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162" refid="classShaderParser_1_1AssembleShaderEvalCB_1a01261f9c19a099c786067a26b47d3677" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classShVarBool" kindref="compound">ShVarBool</ref><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a01261f9c19a099c786067a26b47d3677" kindref="member">eval_bool_value</ref>(bool_value<sp/>&amp;val)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="163"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>res<sp/>=<sp/><ref refid="classsemantic_1_1VariantBoolExprEvalCB_1a9821f354db0ee1de0dc805a201837128" kindref="member">semantic::VariantBoolExprEvalCB::eval_bool_value</ref>(val);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().cppStcodeMode<sp/>==<sp/>shader_layout::ExternalStcodeMode::BRANCHED_CPP)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a78718c8e3e4a81b09d11890c5d7f362b" kindref="member">boolElementsEvaluationResults</ref>.emplace_back(uintptr_t(&amp;val),<sp/>res);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a7659036a957a8b26ecaa6c9b1e9d9b76" kindref="member">compilePreshader</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a177f4d3ae0d1f3a58d864ceb0df9f96e" kindref="member">end_pass</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1adaeffdf412eba643b05832b77de2f83c" kindref="member">end_eval</ref>(shader_decl<sp/>&amp;sh);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a000c2b52b77e52c55bf9f6c535f2983d" kindref="member">eval_hlsl_compile</ref>(hlsl_compile_class<sp/>&amp;<ref refid="classShaderParser_1_1AssembleShaderEvalCB_1af4b1bf80be2b69362e8632392b14649f" kindref="member">hlsl_compile</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a94c02339e46e46ec8270f2f7f59bd68f" kindref="member">eval_hlsl_decl</ref>(hlsl_local_decl_class<sp/>&amp;hlsl_decl)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1af4b1bf80be2b69362e8632392b14649f" kindref="member">hlsl_compile</ref>(<ref refid="hlslStage_8h_1a2c05326871fdf863346c90daec291c82" kindref="member">HlslCompilationStage</ref><sp/>stage);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>in<sp/>main<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a22833c4bc718aae5d5591acbecd69235" kindref="member">eval_external_block_stat</ref>(state_block_stat<sp/>&amp;s,<sp/>ShaderStage<sp/>stage);</highlight></codeline>
<codeline lineno="182" refid="classShaderParser_1_1AssembleShaderEvalCB_1a2415344cab91b48a6ec6a1bdf1a3cd59" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a2415344cab91b48a6ec6a1bdf1a3cd59" kindref="member">eval_shader_locdecl</ref>(local_var_decl<sp/>&amp;s)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a14130d2479772469a8e6df8580f83c1a" kindref="member">preshaderScalarStats</ref>.emplace_back(&amp;s);<sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a5dc7b25816fae47cee7290147b0d4074" kindref="member">process_external_block_stat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PreshaderStat<sp/>&amp;stat);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a88b1d93ad602d078e0bd1a764309f6e7" kindref="member">process_shader_locdecl</ref>(local_var_decl<sp/>&amp;s);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a3b8376325930f135b0627b375c28e7c8" kindref="member">decl_bool_alias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>bool_expr<sp/>&amp;expr)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188" refid="classShaderParser_1_1AssembleShaderEvalCB_1afab0695b7761813942c9eb642211617c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1afab0695b7761813942c9eb642211617c" kindref="member">is_debug_mode_enabled</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a3058e4d1c01fc25c4a62bf0e150fe6ca" kindref="member">ctx</ref>.<ref refid="classshc_1_1VariantContext_1a1cd6c96432c33d5741b597ad37709583" kindref="member">shCtx</ref>().<ref refid="classshc_1_1ShaderContext_1a3a6d8c9c28e9c7bd6dfd806d77b1ced9" kindref="member">isDebugModeEnabled</ref>();<sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a9f2c16d8833b79771315394b6abe5685" kindref="member">compile_external_block_stat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PreshaderStat<sp/>&amp;stat);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addBlockType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Terminal<sp/>*t);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasDeclaredGraphicsBlocks();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasDeclaredMeshPipelineBlocks();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isCompute()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a6860b6f93232191e96b1ccada7510d8d" kindref="member">hlsls</ref>.fields.cs.hasCompilation();<sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMesh()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a6860b6f93232191e96b1ccada7510d8d" kindref="member">hlsls</ref>.fields.ms.hasCompilation()<sp/>||<sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a6860b6f93232191e96b1ccada7510d8d" kindref="member">hlsls</ref>.fields.as.hasCompilation();<sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isGraphics()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="200"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a6860b6f93232191e96b1ccada7510d8d" kindref="member">hlsls</ref>.fields.ps.hasCompilation()<sp/>||<sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a6860b6f93232191e96b1ccada7510d8d" kindref="member">hlsls</ref>.fields.vs.hasCompilation()<sp/>||<sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a6860b6f93232191e96b1ccada7510d8d" kindref="member">hlsls</ref>.fields.hs.hasCompilation()<sp/>||</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a6860b6f93232191e96b1ccada7510d8d" kindref="member">hlsls</ref>.fields.ds.hasCompilation()<sp/>||<sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a6860b6f93232191e96b1ccada7510d8d" kindref="member">hlsls</ref>.fields.gs.hasCompilation();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>evalHlslCompileClass(HlslCompile<sp/>*comp);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reserveSpecialCbufferAt(<ref refid="hlslRegisters_8h_1affe2e38eb7f3eb318b7e3b88697f8a42" kindref="member">HlslSlotSemantic</ref><sp/>cbuffer_sem,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reg);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>validateDynamicConstsForMultidraw();</highlight></codeline>
<codeline lineno="210"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>AssembleShaderEvalCB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="classShaderParser_1_1AssembleShaderEvalCB_1a5e9a6d3c7f86c43bd326f57002c3254c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1a5e9a6d3c7f86c43bd326f57002c3254c" kindref="member">AssembleShaderEvalCB::eval_if</ref>(bool_expr<sp/>&amp;e)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1AssembleShaderEvalCB_1aa4a451b226975e4146bd01448f46db4e" kindref="member">eval_expr</ref>(e).<ref refid="classShVarBool_1aa1e84216403109d360db42129c7f698d" kindref="member">value</ref><sp/>?<sp/><ref refid="classShaderParser_1_1ShaderEvalCB_1a4e485b7ac1252d1a948698ab76ccd7cfa795199991378708f0bd9307c73262846" kindref="member">IF_TRUE</ref><sp/>:<sp/><ref refid="classShaderParser_1_1ShaderEvalCB_1a4e485b7ac1252d1a948698ab76ccd7cfa58399c8728006ad1e82d90527d55d3c6" kindref="member">IF_FALSE</ref>;<sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clear<sp/>caches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceShaderParser_1a8d3720af0f21bad15c0361671744eb12" kindref="member">clear_per_file_caches</ref>();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="namespaceShaderParser_1a5a3210b2d749584757e6b05160d0ebd8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classCodeSourceBlocks" kindref="compound">CodeSourceBlocks</ref><sp/>*<ref refid="namespaceShaderParser_1a5a3210b2d749584757e6b05160d0ebd8" kindref="member">getSourceBlocks</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*profile)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structPerHlslStage" kindref="compound">PerHlslStage&lt;CodeSourceBlocks *&gt;</ref><sp/><ref refid="namespaceShaderParser_1aee6486690122ed0b79d805c40be4203e" kindref="member">curHlslBlks</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="namespaceShaderParser_1aee6486690122ed0b79d805c40be4203e" kindref="member">curHlslBlks</ref>.validProfileSwitch(profile);</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="nameMap_8h_1ad3f42c540507651a7e4ce93760afc216" kindref="member">SCFastNameMap</ref><sp/><ref refid="namespaceShaderParser_1ab4b8a9d96a5cf3248e842617aa3fe8a7" kindref="member">renderStageToIdxMap</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ShaderParser</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="assemblyShader.h"/>
  </compounddef>
</doxygen>
