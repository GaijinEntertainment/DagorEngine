<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="shaderVariant_8h" kind="file" language="C++">
    <compoundname>shaderVariant.h</compoundname>
    <includes refid="intervals_8h" local="yes">intervals.h</includes>
    <includes refid="shaderSave_8h" local="yes">shaderSave.h</includes>
    <includes refid="shTargetContext_8h" local="yes">shTargetContext.h</includes>
    <includes local="no">debug/dag_debug.h</includes>
    <includes refid="varTypes_8h" local="yes">varTypes.h</includes>
    <includes refid="commonUtils_8h" local="yes">commonUtils.h</includes>
    <includes local="no">generic/dag_tab.h</includes>
    <includes local="no">util/dag_stdint.h</includes>
    <includes local="no">EASTL/array.h</includes>
    <includedby refid="shSemCode_8cpp" local="yes">shSemCode.cpp</includedby>
    <includedby refid="shShaderContext_8h" local="yes">shShaderContext.h</includedby>
    <includedby refid="shaderVariant_8cpp" local="yes">shaderVariant.cpp</includedby>
    <includedby refid="shcode_8h" local="yes">shcode.h</includedby>
    <incdepgraph>
      <node id="87">
        <label>DebugLevel.h</label>
        <link refid="DebugLevel_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>blkHash.h</label>
        <link refid="blkHash_8h"/>
      </node>
      <node id="80">
        <label>boolVar.h</label>
        <link refid="boolVar_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>commonUtils.h</label>
        <link refid="commonUtils_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>compileResult.h</label>
        <link refid="compileResult_8h"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>const3d.h</label>
        <link refid="const3d_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>cppStcode.h</label>
        <link refid="cppStcode_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>cppStcodeAssembly.h</label>
        <link refid="cppStcodeAssembly_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>cppStcodeBuilder.h</label>
        <link refid="cppStcodeBuilder_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>cppStcodePlatformInfo.h</label>
        <link refid="cppStcodePlatformInfo_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>cppStcodeUtils.h</label>
        <link refid="cppStcodeUtils_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>globVar.h</label>
        <link refid="globVar_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>globalConfig.h</label>
        <link refid="globalConfig_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>hashStrings.h</label>
        <link refid="hashStrings_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>hlslRegisters.h</label>
        <link refid="hlslRegisters_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>hlslStage.h</label>
        <link refid="hlslStage_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>hwAssembly.h</label>
        <link refid="hwAssembly_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>intervals.h</label>
        <link refid="intervals_8h"/>
      </node>
      <node id="5">
        <label>nameMap.h</label>
        <link refid="nameMap_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>namedConst.h</label>
        <link refid="namedConst_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>processes.h</label>
        <link refid="processes_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>samplers.h</label>
        <link refid="samplers_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>shAssumes.h</label>
        <link refid="shAssumes_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>shCompContext.h</label>
        <link refid="shCompContext_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>shCompilationInfo.h</label>
        <link refid="shCompilationInfo_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>shErrorReporting.h</label>
        <link refid="shErrorReporting_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>shLog.h</label>
        <link refid="shLog_8h"/>
      </node>
      <node id="62">
        <label>shMacro.h</label>
        <link refid="shMacro_8h"/>
      </node>
      <node id="9">
        <label>shTargetContext.h</label>
        <link refid="shTargetContext_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>shTargetStorage.h</label>
        <link refid="shTargetStorage_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>shVarVecTypes.h</label>
        <link refid="shVarVecTypes_8h"/>
      </node>
      <node id="67">
        <label>shaderBytecodeCache.h</label>
        <link refid="shaderBytecodeCache_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>shaderSave.h</label>
        <link refid="shaderSave_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>shaderTab.h</label>
        <link refid="shaderTab_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>shaderVariant.h</label>
        <link refid="shaderVariant_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>shlexterm.h</label>
        <link refid="shlexterm_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>stcodeBytecode.h</label>
        <link refid="stcodeBytecode_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>varMap.h</label>
        <link refid="varMap_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>varTypes.h</label>
        <link refid="varTypes_8h"/>
      </node>
      <node id="82">
        <label>variablesMerger.h</label>
        <link refid="variablesMerger_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>3d/dag_texMgr.h</label>
      </node>
      <node id="24">
        <label>EASTL/algorithm.h</label>
      </node>
      <node id="32">
        <label>EASTL/array.h</label>
      </node>
      <node id="85">
        <label>EASTL/bitvector.h</label>
      </node>
      <node id="83">
        <label>EASTL/fixed_vector.h</label>
      </node>
      <node id="84">
        <label>EASTL/map.h</label>
      </node>
      <node id="17">
        <label>EASTL/optional.h</label>
      </node>
      <node id="16">
        <label>EASTL/string.h</label>
      </node>
      <node id="64">
        <label>EASTL/string_view.h</label>
      </node>
      <node id="70">
        <label>EASTL/type_traits.h</label>
      </node>
      <node id="40">
        <label>EASTL/unique_ptr.h</label>
      </node>
      <node id="73">
        <label>EASTL/vector.h</label>
      </node>
      <node id="79">
        <label>EASTL/vector_map.h</label>
      </node>
      <node id="89">
        <label>EASTL/vector_set.h</label>
      </node>
      <node id="33">
        <label>cstdint</label>
      </node>
      <node id="27">
        <label>cstring</label>
      </node>
      <node id="23">
        <label>dag/dag_vector.h</label>
      </node>
      <node id="22">
        <label>debug/dag_assert.h</label>
      </node>
      <node id="78">
        <label>debug/dag_debug.h</label>
      </node>
      <node id="39">
        <label>drv/3d/dag_consts.h</label>
      </node>
      <node id="66">
        <label>drv/3d/dag_renderStates.h</label>
      </node>
      <node id="56">
        <label>drv/3d/dag_sampler.h</label>
      </node>
      <node id="30">
        <label>generic/dag_enumerate.h</label>
      </node>
      <node id="31">
        <label>generic/dag_expected.h</label>
      </node>
      <node id="44">
        <label>generic/dag_fixedMoveOnlyFunction.h</label>
      </node>
      <node id="7">
        <label>generic/dag_tab.h</label>
      </node>
      <node id="26">
        <label>hash/BLAKE3/blake3.h</label>
      </node>
      <node id="49">
        <label>ioSys/dag_dataBlock.h</label>
      </node>
      <node id="53">
        <label>math/dag_color.h</label>
      </node>
      <node id="54">
        <label>math/integer/dag_IPoint4.h</label>
      </node>
      <node id="71">
        <label>memory</label>
      </node>
      <node id="35">
        <label>memory/dag_mem.h</label>
      </node>
      <node id="74">
        <label>memory/dag_memBase.h</label>
      </node>
      <node id="38">
        <label>shaders/dag_shaderVarType.h</label>
      </node>
      <node id="47">
        <label>shaders/dag_shaders.h</label>
      </node>
      <node id="36">
        <label>shaders/shExprTypes.h</label>
      </node>
      <node id="37">
        <label>shaders/shFunc.h</label>
      </node>
      <node id="42">
        <label>shaders/shader_layout.h</label>
      </node>
      <node id="34">
        <label>shaders/slotTexturesRange.h</label>
      </node>
      <node id="60">
        <label>shsyn.h</label>
      </node>
      <node id="41">
        <label>ska_hash_map/flat_hash_map2.hpp</label>
      </node>
      <node id="8">
        <label>util/dag_bindump_ext.h</label>
      </node>
      <node id="15">
        <label>util/dag_globDef.h</label>
      </node>
      <node id="6">
        <label>util/dag_oaHashNameMap.h</label>
      </node>
      <node id="14">
        <label>util/dag_safeArg.h</label>
      </node>
      <node id="75">
        <label>util/dag_simpleString.h</label>
      </node>
      <node id="51">
        <label>util/dag_stdint.h</label>
      </node>
      <node id="46">
        <label>util/dag_string.h</label>
      </node>
      <node id="13">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="16">
        <label>cppStcodeAssembly.cpp</label>
        <link refid="cppStcodeAssembly_8cpp"/>
      </node>
      <node id="6">
        <label>cppStcodePasses.cpp</label>
        <link refid="cppStcodePasses_8cpp"/>
      </node>
      <node id="5">
        <label>cppStcodePasses.h</label>
        <link refid="cppStcodePasses_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>makeShBinDump.cpp</label>
        <link refid="makeShBinDump_8cpp"/>
      </node>
      <node id="21">
        <label>shCode.cpp</label>
        <link refid="shCode_8cpp"/>
      </node>
      <node id="22">
        <label>shExpr.cpp</label>
        <link refid="shExpr_8cpp"/>
      </node>
      <node id="9">
        <label>shExprParser.cpp</label>
        <link refid="shExprParser_8cpp"/>
      </node>
      <node id="2">
        <label>shSemCode.cpp</label>
        <link refid="shSemCode_8cpp"/>
      </node>
      <node id="3">
        <label>shShaderContext.h</label>
        <link refid="shShaderContext_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>shTargetStorage.cpp</label>
        <link refid="shTargetStorage_8cpp"/>
      </node>
      <node id="4">
        <label>shVariantContext.h</label>
        <link refid="shVariantContext_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sh_stat.cpp</label>
        <link refid="sh__stat_8cpp"/>
      </node>
      <node id="10">
        <label>shaderSemantic.cpp</label>
        <link refid="shaderSemantic_8cpp"/>
      </node>
      <node id="8">
        <label>shaderSemantic.h</label>
        <link refid="shaderSemantic_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>shaderVariant.cpp</label>
        <link refid="shaderVariant_8cpp"/>
      </node>
      <node id="1">
        <label>shaderVariant.h</label>
        <link refid="shaderVariant_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>shaderVariantSrc.cpp</label>
        <link refid="shaderVariantSrc_8cpp"/>
      </node>
      <node id="19">
        <label>shcode.h</label>
        <link refid="shcode_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>shsem.cpp</label>
        <link refid="shsem_8cpp"/>
      </node>
      <node id="13">
        <label>variablesMerger.cpp</label>
        <link refid="variablesMerger_8cpp"/>
      </node>
      <node id="14">
        <label>variantAssembly.cpp</label>
        <link refid="variantAssembly_8cpp"/>
      </node>
      <node id="12">
        <label>variantAssembly.h</label>
        <link refid="variantAssembly_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>variantSemantic.cpp</label>
        <link refid="variantSemantic_8cpp"/>
      </node>
      <node id="15">
        <label>variantSemantic.h</label>
        <link refid="variantSemantic_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structShaderVariant_1_1VariantType" prot="public">ShaderVariant::VariantType</innerclass>
    <innerclass refid="classShaderVariant_1_1TypeTable" prot="public">ShaderVariant::TypeTable</innerclass>
    <innerclass refid="classShaderVariant_1_1PartialSearchInfo" prot="public">ShaderVariant::PartialSearchInfo</innerclass>
    <innerclass refid="structShaderVariant_1_1PartialSearchInfo_1_1ValInfo" prot="private">ShaderVariant::PartialSearchInfo::ValInfo</innerclass>
    <innerclass refid="classShaderVariant_1_1CombinedValues" prot="public">ShaderVariant::CombinedValues</innerclass>
    <innerclass refid="classShaderVariant_1_1SearchInfo" prot="public">ShaderVariant::SearchInfo</innerclass>
    <innerclass refid="structShaderVariant_1_1Variant" prot="public">ShaderVariant::Variant</innerclass>
    <innerclass refid="classShaderVariant_1_1VariantTable" prot="public">ShaderVariant::VariantTable</innerclass>
    <innernamespace refid="namespaceShaderVariant">ShaderVariant</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="intervals_8h" kindref="compound">intervals.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shaderSave_8h" kindref="compound">shaderSave.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shTargetContext_8h" kindref="compound">shTargetContext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;debug/dag_debug.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="varTypes_8h" kindref="compound">varTypes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="commonUtils_8h" kindref="compound">commonUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;generic/dag_tab.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/dag_stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/array.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@TODO:<sp/>separate<sp/>logical<sp/>types<sp/>from<sp/>serialized<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceShaderVariant" kindref="compound">ShaderVariant</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19" refid="structShaderVariant_1_1VariantType" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structShaderVariant_1_1VariantType" kindref="compound">VariantType</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22" refid="structShaderVariant_1_1VariantType_1a69e7c12ed3501fa7d3a6662376dc1801" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structShaderVariant_1_1VariantType_1a69e7c12ed3501fa7d3a6662376dc1801" kindref="member">VariantType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structShaderVariant_1_1VariantType_1ac41c9fcfa36cd0e994689c101666a7bd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceShaderVariant_1a2ead6f90546c0e0030738ab5579421cb" kindref="member">BaseType</ref><sp/><ref refid="structShaderVariant_1_1VariantType_1ac41c9fcfa36cd0e994689c101666a7bd" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="25" refid="structShaderVariant_1_1VariantType_1a0bfde85cc8794c633c641e3aa4f32051" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceShaderVariant_1a576d584c5c88f3e1685c515c843bb30a" kindref="member">ExtType</ref><sp/><ref refid="structShaderVariant_1_1VariantType_1a0bfde85cc8794c633c641e3aa4f32051" kindref="member">extType</ref>;</highlight></codeline>
<codeline lineno="26" refid="structShaderVariant_1_1VariantType_1aa4096a5d7cc4d33a52a4430a575bb975" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceShaderVariant_1a30542012bafd43dafa933051e8c289c3" kindref="member">ValueRange</ref><sp/><ref refid="structShaderVariant_1_1VariantType_1aa4096a5d7cc4d33a52a4430a575bb975" kindref="member">valRange</ref>{0,<sp/>0};</highlight></codeline>
<codeline lineno="27" refid="structShaderVariant_1_1VariantType_1a633eeb5f1588d36036b8b8ac4a2f80d6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structShaderVariant_1_1VariantType_1a633eeb5f1588d36036b8b8ac4a2f80d6" kindref="member">BINDUMP_NON_SERIALIZABLE</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classInterval" kindref="compound">Interval</ref><sp/>*interval<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structShaderVariant_1_1VariantType_1a00202787a5ac04def303ac26e14fc90c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structShaderVariant_1_1VariantType_1a00202787a5ac04def303ac26e14fc90c" kindref="member">VariantType</ref>(<ref refid="namespaceShaderVariant_1a2ead6f90546c0e0030738ab5579421cb" kindref="member">BaseType</ref><sp/>init_type,<sp/><ref refid="namespaceShaderVariant_1a576d584c5c88f3e1685c515c843bb30a" kindref="member">ExtType</ref><sp/>init_exttype)<sp/>:<sp/><ref refid="structShaderVariant_1_1VariantType_1ac41c9fcfa36cd0e994689c101666a7bd" kindref="member">type</ref>(init_type),<sp/><ref refid="structShaderVariant_1_1VariantType_1a0bfde85cc8794c633c641e3aa4f32051" kindref="member">extType</ref>(init_exttype),<sp/><ref refid="structShaderVariant_1_1VariantType_1aa4096a5d7cc4d33a52a4430a575bb975" kindref="member">valRange</ref>(0,<sp/>0),<sp/>interval(NULL)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structShaderVariant_1_1VariantType_1a59388666b46c4efd2244564b95b58166" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structShaderVariant_1_1VariantType_1a59388666b46c4efd2244564b95b58166" kindref="member">isEqual</ref>(<ref refid="namespaceShaderVariant_1a2ead6f90546c0e0030738ab5579421cb" kindref="member">BaseType</ref><sp/>init_type,<sp/><ref refid="namespaceShaderVariant_1a576d584c5c88f3e1685c515c843bb30a" kindref="member">ExtType</ref><sp/>init_exttype)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structShaderVariant_1_1VariantType_1ac41c9fcfa36cd0e994689c101666a7bd" kindref="member">type</ref><sp/>==<sp/>init_type<sp/>&amp;&amp;<sp/><ref refid="structShaderVariant_1_1VariantType_1a0bfde85cc8794c633c641e3aa4f32051" kindref="member">extType</ref><sp/>==<sp/>init_exttype;<sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classShaderVariant_1_1TypeTable" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classShaderVariant_1_1TypeTable" kindref="compound">TypeTable</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38" refid="classShaderVariant_1_1TypeTable_1adf2d022bbe7e93b3308a03f45e47c233" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classShaderVariant_1_1TypeTable_1adf2d022bbe7e93b3308a03f45e47c233" kindref="member">TypeTable</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39" refid="classShaderVariant_1_1TypeTable_1a7b1a7bf5eed27af46737ea6762c238fa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1TypeTable_1a7b1a7bf5eed27af46737ea6762c238fa" kindref="member">TypeTable</ref>(<ref refid="classshc_1_1TargetContext" kindref="compound">shc::TargetContext</ref><sp/>&amp;a_ctx)<sp/>:<sp/>ctx{&amp;a_ctx}<sp/>{}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classShaderVariant_1_1TypeTable_1ad107f77c534bdad10abcdea8f7709a04" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1TypeTable_1ad107f77c534bdad10abcdea8f7709a04" kindref="member">getCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>types.size();<sp/>};</highlight></codeline>
<codeline lineno="42" refid="classShaderVariant_1_1TypeTable_1ad07dd3cf65d7585a03f92c99de1a572c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1TypeTable_1ad07dd3cf65d7585a03f92c99de1a572c" kindref="member">shrinkTo</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>types.resize(cnt);<sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classShaderVariant_1_1TypeTable_1af90d2bea0949d3dc5bc616d54e419c31" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structShaderVariant_1_1VariantType" kindref="compound">VariantType</ref><sp/>&amp;<ref refid="classShaderVariant_1_1TypeTable_1af90d2bea0949d3dc5bc616d54e419c31" kindref="member">getType</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>types[i];<sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1TypeTable_1a598e48543decca70198ebc78852b1110" kindref="member">addType</ref>(<ref refid="namespaceShaderVariant_1a2ead6f90546c0e0030738ab5579421cb" kindref="member">BaseType</ref><sp/>init_type,<sp/><ref refid="namespaceShaderVariant_1a576d584c5c88f3e1685c515c843bb30a" kindref="member">ExtType</ref><sp/>init_exttype,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>unique);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>type<sp/>from<sp/>list.<sp/>return<sp/>type<sp/>index<sp/>or<sp/>-1,<sp/>if<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1TypeTable_1aa528b15035272c112d1319eeda7bb6f3" kindref="member">findType</ref>(<ref refid="namespaceShaderVariant_1a2ead6f90546c0e0030738ab5579421cb" kindref="member">BaseType</ref><sp/>init_type,<sp/><ref refid="namespaceShaderVariant_1a576d584c5c88f3e1685c515c843bb30a" kindref="member">ExtType</ref><sp/>init_exttype)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>String<sp/><ref refid="classShaderVariant_1_1TypeTable_1afb28959c55f9b0b6d2c9feb59c3d08e8" kindref="member">getTypeName</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>String<sp/><ref refid="classShaderVariant_1_1TypeTable_1aa25f3593efe0e80efe5c2a475965f30a" kindref="member">getValueName</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type_index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value_index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>unified<sp/>interval<sp/>name<sp/>(variable_name<sp/>or<sp/>MODE:&lt;name&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classShaderVariant_1_1TypeTable_1ac082abb9c75345172274377069963b67" kindref="member">getIntervalName</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dump<sp/>to<sp/>string<sp/>info<sp/>about<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>String<sp/><ref refid="classShaderVariant_1_1TypeTable_1ae291fa47f4b0414d1f1e50434a3d800b" kindref="member">getStringInfo</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remap<sp/>value<sp/>from<sp/>some<sp/>number<sp/>to<sp/>a<sp/>inteval-index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="namespaceShaderVariant_1ac16065f8f13b47639769efb7fbeb0a24" kindref="member">ValueType</ref><sp/><ref refid="classShaderVariant_1_1TypeTable_1aae37e869da8e7b771d21030dfb004488" kindref="member">normalizeValue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/>real<sp/>val)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1TypeTable_1a4cf40b5f1779b153a749a9942ab600bd" kindref="member">setIntervalList</ref>(<ref refid="classIntervalList" kindref="compound">IntervalList</ref><sp/>*ilist);</highlight></codeline>
<codeline lineno="64" refid="classShaderVariant_1_1TypeTable_1acb83e9ee8718af131424344efc21224a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIntervalList" kindref="compound">IntervalList</ref><sp/>*<ref refid="classShaderVariant_1_1TypeTable_1acb83e9ee8718af131424344efc21224a" kindref="member">getIntervals</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iList;<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1TypeTable_1a93dff8ebf0aac2b29f70ba69d1e1e9a0" kindref="member">link</ref>(Tab&lt;ExtType&gt;<sp/>&amp;interval_link_table);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classShaderVariant_1_1TypeTable_1a8288b463477dabb5d3df3b3276de521a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1TypeTable_1a8288b463477dabb5d3df3b3276de521a" kindref="member">reset</ref>()<sp/>{<sp/>types.clear();<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classShaderVariant_1_1TypeTable_1a0dd4691c1436822f7bd8fd4d84e90072" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1TypeTable_1a0dd4691c1436822f7bd8fd4d84e90072" kindref="member">setContextRef</ref>(<ref refid="classshc_1_1TargetContext" kindref="compound">shc::TargetContext</ref><sp/>&amp;a_ctx)<sp/>{<sp/>ctx<sp/>=<sp/>&amp;a_ctx;<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classSerializableTab" kindref="compound">SerializableTab&lt;VariantType&gt;</ref><sp/>types;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>BINDUMP_NON_SERIALIZABLE(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIntervalList" kindref="compound">IntervalList</ref><sp/>*iList<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>BINDUMP_NON_SERIALIZABLE(<ref refid="classshc_1_1TargetContext" kindref="compound">shc::TargetContext</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>type<sp/>value<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateTypeValRange(<ref refid="structShaderVariant_1_1VariantType" kindref="compound">VariantType</ref><sp/>&amp;t);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classShaderVariant_1_1PartialSearchInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classShaderVariant_1_1PartialSearchInfo" kindref="compound">PartialSearchInfo</ref></highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83" refid="classShaderVariant_1_1PartialSearchInfo_1a76bcdccce637f908586f814abc595aa8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classShaderVariant_1_1SearchInfo" kindref="compound">SearchInfo</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="86" refid="classShaderVariant_1_1PartialSearchInfo_1ad2a343193179ffb86867bf9ec4f64ab8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1PartialSearchInfo_1ad2a343193179ffb86867bf9ec4f64ab8" kindref="member">PartialSearchInfo</ref>(IMemAlloc<sp/>*m<sp/>=<sp/>tmpmem)<sp/>:<sp/>values(m)<sp/>{}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classShaderVariant_1_1PartialSearchInfo_1ac5840cd68ae6295f62b39b69e06d49af" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1PartialSearchInfo_1ac5840cd68ae6295f62b39b69e06d49af" kindref="member">getCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>values.size();<sp/>}</highlight></codeline>
<codeline lineno="89" refid="classShaderVariant_1_1PartialSearchInfo_1ad7ff6077eb26c1c955704c67223a744a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1PartialSearchInfo_1ad7ff6077eb26c1c955704c67223a744a" kindref="member">clear</ref>()<sp/>{<sp/>clear_and_shrink(values);<sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>unnormalized<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classShaderVariant_1_1PartialSearchInfo_1a41ea5cba58d1332f6e83ae92ef2bd70d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1PartialSearchInfo_1a41ea5cba58d1332f6e83ae92ef2bd70d" kindref="member">setValue</ref>(<ref refid="namespaceShaderVariant_1a2ead6f90546c0e0030738ab5579421cb" kindref="member">BaseType</ref><sp/>init_type,<sp/><ref refid="namespaceShaderVariant_1a576d584c5c88f3e1685c515c843bb30a" kindref="member">ExtType</ref><sp/>init_exttype,<sp/>real<sp/>val)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>values.size();<sp/>i++)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ValInfo<sp/>&amp;vi<sp/>=<sp/>values[i];</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vi.type<sp/>==<sp/>init_type<sp/>&amp;&amp;<sp/>vi.extType<sp/>==<sp/>init_exttype)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vi.val<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>ValInfo<sp/>&amp;vi<sp/>=<sp/>values.push_back();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>vi.type<sp/>=<sp/>init_type;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>vi.extType<sp/>=<sp/>init_exttype;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>vi.val<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ValInfo</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceShaderVariant_1a2ead6f90546c0e0030738ab5579421cb" kindref="member">BaseType</ref><sp/>type;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceShaderVariant_1a576d584c5c88f3e1685c515c843bb30a" kindref="member">ExtType</ref><sp/>extType;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>real<sp/>val;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>Tab&lt;ValInfo&gt;<sp/>values;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classShaderVariant_1_1CombinedValues" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classShaderVariant_1_1CombinedValues" kindref="compound">CombinedValues</ref></highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="124" refid="classShaderVariant_1_1CombinedValues_1a23ca13922e3fc808f7b566662ae9c932" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classShaderVariant_1_1CombinedValues_1a23ca13922e3fc808f7b566662ae9c932" kindref="member">CombinedValues</ref>()<sp/>{<sp/>mValues.fill(0);<sp/>}</highlight></codeline>
<codeline lineno="125" refid="classShaderVariant_1_1CombinedValues_1a7f6467e765af422e82228befad778a23" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1CombinedValues_1a7f6467e765af422e82228befad778a23" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1CombinedValues" kindref="compound">CombinedValues</ref><sp/>&amp;right)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCount<sp/>==<sp/>right.mCount<sp/>&amp;&amp;<sp/>right.mValues<sp/>==<sp/>mValues;<sp/>}</highlight></codeline>
<codeline lineno="126" refid="classShaderVariant_1_1CombinedValues_1a2f16b1f3b7ccda866dd31d04912b0bfa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1CombinedValues_1a2f16b1f3b7ccda866dd31d04912b0bfa" kindref="member">set</ref>(uint32_t<sp/>idx,<sp/><ref refid="namespaceShaderVariant_1ac16065f8f13b47639769efb7fbeb0a24" kindref="member">ValueType</ref><sp/>value)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERT(idx<sp/>&lt;<sp/>mCount);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>mValues[idx]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131" refid="classShaderVariant_1_1CombinedValues_1af20f252569b83c63f0a6b3df8ce8ace1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespaceShaderVariant_1ac16065f8f13b47639769efb7fbeb0a24" kindref="member">ValueType</ref><sp/><ref refid="classShaderVariant_1_1CombinedValues_1af20f252569b83c63f0a6b3df8ce8ace1" kindref="member">get</ref>(uint32_t<sp/>idx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="132"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERT(idx<sp/>&lt;<sp/>mCount);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mValues[idx];</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136" refid="classShaderVariant_1_1CombinedValues_1a33b8fda6a04f851587b686e2b40af73b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1CombinedValues_1a33b8fda6a04f851587b686e2b40af73b" kindref="member">setCount</ref>(uint32_t<sp/>count)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERT(count<sp/>&lt;<sp/>MAX_VALUES);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>mCount<sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>eastl::fill(mValues.begin()<sp/>+<sp/>mCount,<sp/>mValues.end(),<sp/>0);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142" refid="classShaderVariant_1_1CombinedValues_1a3672ab62f1d1d3edf1c086eecee6d056" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="classShaderVariant_1_1CombinedValues_1a3672ab62f1d1d3edf1c086eecee6d056" kindref="member">getCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCount;<sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>MAX_VALUES<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>eastl::array&lt;ValueType,<sp/>MAX_VALUES&gt;<sp/>mValues;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>uint32_t<sp/>mCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classShaderVariant_1_1SearchInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classShaderVariant_1_1SearchInfo" kindref="compound">SearchInfo</ref></highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="153" refid="classShaderVariant_1_1SearchInfo_1a57f0987e778d4bb6ce915dd99327d26b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structShaderVariant_1_1Variant" kindref="compound">Variant</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="commonUtils_8h_1a47d8b60f7834176ba883facef39d8db5" kindref="member">NON_COPYABLE_TYPE</ref>(<ref refid="classShaderVariant_1_1SearchInfo" kindref="compound">SearchInfo</ref>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classShaderVariant_1_1SearchInfo_1a74fded6982c9b01470a775642a502423" refkind="member"><highlight class="normal"><sp/><sp/>inline<sp/><ref refid="classShaderVariant_1_1SearchInfo" kindref="compound">SearchInfo</ref>(const<sp/><ref refid="classShaderVariant_1_1TypeTable" kindref="compound">TypeTable</ref><sp/>&amp;t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fill_with_defaults)<sp/>:<sp/><ref refid="classShaderVariant_1_1SearchInfo_1aacbe131c0c89648298bcff4f3b864b21" kindref="member">types</ref>(t)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classShaderVariant_1_1SearchInfo_1aaff088ece9ed5833a9eb71fde3e785bc" kindref="member">combinedValues</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classShaderVariant_1_1SearchInfo_1aaff088ece9ed5833a9eb71fde3e785bc" kindref="member">combinedValues</ref>.<ref refid="classShaderVariant_1_1CombinedValues_1a33b8fda6a04f851587b686e2b40af73b" kindref="member">setCount</ref>(<ref refid="classShaderVariant_1_1SearchInfo_1aacbe131c0c89648298bcff4f3b864b21" kindref="member">types</ref>.<ref refid="classShaderVariant_1_1TypeTable_1ad107f77c534bdad10abcdea8f7709a04" kindref="member">getCount</ref>());</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fill_with_defaults)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classShaderVariant_1_1SearchInfo_1aacbe131c0c89648298bcff4f3b864b21" kindref="member">types</ref>.<ref refid="classShaderVariant_1_1TypeTable_1ad107f77c534bdad10abcdea8f7709a04" kindref="member">getCount</ref>();<sp/>i++)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classShaderVariant_1_1SearchInfo_1ac1b8d90bbe108bb9214482ad837ae1ec" kindref="member">setNormalizedValue</ref>(i,<sp/><ref refid="classShaderVariant_1_1SearchInfo_1aacbe131c0c89648298bcff4f3b864b21" kindref="member">types</ref>.<ref refid="classShaderVariant_1_1TypeTable_1af90d2bea0949d3dc5bc616d54e419c31" kindref="member">getType</ref>(i).<ref refid="structShaderVariant_1_1VariantType_1aa4096a5d7cc4d33a52a4430a575bb975" kindref="member">valRange</ref>.getMin());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>from<sp/>partial<sp/>search<sp/>info<sp/>table<sp/>(slow)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classShaderVariant_1_1SearchInfo_1a273e68e2af38ad4c334f9d535dcec05b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1SearchInfo_1a273e68e2af38ad4c334f9d535dcec05b" kindref="member">fillFromPartialSearchInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1PartialSearchInfo" kindref="compound">PartialSearchInfo</ref><sp/>&amp;psi)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classShaderVariant_1_1SearchInfo_1aaff088ece9ed5833a9eb71fde3e785bc" kindref="member">combinedValues</ref>.<ref refid="classShaderVariant_1_1CombinedValues_1a33b8fda6a04f851587b686e2b40af73b" kindref="member">setCount</ref>(psi.values.size());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>psi.values.size();<sp/>i++)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PartialSearchInfo::ValInfo<sp/>&amp;vi<sp/>=<sp/>psi.values[i];</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/><ref refid="classShaderVariant_1_1SearchInfo_1aacbe131c0c89648298bcff4f3b864b21" kindref="member">types</ref>.<ref refid="classShaderVariant_1_1TypeTable_1aa528b15035272c112d1319eeda7bb6f3" kindref="member">findType</ref>(vi.type,<sp/>vi.extType);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/><ref refid="classShaderVariant_1_1SearchInfo_1a18a2096d70f943893587586a094b0a4f" kindref="member">getCount</ref>())</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classShaderVariant_1_1SearchInfo_1a39e202d7e744d0e82dde65086973e31e" kindref="member">setValue</ref>(index,<sp/>vi.val);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classShaderVariant_1_1SearchInfo_1a18a2096d70f943893587586a094b0a4f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="classShaderVariant_1_1SearchInfo_1a18a2096d70f943893587586a094b0a4f" kindref="member">getCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1SearchInfo_1aaff088ece9ed5833a9eb71fde3e785bc" kindref="member">combinedValues</ref>.<ref refid="classShaderVariant_1_1CombinedValues_1a3672ab62f1d1d3edf1c086eecee6d056" kindref="member">getCount</ref>();<sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classShaderVariant_1_1SearchInfo_1ac1b8d90bbe108bb9214482ad837ae1ec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1SearchInfo_1ac1b8d90bbe108bb9214482ad837ae1ec" kindref="member">setNormalizedValue</ref>(uint32_t<sp/>index,<sp/><ref refid="namespaceShaderVariant_1ac16065f8f13b47639769efb7fbeb0a24" kindref="member">ValueType</ref><sp/>val)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERT(index<sp/>&lt;<sp/><ref refid="classShaderVariant_1_1SearchInfo_1a18a2096d70f943893587586a094b0a4f" kindref="member">getCount</ref>());</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classShaderVariant_1_1SearchInfo_1aaff088ece9ed5833a9eb71fde3e785bc" kindref="member">combinedValues</ref>.<ref refid="classShaderVariant_1_1CombinedValues_1a2f16b1f3b7ccda866dd31d04912b0bfa" kindref="member">set</ref>(index,<sp/>val);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="classShaderVariant_1_1SearchInfo_1aa1f92a9c7c4f6e24c9be422636519e8d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="classShaderVariant_1_1SearchInfo_1aa1f92a9c7c4f6e24c9be422636519e8d" kindref="member">getNormalizedValue</ref>(uint32_t<sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="195"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERT(index<sp/>&lt;<sp/><ref refid="classShaderVariant_1_1SearchInfo_1a18a2096d70f943893587586a094b0a4f" kindref="member">getCount</ref>());</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1SearchInfo_1aaff088ece9ed5833a9eb71fde3e785bc" kindref="member">combinedValues</ref>.<ref refid="classShaderVariant_1_1CombinedValues_1af20f252569b83c63f0a6b3df8ce8ace1" kindref="member">get</ref>(index);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>unnormalized<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="classShaderVariant_1_1SearchInfo_1a39e202d7e744d0e82dde65086973e31e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1SearchInfo_1a39e202d7e744d0e82dde65086973e31e" kindref="member">setValue</ref>(uint32_t<sp/>index,<sp/>real<sp/>val)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERT(index<sp/>&lt;<sp/><ref refid="classShaderVariant_1_1SearchInfo_1a18a2096d70f943893587586a094b0a4f" kindref="member">getCount</ref>());</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classShaderVariant_1_1SearchInfo_1aaff088ece9ed5833a9eb71fde3e785bc" kindref="member">combinedValues</ref>.<ref refid="classShaderVariant_1_1CombinedValues_1a2f16b1f3b7ccda866dd31d04912b0bfa" kindref="member">set</ref>(index,<sp/><ref refid="classShaderVariant_1_1SearchInfo_1aacbe131c0c89648298bcff4f3b864b21" kindref="member">types</ref>.<ref refid="classShaderVariant_1_1TypeTable_1aae37e869da8e7b771d21030dfb004488" kindref="member">normalizeValue</ref>(index,<sp/>val));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="classShaderVariant_1_1SearchInfo_1ae7ab7b41c1350b7d0cc422832d4481c6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1TypeTable" kindref="compound">TypeTable</ref><sp/>&amp;<ref refid="classShaderVariant_1_1SearchInfo_1ae7ab7b41c1350b7d0cc422832d4481c6" kindref="member">getTypes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1SearchInfo_1aacbe131c0c89648298bcff4f3b864b21" kindref="member">types</ref>;<sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="210" refid="classShaderVariant_1_1SearchInfo_1aacbe131c0c89648298bcff4f3b864b21" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1TypeTable" kindref="compound">TypeTable</ref><sp/>&amp;<ref refid="classShaderVariant_1_1SearchInfo_1aacbe131c0c89648298bcff4f3b864b21" kindref="member">types</ref>;</highlight></codeline>
<codeline lineno="211" refid="classShaderVariant_1_1SearchInfo_1aaff088ece9ed5833a9eb71fde3e785bc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classShaderVariant_1_1CombinedValues" kindref="compound">CombinedValues</ref><sp/><ref refid="classShaderVariant_1_1SearchInfo_1aaff088ece9ed5833a9eb71fde3e785bc" kindref="member">combinedValues</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">};</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classShaderVariant_1_1VariantSrc" kindref="compound">VariantSrc</ref>;</highlight></codeline>
<codeline lineno="215" refid="structShaderVariant_1_1Variant" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structShaderVariant_1_1Variant" kindref="compound">Variant</ref></highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="218" refid="structShaderVariant_1_1Variant_1acffe20a663060a345b28d9157de15367" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classShaderVariant_1_1VariantSrc" kindref="compound">VariantSrc</ref>;</highlight></codeline>
<codeline lineno="219" refid="structShaderVariant_1_1Variant_1a7f0cacb2bcca03cfa8e3279592e6a9e7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classShaderVariant_1_1CombinedValues" kindref="compound">CombinedValues</ref><sp/><ref refid="structShaderVariant_1_1Variant_1a7f0cacb2bcca03cfa8e3279592e6a9e7" kindref="member">combinedValues</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="222" refid="structShaderVariant_1_1Variant_1a3ea5741fd601096a3f6df3883b67940a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structShaderVariant_1_1Variant_1a3ea5741fd601096a3f6df3883b67940a" kindref="member">codeId</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="structShaderVariant_1_1Variant_1ae191e82e3d69c310a96f52da609d5a08" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structShaderVariant_1_1Variant_1ae191e82e3d69c310a96f52da609d5a08" kindref="member">Variant</ref>()<sp/>:<sp/><ref refid="structShaderVariant_1_1Variant_1a3ea5741fd601096a3f6df3883b67940a" kindref="member">codeId</ref>(-1)<sp/>{}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>equality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="structShaderVariant_1_1Variant_1ac4e3413aadae22944d5b6064a06ccc2d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structShaderVariant_1_1Variant_1ac4e3413aadae22944d5b6064a06ccc2d" kindref="member">isEqual</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1SearchInfo" kindref="compound">SearchInfo</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>other.<ref refid="classShaderVariant_1_1SearchInfo_1aaff088ece9ed5833a9eb71fde3e785bc" kindref="member">combinedValues</ref><sp/>==<sp/><ref refid="structShaderVariant_1_1Variant_1a7f0cacb2bcca03cfa8e3279592e6a9e7" kindref="member">combinedValues</ref>;<sp/>}</highlight></codeline>
<codeline lineno="228" refid="structShaderVariant_1_1Variant_1ab3dc4394c3f41040c8a77e4d9d4e0b03" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structShaderVariant_1_1Variant_1ab3dc4394c3f41040c8a77e4d9d4e0b03" kindref="member">getValue</ref>(uint32_t<sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="229"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERT(index<sp/>&lt;<sp/><ref refid="structShaderVariant_1_1Variant_1a67a6e8dcc733b8aa3ee8c0b7a5a73ffa" kindref="member">getCount</ref>());</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structShaderVariant_1_1Variant_1a7f0cacb2bcca03cfa8e3279592e6a9e7" kindref="member">combinedValues</ref>.<ref refid="classShaderVariant_1_1CombinedValues_1af20f252569b83c63f0a6b3df8ce8ace1" kindref="member">get</ref>(index);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="structShaderVariant_1_1Variant_1a67a6e8dcc733b8aa3ee8c0b7a5a73ffa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structShaderVariant_1_1Variant_1a67a6e8dcc733b8aa3ee8c0b7a5a73ffa" kindref="member">getCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structShaderVariant_1_1Variant_1a7f0cacb2bcca03cfa8e3279592e6a9e7" kindref="member">combinedValues</ref>.<ref refid="classShaderVariant_1_1CombinedValues_1a3672ab62f1d1d3edf1c086eecee6d056" kindref="member">getCount</ref>();<sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal">};</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="classShaderVariant_1_1VariantTable" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classShaderVariant_1_1VariantTable" kindref="compound">VariantTable</ref></highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="240" refid="classShaderVariant_1_1VariantTable_1a86aebe6076418fe8c0620e5a36bd3f5b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classShaderVariant_1_1VariantTableSrc" kindref="compound">VariantTableSrc</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="243" refid="classShaderVariant_1_1VariantTable_1afbb21bdc66c6a39cb90102b503b76229" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classShaderVariant_1_1VariantTable_1afbb21bdc66c6a39cb90102b503b76229" kindref="member">VariantTable</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1VariantTable_1afbb21bdc66c6a39cb90102b503b76229" kindref="member">VariantTable</ref>(<ref refid="classshc_1_1TargetContext" kindref="compound">shc::TargetContext</ref><sp/>&amp;a_ctx);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>search<sp/>info<sp/>values<sp/>for<sp/>this<sp/>variants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><ref refid="classShaderVariant_1_1SearchInfo" kindref="compound">SearchInfo</ref><sp/>*<ref refid="classShaderVariant_1_1VariantTable_1a7239a0c5a979d09125349db8a553676b" kindref="member">createSearchInfo</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fill_with_defaults);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>variant.<sp/>return<sp/>NULL,<sp/>if<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><ref refid="structShaderVariant_1_1Variant" kindref="compound">Variant</ref><sp/>*<ref refid="classShaderVariant_1_1VariantTable_1aa54cf9cab0e37a30fd68819370f5db0f" kindref="member">findVariant</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1SearchInfo" kindref="compound">SearchInfo</ref><sp/>&amp;si);</highlight></codeline>
<codeline lineno="251" refid="classShaderVariant_1_1VariantTable_1adec44cc2ec4f1b47a803e4d762f261b9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structShaderVariant_1_1Variant" kindref="compound">Variant</ref><sp/>*<ref refid="classShaderVariant_1_1VariantTable_1adec44cc2ec4f1b47a803e4d762f261b9" kindref="member">findVariant</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1SearchInfo" kindref="compound">SearchInfo</ref><sp/>&amp;si)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classShaderVariant_1_1VariantTable" kindref="compound">VariantTable</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;<ref refid="classShaderVariant_1_1VariantTable_1adec44cc2ec4f1b47a803e4d762f261b9" kindref="member">findVariant</ref>(si);<sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>variant<sp/>by<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><ref refid="structShaderVariant_1_1Variant" kindref="compound">Variant</ref><sp/>*<ref refid="classShaderVariant_1_1VariantTable_1aba4ea712989e5930003242dbd8b0fd6c" kindref="member">getVariant</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="255" refid="classShaderVariant_1_1VariantTable_1a401f435b645ee650e12fdbcf2469d29f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structShaderVariant_1_1Variant" kindref="compound">Variant</ref><sp/>*<ref refid="classShaderVariant_1_1VariantTable_1a401f435b645ee650e12fdbcf2469d29f" kindref="member">getVariant</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classShaderVariant_1_1VariantTable" kindref="compound">VariantTable</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;<ref refid="classShaderVariant_1_1VariantTable_1a401f435b645ee650e12fdbcf2469d29f" kindref="member">getVariant</ref>(index);<sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="classShaderVariant_1_1VariantTable_1a111a2e0d18d408d0c71a624f8521d99d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1VariantTable_1a111a2e0d18d408d0c71a624f8521d99d" kindref="member">getVarCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>variants.size();<sp/>}</highlight></codeline>
<codeline lineno="258" refid="classShaderVariant_1_1VariantTable_1a0e06f60a5de8eccb50f3ece208778fb6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1TypeTable" kindref="compound">TypeTable</ref><sp/>&amp;<ref refid="classShaderVariant_1_1VariantTable_1a0e06f60a5de8eccb50f3ece208778fb6" kindref="member">getTypes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>types;<sp/>}</highlight></codeline>
<codeline lineno="259" refid="classShaderVariant_1_1VariantTable_1a91006b0393841dc0b711a6da435596ed" refkind="member"><highlight class="normal"><sp/><sp/>dag::ConstSpan&lt;Variant&gt;<sp/><ref refid="classShaderVariant_1_1VariantTable_1a91006b0393841dc0b711a6da435596ed" kindref="member">getVariants</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>variants;<sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1VariantTable_1a60231bb741df72de45d8263cc6eddc4f" kindref="member">linkIntervalList</ref>();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1VariantTable_1a675d5218736040565faed222adee4915" kindref="member">link</ref>(Tab&lt;ExtType&gt;<sp/>&amp;interval_link_table);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="classShaderVariant_1_1VariantTable_1abf6ee144419dddf60673b247e7e30568" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1VariantTable_1abf6ee144419dddf60673b247e7e30568" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>variants.clear();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>intervals.<ref refid="classIntervalList_1a616c852d6b16b37ce7381465b0fcb102" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>types.<ref refid="classShaderVariant_1_1TypeTable_1a8288b463477dabb5d3df3b3276de521a" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="classShaderVariant_1_1VariantTable_1aaddb361ac6622318139ef40ac9d435bc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShaderVariant_1_1VariantTable_1aaddb361ac6622318139ef40ac9d435bc" kindref="member">setContextRef</ref>(<ref refid="classshc_1_1TargetContext" kindref="compound">shc::TargetContext</ref><sp/>&amp;a_ctx)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx<sp/>=<sp/>&amp;a_ctx;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>types.<ref refid="classShaderVariant_1_1TypeTable_1a0dd4691c1436822f7bd8fd4d84e90072" kindref="member">setContextRef</ref>(a_ctx);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="classShaderVariant_1_1TypeTable" kindref="compound">TypeTable</ref><sp/>types;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="classIntervalList" kindref="compound">IntervalList</ref><sp/>intervals;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><ref refid="classSerializableTab" kindref="compound">SerializableTab&lt;Variant&gt;</ref><sp/>variants;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>BINDUMP_NON_SERIALIZABLE(</highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cachedIndex);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>BINDUMP_NON_SERIALIZABLE(<ref refid="classshc_1_1TargetContext" kindref="compound">shc::TargetContext</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="283"><highlight class="normal">};</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ShaderVariant</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="shaderVariant.h"/>
  </compounddef>
</doxygen>
