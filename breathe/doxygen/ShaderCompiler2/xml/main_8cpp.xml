<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">startup/dag_restart.h</includes>
    <includes local="no">startup/dag_globalSettings.h</includes>
    <includes local="no">osApiWrappers/dag_files.h</includes>
    <includes local="no">osApiWrappers/dag_direct.h</includes>
    <includes local="no">osApiWrappers/dag_cpuJobs.h</includes>
    <includes local="no">osApiWrappers/dag_critSec.h</includes>
    <includes local="no">osApiWrappers/dag_miscApi.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">ioSys/dag_dataBlock.h</includes>
    <includes local="no">shaders/dag_shaders.h</includes>
    <includes local="no">shaders/shader_ver.h</includes>
    <includes refid="sha1__cache__version_8h" local="yes">sha1_cache_version.h</includes>
    <includes refid="shLog_8h" local="yes">shLog.h</includes>
    <includes refid="shCompiler_8h" local="yes">shCompiler.h</includes>
    <includes refid="makeShBinDump_8h" local="yes">makeShBinDump.h</includes>
    <includes refid="globalConfig_8h" local="yes">globalConfig.h</includes>
    <includes local="no">ioSys/dag_io.h</includes>
    <includes refid="shCacheVer_8h" local="yes">shCacheVer.h</includes>
    <includes refid="sh__stat_8h" local="yes">sh_stat.h</includes>
    <incdepgraph>
      <node id="61">
        <label>DebugLevel.h</label>
        <link refid="DebugLevel_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>blkHash.h</label>
        <link refid="blkHash_8h"/>
      </node>
      <node id="21">
        <label>commonUtils.h</label>
        <link refid="commonUtils_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>cppStcode.h</label>
        <link refid="cppStcode_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>cppStcodeAssembly.h</label>
        <link refid="cppStcodeAssembly_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>cppStcodeBuilder.h</label>
        <link refid="cppStcodeBuilder_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>cppStcodePlatformInfo.h</label>
        <link refid="cppStcodePlatformInfo_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>globalConfig.h</label>
        <link refid="globalConfig_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>hlslRegisters.h</label>
        <link refid="hlslRegisters_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>makeShBinDump.h</label>
        <link refid="makeShBinDump_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>nameMap.h</label>
        <link refid="nameMap_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>processes.h</label>
        <link refid="processes_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>shCacheVer.h</label>
        <link refid="shCacheVer_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>shCompilationInfo.h</label>
        <link refid="shCompilationInfo_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>shCompiler.h</label>
        <link refid="shCompiler_8h"/>
      </node>
      <node id="16">
        <label>shLog.h</label>
        <link refid="shLog_8h"/>
      </node>
      <node id="66">
        <label>sh_stat.h</label>
        <link refid="sh__stat_8h"/>
      </node>
      <node id="15">
        <label>sha1_cache_version.h</label>
        <link refid="sha1__cache__version_8h"/>
      </node>
      <node id="28">
        <label>shaderSave.h</label>
        <link refid="shaderSave_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>shaderTab.h</label>
        <link refid="shaderTab_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>varMap.h</label>
        <link refid="varMap_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>ver_obj_pcdx.h</label>
        <link refid="ver__obj__pcdx_8h"/>
      </node>
      <node id="36">
        <label>EASTL/algorithm.h</label>
      </node>
      <node id="43">
        <label>EASTL/array.h</label>
      </node>
      <node id="26">
        <label>EASTL/optional.h</label>
      </node>
      <node id="25">
        <label>EASTL/string.h</label>
      </node>
      <node id="51">
        <label>EASTL/unique_ptr.h</label>
      </node>
      <node id="44">
        <label>cstdint</label>
      </node>
      <node id="39">
        <label>cstring</label>
      </node>
      <node id="35">
        <label>dag/dag_vector.h</label>
      </node>
      <node id="34">
        <label>debug/dag_assert.h</label>
      </node>
      <node id="50">
        <label>drv/3d/dag_consts.h</label>
      </node>
      <node id="41">
        <label>generic/dag_enumerate.h</label>
      </node>
      <node id="42">
        <label>generic/dag_expected.h</label>
      </node>
      <node id="58">
        <label>generic/dag_fixedMoveOnlyFunction.h</label>
      </node>
      <node id="32">
        <label>generic/dag_tab.h</label>
      </node>
      <node id="38">
        <label>hash/BLAKE3/blake3.h</label>
      </node>
      <node id="12">
        <label>ioSys/dag_dataBlock.h</label>
      </node>
      <node id="63">
        <label>ioSys/dag_io.h</label>
      </node>
      <node id="46">
        <label>memory/dag_mem.h</label>
      </node>
      <node id="7">
        <label>osApiWrappers/dag_cpuJobs.h</label>
      </node>
      <node id="8">
        <label>osApiWrappers/dag_critSec.h</label>
      </node>
      <node id="6">
        <label>osApiWrappers/dag_direct.h</label>
      </node>
      <node id="5">
        <label>osApiWrappers/dag_files.h</label>
      </node>
      <node id="9">
        <label>osApiWrappers/dag_miscApi.h</label>
      </node>
      <node id="49">
        <label>shaders/dag_shaderVarType.h</label>
      </node>
      <node id="13">
        <label>shaders/dag_shaders.h</label>
      </node>
      <node id="47">
        <label>shaders/shExprTypes.h</label>
      </node>
      <node id="48">
        <label>shaders/shFunc.h</label>
      </node>
      <node id="53">
        <label>shaders/shader_layout.h</label>
      </node>
      <node id="14">
        <label>shaders/shader_ver.h</label>
      </node>
      <node id="45">
        <label>shaders/slotTexturesRange.h</label>
      </node>
      <node id="11">
        <label>signal.h</label>
      </node>
      <node id="52">
        <label>ska_hash_map/flat_hash_map2.hpp</label>
      </node>
      <node id="4">
        <label>startup/dag_globalSettings.h</label>
      </node>
      <node id="3">
        <label>startup/dag_restart.h</label>
      </node>
      <node id="10">
        <label>stdio.h</label>
      </node>
      <node id="2">
        <label>sys/stat.h</label>
      </node>
      <node id="33">
        <label>util/dag_bindump_ext.h</label>
      </node>
      <node id="24">
        <label>util/dag_globDef.h</label>
      </node>
      <node id="31">
        <label>util/dag_oaHashNameMap.h</label>
      </node>
      <node id="23">
        <label>util/dag_safeArg.h</label>
      </node>
      <node id="60">
        <label>util/dag_string.h</label>
      </node>
      <node id="22">
        <label>utility</label>
      </node>
    </incdepgraph>
    <innerclass refid="classCompilerRestartProc" prot="public">CompilerRestartProc</innerclass>
    <innerclass refid="structStdoutBlkErrReporter" prot="public">StdoutBlkErrReporter</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="main_8cpp_1a735019b704b549bf713daa1c3ad81faa" prot="public" static="no">
        <name>HAVE_BREAKPAD_BINDER</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="6" column="10" bodyfile="main.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int __argc</definition>
        <argsstring></argsstring>
        <name>__argc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="65" column="12" declfile="main.cpp" declline="65" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" prot="public" static="no" mutable="no">
        <type>char **</type>
        <definition>char** __argv</definition>
        <argsstring></argsstring>
        <name>__argv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="66" column="13" declfile="main.cpp" declline="66" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1aac4c6446d20e4c4de2ec29f4bfc841c3" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t dagormem_first_pool_sz</definition>
        <argsstring></argsstring>
        <name>dagormem_first_pool_sz</name>
        <initializer>= size_t(2048) &lt;&lt; 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="96" column="8" bodyfile="main.cpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a4908407e5e8864f9e469d2ca71a87c3d" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t dagormem_next_pool_sz</definition>
        <argsstring></argsstring>
        <name>dagormem_next_pool_sz</name>
        <initializer>= 512 &lt;&lt; 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="97" column="8" bodyfile="main.cpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a18589452a7e0082112dd5916ecc3b203" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t dagormem_max_crt_pool_sz</definition>
        <argsstring></argsstring>
        <name>dagormem_max_crt_pool_sz</name>
        <initializer>= 64 &lt;&lt; 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="101" column="8" bodyfile="main.cpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a0130be742a19d47f9cfa5de379799b2f" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* debug_output_dir</definition>
        <argsstring></argsstring>
        <name>debug_output_dir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="108" column="19" bodyfile="debugSpitfile.cpp" bodystart="8" bodyend="-1" declfile="main.cpp" declline="108" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1adee5e5812073317d58c113be5cead4e3" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* debug_output_dir_shader_name</definition>
        <argsstring></argsstring>
        <name>debug_output_dir_shader_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="109" column="19" bodyfile="debugSpitfile.cpp" bodystart="9" bodyend="-1" declfile="main.cpp" declline="109" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1ac0e5c735923be2afc6dcfb66225da756" prot="public" static="yes" mutable="no">
        <type>pthread_t</type>
        <definition>pthread_t g_sigint_handler_thread</definition>
        <argsstring></argsstring>
        <name>g_sigint_handler_thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="272" column="18" bodyfile="main.cpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a694df896fd9318df405e4864ae74a5fd" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char sha1_cache_dir_buf[320]</definition>
        <argsstring>[320]</argsstring>
        <name>sha1_cache_dir_buf</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="343" column="13" bodyfile="main.cpp" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a9466955c9fa405470dd7e3c8029f2ca9" prot="public" static="yes" mutable="no">
        <type>CompilerRestartProc</type>
        <definition>CompilerRestartProc compiler_rproc</definition>
        <argsstring></argsstring>
        <name>compiler_rproc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="813" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1ac2278e7b361e259d8f0811e802cbdc67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SleepEx</definition>
        <argsstring>(uint32_t ms, bool)</argsstring>
        <name>SleepEx</name>
        <param>
          <type>uint32_t</type>
          <declname>ms</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="68" column="6" bodyfile="main.cpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1abb57c0ba9c309e8539c4df376940ac75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getShaderCacheVersion</definition>
        <argsstring>()</argsstring>
        <name>getShaderCacheVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="103" column="12" declfile="main.cpp" declline="103" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a04ad6cf4801a90118d16a533be8040da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reset_shaders_inc_base</definition>
        <argsstring>()</argsstring>
        <name>reset_shaders_inc_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="104" column="13" bodyfile="shlexterm.cpp" bodystart="34" bodyend="34" declfile="main.cpp" declline="104" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a93a91be19d16515c5c8b86cc974f80c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add_shaders_inc_base</definition>
        <argsstring>(const char *base)</argsstring>
        <name>add_shaders_inc_base</name>
        <param>
          <type>const char *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="105" column="13" bodyfile="shlexterm.cpp" bodystart="35" bodyend="35" declfile="main.cpp" declline="105" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a2be1215bc9f2b83f2e56ce1be59d13d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void show_header</definition>
        <argsstring>()</argsstring>
        <name>show_header</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="114" column="13" bodyfile="main.cpp" bodystart="114" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ae5245243a40303ea40f3e033b19d9557" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void showUsage</definition>
        <argsstring>()</argsstring>
        <name>showUsage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="155" column="13" bodyfile="main.cpp" bodystart="155" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a4b8bc0e798564f0b34610f5666e2d695" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool doCompileModulesAsync</definition>
        <argsstring>(const ShCompilationInfo &amp;comp)</argsstring>
        <name>doCompileModulesAsync</name>
        <param>
          <type>const <ref refid="classShCompilationInfo" kindref="compound">ShCompilationInfo</ref> &amp;</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="275" column="13" bodyfile="main.cpp" bodystart="275" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a3b74d24975f973a6ebdf58270743c16a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool remove_recursive</definition>
        <argsstring>(const char *dirname)</argsstring>
        <name>remove_recursive</name>
        <param>
          <type>const char *</type>
          <declname>dirname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="345" column="13" bodyfile="main.cpp" bodystart="345" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a8db55b4c93337881e982e5858b39ef4a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void mergeDataBlock</definition>
        <argsstring>(DataBlock &amp;dest, const DataBlock &amp;src, const SCFastNameMap *ex_nm=NULL)</argsstring>
        <name>mergeDataBlock</name>
        <param>
          <type>DataBlock &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const DataBlock &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const <ref refid="nameMap_8h_1ad3f42c540507651a7e4ce93760afc216" kindref="member">SCFastNameMap</ref> *</type>
          <declname>ex_nm</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="361" column="13" bodyfile="main.cpp" bodystart="361" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ae3b80a6a5cfc3560546f7f60ac51a752" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void compile</definition>
        <argsstring>(Tab&lt; String &gt; &amp;&amp;source_files, const char *fn, const char *bindump_fnprefix, const ShHardwareOptions &amp;opt, const char *blk_file_name, const char *cfg_dir, const char *binminidump_fnprefix, BindumpPackingFlags packing_flags, shc::CompilerConfig &amp;config_rw, const DataBlock *config_args)</argsstring>
        <name>compile</name>
        <param>
          <type>Tab&lt; String &gt; &amp;&amp;</type>
          <declname>source_files</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>bindump_fnprefix</declname>
        </param>
        <param>
          <type>const <ref refid="structShHardwareOptions" kindref="compound">ShHardwareOptions</ref> &amp;</type>
          <declname>opt</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>blk_file_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cfg_dir</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>binminidump_fnprefix</declname>
        </param>
        <param>
          <type><ref refid="makeShBinDump_8h_1a7e4c9039c4d793938486d7f1c089329f" kindref="member">BindumpPackingFlags</ref></type>
          <declname>packing_flags</declname>
        </param>
        <param>
          <type><ref refid="structshc_1_1CompilerConfig" kindref="compound">shc::CompilerConfig</ref> &amp;</type>
          <declname>config_rw</declname>
        </param>
        <param>
          <type>const DataBlock *</type>
          <declname>config_args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="390" column="13" bodyfile="main.cpp" bodystart="390" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a08d7328235a3ac08acf0e87efb6e74f4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>static String getDir</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>getDir</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="691" column="15" bodyfile="main.cpp" bodystart="691" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a013aef314a4ad977aa8469e9aa1973b0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>static String makeShBinDumpName</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>makeShBinDumpName</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="714" column="15" bodyfile="main.cpp" bodystart="714" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ac4dd9cc34b39535831ee497f8d004f89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>eastl::string</type>
        <definition>eastl::string convert_dir_separator</definition>
        <argsstring>(const char *s_)</argsstring>
        <name>convert_dir_separator</name>
        <param>
          <type>const char *</type>
          <declname>s_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="737" column="22" bodyfile="main.cpp" bodystart="737" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a4ea3349e62744f6307a164039532e127" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add_include_path</definition>
        <argsstring>(const char *d, shc::CompilerConfig &amp;config_rw)</argsstring>
        <name>add_include_path</name>
        <param>
          <type>const char *</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="structshc_1_1CompilerConfig" kindref="compound">shc::CompilerConfig</ref> &amp;</type>
          <declname>config_rw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="744" column="6" bodyfile="main.cpp" bodystart="744" bodyend="769"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1acbda47163217e6f6ba1498e7853cd877" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void stderr_report_fatal_error</definition>
        <argsstring>(const char *, const char *msg, const char *call_stack)</argsstring>
        <name>stderr_report_fatal_error</name>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>call_stack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="815" column="13" bodyfile="main.cpp" bodystart="815" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a939ae32fc5848304af610dbf9b07707c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void enable_breakpad</definition>
        <argsstring>()</argsstring>
        <name>enable_breakpad</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="821" column="13" bodyfile="main.cpp" bodystart="821" bodyend="833"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1aeef0cc4e978e8347f1d7eb2b973ae161" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool fatal_handler</definition>
        <argsstring>(const char *msg, const char *call_stack, const char *file, int line)</argsstring>
        <name>fatal_handler</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>call_stack</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="835" column="13" bodyfile="main.cpp" bodystart="835" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a21b04abd6048bd790eb39284d30663ec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool load_blk_with_report</definition>
        <argsstring>(DataBlock &amp;blk, const char *fn)</argsstring>
        <name>load_blk_with_report</name>
        <param>
          <type>DataBlock &amp;</type>
          <declname>blk</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="856" column="13" bodyfile="main.cpp" bodystart="856" bodyend="861"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a4f1c1d5de69279d540f49ba44c033d5d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL WINAPI</type>
        <definition>static BOOL WINAPI ctrl_break_handler</definition>
        <argsstring>(_In_ DWORD dwCtrlType)</argsstring>
        <name>ctrl_break_handler</name>
        <param>
          <type>_In_ DWORD</type>
          <declname>dwCtrlType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="864" column="20" bodyfile="main.cpp" bodystart="864" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_PC_WIN<sp/>&amp;&amp;<sp/>!defined(_M_ARM64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAVE_BREAKPAD_BINDER<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAVE_BREAKPAD_BINDER<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;startup/dag_restart.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;startup/dag_globalSettings.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;osApiWrappers/dag_files.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;osApiWrappers/dag_direct.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;osApiWrappers/dag_cpuJobs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;osApiWrappers/dag_critSec.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;osApiWrappers/dag_miscApi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_BREAKPAD_BINDER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;binder.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ioSys/dag_dataBlock.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;shaders/dag_shaders.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;shaders/shader_ver.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sha1__cache__version_8h" kindref="compound">sha1_cache_version.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shLog_8h" kindref="compound">shLog.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shCompiler_8h" kindref="compound">shCompiler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="makeShBinDump_8h" kindref="compound">makeShBinDump.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="globalConfig_8h" kindref="compound">globalConfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ioSys/dag_io.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shCacheVer_8h" kindref="compound">shCacheVer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&lt;shaders/shOpcodeUnittest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sh__stat_8h" kindref="compound">sh_stat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="loadShaders_8h" kindref="compound">loadShaders.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="assemblyShader_8h" kindref="compound">assemblyShader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nameMap_8h" kindref="compound">nameMap.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;debug/dag_logSys.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;debug/dag_debug.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libTools/util/hash.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/dag_strUtil.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;perfMon/dag_cpuFreq.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="DebugLevel_8h" kindref="compound">DebugLevel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cppStcode_8h" kindref="compound">cppStcode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="defer_8h" kindref="compound">defer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="processes_8h" kindref="compound">processes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_PC_WIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spawn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_PC_MACOSX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AvailabilityMacros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_TARGET_PC_LINUX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/wait.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ac2278e7b361e259d8f0811e802cbdc67" kindref="member">SleepEx</ref>(uint32_t<sp/>ms,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{<sp/>usleep(ms<sp/>*<sp/>1000);<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hash_8h" kindref="compound">hash.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdarg&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_EMPTY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OUTPUT_DIR<sp/>&quot;_output-stub/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_CROSS_TARGET_C1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_CROSS_TARGET_C2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_CROSS_TARGET_DX12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dx12/asmShaderDXIL.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OUTPUT_DIR<sp/>&quot;_output-dx12/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_CROSS_TARGET_DX11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OUTPUT_DIR<sp/>&quot;_output-dx11/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;d3dcompiler.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OUTPUT_DIR<sp/>&quot;_output/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_PC_WIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;d3dcompiler.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_64BIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1aac4c6446d20e4c4de2ec29f4bfc841c3" kindref="member">dagormem_first_pool_sz</ref><sp/>=<sp/>size_t(2048)<sp/>&lt;&lt;<sp/>20;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a4908407e5e8864f9e469d2ca71a87c3d" kindref="member">dagormem_next_pool_sz</ref><sp/>=<sp/>512<sp/>&lt;&lt;<sp/>20;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unsigned<sp/>int<sp/>dagormem_first_pool_sz<sp/>=<sp/>512<sp/>&lt;&lt;<sp/>20;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unsigned<sp/>int<sp/>dagormem_next_pool_sz<sp/>=<sp/>64<sp/>&lt;&lt;<sp/>20;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a18589452a7e0082112dd5916ecc3b203" kindref="member">dagormem_max_crt_pool_sz</ref><sp/>=<sp/>64<sp/>&lt;&lt;<sp/>20;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1abb57c0ba9c309e8539c4df376940ac75" kindref="member">getShaderCacheVersion</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a04ad6cf4801a90118d16a533be8040da" kindref="member">reset_shaders_inc_base</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a93a91be19d16515c5c8b86cc974f80c4" kindref="member">add_shaders_inc_base</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*base);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_METAL<sp/>||<sp/>_CROSS_TARGET_SPIRV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="main_8cpp_1a0130be742a19d47f9cfa5de379799b2f" kindref="member">debug_output_dir</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="main_8cpp_1adee5e5812073317d58c113be5cead4e3" kindref="member">debug_output_dir_shader_name</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QUOTE(x)<sp/>#x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STR(x)<sp/><sp/><sp/>QUOTE(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>show_header()</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;Dagor<sp/>Shader<sp/>Compiler<sp/>%s<sp/>(dump<sp/>format<sp/>&apos;%c%c%c%c&apos;,<sp/>obj<sp/>format<sp/>&apos;%c%c%c%c&apos;,<sp/>shader<sp/>cache<sp/>ver<sp/>0x%x)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>_CROSS_TARGET_EMPTY</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Target:<sp/>stub.%s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">#elif<sp/>_CROSS_TARGET_C1</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">#elif<sp/>_CROSS_TARGET_C2</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">#elif<sp/>_CROSS_TARGET_SPIRV</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Target:<sp/>Spir-V<sp/>via<sp/>HLSLcc<sp/>(dxbc-&gt;glsl),<sp/>DX<sp/>SDK<sp/>%s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">#elif<sp/>_CROSS_TARGET_METAL</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Target:<sp/>Metal<sp/>via<sp/>HLSL2GLS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">#elif<sp/>_CROSS_TARGET_DX12</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Target:<sp/>XboxOne<sp/>or<sp/>PC<sp/>DirectX<sp/>12,<sp/>DXC&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">#elif<sp/>_CROSS_TARGET_DX11</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Target:<sp/>PC<sp/>DirectX<sp/>11,<sp/>SDK.%s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">#error<sp/></highlight><highlight class="stringliteral">&quot;DX9<sp/>support<sp/>dropped&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n\nCopyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT,<sp/>2023\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().version,<sp/>_DUMP4C(SHADER_BINDUMP_VER),<sp/>_DUMP4C(SHADER_CACHE_VER),<sp/>sha1_cache_version</highlight></codeline>
<codeline lineno="136"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>_CROSS_TARGET_C1</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">#elif<sp/>_CROSS_TARGET_DX12</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>version<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">#elif<sp/>_CROSS_TARGET_DX11<sp/>|<sp/>_CROSS_TARGET_SPIRV</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>STR(D3D_COMPILER_VERSION)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">#elif<sp/>_CROSS_TARGET_EMPTY</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QUOTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>STR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@TODO:<sp/>update<sp/>usage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>showUsage()</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>show_header();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\nUsage:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>dsc2-dev.exe<sp/>&lt;config<sp/>blk-file|single<sp/>*.dshl<sp/>file&gt;<sp/>&lt;optional<sp/>options&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Common<sp/>options:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-no_sha1_cache<sp/>-<sp/>do<sp/>not<sp/>use<sp/>sha1<sp/>cache\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-no_compression<sp/>-<sp/>do<sp/>not<sp/>use<sp/>compression<sp/>for<sp/>shaders<sp/>(default:<sp/>false)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-purge_sha1_cache<sp/>-<sp/>delete<sp/>sha1<sp/>cache<sp/>(if<sp/>no_sha1_cache<sp/>is<sp/>not<sp/>enabled,<sp/>it<sp/>will<sp/>be<sp/>re-populated)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-commentPP<sp/>-<sp/>save<sp/>PP<sp/>as<sp/>comments<sp/>(for<sp/>shader<sp/>debugging)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-r<sp/>-<sp/>force<sp/>rebuild<sp/>all<sp/>files<sp/>(even<sp/>if<sp/>not<sp/>modified)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-relinkOnly<sp/>-<sp/>forbid<sp/>compilation<sp/>so<sp/>build<sp/>will<sp/>fail<sp/>if<sp/>any<sp/>OBJ<sp/>is<sp/>out-of-data.<sp/>If<sp/>passed<sp/>with<sp/>-r,<sp/>reduces<sp/>-r<sp/>to<sp/>-forceRelink\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-forceRelink<sp/>-<sp/>enforce<sp/>linking<sp/>even<sp/>if<sp/>bindump<sp/>is<sp/>up<sp/>to<sp/>date<sp/>(may<sp/>be<sp/>useful<sp/>for<sp/>debugging)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-maxVSF<sp/>N<sp/>-<sp/>maximum<sp/>allowed<sp/>VSF<sp/>register<sp/>no.<sp/>Default<sp/>4096\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-maxPSF<sp/>N<sp/>-<sp/>maximum<sp/>allowed<sp/>PSF<sp/>register<sp/>no.<sp/>Default<sp/>4096\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-cjN<sp/>-<sp/>per-source<sp/>parallel<sp/>compilation<sp/>using<sp/>N<sp/>processes<sp/>(N=CpuCount<sp/>by<sp/>default)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-cjWait<sp/>-<sp/>don&apos;t<sp/>terminate<sp/>compilation<sp/>jobs<sp/>on<sp/>first<sp/>error<sp/>(when<sp/>-cjN<sp/>used),<sp/>off<sp/>by<sp/>default\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-jN<sp/>-<sp/>use<sp/>N<sp/>job<sp/>threads<sp/>to<sp/>compile<sp/>shaders<sp/>in<sp/>parallel<sp/>(N=CpuCount<sp/>by<sp/>default)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-belownormal<sp/>-<sp/>lower<sp/>compiler<sp/>process<sp/>priority\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-q<sp/>-<sp/>minimum<sp/>messages\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-define<sp/>NAME<sp/>VAL<sp/>-<sp/>add<sp/>HLSL<sp/>#define<sp/>NAME<sp/>VAL\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-wx<sp/>-<sp/>treat<sp/>all<sp/>warnings<sp/>as<sp/>errors\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-wall<sp/>-<sp/>print<sp/>really<sp/>all<sp/>warning,<sp/>including<sp/>strange<sp/>ones\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-nosave<sp/>-<sp/>no<sp/>save<sp/>output<sp/>code<sp/>(for<sp/>debugs)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-debug<sp/>-<sp/>enable<sp/>debugging<sp/>mode<sp/>in<sp/>shaders.<sp/>It<sp/>assumes<sp/>the<sp/>DEBUG<sp/>=<sp/>yes<sp/>interval,<sp/>and<sp/>enables<sp/>assert\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-allowLargeDumpSize<sp/>-<sp/>remove<sp/>limitation<sp/>on<sp/>compressed<sp/>lib/bindump<sp/>size.<sp/>Use<sp/>at<sp/>your<sp/>discretion\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>_CROSS_TARGET_C1<sp/>|<sp/>_CROSS_TARGET_C2</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-pdb&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>insert<sp/>debug<sp/>info<sp/>during<sp/>HLSL<sp/>compile\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-dfull<sp/>|<sp/>-debugfull<sp/>-<sp/>for<sp/>Dx11<sp/>and<sp/>Dx12,<sp/>it<sp/>produces<sp/>unoptimized<sp/>shaders<sp/>with<sp/>full<sp/>debug<sp/>info,\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-embed_source<sp/>-<sp/>for<sp/>Dx11<sp/>and<sp/>Dx12,<sp/>it<sp/>embeds<sp/>hlsl<sp/>source<sp/>in<sp/>the<sp/>binary<sp/>without<sp/>turning<sp/>off<sp/>optimization,\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>including<sp/>shader<sp/>source,<sp/>so<sp/>shader<sp/>debugging<sp/>will<sp/>have<sp/>the<sp/>HLSL<sp/>source.<sp/>It<sp/>implies<sp/>-pdb.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-daftermath<sp/>-<sp/>for<sp/>DX12,<sp/>it<sp/>produces<sp/>shader<sp/>binaries<sp/>and<sp/>pdb/cso<sp/>files<sp/>for<sp/>detailed<sp/>resolve<sp/>of\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Aftermath<sp/>gpu<sp/>dumps<sp/>by<sp/>Nsight<sp/>Graphics\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-w<sp/>-<sp/>show<sp/>compilation<sp/>warnings<sp/>(hidden<sp/>by<sp/>default)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-ON<sp/>-<sp/>HLSL<sp/>optimization<sp/>level<sp/>(N==0..4,<sp/>default<sp/>=4)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-skipvalidation<sp/>-<sp/>do<sp/>not<sp/>validate<sp/>the<sp/>generated<sp/>code<sp/>against<sp/>known<sp/>capabilities&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>constraints\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-nodisassembly<sp/>-<sp/>no<sp/>hlsl<sp/>disassembly<sp/>output\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-codeDump<sp/><sp/><sp/><sp/>-<sp/>always<sp/>dump<sp/>hlsl/Cg<sp/>source<sp/>code<sp/>to<sp/>be<sp/>compiled<sp/>to<sp/>shaderlog\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-codeDumpSep<sp/>-<sp/>always<sp/>dump<sp/>hlsl/Cg<sp/>source<sp/>code<sp/>to<sp/>be<sp/>compiled<sp/>to<sp/>separate<sp/>files\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-codeDumpErr<sp/>-<sp/>dump<sp/>hlsl/Cg<sp/>source<sp/>code<sp/>to<sp/>shaderlog<sp/>when<sp/>error<sp/>occurs\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-validateIdenticalBytecode<sp/>-<sp/>dumps<sp/>variants<sp/>that<sp/>were<sp/>compiled<sp/>but<sp/>had<sp/>identical<sp/>bytecode\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-shaderOn<sp/>-<sp/>default<sp/>shaders<sp/>are<sp/>on\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-invalidAsNull<sp/>-<sp/>by<sp/>default<sp/>invalid<sp/>variants<sp/>are<sp/>marked<sp/>NULL<sp/>(just<sp/>as<sp/>dont_render)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-o<sp/>&lt;intermediate<sp/>dir&gt;<sp/>-<sp/>path<sp/>to<sp/>store<sp/>obj<sp/>files.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-c<sp/>&lt;source.dshl&gt;<sp/><sp/>-<sp/>compile<sp/>only<sp/>one<sp/>shader<sp/>file<sp/>(using<sp/>all<sp/>settings<sp/>in<sp/>BLK<sp/>as<sp/>usual)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-logdir<sp/>&lt;dir&gt;<sp/><sp/><sp/>-<sp/>path<sp/>to<sp/>logs\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-suppressLogs<sp/><sp/><sp/>-<sp/>do<sp/>not<sp/>make<sp/>fileLogs\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-enablefp16<sp/><sp/><sp/><sp/><sp/>-<sp/>enable<sp/>using<sp/>16<sp/>bit<sp/>types<sp/>in<sp/>shaders\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-HLSL2021<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>use<sp/>the<sp/>HLSL<sp/>2021<sp/>version<sp/>of<sp/>the<sp/>language\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-addTextureType<sp/>-<sp/>save<sp/>static<sp/>texture<sp/>types<sp/>to<sp/>shaderdump<sp/>(need<sp/>for<sp/>texture<sp/>type<sp/>validation<sp/>in<sp/>daBuild)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-logExactTiming<sp/>-<sp/>enable<sp/>logging<sp/>of<sp/>compilation<sp/>times<sp/>with<sp/>0.001s<sp/>(1ms)<sp/>precision\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-perFileAllLogs<sp/>-<sp/>enable<sp/>logging<sp/>of<sp/>compilation<sp/>times<sp/>for<sp/>all<sp/>files<sp/>with<sp/>additional<sp/>info\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-saveDumpOnCrash<sp/>-<sp/>save<sp/>a<sp/>dump<sp/>for<sp/>the<sp/>proccess<sp/>if<sp/>there<sp/>is<sp/>a<sp/>critical<sp/>issue<sp/>during<sp/>compilation<sp/>(could<sp/>cause<sp/>a<sp/>process<sp/>hung)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-cppStcode<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>compile<sp/>cpp<sp/>stcode<sp/>along<sp/>with<sp/>bytecode<sp/>(overrides<sp/>compileCppStcode:b<sp/>from<sp/>blk).<sp/>use<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-cppStcode=[regular|brances]<sp/>for<sp/>specific<sp/>mode<sp/>(regular<sp/>is<sp/>default).\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-noCppStcode<sp/><sp/><sp/><sp/><sp/>-<sp/>complie<sp/>only<sp/>bytecode<sp/>stcode<sp/>(overrides<sp/>compileCppStcode:b<sp/>from<sp/>blk).\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-useCpujobsBackend<sp/>-<sp/>Use<sp/>old<sp/>cpujobs<sp/>as<sp/>the<sp/>mt<sp/>backend.<sp/>Shows<sp/>worse<sp/>cpu<sp/>utilizaiton,<sp/>kept<sp/>as<sp/>a<sp/>fallback<sp/>for<sp/>now.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-cppUnityBuild<sp/><sp/><sp/>-<sp/>use<sp/>unity<sp/>build<sp/>for<sp/>cpp<sp/>stcode.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-cppStcodeArch<sp/><sp/><sp/>-<sp/>Arch<sp/>for<sp/>stcode<sp/>compilation.<sp/>Default<sp/>is<sp/>chosen<sp/>when<sp/>it<sp/>is<sp/>not<sp/>specified.<sp/>Opts:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-cppStcodeConfig<sp/>-<sp/>build<sp/>config<sp/>for<sp/>cpp<sp/>stcode<sp/>[dev|rel|dbg].<sp/>Default<sp/>is<sp/>dev.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-cppStcodePlatform<sp/>-<sp/>Platform<sp/>for<sp/>stcode<sp/>compilation.<sp/>Win<sp/>is<sp/>chosen<sp/>when<sp/>it<sp/>is<sp/>not<sp/>specified.<sp/>Current<sp/>opts:<sp/>pc|android.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-cppStcodeTag<sp/>-<sp/>Custom<sp/>tag<sp/>for<sp/>cppstcode<sp/>dynlib,<sp/>could<sp/>be<sp/>used<sp/>for<sp/>keeping<sp/>multiple<sp/>versions<sp/>of<sp/>the<sp/>dynlib.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-generateCppStcodeValidationData<sp/>-<sp/>generate<sp/>const-setting<sp/>masks<sp/>for<sp/>bytecode<sp/>and<sp/>cppstcode<sp/>for<sp/>runtime<sp/>validation.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>_CROSS_TARGET_DX12</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-localTimestamp<sp/>-<sp/>use<sp/>filesystem<sp/>timestamps<sp/>for<sp/>shader<sp/>classes<sp/>instead<sp/>of<sp/>git<sp/>commit<sp/>timestamps\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="228"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>_CROSS_TARGET_SPIRV<sp/>||<sp/>_CROSS_TARGET_METAL</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-enableBindless:&lt;on|off&gt;<sp/>-<sp/>enables<sp/>utilizing<sp/>bindless<sp/>features<sp/>(default:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>USE_BINDLESS_FOR_STATIC_TEX</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;on)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;off)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="235"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-shadervar-generator-mode<sp/>mode<sp/>-<sp/>specifies<sp/>in<sp/>which<sp/>mode<sp/>the<sp/>shadervar<sp/>generator<sp/>will<sp/>work.<sp/>Possible<sp/>modes:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>none<sp/>-<sp/>the<sp/>generator<sp/>does<sp/>nothing<sp/>(by<sp/>default)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>remove<sp/>-<sp/>all<sp/>generated<sp/>files<sp/>and<sp/>folders<sp/>are<sp/>deleted\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>check<sp/>-<sp/>generates<sp/>code,<sp/>but<sp/>does<sp/>not<sp/>save<sp/>it<sp/>to<sp/>files\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checks<sp/>that<sp/>all<sp/>generated<sp/>code<sp/>fully<sp/>corresponds<sp/>to<sp/>the<sp/>one<sp/>already<sp/>saved<sp/>to<sp/>files\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>this<sp/>is<sp/>not<sp/>true,<sp/>the<sp/>compilation<sp/>is<sp/>failed.<sp/>This<sp/>mode<sp/>is<sp/>used<sp/>in<sp/>bs\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>generate<sp/>-<sp/>generates<sp/>code<sp/>and<sp/>saves<sp/>it<sp/>in<sp/>files\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Options<sp/>for<sp/>!!SINGLE!!<sp/>(not<sp/>config<sp/>BLK!!!)<sp/>*.DSHL<sp/>file<sp/>rebuild:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-gi:&lt;on|off&gt;<sp/>-<sp/>enable/disable<sp/>variants<sp/>for<sp/>GI<sp/>(&lt;on&gt;<sp/>by<sp/>default)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>_CROSS_TARGET_SPIRV</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-compiler-hlslcc<sp/>-<sp/>always<sp/>use<sp/>hlslcc<sp/>compiler<sp/>path\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-compiler-dxc<sp/>-<sp/>always<sp/>use<sp/>dxc<sp/>compiler<sp/>path\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="250"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>_CROSS_TARGET_DX12</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-platform-pc<sp/>-<sp/>target<sp/>PC<sp/>(default)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-platform-xbox-one<sp/>-<sp/>target<sp/>Xbox<sp/>One\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-platform-xbox-scarlett<sp/>-<sp/>target<sp/>Xbox<sp/>Scarlett\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="255"><highlight class="normal">#ifdef<sp/>_CROSS_TARGET_METAL</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-metalios<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>build<sp/>shaders<sp/>for<sp/>iOS<sp/>device\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="258"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>_CROSS_TARGET_SPIRV<sp/>||<sp/>_CROSS_TARGET_METAL</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-debugdir<sp/>DIR<sp/><sp/><sp/>-<sp/>use<sp/>DIR<sp/>to<sp/>store<sp/>debuginfo<sp/>for<sp/>shader<sp/>debugger\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-intervalsdebugdir<sp/>DIR<sp/>-<sp/>use<sp/>DIR<sp/>to<sp/>store<sp/>intervals<sp/>for<sp/>compiled<sp/>shaders\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-spirv-dxc-path<sp/>DIR<sp/>-<sp/>use<sp/>DIR<sp/>to<sp/>load<sp/>dxc<sp/>binaries<sp/>from\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-spirv-dxc-params<sp/>KEY<sp/>VALUE<sp/>-<sp/>pass<sp/>additional<sp/>KEY<sp/>VALUE<sp/>parameter<sp/>to<sp/>dxc,<sp/>pass<sp/>_<sp/>as<sp/>VALUE<sp/>if<sp/>no<sp/>VALUE<sp/>needed\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-allowNoDXC<sp/>-<sp/>don&apos;t<sp/>fail<sp/>if<sp/>dxc<sp/>dynlib<sp/>is<sp/>not<sp/>found,<sp/>but<sp/>just<sp/>don&apos;t<sp/>compile<sp/>shaders<sp/>(for<sp/>stcode-only<sp/>builds)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="265"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>!_CROSS_TARGET_C1<sp/>&amp;&amp;<sp/>!_CROSS_TARGET_C2</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-fsh:&lt;1.1|1.3|1.4|2.0|2.b|2.a|3.0&gt;<sp/>-<sp/>set<sp/>fsh<sp/>version<sp/>(&lt;2.0&gt;<sp/>by<sp/>default)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_PC_LINUX<sp/>|<sp/>_TARGET_PC_MACOSX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>pthread_t<sp/>g_sigint_handler_thread;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>doCompileModulesAsync(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classShCompilationInfo" kindref="compound">ShCompilationInfo</ref><sp/>&amp;comp)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>eastl::string<sp/>cmdname(<ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[0]);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_PC_WIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dd_get_fname_ext(cmdname.c_str()))</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdname<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;.exe&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>dag::Vector&lt;eastl::string&gt;<sp/>commonArgv{cmdname};</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>commonArgv.emplace_back(<ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i]);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>commonArgv.emplace_back(</highlight><highlight class="stringliteral">&quot;-r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().cppStcodeMode<sp/>!=<sp/>shader_layout::ExternalStcodeMode::NONE)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>commonArgv.emplace_back(</highlight><highlight class="stringliteral">&quot;-cppStcode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>commonArgv.emplace_back(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().cppStcodeMode<sp/>==<sp/>shader_layout::ExternalStcodeMode::BRANCHED_CPP<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;branches&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;regular&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp.<ref refid="classShCompilationInfo_1a111f652f9ce42741d9a587b6cb41d464" kindref="member">sources</ref>().size()<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeMsec<sp/>=<sp/>get_time_msec();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modules_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>comp.<ref refid="classShCompilationInfo_1a111f652f9ce42741d9a587b6cb41d464" kindref="member">sources</ref>().size();<sp/>i++)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceshc_1a7446716e9cbf38d49b9caed94e2f0782" kindref="member">shc::should_recompile_sh</ref>(comp,<sp/>comp.<ref refid="classShCompilationInfo_1a111f652f9ce42741d9a587b6cb41d464" kindref="member">sources</ref>()[i])<sp/>&amp;&amp;<sp/>!<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().<ref refid="structshc_1_1CompilerConfig_1a372dbab65eab33a70da402d747c73676" kindref="member">forceRebuild</ref>)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>argv<sp/>=<sp/>commonArgv;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>argv.emplace_back(</highlight><highlight class="stringliteral">&quot;-c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>argv.emplace_back(comp.<ref refid="classShCompilationInfo_1a111f652f9ce42741d9a587b6cb41d464" kindref="member">sources</ref>()[i].c_str());</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceproc_1ad5f5c1701a3bca364551263b0995445a" kindref="member">proc::enqueue</ref>(<ref refid="structproc_1_1ProcessTask" kindref="compound">proc::ProcessTask</ref>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eastl::move(argv),</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eastl::nullopt,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[]<sp/>{},</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[fname<sp/>=<sp/>eastl::string(<ref refid="namespaceshc_1a721ecfdbb88fa2a042d32ee935757308" kindref="member">shc::get_obj_file_name_from_source</ref>(comp.<ref refid="classShCompilationInfo_1a111f652f9ce42741d9a587b6cb41d464" kindref="member">sources</ref>()[i],<sp/>comp))]<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_file_exist(fname.c_str()))</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dd_erase(fname.c_str());</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}});</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>modules_cnt++;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compiled<sp/>=<sp/><ref refid="namespaceproc_1aad37db27edb90a297ccc8ae4716e7905" kindref="member">proc::execute</ref>();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!compiled)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca6112bd3e7c5d175bac1569c33c1630ad" kindref="member">SHLOG_FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;compilation<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeSec<sp/>=<sp/>float(get_time_msec()<sp/>-<sp/>timeMsec)<sp/>*<sp/>1e-3;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().logExactCompilationTimes)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca5395b0c35e96d97ae9ac7f83b0665310" kindref="member">SHLOG_NORMAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[INFO]<sp/>parallel<sp/>compilation<sp/>of<sp/>%d<sp/>modules<sp/>using<sp/>%d<sp/>processes<sp/>(x%d<sp/>threads)<sp/>done<sp/>for<sp/>%.4gs&quot;</highlight><highlight class="normal">,<sp/>modules_cnt,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceproc_1ada719119b9731fd4759e71bbfe10bc52" kindref="member">proc::max_proc_count</ref>(),<sp/><ref refid="namespaceshc_1a15322df1795feb5f2e78c9a9338c6bf0" kindref="member">shc::worker_count</ref>(),<sp/>timeSec);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca5395b0c35e96d97ae9ac7f83b0665310" kindref="member">SHLOG_NORMAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[INFO]<sp/>parallel<sp/>compilation<sp/>of<sp/>%d<sp/>modules<sp/>using<sp/>%d<sp/>processes<sp/>(x%d<sp/>threads)<sp/>done<sp/>for<sp/>%ds&quot;</highlight><highlight class="normal">,<sp/>modules_cnt,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceproc_1ada719119b9731fd4759e71bbfe10bc52" kindref="member">proc::max_proc_count</ref>(),<sp/><ref refid="namespaceshc_1a15322df1795feb5f2e78c9a9338c6bf0" kindref="member">shc::worker_count</ref>(),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(timeSec));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sha1_cache_dir_buf[320]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>remove_recursive(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dirname)</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dd_dir_exist(dirname))</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dirmask[320]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>SNPRINTF(dirmask,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dirmask),<sp/></highlight><highlight class="stringliteral">&quot;%s/*.*&quot;</highlight><highlight class="normal">,<sp/>dirname);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>alefind_t<sp/>&amp;ff<sp/>:<sp/>dd_find_iterator(dirmask,<sp/>DA_SUBDIR))</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>SNPRINTF(dirmask,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dirmask),<sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,<sp/>dirname,<sp/>ff.name);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>&amp;=<sp/>(ff.attr<sp/>&amp;<sp/>DA_SUBDIR)<sp/>?<sp/>remove_recursive(dirmask)<sp/>:<sp/>dd_erase(dirmask);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>ret<sp/>&amp;=<sp/>dd_rmdir(dirname);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mergeDataBlock(DataBlock<sp/>&amp;dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataBlock<sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="nameMap_8h_1ad3f42c540507651a7e4ce93760afc216" kindref="member">SCFastNameMap</ref><sp/>*ex_nm<sp/>=<sp/>NULL)</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>src.paramCount();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>=<sp/>src.getParamName(i);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(src.getParamType(i))</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DataBlock::TYPE_INT:<sp/>dest.setInt(name,<sp/>src.getInt(i));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DataBlock::TYPE_REAL:<sp/>dest.setReal(name,<sp/>src.getReal(i));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DataBlock::TYPE_BOOL:<sp/>dest.setBool(name,<sp/>src.getBool(i));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5caec73ac89ba721ca7dec737875111fddd" kindref="member">SHLOG_WARNING</ref>,<sp/></highlight><highlight class="stringliteral">&quot;unsupported<sp/>type=%d&quot;</highlight><highlight class="normal">,<sp/>src.getParamType(i));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>num<sp/>=<sp/>src.blockCount();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>=<sp/>src.getBlock(i)-&gt;getBlockName();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>DataBlock<sp/>*d<sp/>=<sp/>dest.getBlockByName(name);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d<sp/>||<sp/>(ex_nm<sp/>&amp;&amp;<sp/>ex_nm-&gt;getNameId(name)<sp/>!=<sp/>-1))</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>dest.addNewBlock(src.getBlock(i),<sp/>name);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mergeDataBlock(*d,<sp/>*src.getBlock(i));</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>compile(Tab&lt;String&gt;<sp/>&amp;&amp;source_files,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bindump_fnprefix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structShHardwareOptions" kindref="compound">ShHardwareOptions</ref><sp/>&amp;opt,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*blk_file_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cfg_dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*binminidump_fnprefix,<sp/><ref refid="makeShBinDump_8h_1a7e4c9039c4d793938486d7f1c089329f" kindref="member">BindumpPackingFlags</ref><sp/>packing_flags,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><ref refid="structshc_1_1CompilerConfig" kindref="compound">shc::CompilerConfig</ref><sp/>&amp;config_rw,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataBlock<sp/>*config_args)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>Tab&lt;String&gt;<sp/>sourceList<sp/>=<sp/>eastl::move(source_files);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>String<sp/>intermediateDir{};</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(String<sp/>&amp;fname<sp/>:<sp/>sourceList)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>simplify_fname(fname);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sourceList.size();<sp/>i++)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sourceList[i]<sp/>==<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clear_and_shrink(sourceList);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceList.emplace_back(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sourceList.size()<sp/>!=<sp/>1<sp/>||<sp/>sourceList[0]<sp/>!=<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().<ref refid="structshc_1_1CompilerConfig_1a468f0ae1b98a9df45341f56afe270b59" kindref="member">singleCompilationShName</ref>)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5caae3b70b41400c8a36e8a094ac1dbe43c" kindref="member">SHLOG_ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;unknown<sp/>source<sp/>&apos;%s&apos;,<sp/>available<sp/>are:&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linesForStdout<sp/>=<sp/>min&lt;size_t&gt;(100ul,<sp/>sourceList.size());</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>linesForStdout;<sp/>i++)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca5395b0c35e96d97ae9ac7f83b0665310" kindref="member">SHLOG_NORMAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>%s&quot;</highlight><highlight class="normal">,<sp/>sourceList[i]);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linesForStdout<sp/>&gt;<sp/>sourceList.size())</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca5395b0c35e96d97ae9ac7f83b0665310" kindref="member">SHLOG_NORMAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\nToo<sp/>many<sp/>available<sp/>files,<sp/>see<sp/>full<sp/>list<sp/>in<sp/>log&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>linesForStdout;<sp/>i<sp/>&lt;<sp/>sourceList.size();<sp/>i++)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>%s&quot;</highlight><highlight class="normal">,<sp/>sourceList[i]);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a1645d310ca3c7fe3e3dc882fb7962e9d" kindref="member">sh_process_errors</ref>();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().intermediateDir)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>intermediateDir<sp/>=<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().<ref refid="structshc_1_1CompilerConfig_1a58a6d97a13028d24ac47353c5b762207" kindref="member">intermediateDir</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>intermediateDirBuf[260];</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>dd_get_fname_location(intermediateDirBuf,<sp/>fn);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>dd_append_slash_c(intermediateDirBuf);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>strcat(intermediateDirBuf,<sp/>OUTPUT_DIR);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>intermediateDir<sp/>=<sp/>intermediateDirBuf;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>String<sp/>additionalDirStr;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>additionalDirStr.aprintf(0,<sp/></highlight><highlight class="stringliteral">&quot;-O%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().hlslOptimizationLevel);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().hlslDebugLevel<sp/>==<sp/><ref refid="DebugLevel_8h_1a1a2e78e667f5d5bd44be96e3abc8a3eeae4ac03f6c9f00665644e868dd1fb9f1e" kindref="member">DebugLevel::BASIC</ref>)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>additionalDirStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().hlslDebugLevel<sp/>==<sp/><ref refid="DebugLevel_8h_1a1a2e78e667f5d5bd44be96e3abc8a3eea3ae7d840362552f1fc531c00c91a83b4" kindref="member">DebugLevel::FULL_DEBUG_INFO</ref>)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>additionalDirStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;DFULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().hlslDebugLevel<sp/>==<sp/><ref refid="DebugLevel_8h_1a1a2e78e667f5d5bd44be96e3abc8a3eead0759a9f4d3e8f7b3c0c7dd2f1a4fda9" kindref="member">DebugLevel::AFTERMATH</ref>)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>additionalDirStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;DAFTERMATH&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().isDebugModeEnabled)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>additionalDirStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;-debug&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().hlslEmbedSource)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>additionalDirStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;-embed_src&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_SPIRV<sp/>||<sp/>_CROSS_TARGET_METAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().enableBindless)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>additionalDirStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;-bindless&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>additionalDirStr.aprintf(0,<sp/></highlight><highlight class="stringliteral">&quot;-dxc%s&quot;</highlight><highlight class="normal">,<sp/>spirv::getDXCVerString(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().dxcContext));</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>String<sp/>comboPars(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>&amp;i<sp/>:<sp/><ref refid="namespaceshc" kindref="compound">shc</ref>::<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">config</ref>().dxcParams)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>comboPars<sp/>+=<sp/>i;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!comboPars.empty())</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>additionalDirStr.aprintf(0,<sp/></highlight><highlight class="stringliteral">&quot;-dxcp%08lX&quot;</highlight><highlight class="normal">,<sp/>get_hash(comboPars.c_str()));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>intermediateDir<sp/>+=<sp/>additionalDirStr;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>dd_mkdir(intermediateDir.c_str());</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>SNPRINTF(sha1_cache_dir_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sha1_cache_dir_buf),<sp/></highlight><highlight class="stringliteral">&quot;%s/../../shaders_sha~%s%s&quot;</highlight><highlight class="normal">,<sp/>intermediateDir.c_str(),</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().<ref refid="structshc_1_1CompilerConfig_1a6f69ee6d2352c51623188fca29c8c402" kindref="member">crossCompiler</ref>,<sp/>additionalDirStr.c_str());</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>config_rw.<ref refid="structshc_1_1CompilerConfig_1a695663e26e3171ea12c3734acee74249" kindref="member">sha1CacheDir</ref><sp/>=<sp/>sha1_cache_dir_buf;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().purgeSha1)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>debug(</highlight><highlight class="stringliteral">&quot;purging<sp/>cache<sp/>%s:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().sha1CacheDir,<sp/>remove_recursive(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().sha1CacheDir)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;success&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*destFnBase<sp/>=<sp/>dd_get_fname(fn);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>debug(</highlight><highlight class="stringliteral">&quot;dest:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>destFnBase);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><ref refid="blkHash_8h_1a592888f422a40aa9b9dad4c6e6dbed99" kindref="member">BlkHashBytes</ref><sp/>blkHash<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk_file_name)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>IGenSave<sp/>*hasher<sp/>=<sp/>create_hash_computer_cb(HASH_SAVECB_SHA1);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>DataBlock<sp/>blk(blk_file_name);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config_args)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mergeDataBlock(blk,<sp/>*config_args);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>blk.removeBlock(</highlight><highlight class="stringliteral">&quot;source&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>blk.removeBlock(</highlight><highlight class="stringliteral">&quot;explicit_var_ref&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>blk.removeParam(</highlight><highlight class="stringliteral">&quot;outDumpName&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>blk.removeParam(</highlight><highlight class="stringliteral">&quot;outMiniDumpName&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>blk.removeParam(</highlight><highlight class="stringliteral">&quot;packBin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>blk.removeParam(</highlight><highlight class="stringliteral">&quot;packShGroups&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>blk.removeParam(</highlight><highlight class="stringliteral">&quot;compileCppStcode&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>be<sp/>added<sp/>back<sp/>in<sp/>with<sp/>possible<sp/>override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>blk.removeParam(</highlight><highlight class="stringliteral">&quot;cppStcodeDynamicBranches&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>same<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().addTextureType)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blk.addBool(</highlight><highlight class="stringliteral">&quot;addTextureType&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().cppStcodeMode<sp/>!=<sp/>shader_layout::ExternalStcodeMode::NONE)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blk.addBool(</highlight><highlight class="stringliteral">&quot;compileCppStcode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().cppStcodeMode<sp/>==<sp/>shader_layout::ExternalStcodeMode::BRANCHED_CPP)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blk.addBool(</highlight><highlight class="stringliteral">&quot;cppStcodeDynamicBranches&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().cppStcodeUnityBuild)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blk.addBool(</highlight><highlight class="stringliteral">&quot;cppStcodeUnityBuild&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().generateCppStcodeValidationData)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blk.addBool(</highlight><highlight class="stringliteral">&quot;generateCppStcodeValidationData&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>blk.saveToTextStream(*hasher);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>get_computed_hash(hasher,<sp/>blkHash.data(),<sp/>blkHash.size());</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>destory_hash_computer_cb(hasher);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca5395b0c35e96d97ae9ac7f83b0665310" kindref="member">SHLOG_NORMAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Compilation<sp/>blk<sp/>hash<sp/>is<sp/>:<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/><ref refid="blkHash_8h_1a5ffecc25e614221566e8b00511f7470b" kindref="member">blk_hash_string</ref>(blkHash).c_str());</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca5395b0c35e96d97ae9ac7f83b0665310" kindref="member">SHLOG_NORMAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Compilation<sp/>blk<sp/>is<sp/>not<sp/>used&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().forceRebuild<sp/>&amp;&amp;<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().relinkOnly)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>caused<sp/>by<sp/>-r<sp/>flag:<sp/>-relinkOnly<sp/>reduces<sp/>-r<sp/>to<sp/>-forceRelink</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>config_rw.<ref refid="structshc_1_1CompilerConfig_1a372dbab65eab33a70da402d747c73676" kindref="member">forceRebuild</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>config_rw.<ref refid="structshc_1_1CompilerConfig_1a6b781aa93aa842f65c0891a0b7439454" kindref="member">forceRelink</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca5395b0c35e96d97ae9ac7f83b0665310" kindref="member">SHLOG_NORMAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[WARNING]<sp/>-r<sp/>flag<sp/>was<sp/>reduced<sp/>to<sp/>-forceRelink<sp/>because<sp/>-relinkOnly<sp/>was<sp/>specified&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().forceRelink<sp/>&amp;&amp;<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca6112bd3e7c5d175bac1569c33c1630ad" kindref="member">SHLOG_FATAL</ref>,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;trying<sp/>to<sp/>compile<sp/>single<sp/>shader<sp/>%s<sp/>but<sp/>relinking<sp/>is<sp/>enforced<sp/>with<sp/>-forceRelink<sp/>or<sp/>-r<sp/>and<sp/>-relinkOnly<sp/>combination&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().forceRelink<sp/>&amp;&amp;<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().noSave)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca6112bd3e7c5d175bac1569c33c1630ad" kindref="member">SHLOG_FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;need<sp/>to<sp/>relink<sp/>shaders<sp/>but<sp/>-nosave<sp/>flag<sp/>enforces<sp/>no<sp/>save<sp/>or<sp/>linkage&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>binary<sp/>dump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>verStr<sp/>=<sp/>d3d::as_ps_string(opt.<ref refid="structShHardwareOptions_1a4762074f79c1638ccf8bab0dd76db8c5" kindref="member">fshVersion</ref>);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>bindump_fn[260];</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stcode_lib_path[260];</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_SPIRV<sp/>||<sp/>_CROSS_TARGET_METAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().enableBindless)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>_snprintf(bindump_fn,<sp/>260,<sp/></highlight><highlight class="stringliteral">&quot;%s.bindless.%s.shdump.bin&quot;</highlight><highlight class="normal">,<sp/>bindump_fnprefix,<sp/>verStr);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>_snprintf(stcode_lib_path,<sp/>260,<sp/></highlight><highlight class="stringliteral">&quot;%s.bindless.%s-stcode&quot;</highlight><highlight class="normal">,<sp/>bindump_fnprefix,<sp/>verStr);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>_snprintf(bindump_fn,<sp/>260,<sp/></highlight><highlight class="stringliteral">&quot;%s.%s.shdump.bin&quot;</highlight><highlight class="normal">,<sp/>bindump_fnprefix,<sp/>verStr);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>_snprintf(stcode_lib_path,<sp/>260,<sp/></highlight><highlight class="stringliteral">&quot;%s.%s-stcode&quot;</highlight><highlight class="normal">,<sp/>bindump_fnprefix,<sp/>verStr);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stcode_lib_fn<sp/>=<sp/>strrchr(stcode_lib_path,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stcode_lib_fn)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>stcode_lib_fn<sp/>=<sp/>stcode_lib_path;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>++stcode_lib_fn;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>destDir[260];</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>dd_get_fname_location(destDir,<sp/>bindump_fn);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>dd_append_slash_c(destDir);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>dd_mkdir(destDir);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_C1<sp/>|<sp/>_CROSS_TARGET_C2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_CROSS_TARGET_DX12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().noSave)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>pdb(260,<sp/></highlight><highlight class="stringliteral">&quot;%s_pdb/&quot;</highlight><highlight class="normal">,<sp/>destDir[0]<sp/>?<sp/>bindump_fnprefix<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;./&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>dx12_pdb_cache_dir_storage[260];</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mbstowcs(dx12_pdb_cache_dir_storage,<sp/>pdb,<sp/>260);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config_rw.dx12PdbCacheDir<sp/>=<sp/>dx12_pdb_cache_dir_storage;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><ref refid="structStcodeCompilationDirs" kindref="compound">StcodeCompilationDirs</ref><sp/>stcodeDirs<sp/>=<sp/><ref refid="cppStcode_8cpp_1a9165f4c2b3a35ccb46f1909c4bc23597" kindref="member">init_stcode_compilation</ref>(intermediateDir.c_str(),<sp/>intermediateDir.c_str());</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><ref refid="classShCompilationInfo" kindref="compound">ShCompilationInfo</ref><sp/>compilation{destFnBase,<sp/>intermediateDir.c_str(),<sp/>eastl::move(sourceList),<sp/>blkHash,<sp/>eastl::move(stcodeDirs),<sp/>opt};</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><ref refid="classshc_1_1CompilationContext" kindref="compound">shc::CompilationContext</ref><sp/>compilationCtx{compilation};</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><ref refid="shCompiler_8h_1af049975952f79ea4bf6cb1582447a384" kindref="member">CompilerAction</ref><sp/>compAction<sp/>=<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().<ref refid="structshc_1_1CompilerConfig_1a372dbab65eab33a70da402d747c73676" kindref="member">forceRebuild</ref><sp/>?<sp/><ref refid="shCompiler_8h_1af049975952f79ea4bf6cb1582447a384abc6833fcf79fcc7be638a59cac023efb" kindref="member">CompilerAction::COMPILE_AND_LINK</ref><sp/>:<sp/><ref refid="namespaceshc_1a28066fa836fbd40b415cd40fb61a2023" kindref="member">shc::should_recompile</ref>(compilation);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName)</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compAction<sp/>==<sp/><ref refid="shCompiler_8h_1af049975952f79ea4bf6cb1582447a384abc6833fcf79fcc7be638a59cac023efb" kindref="member">CompilerAction::COMPILE_AND_LINK</ref>)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compAction<sp/>=<sp/><ref refid="shCompiler_8h_1af049975952f79ea4bf6cb1582447a384aa50e5c6c2b6ca607ff7a488cacf8ceaa" kindref="member">CompilerAction::COMPILE_ONLY</ref>;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compAction<sp/>==<sp/><ref refid="shCompiler_8h_1af049975952f79ea4bf6cb1582447a384a6d561cf452ba2bf08c1019a174343d63" kindref="member">CompilerAction::LINK_ONLY</ref>)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compAction<sp/>=<sp/><ref refid="shCompiler_8h_1af049975952f79ea4bf6cb1582447a384a8697250efc73639dd2a6e7da243ac68b" kindref="member">CompilerAction::NOTHING</ref>;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().forceRelink)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compAction<sp/>==<sp/><ref refid="shCompiler_8h_1af049975952f79ea4bf6cb1582447a384a8697250efc73639dd2a6e7da243ac68b" kindref="member">CompilerAction::NOTHING</ref>)</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compAction<sp/>=<sp/><ref refid="shCompiler_8h_1af049975952f79ea4bf6cb1582447a384a6d561cf452ba2bf08c1019a174343d63" kindref="member">CompilerAction::LINK_ONLY</ref>;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compAction<sp/>==<sp/><ref refid="shCompiler_8h_1af049975952f79ea4bf6cb1582447a384aa50e5c6c2b6ca607ff7a488cacf8ceaa" kindref="member">CompilerAction::COMPILE_ONLY</ref>)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compAction<sp/>=<sp/><ref refid="shCompiler_8h_1af049975952f79ea4bf6cb1582447a384abc6833fcf79fcc7be638a59cac023efb" kindref="member">CompilerAction::COMPILE_AND_LINK</ref>;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compAction<sp/>!=<sp/><ref refid="shCompiler_8h_1af049975952f79ea4bf6cb1582447a384a8697250efc73639dd2a6e7da243ac68b" kindref="member">CompilerAction::NOTHING</ref>)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().shortMessages<sp/>&amp;&amp;<sp/>!<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;[INFO]<sp/>Building<sp/>&apos;%s&apos;...\n&quot;</highlight><highlight class="normal">,<sp/>compilation.dest().c_str());</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceproc_1a660c2f1d2aa0933c48ff9123c87d0211" kindref="member">proc::is_multiproc</ref>())</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compileResult<sp/>=<sp/>doCompileModulesAsync(compilation);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compileResult)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_rw.<ref refid="structshc_1_1CompilerConfig_1a372dbab65eab33a70da402d747c73676" kindref="member">forceRebuild</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compAction<sp/>==<sp/><ref refid="shCompiler_8h_1af049975952f79ea4bf6cb1582447a384abc6833fcf79fcc7be638a59cac023efb" kindref="member">CompilerAction::COMPILE_AND_LINK</ref>)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compAction<sp/>=<sp/><ref refid="shCompiler_8h_1af049975952f79ea4bf6cb1582447a384a6d561cf452ba2bf08c1019a174343d63" kindref="member">CompilerAction::LINK_ONLY</ref>;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compAction<sp/>==<sp/><ref refid="shCompiler_8h_1af049975952f79ea4bf6cb1582447a384aa50e5c6c2b6ca607ff7a488cacf8ceaa" kindref="member">CompilerAction::COMPILE_ONLY</ref>)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compAction<sp/>=<sp/><ref refid="shCompiler_8h_1af049975952f79ea4bf6cb1582447a384a8697250efc73639dd2a6e7da243ac68b" kindref="member">CompilerAction::NOTHING</ref>;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceshc_1a8c442ebc036376c0817dc83bd46434d0" kindref="member">shc::compileShader</ref>(compAction,<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().noSave,<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().forceRebuild,<sp/>compilationCtx);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().suppressLogs)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceShaderCompilerStat_1ae602f997edcc4efccbe26bb20d960ae4" kindref="member">ShaderCompilerStat::printReport</ref>((<ref refid="namespaceproc_1a660c2f1d2aa0933c48ff9123c87d0211" kindref="member">proc::is_multiproc</ref>()<sp/>||<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(<ref refid="namespaceshc" kindref="compound">shc</ref>::<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">config</ref>().logDir<sp/>?<sp/><ref refid="namespaceshc" kindref="compound">shc</ref>::<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">config</ref>().logDir<sp/>:<sp/>cfg_dir));</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca0012c8acb382f295fe614046a64bba11" kindref="member">SHLOG_INFO</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Skipping<sp/>up-to-date<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>compilation.dest().c_str());</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><ref refid="namespaceshc_1a684865d8e3b21456d251eb3400fee52f" kindref="member">shc::resetCompiler</ref>();</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(bindump_fnprefix,<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>dd_mkpath(bindump_fn);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceshc_1ae6471d14423f7b8cd5b71d7055d79c75" kindref="member">shc::buildShaderBinDump</ref>(bindump_fn,<sp/>compilation.dest().c_str(),<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().<ref refid="structshc_1_1CompilerConfig_1a372dbab65eab33a70da402d747c73676" kindref="member">forceRebuild</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>packing_flags,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compilationCtx))</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca6112bd3e7c5d175bac1569c33c1630ad" kindref="member">SHLOG_FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>build<sp/>bindump<sp/>at<sp/>&apos;%s&apos;<sp/>from<sp/>combined<sp/>obj<sp/>at<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>bindump_fn,<sp/>compilation.dest().c_str());</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(binminidump_fnprefix)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>_snprintf(bindump_fn,<sp/>260,<sp/></highlight><highlight class="stringliteral">&quot;%s.%s.shdump.bin&quot;</highlight><highlight class="normal">,<sp/>binminidump_fnprefix,<sp/>verStr);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>dd_mkpath(bindump_fn);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceshc_1ae6471d14423f7b8cd5b71d7055d79c75" kindref="member">shc::buildShaderBinDump</ref>(bindump_fn,<sp/>compilation.dest().c_str(),<sp/>dd_stricmp(binminidump_fnprefix,<sp/>bindump_fnprefix)<sp/>==<sp/>0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packing_flags,<sp/>compilationCtx))</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca6112bd3e7c5d175bac1569c33c1630ad" kindref="member">SHLOG_FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>build<sp/>minidump<sp/>%s<sp/>at<sp/>&apos;%s&apos;<sp/>from<sp/>combined<sp/>obj<sp/>at<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>binminidump_fnprefix,<sp/>bindump_fn,</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compilation.dest().c_str());</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>eastl::string<sp/>bindump_path;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*end<sp/>=<sp/>strrchr(bindump_fnprefix,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>remove<sp/>last<sp/>part,<sp/>the<sp/>prefix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end)</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>bindump_path<sp/>=<sp/>eastl::string(bindump_fnprefix,<sp/>end);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>bindump_path<sp/>=<sp/>eastl::string(</highlight><highlight class="stringliteral">&quot;./&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stcodeCompTaskMaybe<sp/>=<sp/><ref refid="cppStcode_8cpp_1a15b170256d831e7b6f40a33741b2eca5" kindref="member">make_stcode_compilation_task</ref>(bindump_path.c_str(),<sp/>stcode_lib_fn,<sp/>compilation);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stcodeCompTaskMaybe)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceproc_1ad5f5c1701a3bca364551263b0995445a" kindref="member">proc::enqueue</ref>(eastl::move(stcodeCompTaskMaybe).value());</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compiled<sp/>=<sp/><ref refid="namespaceproc_1aad37db27edb90a297ccc8ae4716e7905" kindref="member">proc::execute</ref>();</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!compiled)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca6112bd3e7c5d175bac1569c33c1630ad" kindref="member">SHLOG_FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>compile<sp/>stcode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stcodeCompTaskMaybe.error()<sp/>==<sp/><ref refid="cppStcode_8h_1a5f7b70083bba8ebd323206f2f7cf2bceab9e14d9b2886bcff408b85aefa780419" kindref="member">StcodeMakeTaskError::FAILED</ref>)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca6112bd3e7c5d175bac1569c33c1630ad" kindref="member">SHLOG_FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>stcode<sp/>task&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>String<sp/>getDir(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename)</highlight></codeline>
<codeline lineno="692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>(int)strlen(filename);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>String<sp/>res(</highlight><highlight class="stringliteral">&quot;./&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>len--;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename[len]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>||<sp/>filename[len]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>res.resize(len<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>res[len]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;res[0],<sp/>filename,<sp/>len);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>String<sp/>makeShBinDumpName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename)</highlight></codeline>
<codeline lineno="715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>String<sp/>dump_fn(filename);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dump_fn.length()<sp/>&gt;<sp/>5<sp/>&amp;&amp;<sp/>dd_stricmp(&amp;dump_fn[dump_fn.length()<sp/>-<sp/>5],<sp/></highlight><highlight class="stringliteral">&quot;.dshl&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>erase_items(dump_fn,<sp/>dump_fn.length()<sp/>-<sp/>3,<sp/>3);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dump_fn.length()<sp/>&gt;<sp/>3<sp/>&amp;&amp;<sp/>dd_stricmp(&amp;dump_fn[dump_fn.length()<sp/>-<sp/>3],<sp/></highlight><highlight class="stringliteral">&quot;.sh&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>erase_items(dump_fn,<sp/>dump_fn.length()<sp/>-<sp/>3,<sp/>3);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dump_fn.length()<sp/>&gt;<sp/>4<sp/>&amp;&amp;<sp/>dd_stricmp(&amp;dump_fn[dump_fn.length()<sp/>-<sp/>4],<sp/></highlight><highlight class="stringliteral">&quot;.blk&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>erase_items(dump_fn,<sp/>dump_fn.length()<sp/>-<sp/>4,<sp/>4);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dump_fn;</highlight></codeline>
<codeline lineno="724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_FAST_INC_LOOKUP<sp/>(__cplusplus<sp/>&gt;=<sp/>201703L)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_PC_MACOSX<sp/>&amp;&amp;<sp/>MAC_OS_X_VERSION_MIN_REQUIRED<sp/>&lt;<sp/>101500<sp/></highlight><highlight class="comment">//<sp/>macOS<sp/>SDK<sp/>&lt;<sp/>10.15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>USE_FAST_INC_LOOKUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_TARGET_PC_LINUX<sp/>&amp;&amp;<sp/>defined(__clang_major__)<sp/>&amp;&amp;<sp/>__clang_major__<sp/>&lt;<sp/>12<sp/></highlight><highlight class="comment">//<sp/>older<sp/>compilers<sp/>lacking<sp/>filesystem<sp/>(e.g.<sp/>on<sp/>AstraLinux)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>USE_FAST_INC_LOOKUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_FAST_INC_LOOKUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;filesystem&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fs<sp/>=<sp/>std::filesystem;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>eastl::string<sp/><ref refid="main_8cpp_1ac4dd9cc34b39535831ee497f8d004f89" kindref="member">convert_dir_separator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s_)</highlight></codeline>
<codeline lineno="738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>eastl::string<sp/>s<sp/>=<sp/>s_;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>eastl::replace(s.begin(),<sp/>s.end(),<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a4ea3349e62744f6307a164039532e127" kindref="member">add_include_path</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*d,<sp/><ref refid="structshc_1_1CompilerConfig" kindref="compound">shc::CompilerConfig</ref><sp/>&amp;config_rw)</highlight></codeline>
<codeline lineno="745"><highlight class="normal">{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>config_rw.<ref refid="structshc_1_1CompilerConfig_1ac3ebe5679284753463d7b5799cddfb02" kindref="member">dscIncludePaths</ref>.emplace_back(String(d));</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_FAST_INC_LOOKUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>G_ASSERT(d);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>fs::path<sp/>dirPath(d);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>eastl::string<sp/>dir<sp/>=<sp/><ref refid="main_8cpp_1ac4dd9cc34b39535831ee497f8d004f89" kindref="member">convert_dir_separator</ref>(d);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>std::error_code<sp/>ec;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;p<sp/>:<sp/>fs::recursive_directory_iterator(d,<sp/>ec))</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(ec))</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;error<sp/>%s<sp/>iterating<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ec.message().c_str(),<sp/>d);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fs::path<sp/>absPath<sp/>=<sp/>fs::absolute(p.path(),<sp/>ec);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.is_directory(ec)<sp/>||<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(ec))</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>eastl::string<sp/>fn<sp/>=<sp/><ref refid="main_8cpp_1ac4dd9cc34b39535831ee497f8d004f89" kindref="member">convert_dir_separator</ref>(p.path().lexically_relative(dirPath).string().c_str());</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config_rw.<ref refid="structshc_1_1CompilerConfig_1a61eba89071c42b794a19a6be1bc848ab" kindref="member">fileToFullPath</ref>.find(fn)<sp/>==<sp/>config_rw.<ref refid="structshc_1_1CompilerConfig_1a61eba89071c42b794a19a6be1bc848ab" kindref="member">fileToFullPath</ref>.end())</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config_rw.<ref refid="structshc_1_1CompilerConfig_1a61eba89071c42b794a19a6be1bc848ab" kindref="member">fileToFullPath</ref>[fn]<sp/>=<sp/>(dir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fn;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal">String<sp/><ref refid="namespaceshc_1ae9d7e1fe461404fcd0feb93ca58da37f" kindref="member">shc::search_include_with_pathes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn)<sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>save<sp/>mem<sp/>allocation,<sp/>by<sp/>return<sp/>of<sp/>const<sp/>char*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal">{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_FAST_INC_LOOKUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>String<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(fn,<sp/></highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().<ref refid="structshc_1_1CompilerConfig_1a61eba89071c42b794a19a6be1bc848ab" kindref="member">fileToFullPath</ref>.find(<ref refid="main_8cpp_1ac4dd9cc34b39535831ee497f8d004f89" kindref="member">convert_dir_separator</ref>(fn));</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().fileToFullPath.end())</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String(it-&gt;second.c_str());</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().<ref refid="structshc_1_1CompilerConfig_1a61eba89071c42b794a19a6be1bc848ab" kindref="member">fileToFullPath</ref>.find_as(fn);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().fileToFullPath.end())</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String(it-&gt;second.c_str());</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String(fn);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[2048];</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>e<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().dscIncludePaths.size();<sp/>i<sp/>&lt;<sp/>e;<sp/>i++)</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>SNPRINTF(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().dscIncludePaths[i].c_str(),<sp/>fn);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_file_exist(buf))</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String(buf);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dd_simplify_fname_c(s);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(dd_file_exists(s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>return<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String(fn);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CompilerRestartProc<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SRestartProc</highlight></codeline>
<codeline lineno="804"><highlight class="normal">{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*procname()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;shaderCompiler&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>CompilerRestartProc()<sp/>:<sp/>SRestartProc(RESTART_GAME<sp/>|<sp/>RESTART_VIDEO)<sp/>{}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceshc_1a8a4e1a65eb73ac377392e1321448660f" kindref="member">startup</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/><ref refid="namespaceshc_1a8a4e1a65eb73ac377392e1321448660f" kindref="member">shc::startup</ref>();<sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceshc_1ac8d2ced91ea1a4e72195b0c33e8584a0" kindref="member">shutdown</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/><ref refid="namespaceshc_1ac8d2ced91ea1a4e72195b0c33e8584a0" kindref="member">shc::shutdown</ref>();<sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal">}<sp/>compiler_rproc;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stderr_report_fatal_error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*call_stack)</highlight></codeline>
<codeline lineno="816"><highlight class="normal">{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><ref refid="shLog_8cpp_1a1762f388bc556d30ea5861437144a14f" kindref="member">sh_fprintf</ref>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Fatal<sp/>error:<sp/>%s\n%s&quot;</highlight><highlight class="normal">,<sp/>msg,<sp/>call_stack);</highlight></codeline>
<codeline lineno="818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_BREAKPAD_BINDER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enable_breakpad()</highlight></codeline>
<codeline lineno="822"><highlight class="normal">{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>breakpad::Product<sp/>p;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>p.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ShaderCompiler&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/>p.version<sp/>=<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().<ref refid="structshc_1_1CompilerConfig_1aa7adc7e5992bf415fa44be37154208eb" kindref="member">version</ref>;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>breakpad::Configuration<sp/>cfg;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>cfg.userAgent<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SC&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().suppressLogs)</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg.dumpPath<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ShaderCrashDumps&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>breakpad::init(eastl::move(p),<sp/>eastl::move(cfg));</highlight></codeline>
<codeline lineno="833"><highlight class="normal">}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fatal_handler(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*call_stack,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line)</highlight></codeline>
<codeline lineno="836"><highlight class="normal">{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!breakpad::is_enabled())</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>breakpad::CrashInfo<sp/>info;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>info.expression<sp/>=<sp/>msg;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/>info.callstack<sp/>=<sp/>call_stack;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>info.errorCode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/>info.file<sp/>=<sp/>file;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>info.line<sp/>=<sp/>line;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>breakpad::dump(info);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852" refid="structStdoutBlkErrReporter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStdoutBlkErrReporter" kindref="compound">StdoutBlkErrReporter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DataBlock::IErrorReporterPipe</highlight></codeline>
<codeline lineno="853"><highlight class="normal">{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStdoutBlkErrReporter_1a83e7ade7dbdb46277f2dbb973a26321d" kindref="member">reportError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*err,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fat)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/>fputs(String(0,<sp/></highlight><highlight class="stringliteral">&quot;[%c]<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fat<sp/>?<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">,<sp/>err).str(),<sp/>stdout);<sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal">};</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>load_blk_with_report(DataBlock<sp/>&amp;blk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn)</highlight></codeline>
<codeline lineno="857"><highlight class="normal">{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><ref refid="structStdoutBlkErrReporter" kindref="compound">StdoutBlkErrReporter</ref><sp/>rep;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/>DataBlock::InstallReporterRAII<sp/>irep(&amp;rep);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dblk::load(blk,<sp/>fn);</highlight></codeline>
<codeline lineno="861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_PC_WIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BOOL<sp/>WINAPI<sp/>ctrl_break_handler(_In_<sp/>DWORD<sp/>dwCtrlType)</highlight></codeline>
<codeline lineno="865"><highlight class="normal">{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dwCtrlType<sp/>!=<sp/>CTRL_BREAK_EVENT<sp/>&amp;&amp;<sp/>dwCtrlType<sp/>!=<sp/>CTRL_C_EVENT)</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ctrl_break_handler(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="870"><highlight class="normal">{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_PC_LINUX<sp/>|<sp/>_TARGET_PC_MACOSX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>process<sp/>sigints<sp/>in<sp/>a<sp/>dedicated<sp/>thread<sp/>to<sp/>avoid<sp/>deadlocks<sp/>in<sp/>shutdown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(See<sp/>comment<sp/>below<sp/>where<sp/>we<sp/>create<sp/>g_sigint_handler_thread)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>should<sp/>not<sp/>be<sp/>doing<sp/>shutdown<sp/>logic<sp/>in<sp/>handlers<sp/>anyway,<sp/>but<sp/>that<sp/>requires<sp/>more<sp/>substantial<sp/>refac.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pthread_equal(g_sigint_handler_thread,<sp/>pthread_self()))</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>signal(SIGINT,<sp/>&amp;ctrl_break_handler);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_kill(g_sigint_handler_thread,<sp/>SIGINT);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>in<sp/>process<sp/>loop,<sp/>shutdown<sp/>is<sp/>locked,<sp/>so<sp/>instead<sp/>we<sp/>signal<sp/>it<sp/>to<sp/>cancel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceproc_1a660c2f1d2aa0933c48ff9123c87d0211" kindref="member">proc::is_multiproc</ref>())</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;Cancelling<sp/>compilation<sp/>(%d<sp/>processes)...\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceproc_1ada719119b9731fd4759e71bbfe10bc52" kindref="member">proc::max_proc_count</ref>());</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceproc_1aa7d4dc4c33e76202716174b7c90559ed" kindref="member">proc::cancel</ref>();</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceshc_1a0c336a7ebfd6800dacceeeaacbe41fdd" kindref="member">shc::try_enter_shutdown</ref>())</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_PC_WIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>signal(SIGINT,<sp/>&amp;ctrl_break_handler);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>setvbuf(stdout,<sp/>NULL,<sp/>_IOLBF,<sp/>4096);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName)</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;Cancelling<sp/>compilation<sp/>(%s)...\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;Cancelling<sp/>compilation...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><ref refid="namespaceproc_1ad83d474bf228f85aa5d829213c75a161" kindref="member">proc::deinit</ref>();</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><ref refid="namespaceshc_1a78b0761985dc08fccb004298cb2184bd" kindref="member">shc::deinit_jobs</ref>();</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>quit_game(1);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_PC_WIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sh_printf_only_in_parent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fmt,<sp/>Args<sp/>&amp;&amp;...args)</highlight></codeline>
<codeline lineno="922"><highlight class="normal">{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleBuild<sp/>||<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName)</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(fmt,<sp/>eastl::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>passing<sp/>as<sp/>a<sp/>function<sp/>pointer<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>printf_only_in_parent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="931"><highlight class="normal">{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleBuild<sp/>||<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName)</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>vprintf(fmt,<sp/>args);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="941"><highlight class="normal">}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DagorWinMain(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debugmode)</highlight></codeline>
<codeline lineno="944"><highlight class="normal">{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dgs_execute_quiet)</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>dgs_report_fatal_error<sp/>=<sp/>stderr_report_fatal_error;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>debug_enable_timestamps(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/>add_restart_proc(&amp;compiler_rproc);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>startup_game(RESTART_ALL);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_PC_WIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>SetConsoleCtrlHandler(&amp;ctrl_break_handler,<sp/>TRUE);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_TARGET_PC_LINUX<sp/>|<sp/>_TARGET_PC_MACOSX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>unix<sp/>signal<sp/>can<sp/>be<sp/>handled<sp/>by<sp/>any<sp/>thread,<sp/>on<sp/>windows<sp/>a<sp/>separate<sp/>thread<sp/>is<sp/>spun<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>unix<sp/>behaviour<sp/>is<sp/>unacceptable<sp/>in<sp/>the<sp/>current<sp/>implementation:<sp/>as<sp/>we<sp/>are<sp/>still<sp/>shutting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>down<sp/>in<sp/>the<sp/>handler,<sp/>it<sp/>a<sp/>worker<sp/>catches<sp/>it<sp/>we<sp/>deadlock<sp/>in<sp/>jobs<sp/>deinit.<sp/>If<sp/>the<sp/>main<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>catches<sp/>it<sp/>while<sp/>awaiting<sp/>jobs,<sp/>we<sp/>get<sp/>a<sp/>deadlock.<sp/>So,<sp/>we<sp/>spin<sp/>up<sp/>a<sp/>thread<sp/>that<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>listens<sp/>to<sp/>signals,<sp/>and<sp/>SIGINTS<sp/>are<sp/>forwarded<sp/>to<sp/>it<sp/>(see<sp/>ctrl_break_handler).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>pthread_create(</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;g_sigint_handler_thread,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+[](</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pause();</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a1762f388bc556d30ea5861437144a14f" kindref="member">sh_fprintf</ref>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>sighandler<sp/>thread\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/>signal(SIGINT,<sp/>ctrl_break_handler);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref><sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>showUsage();</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(<ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[1],<sp/></highlight><highlight class="stringliteral">&quot;-h&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>||<sp/>dd_stricmp(<ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[1],<sp/></highlight><highlight class="stringliteral">&quot;-H&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>||<sp/>dd_stricmp(<ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[1],<sp/></highlight><highlight class="stringliteral">&quot;/?&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>showUsage();</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><ref refid="structshc_1_1CompilerConfig" kindref="compound">shc::CompilerConfig</ref><sp/>&amp;globalConfigRW<sp/>=<sp/><ref refid="namespaceshc_1aa485440d0f45a996614a2ea63907089a" kindref="member">shc::acquire_rw_config</ref>();</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/>DataBlock<sp/>configArgs{};</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename<sp/>=<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[1];</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>file<sp/>extension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(filename,<sp/></highlight><highlight class="stringliteral">&quot;.dshl&quot;</highlight><highlight class="normal">)<sp/>||<sp/>strstr(filename,<sp/></highlight><highlight class="stringliteral">&quot;.sh&quot;</highlight><highlight class="normal">)<sp/>||<sp/>strstr(filename,<sp/></highlight><highlight class="stringliteral">&quot;.SH&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>single<sp/>shader<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a5dabafaae328e505a16c7c4e2d44dc71" kindref="member">singleBuild</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldCancelRunningProcsOnFail<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/>eastl::optional&lt;shader_layout::ExternalStcodeMode&gt;<sp/>useCppStcodeOverride{};</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i];</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-r&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a372dbab65eab33a70da402d747c73676" kindref="member">forceRebuild</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_strnicmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-config:&quot;</highlight><highlight class="normal">,<sp/>8)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eastl::string_view<sp/>blkArg{s<sp/>+<sp/>8};</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DataBlock<sp/>*curBlk<sp/>=<sp/>&amp;configArgs;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>id,<sp/>prevId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>blkArg.find(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">,<sp/>prevId))<sp/>!=<sp/>eastl::string::npos)</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eastl::string<sp/>subBlock{&amp;blkArg[prevId],<sp/>&amp;blkArg[id]};</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curBlk<sp/>=<sp/>curBlk-&gt;addBlock(subBlock.c_str());</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevId<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_PC_WIN<sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>treats<sp/>&apos;=&apos;<sp/>as<sp/>a<sp/>separator<sp/>in<sp/>args</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref><sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arg<sp/>=<sp/>eastl::string{blkArg.substr(prevId)}<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal"><sp/>+<sp/>eastl::string{<ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[++i]};</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arg<sp/>=<sp/>blkArg.substr(prevId);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DataBlock<sp/>tmp{};</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp.loadText(arg.data(),<sp/>arg.length()))</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a1762f388bc556d30ea5861437144a14f" kindref="member">sh_fprintf</ref>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>custom<sp/>blk<sp/>arg:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>blkArg.data());</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curBlk-&gt;appendParamsFrom(&amp;tmp);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-depBlk&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>no-op</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-q&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1aef1dd127f230f7cc530069165fe2f832" kindref="member">shortMessages</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1ad20fef357d0d0359d9a1cfce88ec9f2f" kindref="member">hlslNoDisassembly</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a794ef7520972337b62c8b6882b20dd19" kindref="member">sh_console_quet_output</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-out&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref>)</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a85cd961530d14958ad9606a39084b870" kindref="member">outDumpNameConfig</ref><sp/>=<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i];</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-j&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a5171b802b37c9440c482c3b6d6a33cc0" kindref="member">numWorkers</ref><sp/>=<sp/>atoi(s<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-relinkOnly&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a13b77d93b39884291b4efda6823c0115" kindref="member">relinkOnly</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-forceRelink&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a6b781aa93aa842f65c0891a0b7439454" kindref="member">forceRelink</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-nosave&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1ad956933943b29c04021a3fe87772c552" kindref="member">noSave</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-debug&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a3af334e41eb9ae1dff36e0b0e51ae11e" kindref="member">isDebugModeEnabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-allowLargeDumpSize&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1ae804f46c99077b679a316c9c4ef9243d" kindref="member">constrainCompressedBindumpSize</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_C1<sp/>|<sp/>_CROSS_TARGET_C2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-pdb&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a1ef797efe3855bf413cd788a87b4d6a5" kindref="member">hlslDebugLevel</ref><sp/>=<sp/><ref refid="DebugLevel_8h_1a1a2e78e667f5d5bd44be96e3abc8a3eeae4ac03f6c9f00665644e868dd1fb9f1e" kindref="member">DebugLevel::BASIC</ref>;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-dfull&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>||<sp/>dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-debugfull&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a1ef797efe3855bf413cd788a87b4d6a5" kindref="member">hlslDebugLevel</ref><sp/>=<sp/><ref refid="DebugLevel_8h_1a1a2e78e667f5d5bd44be96e3abc8a3eea3ae7d840362552f1fc531c00c91a83b4" kindref="member">DebugLevel::FULL_DEBUG_INFO</ref>;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-embed_source&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1ab8150f9586651e5eee7b9c1237c43a93" kindref="member">hlslEmbedSource</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-daftermath&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a1ef797efe3855bf413cd788a87b4d6a5" kindref="member">hlslDebugLevel</ref><sp/>=<sp/><ref refid="DebugLevel_8h_1a1a2e78e667f5d5bd44be96e3abc8a3eead0759a9f4d3e8f7b3c0c7dd2f1a4fda9" kindref="member">DebugLevel::AFTERMATH</ref>;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-commentPP&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a71c6d785ecd5e0a20ebea3760ecd6afd" kindref="member">hlslSavePPAsComments</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-codeDump&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1ae51c3d3f048a95f48964047c944fdd8c" kindref="member">hlslDumpCodeAlways</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-codeDumpSep&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1ae51c3d3f048a95f48964047c944fdd8c" kindref="member">hlslDumpCodeAlways</ref><sp/>=<sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1ade0475de43e81a448161c748c2f3108d" kindref="member">hlslDumpCodeSeparate</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-codeDumpErr&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1af163c7174bc5435b1a2e9622d37c015d" kindref="member">hlslDumpCodeOnError</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-validateIdenticalBytecode&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1aac019f069a5c2545c52f24e42825bcb1" kindref="member">validateIdenticalBytecode</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-w&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a0d190625f18c010a9e4d3bad6a9ced6e" kindref="member">hlslShowWarnings</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a09285f956f8c497bbd25f7d135371075" kindref="member">sh_console_print_warnings</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-O0&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a07709c18553c05f849ca4119010a3525" kindref="member">hlslOptimizationLevel</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-O1&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a07709c18553c05f849ca4119010a3525" kindref="member">hlslOptimizationLevel</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-O2&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a07709c18553c05f849ca4119010a3525" kindref="member">hlslOptimizationLevel</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-O3&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a07709c18553c05f849ca4119010a3525" kindref="member">hlslOptimizationLevel</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-O4&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a07709c18553c05f849ca4119010a3525" kindref="member">hlslOptimizationLevel</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-maxVSF&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref>)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a53a10f762ecb93f3a9b01a08a5cb224b" kindref="member">hlslMaximumVsfAllowed</ref><sp/>=<sp/>atoi(<ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i]);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-maxPSF&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref>)</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1acb42ed12ba5b1dddae6ac55c14f1e0e8" kindref="member">hlslMaximumPsfAllowed</ref><sp/>=<sp/>atoi(<ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i]);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-skipvalidation&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1ae33db9d93363e2138ff51d9ecc66d555" kindref="member">hlslSkipValidation</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-nodisassembly&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1ad20fef357d0d0359d9a1cfce88ec9f2f" kindref="member">hlslNoDisassembly</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-shaderOn&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshc_1a76f9fbee49ca2f49bfd7aee5b06bb529" kindref="member">shc::setRequiredShadersDef</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-supressLogs&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>||<sp/>dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-suppressLogs&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1af9dcfc28baeadfdd5c2f821297d36781" kindref="member">suppressLogs</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-invalidAsNull&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshc_1a68f3fb95029d4b4646af3bd76dd3bac1" kindref="member">shc::setInvalidAsNullDef</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-no_sha1_cache&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a75998b9323a200903938d4e6761d4598" kindref="member">useSha1Cache</ref><sp/>=<sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a1d3b9aaf08546cd74ac8a12753a90eb5" kindref="member">writeSha1Cache</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-no_compression&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a76539f58cd85e1874a78c32e7f56f04a" kindref="member">useCompression</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-addTextureType&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1ac749acaf8c40ea97d4eafd81f53990c4" kindref="member">addTextureType</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-purge_sha1_cache&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a3c7d2544f3862ffec5a5288771509247" kindref="member">purgeSha1</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-enablefp16&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1aed8b72b3dacf6fa6de0a75c71630a8f8" kindref="member">enableFp16Override</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_SPIRV<sp/>||<sp/>_CROSS_TARGET_METAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-enableBindless:&quot;</highlight><highlight class="normal">,<sp/>15)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(s,<sp/></highlight><highlight class="stringliteral">&quot;on&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a4b837b76cbc27d82052a7d67d8d138c1" kindref="member">enableBindless</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(s,<sp/></highlight><highlight class="stringliteral">&quot;off&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a4b837b76cbc27d82052a7d67d8d138c1" kindref="member">enableBindless</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-allowNoDXC&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.allowCompilationWithoutDxc<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_DX12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-platform-pc&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.targetPlatform<sp/>=<sp/>dx12::dxil::Platform::PC;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a6f69ee6d2352c51623188fca29c8c402" kindref="member">crossCompiler</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;dx12&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-platform-xbox-one&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.targetPlatform<sp/>=<sp/>dx12::dxil::Platform::XBOX_ONE;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a6f69ee6d2352c51623188fca29c8c402" kindref="member">crossCompiler</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;xbox_one_dx12&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-platform-xbox-scarlett&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.targetPlatform<sp/>=<sp/>dx12::dxil::Platform::XBOX_SCARLETT;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a6f69ee6d2352c51623188fca29c8c402" kindref="member">crossCompiler</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;scarlett_dx12&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-HLSL2021&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a7931cab87a121710b0a7cc62aaf71609" kindref="member">hlsl2021</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_SPIRV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-compiler-hlslcc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.compilerHlslCc<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-compiler-dxc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.compilerDXC<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-dumpSPVOnly&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.dumpSpirvOnly<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_CROSS_TARGET_METAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-metalios&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.useIosToken<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a6f69ee6d2352c51623188fca29c8c402" kindref="member">crossCompiler</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;metal-ios&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-metal-binary&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.useBinaryMsl<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a6f69ee6d2352c51623188fca29c8c402" kindref="member">crossCompiler</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;metal-binary&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_METAL<sp/>||<sp/>_CROSS_TARGET_SPIRV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-debugdir&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref>)</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a0130be742a19d47f9cfa5de379799b2f" kindref="member">debug_output_dir</ref><sp/>=<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i];</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dd_mkdir(<ref refid="main_8cpp_1a0130be742a19d47f9cfa5de379799b2f" kindref="member">debug_output_dir</ref>);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-intervalsdebugdir&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref>)</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1adee5e5812073317d58c113be5cead4e3" kindref="member">debug_output_dir_shader_name</ref><sp/>=<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i];</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dd_mkdir(<ref refid="main_8cpp_1adee5e5812073317d58c113be5cead4e3" kindref="member">debug_output_dir_shader_name</ref>);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-spirv-dxc-path&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref>)</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.dxcPath<sp/>=<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i];</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-spirv-dxc-params&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref>)</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(<ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i],<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.dxcParams.push_back(String(64,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i<sp/>-<sp/>1]));</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.dxcParams.push_back(String(64,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i<sp/>-<sp/>1],<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i]));</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-wx&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1ac79c3f04485b544659105a27cdf26f48" kindref="member">sh_change_mode</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5caec73ac89ba721ca7dec737875111fddd" kindref="member">SHLOG_WARNING</ref>,<sp/><ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5caae3b70b41400c8a36e8a094ac1dbe43c" kindref="member">SHLOG_ERROR</ref>);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a89228dc27f00e0dcd758e022564f55e8" kindref="member">hlslWarningsAsErrors</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-wall&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a0d190625f18c010a9e4d3bad6a9ced6e" kindref="member">hlslShowWarnings</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a09285f956f8c497bbd25f7d135371075" kindref="member">sh_console_print_warnings</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-fsh:&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(s,<sp/></highlight><highlight class="stringliteral">&quot;:3.0&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a20100af06abeb7d4b91584ba96e8cd49" kindref="member">singleOptions</ref>.<ref refid="structShHardwareOptions_1a4762074f79c1638ccf8bab0dd76db8c5" kindref="member">fshVersion</ref><sp/>=<sp/>3.0_sm;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_DX11<sp/>||<sp/>_CROSS_TARGET_SPIRV<sp/>||<sp/>_CROSS_TARGET_METAL<sp/>|<sp/>_CROSS_TARGET_EMPTY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(s,<sp/></highlight><highlight class="stringliteral">&quot;:4.0&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a20100af06abeb7d4b91584ba96e8cd49" kindref="member">singleOptions</ref>.<ref refid="structShHardwareOptions_1a4762074f79c1638ccf8bab0dd76db8c5" kindref="member">fshVersion</ref><sp/>=<sp/>4.0_sm;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(s,<sp/></highlight><highlight class="stringliteral">&quot;:4.1&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a20100af06abeb7d4b91584ba96e8cd49" kindref="member">singleOptions</ref>.<ref refid="structShHardwareOptions_1a4762074f79c1638ccf8bab0dd76db8c5" kindref="member">fshVersion</ref><sp/>=<sp/>4.1_sm;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(s,<sp/></highlight><highlight class="stringliteral">&quot;:5.0&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a20100af06abeb7d4b91584ba96e8cd49" kindref="member">singleOptions</ref>.<ref refid="structShHardwareOptions_1a4762074f79c1638ccf8bab0dd76db8c5" kindref="member">fshVersion</ref><sp/>=<sp/>5.0_sm;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(s,<sp/></highlight><highlight class="stringliteral">&quot;:6.0&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a20100af06abeb7d4b91584ba96e8cd49" kindref="member">singleOptions</ref>.<ref refid="structShHardwareOptions_1a4762074f79c1638ccf8bab0dd76db8c5" kindref="member">fshVersion</ref><sp/>=<sp/>6.0_sm;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(s,<sp/></highlight><highlight class="stringliteral">&quot;:6.6&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a20100af06abeb7d4b91584ba96e8cd49" kindref="member">singleOptions</ref>.<ref refid="structShHardwareOptions_1a4762074f79c1638ccf8bab0dd76db8c5" kindref="member">fshVersion</ref><sp/>=<sp/>6.6_sm;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>show_header();</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;\n[FATAL<sp/>ERROR]<sp/>Unknown<sp/>fsh<sp/>version<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>s);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showUsage();</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>13;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-noeh&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>no-op</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-quiet&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>no-op</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-pdb&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>no-op</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-o&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref>)</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a58a6d97a13028d24ac47353c5b762207" kindref="member">intermediateDir</ref><sp/>=<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i];</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-logdir&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref>)</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1af49763dc3e1eae4c97c685ccde106b3b" kindref="member">logDir</ref><sp/>=<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i];</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-c&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref>)</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a468f0ae1b98a9df45341f56afe270b59" kindref="member">singleCompilationShName</ref><sp/>=<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i];</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-cjWait&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shouldCancelRunningProcsOnFail<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-cj&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a9d8996d6227048ce45c2167bc07734ad" kindref="member">numProcesses</ref><sp/>=<sp/>strlen(s)<sp/>&gt;<sp/>3<sp/>?<sp/>atoi(s<sp/>+<sp/>3)<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-belownormal&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_PC_WIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetPriorityClass(GetCurrentProcess(),<sp/>BELOW_NORMAL_PRIORITY_CLASS);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-define&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref>)</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1ac6097038dd45b1f9ad4f0f889ce41479" kindref="member">hlslDefines</ref>.aprintf(128,<sp/></highlight><highlight class="stringliteral">&quot;#define<sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i<sp/>-<sp/>1],<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i]);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@TODO:<sp/>replace<sp/>w/<sp/>dedicated<sp/>arg,<sp/>hardware.<sp/>token,<sp/>and<sp/>make<sp/>this<sp/>define<sp/>in<sp/>hardware_defines.dshl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_SPIRV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(<ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i<sp/>-<sp/>1],<sp/></highlight><highlight class="stringliteral">&quot;MOBILE_DEVICE&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>dd_stricmp(<ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i],<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.usePcToken<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-logExactTiming&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a9bae6e4c70056a2f3e737db994ba8966" kindref="member">logExactCompilationTimes</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-perFileAllLogs&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a2c8c31c9a52bf405f883cde103120f7b" kindref="member">logFullPerFileCompilationStats</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(</highlight><highlight class="stringliteral">&quot;-addpath:&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i],<sp/>9)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>skip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-saveDumpOnCrash&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a45d7d553a28b00235ca7af38e3b384d7" kindref="member">saveDumpOnCrash</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(</highlight><highlight class="stringliteral">&quot;-useCpujobsBackend&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a433b92f326f0be76073df49222981f87" kindref="member">useThreadpool</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(</highlight><highlight class="stringliteral">&quot;-cppStcode&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useCppStcodeOverride.has_value()<sp/>&amp;&amp;<sp/>useCppStcodeOverride.value()<sp/>==<sp/>shader_layout::ExternalStcodeMode::NONE)</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>combine<sp/>-cppStcode<sp/>and<sp/>-noCppStcode<sp/>flags\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref><sp/>-<sp/>1<sp/>&amp;&amp;<sp/>(useCppStcodeOverride<sp/>=<sp/><ref refid="cppStcode_8cpp_1a07cf3cb607f4acd5ec47f26270affbc8" kindref="member">arg_str_to_cpp_stcode_mode</ref>(<ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i<sp/>+<sp/>1])).has_value())</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useCppStcodeOverride.emplace(shader_layout::ExternalStcodeMode::BRANCHLESS_CPP);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(</highlight><highlight class="stringliteral">&quot;-noCppStcode&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useCppStcodeOverride.has_value()<sp/>&amp;&amp;<sp/>useCppStcodeOverride.value()<sp/>!=<sp/>shader_layout::ExternalStcodeMode::NONE)</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>combine<sp/>-cppStcode<sp/>and<sp/>-noCppStcode<sp/>flags\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>useCppStcodeOverride.emplace(shader_layout::ExternalStcodeMode::NONE);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(</highlight><highlight class="stringliteral">&quot;-cppUnityBuild&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1aeaf859650958d09e284d5915a2cccebc" kindref="member">cppStcodeUnityBuild</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(</highlight><highlight class="stringliteral">&quot;-cppStcodePdb&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1aecfc80dfef6beae7120b4b19c2511a1b" kindref="member">cppStcodeDeleteDebugInfo</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(</highlight><highlight class="stringliteral">&quot;-cppStcodeConfig&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref>)</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cppStcode_8cpp_1aab17bb1815fb1e113813efdf4d170482" kindref="member">set_stcode_config_from_arg</ref>(<ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i],<sp/>globalConfigRW))</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(</highlight><highlight class="stringliteral">&quot;-cppStcodeArch&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref>)</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cppStcode_8cpp_1ad2bea223f0311870fd56c694574757c1" kindref="member">set_stcode_arch_from_arg</ref>(<ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i],<sp/>globalConfigRW))</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(</highlight><highlight class="stringliteral">&quot;-cppStcodeTag&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref>)</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1aef6cca6053fcdbc18e78313ea087b981" kindref="member">cppStcodeCustomTag</ref><sp/>=<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i];</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(</highlight><highlight class="stringliteral">&quot;-generateCppStcodeValidationData&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a99d673f1c57708e8811381b115fd8072" kindref="member">generateCppStcodeValidationData</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_SPIRV<sp/>|<sp/>_CROSS_TARGET_METAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(</highlight><highlight class="stringliteral">&quot;-cppStcodePlatform&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>20)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="main_8cpp_1a5af3d19dc35f86f93a874e732b55fbab" kindref="member">__argc</ref>)</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cppStcode_8cpp_1a51806d301dca3868fbacdc33763bab2b" kindref="member">set_stcode_platform_from_arg</ref>(<ref refid="main_8cpp_1a2de0130b8fce3b5ebb23480277043c7c" kindref="member">__argv</ref>[i],<sp/>globalConfigRW))</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>usage_err;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_DX12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-localTimestamp&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a7f7116a10463068508de22095ec2b3f7" kindref="member">useGitTimestamps</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_stricmp(s,<sp/></highlight><highlight class="stringliteral">&quot;-noHlslHardcodedRegs&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a70e72c83869bef720b1dd8dfc2c9e2c8" kindref="member">disallowHlslHardcodedRegs</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>usage_err:</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>show_header();</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;\n[FATAL<sp/>ERROR]<sp/>Unknown<sp/>option<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>s);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>showUsage();</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>13;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_BREAKPAD_BINDER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().saveDumpOnCrash)</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>dgs_fatal_handler<sp/>=<sp/>fatal_handler;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>enable_breakpad();</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a75998b9323a200903938d4e6761d4598" kindref="member">useSha1Cache</ref><sp/>&amp;=<sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().<ref refid="structshc_1_1CompilerConfig_1a1ef797efe3855bf413cd788a87b4d6a5" kindref="member">hlslDebugLevel</ref><sp/>==<sp/><ref refid="DebugLevel_8h_1a1a2e78e667f5d5bd44be96e3abc8a3eeab50339a10e1de285ac99d4c3990b8693" kindref="member">DebugLevel::NONE</ref>)<sp/>&amp;&amp;<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().<ref refid="structshc_1_1CompilerConfig_1ad20fef357d0d0359d9a1cfce88ec9f2f" kindref="member">hlslNoDisassembly</ref>;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().<ref refid="structshc_1_1CompilerConfig_1a468f0ae1b98a9df45341f56afe270b59" kindref="member">singleCompilationShName</ref>)</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a9d8996d6227048ce45c2167bc07734ad" kindref="member">numProcesses</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1ae804f46c99077b679a316c9c4ef9243d" kindref="member">constrainCompressedBindumpSize</ref>)</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>sh_printf_only_in_parent(</highlight><highlight class="stringliteral">&quot;[WARNING]<sp/>The<sp/>compressed<sp/>bindump<sp/>size<sp/>check<sp/>is<sp/>disabled,<sp/>linkage/compression/file<sp/>operations<sp/>may<sp/>be<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;slow<sp/>for<sp/>large<sp/>files.<sp/>Use<sp/>at<sp/>your<sp/>own<sp/>discretion!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/>sh_printf_only_in_parent(</highlight><highlight class="stringliteral">&quot;hlslOptimizationLevel<sp/>is<sp/>set<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().hlslOptimizationLevel);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().shortMessages<sp/>&amp;&amp;<sp/>!<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName)</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>show_header();</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_METAL<sp/>||<sp/>_CROSS_TARGET_SPIRV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/>globalConfigRW.dxcContext<sp/>=<sp/>spirv::setupDXC(globalConfigRW.dxcPath,<sp/>globalConfigRW.dxcParams,<sp/>&amp;printf_only_in_parent);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!globalConfigRW.dxcContext)</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().allowCompilationWithoutDxc)</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sh_printf_only_in_parent(</highlight><highlight class="stringliteral">&quot;[WARNING]<sp/>failed<sp/>to<sp/>load<sp/>DXC<sp/>dynamic<sp/>library,<sp/>shader<sp/>bytecode<sp/>will<sp/>not<sp/>be<sp/>compiled\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sh_printf_only_in_parent(</highlight><highlight class="stringliteral">&quot;[ERROR]<sp/>failed<sp/>to<sp/>load<sp/>DXC<sp/>dynamic<sp/>library,<sp/>terminating\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>13;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><ref refid="cppStcode_8cpp_1afa2f02cf7da6a0b58c4f01e20ccd1384" kindref="member">DEFER</ref>([&amp;]<sp/>{<sp/>spirv::shutdownDXC(globalConfigRW.dxcContext);<sp/>});</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><ref refid="namespaceshc_1ac431d98c07031953b228af74422abfe2" kindref="member">shc::init_jobs</ref>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().numWorkers);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><ref refid="cppStcode_8cpp_1afa2f02cf7da6a0b58c4f01e20ccd1384" kindref="member">DEFER</ref>(&amp;<ref refid="namespaceshc_1a78b0761985dc08fccb004298cb2184bd" kindref="member">shc::deinit_jobs</ref>);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><ref refid="namespaceproc_1a70ea938c5ccbe95687c57066da668fc2" kindref="member">proc::init</ref>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().numProcesses,<sp/>shouldCancelRunningProcsOnFail);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><ref refid="cppStcode_8cpp_1afa2f02cf7da6a0b58c4f01e20ccd1384" kindref="member">DEFER</ref>(&amp;<ref refid="namespaceproc_1ad83d474bf228f85aa5d829213c75a161" kindref="member">proc::deinit</ref>);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Protects<sp/>main-line<sp/>calls<sp/>to<sp/>shc::deinit_jobs<sp/>and<sp/>proc::deinit<sp/>from<sp/>concurrent<sp/>sighandler<sp/>shutdown<sp/>invocations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><ref refid="cppStcode_8cpp_1afa2f02cf7da6a0b58c4f01e20ccd1384" kindref="member">DEFER</ref>([]<sp/>{</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceshc_1a0c336a7ebfd6800dacceeeaacbe41fdd" kindref="member">shc::try_enter_shutdown</ref>())<sp/>{}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName<sp/>||<sp/><ref refid="namespaceproc_1a660c2f1d2aa0933c48ff9123c87d0211" kindref="member">proc::is_multiproc</ref>())</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/>setvbuf(stdout,<sp/>NULL,<sp/>_IOFBF,<sp/>4096);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><ref refid="structErrorCounter_1aa46ade65761e3575cd41be7fa765975f" kindref="member">ErrorCounter::allCompilations</ref>().<ref refid="structErrorCounter_1ad8248b42e27a526ddd06e3789a44da4e" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeMsec<sp/>=<sp/>get_time_msec();</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><ref refid="namespaceShaderParser_1ab4b8a9d96a5cf3248e842617aa3fe8a7" kindref="member">ShaderParser::renderStageToIdxMap</ref>.reset();</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><ref refid="namespaceShaderParser_1ab4b8a9d96a5cf3248e842617aa3fe8a7" kindref="member">ShaderParser::renderStageToIdxMap</ref>.addNameId(</highlight><highlight class="stringliteral">&quot;opaque&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><ref refid="namespaceShaderParser_1ab4b8a9d96a5cf3248e842617aa3fe8a7" kindref="member">ShaderParser::renderStageToIdxMap</ref>.addNameId(</highlight><highlight class="stringliteral">&quot;atest&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><ref refid="namespaceShaderParser_1ab4b8a9d96a5cf3248e842617aa3fe8a7" kindref="member">ShaderParser::renderStageToIdxMap</ref>.addNameId(</highlight><highlight class="stringliteral">&quot;imm_decal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><ref refid="namespaceShaderParser_1ab4b8a9d96a5cf3248e842617aa3fe8a7" kindref="member">ShaderParser::renderStageToIdxMap</ref>.addNameId(</highlight><highlight class="stringliteral">&quot;decal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><ref refid="namespaceShaderParser_1ab4b8a9d96a5cf3248e842617aa3fe8a7" kindref="member">ShaderParser::renderStageToIdxMap</ref>.addNameId(</highlight><highlight class="stringliteral">&quot;trans&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><ref refid="namespaceShaderParser_1ab4b8a9d96a5cf3248e842617aa3fe8a7" kindref="member">ShaderParser::renderStageToIdxMap</ref>.addNameId(</highlight><highlight class="stringliteral">&quot;distortion&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleBuild)</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compile<sp/>single<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceShaderCompilerStat_1a1b8f5d565699cdda335f64e632a89ad5" kindref="member">ShaderCompilerStat::reset</ref>();</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;String&gt;<sp/>sourceFiles(midmem);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>sourceFiles.push_back(String(filename));</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>compile(eastl::move(sourceFiles),<sp/>filename,<sp/>makeShBinDumpName(filename),<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleOptions,<sp/>NULL,<sp/>getDir(filename),<sp/>NULL,</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structBindumpPackingFlagsBits_1a8f1b8124ca43e20fc82a5acfa0060a35" kindref="member">BindumpPackingFlagsBits::NONE</ref>,<sp/>globalConfigRW,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>data<sp/>block<sp/>with<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>cfgDir(getDir(filename));</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/>DataBlock<sp/>blk;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!load_blk_with_report(blk,<sp/>filename))</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;\n[FATAL<sp/>ERROR]<sp/>Cannot<sp/>open<sp/>BLK<sp/>file<sp/>&apos;%s&apos;<sp/>(file<sp/>not<sp/>found<sp/>or<sp/>syntax<sp/>error,<sp/>or<sp/>unresolved<sp/>includes)\n&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>13;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/>mergeDataBlock(blk,<sp/>configArgs);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataBlock<sp/>*b<sp/>=<sp/>blk.getBlockByName(</highlight><highlight class="stringliteral">&quot;renderStages&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceShaderParser_1ab4b8a9d96a5cf3248e842617aa3fe8a7" kindref="member">ShaderParser::renderStageToIdxMap</ref>.reset();</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>nid<sp/>=<sp/>b-&gt;getNameId(</highlight><highlight class="stringliteral">&quot;stage&quot;</highlight><highlight class="normal">);<sp/>i<sp/>&lt;<sp/>b-&gt;paramCount();<sp/>i++)</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b-&gt;getParamNameId(i)<sp/>==<sp/>nid<sp/>&amp;&amp;<sp/>b-&gt;getParamType(i)<sp/>==<sp/>b-&gt;TYPE_STRING)</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc<sp/>=<sp/><ref refid="namespaceShaderParser_1ab4b8a9d96a5cf3248e842617aa3fe8a7" kindref="member">ShaderParser::renderStageToIdxMap</ref>.nameCount();</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceShaderParser_1ab4b8a9d96a5cf3248e842617aa3fe8a7" kindref="member">ShaderParser::renderStageToIdxMap</ref>.addNameId(b-&gt;getStr(i));</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nc<sp/>==<sp/><ref refid="namespaceShaderParser_1ab4b8a9d96a5cf3248e842617aa3fe8a7" kindref="member">ShaderParser::renderStageToIdxMap</ref>.nameCount())</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;\n[FATAL<sp/>ERROR]<sp/>duplicate<sp/>stage<sp/>&lt;%s&gt;<sp/>in<sp/>renderStages{}<sp/>in<sp/>&lt;%s&gt;<sp/>?\n&quot;</highlight><highlight class="normal">,<sp/>b-&gt;getStr(i),<sp/>filename);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>13;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName)</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca5395b0c35e96d97ae9ac7f83b0665310" kindref="member">SHLOG_NORMAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[info]<sp/>render_stage<sp/>\&quot;%s\&quot;=%d&quot;</highlight><highlight class="normal">,<sp/>b-&gt;getStr(i),</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceShaderParser_1ab4b8a9d96a5cf3248e842617aa3fe8a7" kindref="member">ShaderParser::renderStageToIdxMap</ref>.getNameId(b-&gt;getStr(i)));</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceShaderParser_1ab4b8a9d96a5cf3248e842617aa3fe8a7" kindref="member">ShaderParser::renderStageToIdxMap</ref>.nameCount()<sp/>&gt;<sp/>SC_STAGE_IDX_MASK<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;\n[FATAL<sp/>ERROR]<sp/>too<sp/>many<sp/>render<sp/>stages<sp/>(%d)<sp/>&gt;<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceShaderParser_1ab4b8a9d96a5cf3248e842617aa3fe8a7" kindref="member">ShaderParser::renderStageToIdxMap</ref>.nameCount(),</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SC_STAGE_IDX_MASK<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>13;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a04ad6cf4801a90118d16a533be8040da" kindref="member">reset_shaders_inc_base</ref>();</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;eastl::string&gt;<sp/>mount_points;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/>mount_points.push_back(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>nid<sp/>=<sp/>blk.getNameId(</highlight><highlight class="stringliteral">&quot;mountPoint&quot;</highlight><highlight class="normal">);<sp/>i<sp/>&lt;<sp/>blk.paramCount();<sp/>i++)</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk.getParamNameId(i)<sp/>==<sp/>nid<sp/>&amp;&amp;<sp/>blk.getParamType(i)<sp/>==<sp/>DataBlock::TYPE_STRING)</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount_points.emplace_back(blk.getStr(i));</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>nid<sp/>=<sp/>blk.getNameId(</highlight><highlight class="stringliteral">&quot;incDir&quot;</highlight><highlight class="normal">);<sp/>i<sp/>&lt;<sp/>blk.paramCount();<sp/>i++)</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk.getParamNameId(i)<sp/>==<sp/>nid<sp/>&amp;&amp;<sp/>blk.getParamType(i)<sp/>==<sp/>DataBlock::TYPE_STRING)</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>param<sp/>=<sp/>blk.getStr(i);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eastl::string<sp/>folder;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;mount_point<sp/>:<sp/>mount_points)</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>folder<sp/>=<sp/>mount_point<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>param;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd_dir_exists(folder.c_str()))</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a93a91be19d16515c5c8b86cc974f80c4" kindref="member">add_shaders_inc_base</ref>(folder.c_str());</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a4ea3349e62744f6307a164039532e127" kindref="member">add_include_path</ref>(folder.c_str(),<sp/>globalConfigRW);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName)</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca0012c8acb382f295fe614046a64bba11" kindref="member">SHLOG_INFO</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>include<sp/>dir:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>folder.c_str());</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().outDumpNameConfig)</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blk.setStr(</highlight><highlight class="stringliteral">&quot;outDumpName&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().outDumpNameConfig);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>defShBindDumpPrefix(makeShBinDumpName(filename));</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk.getStr(</highlight><highlight class="stringliteral">&quot;outDumpName&quot;</highlight><highlight class="normal">,<sp/>NULL))</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>defShBindDumpPrefix<sp/>=<sp/>blk.getStr(</highlight><highlight class="stringliteral">&quot;outDumpName&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useCppStcodeOverride.has_value())</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a4abc6b3b94503bccc387b5c46cc55272" kindref="member">cppStcodeMode</ref><sp/>=<sp/>useCppStcodeOverride.value();</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a4abc6b3b94503bccc387b5c46cc55272" kindref="member">cppStcodeMode</ref><sp/>=<sp/>blk.getBool(</highlight><highlight class="stringliteral">&quot;compileCppStcode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>?<sp/>shader_layout::ExternalStcodeMode::BRANCHLESS_CPP</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>shader_layout::ExternalStcodeMode::NONE;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a4abc6b3b94503bccc387b5c46cc55272" kindref="member">cppStcodeMode</ref><sp/>!=<sp/>shader_layout::ExternalStcodeMode::NONE<sp/>&amp;&amp;<sp/>blk.getBool(</highlight><highlight class="stringliteral">&quot;cppStcodeDynamicBranches&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a4abc6b3b94503bccc387b5c46cc55272" kindref="member">cppStcodeMode</ref><sp/>=<sp/>shader_layout::ExternalStcodeMode::BRANCHED_CPP;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a99d673f1c57708e8811381b115fd8072" kindref="member">generateCppStcodeValidationData</ref><sp/>&amp;=<sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a718bba3795bc51624486004c1dd748a2" kindref="member">compileCppStcode</ref>();</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;String&gt;<sp/>sourceFiles(midmem);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/>DataBlock<sp/>*sourceBlk<sp/>=<sp/>blk.getBlockByName(</highlight><highlight class="stringliteral">&quot;source&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*shader_root<sp/>=<sp/>blk.getStr(</highlight><highlight class="stringliteral">&quot;shader_root_dir&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a78772edb684e25c254d0dfa13eb3b7da" kindref="member">shaderSrcRoot</ref><sp/>=<sp/>shader_root;</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sourceBlk)</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;Shader<sp/>source<sp/>files<sp/>should<sp/>be<sp/>copied<sp/>from<sp/>shaders.sh\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;to<sp/>shaders.blk<sp/>as<sp/>a<sp/>source<sp/>block<sp/>with<sp/>file:t<sp/>parameters\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Headers<sp/>should<sp/>NOT<sp/>be<sp/>copied.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>13;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1ad83dbc6826aeed601bc5a22a5002efc1" kindref="member">engineRootDir</ref><sp/>=<sp/>blk.getStr(</highlight><highlight class="stringliteral">&quot;engineRootDir&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fileParamId<sp/>=<sp/>sourceBlk-&gt;getNameId(</highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>includePathId<sp/>=<sp/>sourceBlk-&gt;getNameId(</highlight><highlight class="stringliteral">&quot;includePath&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>paramNo<sp/>=<sp/>0;<sp/>paramNo<sp/>&lt;<sp/>sourceBlk-&gt;paramCount();<sp/>paramNo++)</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sourceBlk-&gt;getParamType(paramNo)<sp/>==<sp/>DataBlock::TYPE_STRING)</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sourceBlk-&gt;getParamNameId(paramNo)<sp/>==<sp/>fileParamId)</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shader_root)</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceFiles.push_back(String(260,<sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,<sp/>shader_root,<sp/>sourceBlk-&gt;getStr(paramNo)));</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceFiles.push_back(String(sourceBlk-&gt;getStr(paramNo)));</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sourceBlk-&gt;getParamNameId(paramNo)<sp/>==<sp/>includePathId)</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a4ea3349e62744f6307a164039532e127" kindref="member">add_include_path</ref>(sourceBlk-&gt;getStr(paramNo),<sp/>globalConfigRW);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceshc_1a92cbda8ac75d5cf670a548ef272d6825" kindref="member">shc::clearFlobVarRefList</ref>();</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/>DataBlock<sp/>*blk_gvr<sp/>=<sp/>blk.getBlockByName(</highlight><highlight class="stringliteral">&quot;explicit_var_ref&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk_gvr)</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid<sp/>=<sp/>blk.getNameId(</highlight><highlight class="stringliteral">&quot;ref&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>blk_gvr-&gt;paramCount();<sp/>i++)</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk_gvr-&gt;getParamNameId(i)<sp/>==<sp/>nid<sp/>&amp;&amp;<sp/>blk_gvr-&gt;getParamType(i)<sp/>==<sp/>DataBlock::TYPE_STRING)</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshc_1a4170f0d930cdf92ed2b78bed24168644" kindref="member">shc::addExplicitGlobVarRef</ref>(blk_gvr-&gt;getStr(i));</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>DataBlock<sp/>*blk_cav<sp/>=<sp/>blk.getBlockByName(</highlight><highlight class="stringliteral">&quot;common_assume_vars&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/>DataBlock<sp/>*blk_crs<sp/>=<sp/>blk.getBlockByName(</highlight><highlight class="stringliteral">&quot;common_required_shaders&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>DataBlock<sp/>*blk_cvv<sp/>=<sp/>blk.getBlockByName(</highlight><highlight class="stringliteral">&quot;common_valid_variants&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!blk_cav<sp/>&amp;&amp;<sp/>blk.getBlockByName(</highlight><highlight class="stringliteral">&quot;common_assume_static&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5caec73ac89ba721ca7dec737875111fddd" kindref="member">SHLOG_WARNING</ref>,<sp/></highlight><highlight class="stringliteral">&quot;use<sp/>&apos;%s&apos;<sp/>block<sp/>name<sp/>instead<sp/>of<sp/>obsolete<sp/>&apos;%s&apos;!&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;common_assume_vars&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;common_assume_static&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blk_cav<sp/>=<sp/>blk.getBlockByName(</highlight><highlight class="stringliteral">&quot;common_assume_static&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!blk_crs<sp/>&amp;&amp;<sp/>blk.getBlockByName(</highlight><highlight class="stringliteral">&quot;common_assume_no_shaders&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5caec73ac89ba721ca7dec737875111fddd" kindref="member">SHLOG_WARNING</ref>,<sp/></highlight><highlight class="stringliteral">&quot;use<sp/>&apos;%s&apos;<sp/>block<sp/>name<sp/>instead<sp/>of<sp/>obsolete<sp/>&apos;%s&apos;!&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;common_required_shaders&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;common_assume_no_shaders&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blk_crs<sp/>=<sp/>blk.getBlockByName(</highlight><highlight class="stringliteral">&quot;common_assume_no_shaders&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk_cav<sp/>&amp;&amp;<sp/>blk_cav-&gt;paramCount()<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>blk_cav-&gt;blockCount()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blk_cav<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk_crs<sp/>&amp;&amp;<sp/>blk_crs-&gt;paramCount()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blk_crs<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk_cvv<sp/>&amp;&amp;<sp/>blk_cvv-&gt;blockCount()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blk_cvv<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compNameId<sp/>=<sp/>blk.getNameId(</highlight><highlight class="stringliteral">&quot;Compile&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>blk.blockCount();<sp/>i++)</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DataBlock<sp/>*comp<sp/>=<sp/>blk.getBlock(i);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp-&gt;getBlockNameId()<sp/>==<sp/>compNameId)</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compile<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>fName(comp-&gt;getStr(</highlight><highlight class="stringliteral">&quot;output&quot;</highlight><highlight class="normal">,<sp/>NULL));</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fName.length())</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fName<sp/>=<sp/>makeShBinDumpName(filename);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fName<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;.sh&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fName[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>||<sp/>fName[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fName<sp/>=<sp/>cfgDir<sp/>+<sp/>fName;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a4290fd2d9d6d398410c276f59ca2b426" kindref="member">dictionarySizeInKb</ref><sp/>=<sp/>comp-&gt;getInt(</highlight><highlight class="stringliteral">&quot;dict_size_in_kb&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().dictionarySizeInKb);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1aed1ba3b0ae73d6131eaa001213c6f678" kindref="member">shGroupSizeInKb</ref><sp/>=<sp/>comp-&gt;getInt(</highlight><highlight class="stringliteral">&quot;group_size_in_kb&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().shGroupSizeInKb);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1afb929004f50ede58325934b69b9d57e7" kindref="member">shGroupCompressionLevel</ref><sp/>=<sp/>comp-&gt;getInt(</highlight><highlight class="stringliteral">&quot;group_compression_level&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().shGroupCompressionLevel);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1a9c99fa0fe1d7ce4437589196efc646da" kindref="member">shDumpCompressionLevel</ref><sp/>=<sp/>comp-&gt;getInt(</highlight><highlight class="stringliteral">&quot;dump_compression_level&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().shDumpCompressionLevel);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structShHardwareOptions" kindref="compound">ShHardwareOptions</ref><sp/>opt(4.0_sm);</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fsh<sp/>=<sp/>comp-&gt;getStr(</highlight><highlight class="stringliteral">&quot;fsh&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fsh)</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(fsh,<sp/></highlight><highlight class="stringliteral">&quot;3.0&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.<ref refid="structShHardwareOptions_1a4762074f79c1638ccf8bab0dd76db8c5" kindref="member">fshVersion</ref><sp/>=<sp/>3.0_sm;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(fsh,<sp/></highlight><highlight class="stringliteral">&quot;4.0&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.<ref refid="structShHardwareOptions_1a4762074f79c1638ccf8bab0dd76db8c5" kindref="member">fshVersion</ref><sp/>=<sp/>4.0_sm;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(fsh,<sp/></highlight><highlight class="stringliteral">&quot;4.1&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.<ref refid="structShHardwareOptions_1a4762074f79c1638ccf8bab0dd76db8c5" kindref="member">fshVersion</ref><sp/>=<sp/>4.1_sm;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(fsh,<sp/></highlight><highlight class="stringliteral">&quot;5.0&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.<ref refid="structShHardwareOptions_1a4762074f79c1638ccf8bab0dd76db8c5" kindref="member">fshVersion</ref><sp/>=<sp/>5.0_sm;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(fsh,<sp/></highlight><highlight class="stringliteral">&quot;6.0&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.<ref refid="structShHardwareOptions_1a4762074f79c1638ccf8bab0dd76db8c5" kindref="member">fshVersion</ref><sp/>=<sp/>6.0_sm;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(fsh,<sp/></highlight><highlight class="stringliteral">&quot;6.6&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.<ref refid="structShHardwareOptions_1a4762074f79c1638ccf8bab0dd76db8c5" kindref="member">fshVersion</ref><sp/>=<sp/>6.6_sm;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_SPIRV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(fsh,<sp/></highlight><highlight class="stringliteral">&quot;SpirV&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.<ref refid="structShHardwareOptions_1a4762074f79c1638ccf8bab0dd76db8c5" kindref="member">fshVersion</ref><sp/>=<sp/>5.0_sm;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_METAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(fsh,<sp/></highlight><highlight class="stringliteral">&quot;Metal&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.<ref refid="structShHardwareOptions_1a4762074f79c1638ccf8bab0dd76db8c5" kindref="member">fshVersion</ref><sp/>=<sp/>5.0_sm;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5caae3b70b41400c8a36e8a094ac1dbe43c" kindref="member">SHLOG_ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>FSH<sp/>version<sp/>&apos;%s&apos;<sp/>in<sp/>config.blk<sp/>&apos;%s&apos;<sp/>section<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>fsh,<sp/>filename,<sp/>i);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>13;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.<ref refid="structShHardwareOptions_1a6f310def38b990eacf57075b5beca1b2" kindref="member">enableHalfProfile</ref><sp/>=<sp/>comp-&gt;getBool(</highlight><highlight class="stringliteral">&quot;enableHalfProfile&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().<ref refid="structshc_1_1CompilerConfig_1aed8b72b3dacf6fa6de0a75c71630a8f8" kindref="member">enableFp16Override</ref>;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataBlock<sp/>*blk_av<sp/>=<sp/>comp-&gt;getBlockByName(</highlight><highlight class="stringliteral">&quot;assume_vars&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataBlock<sp/>*blk_rs<sp/>=<sp/>comp-&gt;getBlockByName(</highlight><highlight class="stringliteral">&quot;required_shaders&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataBlock<sp/>*blk_vv<sp/>=<sp/>comp-&gt;getBlockByName(</highlight><highlight class="stringliteral">&quot;valid_variants&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!blk_av<sp/>&amp;&amp;<sp/>comp-&gt;getBlockByName(</highlight><highlight class="stringliteral">&quot;assume_static&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5caec73ac89ba721ca7dec737875111fddd" kindref="member">SHLOG_WARNING</ref>,<sp/></highlight><highlight class="stringliteral">&quot;use<sp/>&apos;%s&apos;<sp/>block<sp/>name<sp/>instead<sp/>of<sp/>obsolete<sp/>&apos;%s&apos;!&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;assume_vars&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;assume_static&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blk_av<sp/>=<sp/>comp-&gt;getBlockByName(</highlight><highlight class="stringliteral">&quot;assume_static&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!blk_rs<sp/>&amp;&amp;<sp/>comp-&gt;getBlockByName(</highlight><highlight class="stringliteral">&quot;assume_no_shaders&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5caec73ac89ba721ca7dec737875111fddd" kindref="member">SHLOG_WARNING</ref>,<sp/></highlight><highlight class="stringliteral">&quot;use<sp/>&apos;%s&apos;<sp/>block<sp/>name<sp/>instead<sp/>of<sp/>obsolete<sp/>&apos;%s&apos;!&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;required_shaders&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;assume_no_shaders&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blk_rs<sp/>=<sp/>comp-&gt;getBlockByName(</highlight><highlight class="stringliteral">&quot;assume_no_shaders&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!blk_av<sp/>&amp;&amp;<sp/>blk_cav)</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blk_av<sp/>=<sp/>comp-&gt;addNewBlock(</highlight><highlight class="stringliteral">&quot;assume_vars&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!blk_rs<sp/>&amp;&amp;<sp/>blk_crs)</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blk_rs<sp/>=<sp/>comp-&gt;addNewBlock(</highlight><highlight class="stringliteral">&quot;required_shaders&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!blk_vv<sp/>&amp;&amp;<sp/>blk_cvv)</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blk_vv<sp/>=<sp/>comp-&gt;addNewBlock(</highlight><highlight class="stringliteral">&quot;valid_variants&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk_av<sp/>&amp;&amp;<sp/>blk_cav)</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mergeDataBlock(*blk_av,<sp/>*blk_cav);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blk_av-&gt;saveToTextFile(String(260,&quot;%d_%s_assume_vars&quot;,<sp/>i,<sp/>fsh));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk_rs<sp/>&amp;&amp;<sp/>blk_crs)</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mergeDataBlock(*blk_rs,<sp/>*blk_crs);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blk_rs-&gt;saveToTextFile(String(260,&quot;%d_%s_required_shaders&quot;,<sp/>i,<sp/>fsh));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk_vv<sp/>&amp;&amp;<sp/>blk_cvv)</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nameMap_8h_1ad3f42c540507651a7e4ce93760afc216" kindref="member">SCFastNameMap</ref><sp/>names;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names.addNameId(</highlight><highlight class="stringliteral">&quot;invalid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mergeDataBlock(*blk_vv,<sp/>*blk_cvv,<sp/>&amp;names);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blk_av-&gt;saveToTextFile(String(260,&quot;%d_%s_valid_variants&quot;,<sp/>i,<sp/>fsh));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk_av<sp/>&amp;&amp;<sp/>!blk_av-&gt;paramCount()<sp/>&amp;&amp;<sp/>!blk_av-&gt;blockCount())</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blk_av<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk_rs<sp/>&amp;&amp;<sp/>!blk_rs-&gt;paramCount())</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blk_rs<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk_vv<sp/>&amp;&amp;<sp/>!blk_vv-&gt;blockCount())</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blk_vv<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshc_1ab66b53336232f9618b2312d6eebe10ab" kindref="member">shc::setValidVariantsBlock</ref>(blk_vv);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshc_1a0f186f2ce7014f20aa47f31446439dbe" kindref="member">shc::setRequiredShadersBlock</ref>(blk_rs);</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk_av)</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalConfigRW.<ref refid="structshc_1_1CompilerConfig_1aec26f4fced3056f5c408918cebadf77e" kindref="member">assumedVarsConfig</ref><sp/>=<sp/>blk_av;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceShaderCompilerStat_1a1b8f5d565699cdda335f64e632a89ad5" kindref="member">ShaderCompilerStat::reset</ref>();</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="makeShBinDump_8h_1a7e4c9039c4d793938486d7f1c089329f" kindref="member">BindumpPackingFlags</ref><sp/>packingFlags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().useCompression)</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk.getBool(</highlight><highlight class="stringliteral">&quot;packShGroups&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/></highlight><highlight class="comment">//<sp/>Pack<sp/>groups<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packingFlags<sp/>|=<sp/><ref refid="structBindumpPackingFlagsBits_1af6ce521b95d1ea33e3463753a874e8da" kindref="member">BindumpPackingFlagsBits::SHADER_GROUPS</ref>;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk.getBool(</highlight><highlight class="stringliteral">&quot;packBin&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>further<sp/>compress<sp/>bindump<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packingFlags<sp/>|=<sp/><ref refid="structBindumpPackingFlagsBits_1a62bee7765f0657bba97f2a5924cb6c5d" kindref="member">BindumpPackingFlagsBits::WHOLE_BINARY</ref>;</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compile(eastl::move(sourceFiles),<sp/>fName,<sp/>comp-&gt;getStr(</highlight><highlight class="stringliteral">&quot;outDumpName&quot;</highlight><highlight class="normal">,<sp/>defShBindDumpPrefix),<sp/>opt,<sp/>filename,<sp/>getDir(filename),</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blk.getStr(</highlight><highlight class="stringliteral">&quot;outMiniDumpName&quot;</highlight><highlight class="normal">,<sp/>NULL),<sp/>packingFlags,<sp/>globalConfigRW,<sp/>&amp;configArgs);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName)</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeSec<sp/>=<sp/>float(get_time_msec()<sp/>-<sp/>timeMsec)<sp/>*<sp/>1e-3;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wholeSeconds<sp/>=<sp/>int(timeSec);</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>compCountMsg(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().logFullPerFileCompilationStats)</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uniqueCompilationCount<sp/>=<sp/><ref refid="namespaceShaderCompilerStat_1a1030d3430aa370a25543c3af4afd1b06" kindref="member">ShaderCompilerStat::getUniqueCompilationCount</ref>();</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compCountMsg.aprintf(64,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(%u<sp/>compilation%s)&quot;</highlight><highlight class="normal">,<sp/>uniqueCompilationCount,<sp/>uniqueCompilationCount<sp/>==<sp/>1<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().logFullPerFileCompilationStats<sp/>||<sp/>wholeSeconds<sp/>&gt;<sp/>5)</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().logExactCompilationTimes)</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca5395b0c35e96d97ae9ac7f83b0665310" kindref="member">SHLOG_NORMAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[INFO]<sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>&apos;%s&apos;<sp/>for<sp/>%.4gs%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName,<sp/>timeSec,<sp/>compCountMsg);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wholeSeconds<sp/>&gt;<sp/>60)</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca5395b0c35e96d97ae9ac7f83b0665310" kindref="member">SHLOG_NORMAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[INFO]<sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>&apos;%s&apos;<sp/>for<sp/>%dm:%02ds%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName,<sp/>wholeSeconds<sp/>/<sp/>60,</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wholeSeconds<sp/>%<sp/>60,<sp/>compCountMsg);</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a2926179632c7c86265007652d3d30b14" kindref="member">sh_debug</ref>(<ref refid="shLog_8h_1a66042048eb3ce30a1dccb2ebf8c2fd5ca5395b0c35e96d97ae9ac7f83b0665310" kindref="member">SHLOG_NORMAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[INFO]<sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>&apos;%s&apos;<sp/>for<sp/>%ds%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().singleCompilationShName,<sp/>wholeSeconds,<sp/>compCountMsg);</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_C1<sp/>|<sp/>_CROSS_TARGET_C2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeSec<sp/>=<sp/>float(get_time_msec()<sp/>-<sp/>timeMsec)<sp/>*<sp/>1e-3;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wholeSeconds<sp/>=<sp/>int(timeSec);</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().logExactCompilationTimes<sp/>&amp;&amp;<sp/>wholeSeconds<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;took<sp/>%.4gs\n&quot;</highlight><highlight class="normal">,<sp/>timeSec);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wholeSeconds<sp/>&gt;<sp/>60)</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;took<sp/>%dm:%02ds\n&quot;</highlight><highlight class="normal">,<sp/>wholeSeconds<sp/>/<sp/>60,<sp/>wholeSeconds<sp/>%<sp/>60);</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wholeSeconds<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;took<sp/>%ds\n&quot;</highlight><highlight class="normal">,<sp/>wholeSeconds);</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!::dgs_execute_quiet<sp/>&amp;&amp;<sp/>::getenv(</highlight><highlight class="stringliteral">&quot;DAGOR_BUILD_BELL&quot;</highlight><highlight class="normal">)<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*console<sp/>=<sp/>get_console_window_handle())</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flash_window(console,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_PC_WIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sends<sp/>the<sp/>BEL<sp/>signal<sp/>to<sp/>the<sp/>Windows<sp/>Terminal<sp/>app,<sp/>which<sp/>is<sp/>default<sp/>in<sp/>latest<sp/>versions<sp/>of<sp/>Windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Windows<sp/>Terminal<sp/>app<sp/>is<sp/>not<sp/>reacting<sp/>to<sp/>FlashWindowEx()<sp/>API,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>send<sp/>the<sp/>BEL<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>get<sp/>the<sp/>user&apos;s<sp/>attention.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shLog_8cpp_1a7993d478733f9722863bb366b7b90711" kindref="member">sh_printf</ref>(</highlight><highlight class="stringliteral">&quot;\a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="main.cpp"/>
  </compounddef>
</doxygen>
