<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="commonUtils_8h" kind="file" language="C++">
    <compoundname>commonUtils.h</compoundname>
    <includes local="no">utility</includes>
    <includes local="no">util/dag_safeArg.h</includes>
    <includes local="no">util/dag_globDef.h</includes>
    <includes local="no">EASTL/string.h</includes>
    <includes local="no">EASTL/optional.h</includes>
    <includedby refid="boolVar_8h" local="yes">boolVar.h</includedby>
    <includedby refid="cppStcodeBuilder_8h" local="yes">cppStcodeBuilder.h</includedby>
    <includedby refid="cppStcodePasses_8h" local="yes">cppStcodePasses.h</includedby>
    <includedby refid="hlslRegisters_8h" local="yes">hlslRegisters.h</includedby>
    <includedby refid="mdArray_8h" local="yes">mdArray.h</includedby>
    <includedby refid="shAssumes_8h" local="yes">shAssumes.h</includedby>
    <includedby refid="shCompContext_8h" local="yes">shCompContext.h</includedby>
    <includedby refid="shCompilationInfo_8h" local="yes">shCompilationInfo.h</includedby>
    <includedby refid="shErrorReporting_8h" local="yes">shErrorReporting.h</includedby>
    <includedby refid="shaderBytecodeCache_8h" local="yes">shaderBytecodeCache.h</includedby>
    <includedby refid="shaderSemantic_8h" local="yes">shaderSemantic.h</includedby>
    <includedby refid="shaderVariant_8h" local="yes">shaderVariant.h</includedby>
    <includedby refid="shaderVariantSrc_8cpp" local="yes">shaderVariantSrc.cpp</includedby>
    <includedby refid="shlexterm_8h" local="yes">shlexterm.h</includedby>
    <includedby refid="stcodeBytecode_8h" local="yes">stcodeBytecode.h</includedby>
    <includedby refid="variablesMerger_8h" local="yes">variablesMerger.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>commonUtils.h</label>
        <link refid="commonUtils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>EASTL/optional.h</label>
      </node>
      <node id="5">
        <label>EASTL/string.h</label>
      </node>
      <node id="4">
        <label>util/dag_globDef.h</label>
      </node>
      <node id="3">
        <label>util/dag_safeArg.h</label>
      </node>
      <node id="2">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="22">
        <label>binDumpUtils.cpp</label>
        <link refid="binDumpUtils_8cpp"/>
      </node>
      <node id="21">
        <label>binDumpUtils.h</label>
        <link refid="binDumpUtils_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>boolVar.cpp</label>
        <link refid="boolVar_8cpp"/>
      </node>
      <node id="2">
        <label>boolVar.h</label>
        <link refid="boolVar_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>codeBlocks.cpp</label>
        <link refid="codeBlocks_8cpp"/>
      </node>
      <node id="24">
        <label>codeBlocks.h</label>
        <link refid="codeBlocks_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>commonUtils.h</label>
        <link refid="commonUtils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>condParser.cpp</label>
        <link refid="condParser_8cpp"/>
      </node>
      <node id="49">
        <label>cppStcode.cpp</label>
        <link refid="cppStcode_8cpp"/>
      </node>
      <node id="48">
        <label>cppStcode.h</label>
        <link refid="cppStcode_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>cppStcodeAssembly.cpp</label>
        <link refid="cppStcodeAssembly_8cpp"/>
      </node>
      <node id="47">
        <label>cppStcodeAssembly.h</label>
        <link refid="cppStcodeAssembly_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>cppStcodeBuilder.h</label>
        <link refid="cppStcodeBuilder_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cppStcodePasses.cpp</label>
        <link refid="cppStcodePasses_8cpp"/>
      </node>
      <node id="6">
        <label>cppStcodePasses.h</label>
        <link refid="cppStcodePasses_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>cppStcodeUtils.h</label>
        <link refid="cppStcodeUtils_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>deSerializationContext.cpp</label>
        <link refid="deSerializationContext_8cpp"/>
      </node>
      <node id="27">
        <label>deSerializationContext.h</label>
        <link refid="deSerializationContext_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>globalConfig.cpp</label>
        <link refid="globalConfig_8cpp"/>
      </node>
      <node id="52">
        <label>globalConfig.h</label>
        <link refid="globalConfig_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>hlslRegisters.cpp</label>
        <link refid="hlslRegisters_8cpp"/>
      </node>
      <node id="65">
        <label>hlslRegisters.h</label>
        <link refid="hlslRegisters_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>hwAssembly.cpp</label>
        <link refid="hwAssembly_8cpp"/>
      </node>
      <node id="56">
        <label>hwSemantic.cpp</label>
        <link refid="hwSemantic_8cpp"/>
      </node>
      <node id="61">
        <label>hwSemantic.h</label>
        <link refid="hwSemantic_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>intervals.cpp</label>
        <link refid="intervals_8cpp"/>
      </node>
      <node id="32">
        <label>linkShaders.cpp</label>
        <link refid="linkShaders_8cpp"/>
      </node>
      <node id="31">
        <label>linkShaders.h</label>
        <link refid="linkShaders_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>loadShaders.cpp</label>
        <link refid="loadShaders_8cpp"/>
      </node>
      <node id="35">
        <label>loadShaders.h</label>
        <link refid="loadShaders_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="23">
        <label>makeShBinDump.cpp</label>
        <link refid="makeShBinDump_8cpp"/>
      </node>
      <node id="64">
        <label>makeShBinDump.h</label>
        <link refid="makeShBinDump_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>mdArray.h</label>
        <link refid="mdArray_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>namedConst.cpp</label>
        <link refid="namedConst_8cpp"/>
      </node>
      <node id="58">
        <label>namedConst.h</label>
        <link refid="namedConst_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>samplers.cpp</label>
        <link refid="samplers_8cpp"/>
      </node>
      <node id="74">
        <label>samplers.h</label>
        <link refid="samplers_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>shAssumes.cpp</label>
        <link refid="shAssumes_8cpp"/>
      </node>
      <node id="67">
        <label>shAssumes.h</label>
        <link refid="shAssumes_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>shCode.cpp</label>
        <link refid="shCode_8cpp"/>
      </node>
      <node id="60">
        <label>shCompContext.h</label>
        <link refid="shCompContext_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>shCompilationInfo.cpp</label>
        <link refid="shCompilationInfo_8cpp"/>
      </node>
      <node id="51">
        <label>shCompilationInfo.h</label>
        <link refid="shCompilationInfo_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>shCompiler.cpp</label>
        <link refid="shCompiler_8cpp"/>
      </node>
      <node id="69">
        <label>shErrorReporting.h</label>
        <link refid="shErrorReporting_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>shExpr.cpp</label>
        <link refid="shExpr_8cpp"/>
      </node>
      <node id="11">
        <label>shExprParser.cpp</label>
        <link refid="shExprParser_8cpp"/>
      </node>
      <node id="75">
        <label>shMacro.cpp</label>
        <link refid="shMacro_8cpp"/>
      </node>
      <node id="9">
        <label>shSemCode.cpp</label>
        <link refid="shSemCode_8cpp"/>
      </node>
      <node id="4">
        <label>shShaderContext.h</label>
        <link refid="shShaderContext_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>shTargetContext.h</label>
        <link refid="shTargetContext_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>shTargetStorage.cpp</label>
        <link refid="shTargetStorage_8cpp"/>
      </node>
      <node id="5">
        <label>shVariantContext.h</label>
        <link refid="shVariantContext_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>sh_stat.cpp</label>
        <link refid="sh__stat_8cpp"/>
      </node>
      <node id="59">
        <label>shaderBytecodeCache.cpp</label>
        <link refid="shaderBytecodeCache_8cpp"/>
      </node>
      <node id="72">
        <label>shaderBytecodeCache.h</label>
        <link refid="shaderBytecodeCache_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>shaderSave.cpp</label>
        <link refid="shaderSave_8cpp"/>
      </node>
      <node id="12">
        <label>shaderSemantic.cpp</label>
        <link refid="shaderSemantic_8cpp"/>
      </node>
      <node id="10">
        <label>shaderSemantic.h</label>
        <link refid="shaderSemantic_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>shaderVariant.cpp</label>
        <link refid="shaderVariant_8cpp"/>
      </node>
      <node id="37">
        <label>shaderVariant.h</label>
        <link refid="shaderVariant_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>shaderVariantSrc.cpp</label>
        <link refid="shaderVariantSrc_8cpp"/>
      </node>
      <node id="39">
        <label>shcode.h</label>
        <link refid="shcode_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>shlexterm.cpp</label>
        <link refid="shlexterm_8cpp"/>
      </node>
      <node id="73">
        <label>shlexterm.h</label>
        <link refid="shlexterm_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>shsem.cpp</label>
        <link refid="shsem_8cpp"/>
      </node>
      <node id="43">
        <label>shsem.h</label>
        <link refid="shsem_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>stcodeBytecode.cpp</label>
        <link refid="stcodeBytecode_8cpp"/>
      </node>
      <node id="70">
        <label>stcodeBytecode.h</label>
        <link refid="stcodeBytecode_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>variablesMerger.cpp</label>
        <link refid="variablesMerger_8cpp"/>
      </node>
      <node id="76">
        <label>variablesMerger.h</label>
        <link refid="variablesMerger_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>variantAssembly.cpp</label>
        <link refid="variantAssembly_8cpp"/>
      </node>
      <node id="14">
        <label>variantAssembly.h</label>
        <link refid="variantAssembly_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>variantSemantic.cpp</label>
        <link refid="variantSemantic_8cpp"/>
      </node>
      <node id="17">
        <label>variantSemantic.h</label>
        <link refid="variantSemantic_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="commonUtils_8h_1a98638fead8095fb3eef1f83dc835c34a" prot="public" static="no">
        <name>COPYABLE_TYPE</name>
        <param><defname>type_</defname></param>
        <initializer>  type_(const type_ &amp;other) = default; \
  type_ &amp;operator=(const type_ &amp;other) = default;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="commonUtils.h" line="10" column="9" bodyfile="commonUtils.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="commonUtils_8h_1a0f32763830972e99ef6c9fd78bcd4dd6" prot="public" static="no">
        <name>MOVABLE_TYPE</name>
        <param><defname>type_</defname></param>
        <initializer>  type_(type_ &amp;&amp;other) = default; \
  type_ &amp;operator=(type_ &amp;&amp;other) = default;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="commonUtils.h" line="14" column="9" bodyfile="commonUtils.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="commonUtils_8h_1a47d8b60f7834176ba883facef39d8db5" prot="public" static="no">
        <name>NON_COPYABLE_TYPE</name>
        <param><defname>type_</defname></param>
        <initializer>  type_(const type_ &amp;other) = delete; \
  type_ &amp;operator=(const type_ &amp;other) = delete;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="commonUtils.h" line="18" column="9" bodyfile="commonUtils.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="commonUtils_8h_1a21e6770b6000bf7bcdc55552c1e730fe" prot="public" static="no">
        <name>MOVE_ONLY_TYPE</name>
        <param><defname>type_</defname></param>
        <initializer><ref refid="commonUtils_8h_1a0f32763830972e99ef6c9fd78bcd4dd6" kindref="member">MOVABLE_TYPE</ref>(type_) <ref refid="commonUtils_8h_1a47d8b60f7834176ba883facef39d8db5" kindref="member">NON_COPYABLE_TYPE</ref>(type_)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="commonUtils.h" line="22" column="9" bodyfile="commonUtils.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="commonUtils_8h_1add7c04b07343c24d202700b77785ab7f" prot="public" static="no">
        <name>PINNED_TYPE</name>
        <param><defname>type_</defname></param>
        <initializer>  type_(const type_ &amp;other) = delete;            \
  type_ &amp;operator=(const type_ &amp;other) = delete; \
  type_(type_ &amp;&amp;other) = delete;                 \
  type_ &amp;operator=(type_ &amp;&amp;other) = delete;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="commonUtils.h" line="24" column="9" bodyfile="commonUtils.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="commonUtils_8h_1a514d093bec84d424a39236e710bb0245" prot="public" static="no">
        <name>LITSTR_LEN</name>
        <param><defname>str_</defname></param>
        <initializer>(countof(str_) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="commonUtils.h" line="30" column="9" bodyfile="commonUtils.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="commonUtils_8h_1ae2667fae32711226a08120e1cc45974d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool item_is_in</definition>
        <argsstring>(const T &amp;item, std::initializer_list&lt; T &gt; items)</argsstring>
        <name>item_is_in</name>
        <param>
          <type>const T &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; T &gt;</type>
          <declname>items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="commonUtils.h" line="33" column="13" bodyfile="commonUtils.h" bodystart="33" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="commonUtils_8h_1aed5248b94d444aeecb8630a6583bb5f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T unwrap</definition>
        <argsstring>(eastl::optional&lt; T &gt; &amp;&amp;opt)</argsstring>
        <name>unwrap</name>
        <param>
          <type>eastl::optional&lt; T &gt; &amp;&amp;</type>
          <declname>opt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="commonUtils.h" line="44" column="10" bodyfile="commonUtils.h" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="commonUtils_8h_1a423a5cbb08af4695251ec87aa21a5fe1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>TArgs</declname>
            <defname>TArgs</defname>
          </param>
        </templateparamlist>
        <type>eastl::string</type>
        <definition>eastl::string string_f</definition>
        <argsstring>(const char *fmt, TArgs &amp;&amp;...args)</argsstring>
        <name>string_f</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>TArgs &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="commonUtils.h" line="51" column="22" bodyfile="commonUtils.h" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="commonUtils_8h_1aa1f93ffbe9e33ba8657e779783b5fbc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>eastl::string</type>
        <definition>eastl::string string_dsa</definition>
        <argsstring>(const char *fmt, const DagorSafeArg *arg, int anum)</argsstring>
        <name>string_dsa</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>const DagorSafeArg *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>anum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="commonUtils.h" line="56" column="22" bodyfile="commonUtils.h" bodystart="56" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="commonUtils_8h_1a421e5f914841061096ef1977d1501b32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool streq</definition>
        <argsstring>(const char *s1, const char *s2)</argsstring>
        <name>streq</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="commonUtils.h" line="65" column="13" bodyfile="commonUtils.h" bodystart="65" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/dag_safeArg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/dag_globDef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/optional.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="commonUtils_8h_1a98638fead8095fb3eef1f83dc835c34a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COPYABLE_TYPE(type_)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"><sp/><sp/>type_(const<sp/>type_<sp/>&amp;other)<sp/>=<sp/>default;<sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"><sp/><sp/>type_<sp/>&amp;operator=(const<sp/>type_<sp/>&amp;other)<sp/>=<sp/>default;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="commonUtils_8h_1a0f32763830972e99ef6c9fd78bcd4dd6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOVABLE_TYPE(type_)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"><sp/><sp/>type_(type_<sp/>&amp;&amp;other)<sp/>=<sp/>default;<sp/>\</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"><sp/><sp/>type_<sp/>&amp;operator=(type_<sp/>&amp;&amp;other)<sp/>=<sp/>default;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="commonUtils_8h_1a47d8b60f7834176ba883facef39d8db5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NON_COPYABLE_TYPE(type_)<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"><sp/><sp/>type_(const<sp/>type_<sp/>&amp;other)<sp/>=<sp/>delete;<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/>type_<sp/>&amp;operator=(const<sp/>type_<sp/>&amp;other)<sp/>=<sp/>delete;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="commonUtils_8h_1a21e6770b6000bf7bcdc55552c1e730fe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOVE_ONLY_TYPE(type_)<sp/>MOVABLE_TYPE(type_)<sp/>NON_COPYABLE_TYPE(type_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="commonUtils_8h_1add7c04b07343c24d202700b77785ab7f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINNED_TYPE(type_)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/>type_(const<sp/>type_<sp/>&amp;other)<sp/>=<sp/>delete;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/>type_<sp/>&amp;operator=(const<sp/>type_<sp/>&amp;other)<sp/>=<sp/>delete;<sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/>type_(type_<sp/>&amp;&amp;other)<sp/>=<sp/>delete;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/>type_<sp/>&amp;operator=(type_<sp/>&amp;&amp;other)<sp/>=<sp/>delete;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="commonUtils_8h_1a514d093bec84d424a39236e710bb0245" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LITSTR_LEN(str_)<sp/>(countof(str_)<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="33" refid="commonUtils_8h_1ae2667fae32711226a08120e1cc45974d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="commonUtils_8h_1ae2667fae32711226a08120e1cc45974d" kindref="member">item_is_in</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;item,<sp/>std::initializer_list&lt;T&gt;<sp/>items)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;ref<sp/>:<sp/>items)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ref<sp/>==<sp/>item)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="44" refid="commonUtils_8h_1aed5248b94d444aeecb8630a6583bb5f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="commonUtils_8h_1aed5248b94d444aeecb8630a6583bb5f8" kindref="member">unwrap</ref>(eastl::optional&lt;T&gt;<sp/>&amp;&amp;opt)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>G_ASSERT(opt.has_value());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eastl::move(opt.value());</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>TArgs&gt;</highlight></codeline>
<codeline lineno="51" refid="commonUtils_8h_1a423a5cbb08af4695251ec87aa21a5fe1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>eastl::string<sp/><ref refid="commonUtils_8h_1a423a5cbb08af4695251ec87aa21a5fe1" kindref="member">string_f</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>TArgs<sp/>&amp;&amp;...args)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eastl::string(eastl::string::CtorSprintf{},<sp/>fmt,<sp/>eastl::forward&lt;TArgs&gt;(args)...);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="commonUtils_8h_1aa1f93ffbe9e33ba8657e779783b5fbc3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>eastl::string<sp/><ref refid="commonUtils_8h_1aa1f93ffbe9e33ba8657e779783b5fbc3" kindref="member">string_dsa</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DagorSafeArg<sp/>*arg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anum)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slen<sp/>=<sp/>DagorSafeArg::count_len(fmt,<sp/>arg,<sp/>anum);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>eastl::string<sp/>msg{};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>msg.resize(slen);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>DagorSafeArg::print_fmt(msg.data(),<sp/>msg.length()<sp/>+<sp/>1,<sp/>fmt,<sp/>arg,<sp/>anum);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msg;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="commonUtils_8h_1a421e5f914841061096ef1977d1501b32" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="commonUtils_8h_1a421e5f914841061096ef1977d1501b32" kindref="member">streq</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcmp(s1,<sp/>s2)<sp/>==<sp/>0;<sp/>}</highlight></codeline>
    </programlisting>
    <location file="commonUtils.h"/>
  </compounddef>
</doxygen>
