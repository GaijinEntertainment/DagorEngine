<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="mdArray_8h" kind="file" language="C++">
    <compoundname>mdArray.h</compoundname>
    <includes refid="commonUtils_8h" local="yes">commonUtils.h</includes>
    <includes local="no">generic/dag_carray.h</includes>
    <includes local="no">generic/dag_span.h</includes>
    <includes local="no">generic/dag_enumerate.h</includes>
    <includes local="no">debug/dag_assert.h</includes>
    <includedby refid="variablesMerger_8cpp" local="yes">variablesMerger.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>commonUtils.h</label>
        <link refid="commonUtils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>mdArray.h</label>
        <link refid="mdArray_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>EASTL/optional.h</label>
      </node>
      <node id="6">
        <label>EASTL/string.h</label>
      </node>
      <node id="11">
        <label>debug/dag_assert.h</label>
      </node>
      <node id="8">
        <label>generic/dag_carray.h</label>
      </node>
      <node id="10">
        <label>generic/dag_enumerate.h</label>
      </node>
      <node id="9">
        <label>generic/dag_span.h</label>
      </node>
      <node id="5">
        <label>util/dag_globDef.h</label>
      </node>
      <node id="4">
        <label>util/dag_safeArg.h</label>
      </node>
      <node id="3">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>mdArray.h</label>
        <link refid="mdArray_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>variablesMerger.cpp</label>
        <link refid="variablesMerger_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structdetail_1_1MdArrayIndex" prot="public">detail::MdArrayIndex</innerclass>
    <innerclass refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4" prot="public">detail::MdArrayDimensions&lt; Rank &gt;</innerclass>
    <innerclass refid="structdetail_1_1GetMdInitializerList_3_01T_00_01Rank_01_4" prot="public">detail::GetMdInitializerList&lt; T, Rank &gt;</innerclass>
    <innerclass refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4" prot="public">detail::MdArray&lt; T, Rank, Dims &gt;</innerclass>
    <innernamespace refid="namespacedetail">detail</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="mdArray_8h_1a48e4feaea80f719e11e2a32982a2b7f2" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>uint32_t...</type>
            <declname>Dims</declname>
            <defname>Dims</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structdetail_1_1MdArray" kindref="compound">detail::MdArray</ref>&lt; T, sizeof...(Dims), detail::dims_from_varargs&lt; Dims... &gt; &gt;</type>
        <definition>using MdArray =  detail::MdArray&lt;T, sizeof...(Dims), detail::dims_from_varargs&lt;Dims...&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>MdArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mdArray.h" line="323" column="1" bodyfile="mdArray.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="mdArray_8h_1a50ea0ed2c232a9d8bed10afaa84ff9f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint32_t...</type>
            <declname>Dims</declname>
            <defname>Dims</defname>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type><ref refid="mdArray_8h_1a48e4feaea80f719e11e2a32982a2b7f2" kindref="member">MdArray</ref>&lt; eastl::invoke_result_t&lt; F &gt;, Dims... &gt;</type>
        <definition>static MdArray&lt; eastl::invoke_result_t&lt; F &gt;, Dims... &gt; mdarray_make</definition>
        <argsstring>(F &amp;&amp;make)</argsstring>
        <name>mdarray_make</name>
        <param>
          <type>F &amp;&amp;</type>
          <declname>make</declname>
        </param>
    <requiresclause>(eastl::is_invocable_v&lt;F&gt;)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mdArray.h" line="327" column="16" bodyfile="mdArray.h" bodystart="327" bodyend="331"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="commonUtils_8h" kindref="compound">commonUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;generic/dag_carray.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;generic/dag_span.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;generic/dag_enumerate.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;debug/dag_assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@TODO:<sp/>replace<sp/>eastl<sp/>metafunctions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="namespacedetail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Checker,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all_types_are<sp/>=<sp/>(Checker&lt;Ts,<sp/>T&gt;::value<sp/>&amp;&amp;<sp/>...);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all_types_are_convertible_to<sp/>=<sp/>all_types_are&lt;T,<sp/>eastl::is_convertible,<sp/>Ts...&gt;;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;uint32_t<sp/>Rank,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>are_mdarray_indices<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Ts)<sp/>==<sp/>Rank<sp/>&amp;&amp;<sp/>all_types_are_convertible_to&lt;uint32_t,<sp/>Ts...&gt;;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>Rank&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(Rank<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="26" refid="structdetail_1_1MdArrayIndex" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">MdArrayIndex</ref><sp/>:<sp/>carray&lt;uint32_t,<sp/>Rank&gt;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28" refid="structdetail_1_1MdArrayIndex_1ad4f1572fbb6762390cb3bf6dc0a7052b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1MdArrayIndex_1ad4f1572fbb6762390cb3bf6dc0a7052b" kindref="member">BaseType</ref><sp/>=<sp/>carray&lt;uint32_t,<sp/>Rank&gt;;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structdetail_1_1MdArrayIndex_1a582f02af49dad6fc83ed17dd4958e6e6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structdetail_1_1MdArrayIndex_1a582f02af49dad6fc83ed17dd4958e6e6" kindref="member">rank</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseType::size();<sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>Rank&gt;</highlight></codeline>
<codeline lineno="34" refid="structdetail_1_1MdArrayDimensions" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1MdArrayDimensions" kindref="compound">MdArrayDimensions</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>Rank&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(Rank<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="38" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayDimensions" kindref="compound">MdArrayDimensions&lt;Rank&gt;</ref><sp/>:<sp/>carray&lt;uint32_t,<sp/>Rank&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1af9712cb4519ca99ce5ccb068198d0691" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1af9712cb4519ca99ce5ccb068198d0691" kindref="member">BaseType</ref><sp/>=<sp/>carray&lt;uint32_t,<sp/>Rank&gt;;</highlight></codeline>
<codeline lineno="41" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a59c10d52c1c2b66bd61ac5e4f5972bf1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/>=<sp/><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">MdArrayIndex&lt;Rank&gt;</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a3ee6bf4a2df8cb9d2684b2d645bf1440" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a3ee6bf4a2df8cb9d2684b2d645bf1440" kindref="member">rank</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseType::size();<sp/>}</highlight></codeline>
<codeline lineno="44" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1aff12618019c943b5611486f4780009d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1aff12618019c943b5611486f4780009d8" kindref="member">totalSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>head();<sp/>}</highlight></codeline>
<codeline lineno="45" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1aad773f9535d8543d23fb153fd92dac11" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1aad773f9535d8543d23fb153fd92dac11" kindref="member">head</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseType::at(0);<sp/>}</highlight></codeline>
<codeline lineno="46" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a7c33a38545c1670c5279597be3ced71b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a7c33a38545c1670c5279597be3ced71b" kindref="member">toFlatIndex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/>&amp;idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idx[0];<sp/>}</highlight></codeline>
<codeline lineno="47" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a56c6f890ea3fe6a8d669d70f1f55f214" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a56c6f890ea3fe6a8d669d70f1f55f214" kindref="member">toMdIndex</ref>(uint32_t<sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{idx};<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>Rank&gt;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(Rank<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>MdArrayDimensions&lt;Rank&gt;<sp/>:<sp/>carray&lt;uint32_t,<sp/>Rank&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1af9712cb4519ca99ce5ccb068198d0691" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1af9712cb4519ca99ce5ccb068198d0691" kindref="member">BaseType</ref><sp/>=<sp/>carray&lt;uint32_t,<sp/>Rank&gt;;</highlight></codeline>
<codeline lineno="55" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a59c10d52c1c2b66bd61ac5e4f5972bf1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/>=<sp/><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">MdArrayIndex&lt;Rank&gt;</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a4e0fc0e01e93d136c96d1159b82f5f0b" refkind="member"><highlight class="normal"><sp/><sp/>carray&lt;uint32_t,<sp/>Rank&gt;<sp/>indexConversionMultipliers{};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>TDims&gt;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(are_mdarray_indices&lt;Rank,<sp/>TDims...&gt;)</highlight></codeline>
<codeline lineno="61" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a275bcb44412bcb64ff00ef4046c46580" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a275bcb44412bcb64ff00ef4046c46580" kindref="member">MdArrayDimensions</ref>(TDims...<sp/>dims)<sp/>:<sp/><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1af9712cb4519ca99ce5ccb068198d0691" kindref="member">BaseType</ref>{dims...}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>indexConversionMultipliers[rank()<sp/>-<sp/>1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>rank();<sp/>++i)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>dimId<sp/>=<sp/>rank()<sp/>-<sp/>i;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>indexConversionMultipliers[dimId<sp/>-<sp/>1]<sp/>=<sp/>BaseType::at(dimId)<sp/>*<sp/>indexConversionMultipliers[dimId];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1ae4ed6de062617129241a954d2ce0236c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1ae4ed6de062617129241a954d2ce0236c" kindref="member">MdArrayDimensions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayDimensions" kindref="compound">MdArrayDimensions</ref><sp/>&amp;other)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1ab0b478c1f7e0484186b420199ee169fa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayDimensions" kindref="compound">MdArrayDimensions</ref><sp/>&amp;<ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1ab0b478c1f7e0484186b420199ee169fa" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayDimensions" kindref="compound">MdArrayDimensions</ref><sp/>&amp;other)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a3ee6bf4a2df8cb9d2684b2d645bf1440" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a3ee6bf4a2df8cb9d2684b2d645bf1440" kindref="member">rank</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseType::size();<sp/>}</highlight></codeline>
<codeline lineno="75" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1aff12618019c943b5611486f4780009d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1aff12618019c943b5611486f4780009d8" kindref="member">totalSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="76"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>res{1};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>dim<sp/>:<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>*=<sp/>dim;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1aad773f9535d8543d23fb153fd92dac11" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1aad773f9535d8543d23fb153fd92dac11" kindref="member">head</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseType::at(0);<sp/>}</highlight></codeline>
<codeline lineno="84" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a9e40a6673f5501735beebc6e307370e7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayDimensions" kindref="compound">MdArrayDimensions</ref>&lt;Rank<sp/>-<sp/>1&gt;<sp/><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a9e40a6673f5501735beebc6e307370e7" kindref="member">tail</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="85"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1MdArrayDimensions" kindref="compound">MdArrayDimensions</ref>&lt;Rank<sp/>-<sp/>1&gt;<sp/>h{};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>rank();<sp/>++i)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h[i<sp/>-<sp/>1]<sp/>=<sp/>BaseType::at(i);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a7c33a38545c1670c5279597be3ced71b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a7c33a38545c1670c5279597be3ced71b" kindref="member">toFlatIndex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/>&amp;idx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="93"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>res{0};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rank();<sp/>++i)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>rank()<sp/>-<sp/>i<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>+=<sp/>idx[id]<sp/>*<sp/>indexConversionMultipliers[id];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a56c6f890ea3fe6a8d669d70f1f55f214" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4_1a56c6f890ea3fe6a8d669d70f1f55f214" kindref="member">toMdIndex</ref>(uint32_t<sp/>idx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="104"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/>res{};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rank();<sp/>++i)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>rank()<sp/>-<sp/>i<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res[id]<sp/>=<sp/>idx<sp/>%<sp/>indexConversionMultipliers[id];</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>/=<sp/>indexConversionMultipliers[id];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal">};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;uint32_t...<sp/>Dims&gt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>MdArrayDimensions&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Dims)&gt;<sp/>dims_from_varargs{Dims...};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;MdArrayDimensions<sp/>Dims,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Ids&gt;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(are_mdarray_indices&lt;Dims.rank(),<sp/>Ids...&gt;)</highlight></codeline>
<codeline lineno="121" refid="namespacedetail_1a8cd5ce960d327c8f763be295a252c2fc" refkind="member"><highlight class="normal"><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">MdArrayIndex</ref>&lt;Dims.<ref refid="structdetail_1_1MdArrayIndex_1a582f02af49dad6fc83ed17dd4958e6e6" kindref="member">rank</ref>()&gt;<sp/><ref refid="namespacedetail_1a8cd5ce960d327c8f763be295a252c2fc" kindref="member">ids_from_varargs</ref>(Ids...<sp/>ids)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO:<sp/>validate<sp/>indices<sp/>here<sp/>one<sp/>by<sp/>one<sp/>with<sp/>a<sp/>fold<sp/>expression?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ids...};</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@NOTE:<sp/>Sadly,<sp/>we<sp/>can&apos;t<sp/>have<sp/>both<sp/>pretty<sp/>initializer<sp/>syntax<sp/>and<sp/>compile<sp/>time<sp/>dimensionality<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>Rank&gt;</highlight></codeline>
<codeline lineno="129" refid="structdetail_1_1GetMdInitializerList" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1GetMdInitializerList" kindref="compound">GetMdInitializerList</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>Rank&gt;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(Rank<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="132" refid="structdetail_1_1GetMdInitializerList_3_01T_00_01Rank_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1GetMdInitializerList" kindref="compound">GetMdInitializerList&lt;T, Rank&gt;</ref><sp/>:<sp/>eastl::type_identity&lt;std::initializer_list&lt;typename<sp/><ref refid="structdetail_1_1GetMdInitializerList" kindref="compound">GetMdInitializerList</ref>&lt;T,<sp/>Rank<sp/>-<sp/>1&gt;::type&gt;&gt;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>Rank&gt;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(Rank<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1GetMdInitializerList" kindref="compound">GetMdInitializerList&lt;T, Rank&gt;</ref><sp/>:<sp/>eastl::type_identity&lt;std::initializer_list&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>Rank,<sp/>MdArrayDimensions&lt;Rank&gt;<sp/>Dims&gt;</highlight></codeline>
<codeline lineno="140" refid="structdetail_1_1MdArray" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1MdArray" kindref="compound">MdArray</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>Rank,<sp/>MdArrayDimensions&lt;Rank&gt;<sp/>Dims&gt;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(Rank<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacedetail_1a231d47577d52a343f01144962a54e51c" kindref="member">fill_mdarray_from_initializer</ref>(<ref refid="structdetail_1_1MdArray" kindref="compound">MdArray&lt;T, Rank, Dims&gt;</ref><sp/>&amp;arr,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1GetMdInitializerList" kindref="compound">GetMdInitializerList&lt;T, Rank&gt;::type</ref><sp/>initializer);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>Rank,<sp/>MdArrayDimensions&lt;Rank&gt;<sp/>Dims&gt;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacedetail_1a231d47577d52a343f01144962a54e51c" kindref="member">fill_mdarray_from_initializer</ref>(<ref refid="structdetail_1_1MdArray" kindref="compound">MdArray&lt;T, Rank, Dims&gt;</ref><sp/>&amp;arr,<sp/>std::initializer_list&lt;T&gt;<sp/>initializer);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>Rank,<sp/>MdArrayDimensions&lt;Rank&gt;<sp/>Dims&gt;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(Rank<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="150" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray" kindref="compound">MdArray&lt;T, Rank, Dims&gt;</ref><sp/>:<sp/>carray&lt;T,<sp/>Dims.totalSize()&gt;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a094c585a10a6b3c261e8aad47d1ec419" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a094c585a10a6b3c261e8aad47d1ec419" kindref="member">BaseType</ref><sp/>=<sp/>carray&lt;T,<sp/>Dims.totalSize()&gt;;</highlight></codeline>
<codeline lineno="153" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a326ebfdc734f00ce02985feff93b7592" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a326ebfdc734f00ce02985feff93b7592" kindref="member">SubElementType</ref><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="154" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a359d87af972633d78e9ef67ecbdfbb90" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a359d87af972633d78e9ef67ecbdfbb90" kindref="member">ElementType</ref><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="155" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a88629c250e12d9c4da8b27aee11b5dea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4" kindref="compound">DimsType</ref><sp/>=<sp/><ref refid="structdetail_1_1MdArrayDimensions" kindref="compound">MdArrayDimensions&lt;Rank&gt;</ref>;</highlight></codeline>
<codeline lineno="156" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1af567aa3ded8853eefc66fd8b5d5673e7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/>=<sp/><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">DimsType::IndexType</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a9397d8aa585e05c339710933729e155f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayDimensions" kindref="compound">MdArrayDimensions</ref><sp/>DIMS<sp/>=<sp/>Dims;</highlight></codeline>
<codeline lineno="159" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a2d8930a0e18c01b407742291a1628cd3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>SIZE<sp/>=<sp/>DIMS.totalSize();</highlight></codeline>
<codeline lineno="160" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a3ab12a1308f54ff1c984525b57e11bb8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>RANK<sp/>=<sp/>Rank;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a58b5e5705c3c2993628828caeb4e741c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a58b5e5705c3c2993628828caeb4e741c" kindref="member">MdArray</ref>(std::initializer_list&lt;T&gt;<sp/>initializer)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(eastl::is_default_constructible_v&lt;T&gt;<sp/>&amp;&amp;<sp/>eastl::is_copy_assignable_v&lt;T&gt;)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacedetail_1a231d47577d52a343f01144962a54e51c" kindref="member">fill_mdarray_from_initializer</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>initializer);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a9b8f95acd9802024e3bd8fbd03338eba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a9b8f95acd9802024e3bd8fbd03338eba" kindref="member">MdArray</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1ad02a797d0b7cc4d82152639b91c24025" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1ad02a797d0b7cc4d82152639b91c24025" kindref="member">MdArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray" kindref="compound">MdArray</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a327ba721382cd237d467fb2b2d4e71d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a327ba721382cd237d467fb2b2d4e71d9" kindref="member">MdArray</ref>(<ref refid="structdetail_1_1MdArray" kindref="compound">MdArray</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a2389c4b9b6cd7f05203e21e43e5bec18" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray" kindref="compound">MdArray</ref><sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a2389c4b9b6cd7f05203e21e43e5bec18" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray" kindref="compound">MdArray</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1adf5c1b6c8ebf54222fdf94b8141c487d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray" kindref="compound">MdArray</ref><sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1adf5c1b6c8ebf54222fdf94b8141c487d" kindref="member">operator=</ref>(<ref refid="structdetail_1_1MdArray" kindref="compound">MdArray</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a3d160c2604e949e8c13aa3ab89710ec2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a3d160c2604e949e8c13aa3ab89710ec2" kindref="member">operator[]</ref>(uint32_t<sp/>idx)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseType::operator[](idx);<sp/>}</highlight></codeline>
<codeline lineno="175" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a9165c2edb0f51d2522938a992344356b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a9165c2edb0f51d2522938a992344356b" kindref="member">operator[]</ref>(uint32_t<sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseType::operator[](idx);<sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1ae48e2c4c1d1dc06592120bed60639594" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1ae48e2c4c1d1dc06592120bed60639594" kindref="member">operator[]</ref>(<ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/>idxs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1ae48e2c4c1d1dc06592120bed60639594" kindref="member">operator[]</ref>(DIMS.toFlatIndex(idxs));<sp/>}</highlight></codeline>
<codeline lineno="178" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a84d3a0ad71c3aee2b6ec261ea1d057f2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a84d3a0ad71c3aee2b6ec261ea1d057f2" kindref="member">operator[]</ref>(<ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/>idxs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a84d3a0ad71c3aee2b6ec261ea1d057f2" kindref="member">operator[]</ref>(DIMS.toFlatIndex(idxs));<sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a1166f5098adab98b06b622ebff39cb6e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a1166f5098adab98b06b622ebff39cb6e" kindref="member">at</ref>(uint32_t<sp/>idx)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseType::at(idx);<sp/>}</highlight></codeline>
<codeline lineno="181" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1aab365d5426a38df2e91e5e009117862f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1aab365d5426a38df2e91e5e009117862f" kindref="member">at</ref>(uint32_t<sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseType::at(idx);<sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a1dde76580e02365fcf06d86c82eef9e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a1dde76580e02365fcf06d86c82eef9e9" kindref="member">at</ref>(<ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/>idxs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a1dde76580e02365fcf06d86c82eef9e9" kindref="member">at</ref>(DIMS.toFlatIndex(idxs));<sp/>}</highlight></codeline>
<codeline lineno="184" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1ad9331d34883605042fa049d31fad213d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1ad9331d34883605042fa049d31fad213d" kindref="member">at</ref>(<ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/>idxs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1ad9331d34883605042fa049d31fad213d" kindref="member">at</ref>(DIMS.toFlatIndex(idxs));<sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>one-dimensional<sp/>case,<sp/>these<sp/>are<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a90aa5d821ecc2154c10a945a15e63a78" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>dag::Span&lt;T&gt;<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a90aa5d821ecc2154c10a945a15e63a78" kindref="member">rowView</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_span(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="188" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a5ec4086ba8b88c82dd38486e22b6faca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>dag::ConstSpan&lt;T&gt;<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a5ec4086ba8b88c82dd38486e22b6faca" kindref="member">rowView</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_span_const(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="189" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1ad70ad90eb1f4cffdf0b4859528bc7af4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>dag::Span&lt;T&gt;<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1ad70ad90eb1f4cffdf0b4859528bc7af4" kindref="member">flatView</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_span(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="190" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a237c6c84cdb4602e06a983bddb960195" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>dag::ConstSpan&lt;T&gt;<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a237c6c84cdb4602e06a983bddb960195" kindref="member">flatView</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_span_const(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal">};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>Rank,<sp/>MdArrayDimensions&lt;Rank&gt;<sp/>Dims&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(Rank<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray" kindref="compound">MdArray&lt;T, Rank, Dims&gt;</ref><sp/>:<sp/>carray&lt;<ref refid="structdetail_1_1MdArray" kindref="compound">MdArray</ref>&lt;T,<sp/>Rank<sp/>-<sp/>1,<sp/>Dims.tail()&gt;,<sp/>Dims.head()&gt;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a78a6fc472ff4bd924e30dbaf83c659c2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a094c585a10a6b3c261e8aad47d1ec419" kindref="member">BaseType</ref><sp/>=<sp/>carray&lt;<ref refid="structdetail_1_1MdArray" kindref="compound">MdArray</ref>&lt;T,<sp/>Rank<sp/>-<sp/>1,<sp/>Dims.tail()&gt;,<sp/>Dims.head()&gt;;</highlight></codeline>
<codeline lineno="198" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1ad3b0a56356efe0b67e6bcfee23c13201" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a326ebfdc734f00ce02985feff93b7592" kindref="member">SubElementType</ref><sp/>=<sp/><ref refid="structdetail_1_1MdArray" kindref="compound">MdArray</ref>&lt;T,<sp/>Rank<sp/>-<sp/>1,<sp/>Dims.tail()&gt;;</highlight></codeline>
<codeline lineno="199" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a359d87af972633d78e9ef67ecbdfbb90" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a359d87af972633d78e9ef67ecbdfbb90" kindref="member">ElementType</ref><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="200" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a88629c250e12d9c4da8b27aee11b5dea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4" kindref="compound">DimsType</ref><sp/>=<sp/><ref refid="structdetail_1_1MdArrayDimensions" kindref="compound">MdArrayDimensions&lt;Rank&gt;</ref>;</highlight></codeline>
<codeline lineno="201" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1af567aa3ded8853eefc66fd8b5d5673e7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/>=<sp/><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">DimsType::IndexType</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayDimensions" kindref="compound">MdArrayDimensions</ref><sp/>DIMS<sp/>=<sp/>Dims;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>SIZE<sp/>=<sp/>DIMS.totalSize();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>RANK<sp/>=<sp/>Rank;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1aca56e3a2a8cfd4a3dac4b51b6e025fd1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1aca56e3a2a8cfd4a3dac4b51b6e025fd1" kindref="member">MdArray</ref>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1GetMdInitializerList" kindref="compound">GetMdInitializerList&lt;T, RANK&gt;::type</ref><sp/>initializer)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(eastl::is_default_constructible_v&lt;T&gt;<sp/>&amp;&amp;<sp/>eastl::is_copy_assignable_v&lt;T&gt;)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacedetail_1a231d47577d52a343f01144962a54e51c" kindref="member">fill_mdarray_from_initializer</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>initializer);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a58b5e5705c3c2993628828caeb4e741c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a58b5e5705c3c2993628828caeb4e741c" kindref="member">MdArray</ref>(std::initializer_list&lt;T&gt;<sp/>initializer)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(eastl::is_default_constructible_v&lt;T&gt;<sp/>&amp;&amp;<sp/>eastl::is_copy_assignable_v&lt;T&gt;)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacedetail_1a231d47577d52a343f01144962a54e51c" kindref="member">fill_mdarray_from_initializer</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>initializer);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a9b8f95acd9802024e3bd8fbd03338eba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a9b8f95acd9802024e3bd8fbd03338eba" kindref="member">MdArray</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1ad02a797d0b7cc4d82152639b91c24025" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1ad02a797d0b7cc4d82152639b91c24025" kindref="member">MdArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray" kindref="compound">MdArray</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a327ba721382cd237d467fb2b2d4e71d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a327ba721382cd237d467fb2b2d4e71d9" kindref="member">MdArray</ref>(<ref refid="structdetail_1_1MdArray" kindref="compound">MdArray</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a2389c4b9b6cd7f05203e21e43e5bec18" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray" kindref="compound">MdArray</ref><sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a2389c4b9b6cd7f05203e21e43e5bec18" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray" kindref="compound">MdArray</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1adf5c1b6c8ebf54222fdf94b8141c487d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray" kindref="compound">MdArray</ref><sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1adf5c1b6c8ebf54222fdf94b8141c487d" kindref="member">operator=</ref>(<ref refid="structdetail_1_1MdArray" kindref="compound">MdArray</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@NOTE:<sp/>unavailable<sp/>until<sp/>C++23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>template<sp/>&lt;class...<sp/>Ids&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>requires(are_mdarray_indices&lt;RANK,<sp/>Ids...&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>constexpr<sp/>T<sp/>&amp;operator[](Ids...<sp/>ids)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>return<sp/>operator[](ids_from_varargs&lt;DIMS&gt;(ids...));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>template<sp/>&lt;class...<sp/>Ids&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>requires(are_mdarray_indices&lt;RANK,<sp/>Ids...&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>constexpr<sp/>const<sp/>T<sp/>&amp;operator[](Ids...<sp/>ids)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>return<sp/>operator[](ids_from_varargs&lt;DIMS&gt;(ids...));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a1a3c6dbbb3462017028be6357714cd4b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a326ebfdc734f00ce02985feff93b7592" kindref="member">SubElementType</ref><sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a1a3c6dbbb3462017028be6357714cd4b" kindref="member">operator[]</ref>(uint32_t<sp/>idx)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseType::operator[](idx);<sp/>}</highlight></codeline>
<codeline lineno="240" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a8608ef2e7694433bb02b9af4c322fb0c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a326ebfdc734f00ce02985feff93b7592" kindref="member">SubElementType</ref><sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a8608ef2e7694433bb02b9af4c322fb0c" kindref="member">operator[]</ref>(uint32_t<sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseType::operator[](idx);<sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1af585dad7580fd42af3e2b0d586a4a0c6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1af585dad7580fd42af3e2b0d586a4a0c6" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/>&amp;idxs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flatView()[DIMS.toFlatIndex(idxs)];<sp/>}</highlight></codeline>
<codeline lineno="243" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a40952191a61a7657370eb921d0d1e611" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a40952191a61a7657370eb921d0d1e611" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/>&amp;idxs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flatView()[DIMS.toFlatIndex(idxs)];<sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a4485809af0a2ccf5920c16a355484d9e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a326ebfdc734f00ce02985feff93b7592" kindref="member">SubElementType</ref><sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a4485809af0a2ccf5920c16a355484d9e" kindref="member">at</ref>(uint32_t<sp/>idx)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseType::at(idx);<sp/>}</highlight></codeline>
<codeline lineno="246" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a7332539ca7c16e87b94544862717d8e5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a326ebfdc734f00ce02985feff93b7592" kindref="member">SubElementType</ref><sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a7332539ca7c16e87b94544862717d8e5" kindref="member">at</ref>(uint32_t<sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseType::at(idx);<sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Ids&gt;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(are_mdarray_indices&lt;RANK,<sp/>Ids...&gt;)</highlight></codeline>
<codeline lineno="250" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a88fe3cc5c6957d4c527c7d0aa9cadecd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a88fe3cc5c6957d4c527c7d0aa9cadecd" kindref="member">at</ref>(Ids...<sp/>ids)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>at(ids_from_varargs&lt;DIMS&gt;(ids...));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Ids&gt;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(are_mdarray_indices&lt;RANK,<sp/>Ids...&gt;)</highlight></codeline>
<codeline lineno="257" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a578e0d0f9e8ea6de22c5b98b5b75d945" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a578e0d0f9e8ea6de22c5b98b5b75d945" kindref="member">at</ref>(Ids...<sp/>ids)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>at(ids_from_varargs&lt;DIMS&gt;(ids...));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1afb4b80bb17ca22242ba3a52c633db7c5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1afb4b80bb17ca22242ba3a52c633db7c5" kindref="member">at</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/>&amp;idxs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flatView().at(DIMS.toFlatIndex(idxs));<sp/>}</highlight></codeline>
<codeline lineno="263" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a27698e50f6db75455ffcf73f7f2fdb74" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a27698e50f6db75455ffcf73f7f2fdb74" kindref="member">at</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/>&amp;idxs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flatView().at(DIMS.toFlatIndex(idxs));<sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a55625b044b5291297122242f4ea98c0d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a55625b044b5291297122242f4ea98c0d" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SIZE;<sp/>}</highlight></codeline>
<codeline lineno="266" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a628189b1fb751ecf27d9f5634321e09b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a628189b1fb751ecf27d9f5634321e09b" kindref="member">capacity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SIZE;<sp/>}</highlight></codeline>
<codeline lineno="267" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a56aea68d4c5261fff2bb2f5ae0b228f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a56aea68d4c5261fff2bb2f5ae0b228f8" kindref="member">rank</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RANK;<sp/>}</highlight></codeline>
<codeline lineno="268" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a62706b9d81a6dc3005fefceaec52721c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayDimensions_3_01Rank_01_4" kindref="compound">DimsType</ref><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a62706b9d81a6dc3005fefceaec52721c" kindref="member">dimensions</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DIMS;<sp/>}</highlight></codeline>
<codeline lineno="269" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a0d61d28482cbb4e39c43b765e8ecf77f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a0d61d28482cbb4e39c43b765e8ecf77f" kindref="member">dimension</ref>(uint32_t<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DIMS[i];<sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a6b136df21e3b8382885d139141e92e91" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a6b136df21e3b8382885d139141e92e91" kindref="member">toFlatIndex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/>&amp;idxs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DIMS.toFlatIndex(idxs);<sp/>}</highlight></codeline>
<codeline lineno="272" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a7a757b86e7a8aa66d4384331b3c835a0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArrayIndex" kindref="compound">IndexType</ref><sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a7a757b86e7a8aa66d4384331b3c835a0" kindref="member">toMdIndex</ref>(uint32_t<sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DIMS.toMdIndex(idx);<sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a0ccb37c9962e3c3d4a92d6bee86de613" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>BaseType::reference<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a0ccb37c9962e3c3d4a92d6bee86de613" kindref="member">front</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a2d759a19ed467b27ede935a169b94497" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>BaseType::const_reference<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a2d759a19ed467b27ede935a169b94497" kindref="member">front</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a4108da3198755ed0bb8379a0f6b4f305" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>BaseType::reference<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a4108da3198755ed0bb8379a0f6b4f305" kindref="member">back</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1aa8e734df23913a6671b02fdfa5110da4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>BaseType::const_reference<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1aa8e734df23913a6671b02fdfa5110da4" kindref="member">back</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>implicit<sp/>iteration:<sp/>use<sp/>rowView<sp/>or<sp/>flatView<sp/>for<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a307129269d1dbc5384edda51ffaa20c3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>BaseType::iterator<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a307129269d1dbc5384edda51ffaa20c3" kindref="member">begin</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1af1ca672dcb2445e89e7bc73b18c23534" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>BaseType::const_iterator<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1af1ca672dcb2445e89e7bc73b18c23534" kindref="member">begin</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a591224f2b43a01cadcac6183cdec21af" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>BaseType::const_iterator<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a591224f2b43a01cadcac6183cdec21af" kindref="member">cbegin</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a45e7321d0e4385b8119d6fe2d3136d0c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>BaseType::iterator<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a45e7321d0e4385b8119d6fe2d3136d0c" kindref="member">end</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a2117914f8c930f91393239029fb857dd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>BaseType::const_iterator<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a2117914f8c930f91393239029fb857dd" kindref="member">end</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a88426ca6e7d0aadecaf96e42d5251eb8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>BaseType::const_iterator<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a88426ca6e7d0aadecaf96e42d5251eb8" kindref="member">cend</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1af3918e71ea82e8b8800067c766124fbc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>dag::Span&lt;SubElementType&gt;<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1af3918e71ea82e8b8800067c766124fbc" kindref="member">rowView</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dag::Span&lt;SubElementType&gt;{BaseType::begin(),<sp/>dimension(0)};<sp/>}</highlight></codeline>
<codeline lineno="288" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a9bcb983d93dd27da78765ed6abe7d465" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>dag::ConstSpan&lt;SubElementType&gt;<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a9bcb983d93dd27da78765ed6abe7d465" kindref="member">rowView</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dag::ConstSpan&lt;SubElementType&gt;{BaseType::begin(),<sp/>dimension(0)};<sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1ad70ad90eb1f4cffdf0b4859528bc7af4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>dag::Span&lt;T&gt;<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1ad70ad90eb1f4cffdf0b4859528bc7af4" kindref="member">flatView</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dag::Span&lt;T&gt;{</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">T<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(BaseType::begin()),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">intptr_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size())};<sp/>}</highlight></codeline>
<codeline lineno="291" refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a237c6c84cdb4602e06a983bddb960195" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>dag::ConstSpan&lt;T&gt;<sp/><ref refid="structdetail_1_1MdArray_3_01T_00_01Rank_00_01Dims_01_4_1a237c6c84cdb4602e06a983bddb960195" kindref="member">flatView</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="292"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dag::ConstSpan&lt;T&gt;{</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">T<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(BaseType::begin()),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">intptr_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size())};</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal">};</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>Rank,<sp/>MdArrayDimensions&lt;Rank&gt;<sp/>Dims&gt;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(Rank<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="299" refid="namespacedetail_1a231d47577d52a343f01144962a54e51c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacedetail_1a231d47577d52a343f01144962a54e51c" kindref="member">fill_mdarray_from_initializer</ref>(<ref refid="structdetail_1_1MdArray" kindref="compound">MdArray&lt;T, Rank, Dims&gt;</ref><sp/>&amp;arr,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1GetMdInitializerList" kindref="compound">GetMdInitializerList&lt;T, Rank&gt;::type</ref><sp/>initializer)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>G_FAST_ASSERT(initializer.size()<sp/>==<sp/>arr.dimension(0));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>initializer.size();<sp/>++i)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacedetail_1a231d47577d52a343f01144962a54e51c" kindref="member">fill_mdarray_from_initializer</ref>(arr[i],<sp/>*(initializer.begin()<sp/>+<sp/>i));</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>Rank,<sp/>MdArrayDimensions&lt;Rank&gt;<sp/>Dims&gt;</highlight></codeline>
<codeline lineno="307" refid="namespacedetail_1a3712a58ae8cb46fab5149a47aacf9dc1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacedetail_1a231d47577d52a343f01144962a54e51c" kindref="member">fill_mdarray_from_initializer</ref>(<ref refid="structdetail_1_1MdArray" kindref="compound">MdArray&lt;T, Rank, Dims&gt;</ref><sp/>&amp;arr,<sp/>std::initializer_list&lt;T&gt;<sp/>initializer)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>G_FAST_ASSERT(initializer.size()<sp/>==<sp/>arr.size());</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>initializer.size();<sp/>++i)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>arr.flatView()[i]<sp/>=<sp/>*(initializer.begin()<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>Rank,<sp/>MdArrayDimensions&lt;Rank&gt;<sp/>Dims,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>Is,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray" kindref="compound">MdArray&lt;T, Rank, Dims&gt;</ref><sp/>mdarray_make_impl(eastl::index_sequence&lt;Is...&gt;,<sp/>F<sp/>&amp;&amp;make)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{((void)Is,<sp/>make())...};</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/>uint32_t...<sp/>Dims&gt;</highlight></codeline>
<codeline lineno="323" refid="mdArray_8h_1a48e4feaea80f719e11e2a32982a2b7f2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1MdArray" kindref="compound">MdArray</ref><sp/>=<sp/><ref refid="structdetail_1_1MdArray" kindref="compound">detail::MdArray</ref>&lt;T,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Dims),<sp/>detail::dims_from_varargs&lt;Dims...&gt;&gt;;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;uint32_t...<sp/>Dims,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F&gt;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(eastl::is_invocable_v&lt;F&gt;)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1MdArray" kindref="compound">MdArray</ref>&lt;eastl::invoke_result_t&lt;F&gt;,<sp/>Dims...&gt;<sp/>mdarray_make(F<sp/>&amp;&amp;make)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::mdarray_make_impl&lt;eastl::invoke_result_t&lt;F&gt;,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Dims),<sp/>detail::dims_from_varargs&lt;Dims...&gt;&gt;(</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>eastl::make_index_sequence&lt;detail::dims_from_varargs&lt;Dims...&gt;.totalSize()&gt;{},<sp/>eastl::forward&lt;F&gt;(make));</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="mdArray.h"/>
  </compounddef>
</doxygen>
