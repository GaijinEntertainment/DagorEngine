<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="cppStcodeAssembly_8h" kind="file" language="C++">
    <compoundname>cppStcodeAssembly.h</compoundname>
    <includes refid="cppStcodeBuilder_8h" local="yes">cppStcodeBuilder.h</includes>
    <includes refid="hash_8h" local="yes">hash.h</includes>
    <includes refid="hlslRegisters_8h" local="yes">hlslRegisters.h</includes>
    <includes local="no">shaders/slotTexturesRange.h</includes>
    <includes local="no">memory/dag_mem.h</includes>
    <includes local="no">shaders/shExprTypes.h</includes>
    <includes local="no">shaders/shFunc.h</includes>
    <includes local="no">shaders/dag_shaderVarType.h</includes>
    <includes local="no">drv/3d/dag_consts.h</includes>
    <includes local="no">EASTL/unique_ptr.h</includes>
    <includes local="no">EASTL/array.h</includes>
    <includes local="no">EASTL/string.h</includes>
    <includes local="no">dag/dag_vector.h</includes>
    <includes local="no">ska_hash_map/flat_hash_map2.hpp</includes>
    <includes local="no">shaders/shader_layout.h</includes>
    <includedby refid="binDumpUtils_8h" local="yes">binDumpUtils.h</includedby>
    <includedby refid="cppStcode_8h" local="yes">cppStcode.h</includedby>
    <includedby refid="cppStcodeAssembly_8cpp" local="yes">cppStcodeAssembly.cpp</includedby>
    <includedby refid="cppStcodeUtils_8h" local="yes">cppStcodeUtils.h</includedby>
    <includedby refid="linkShaders_8h" local="yes">linkShaders.h</includedby>
    <includedby refid="makeShBinDump_8h" local="yes">makeShBinDump.h</includedby>
    <includedby refid="shCompiler_8cpp" local="yes">shCompiler.cpp</includedby>
    <includedby refid="shExpr_8cpp" local="yes">shExpr.cpp</includedby>
    <includedby refid="shExprParser_8cpp" local="yes">shExprParser.cpp</includedby>
    <includedby refid="shTargetContext_8h" local="yes">shTargetContext.h</includedby>
    <includedby refid="shlexterm_8cpp" local="yes">shlexterm.cpp</includedby>
    <includedby refid="shsem_8cpp" local="yes">shsem.cpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>commonUtils.h</label>
        <link refid="commonUtils_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>cppStcodeAssembly.h</label>
        <link refid="cppStcodeAssembly_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cppStcodeBuilder.h</label>
        <link refid="cppStcodeBuilder_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>hlslRegisters.h</label>
        <link refid="hlslRegisters_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>nameMap.h</label>
        <link refid="nameMap_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>shLog.h</label>
        <link refid="shLog_8h"/>
      </node>
      <node id="10">
        <label>shaderSave.h</label>
        <link refid="shaderSave_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>shaderTab.h</label>
        <link refid="shaderTab_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>varMap.h</label>
        <link refid="varMap_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>EASTL/algorithm.h</label>
      </node>
      <node id="26">
        <label>EASTL/array.h</label>
      </node>
      <node id="8">
        <label>EASTL/optional.h</label>
      </node>
      <node id="7">
        <label>EASTL/string.h</label>
      </node>
      <node id="34">
        <label>EASTL/unique_ptr.h</label>
      </node>
      <node id="27">
        <label>cstdint</label>
      </node>
      <node id="21">
        <label>cstring</label>
      </node>
      <node id="17">
        <label>dag/dag_vector.h</label>
      </node>
      <node id="16">
        <label>debug/dag_assert.h</label>
      </node>
      <node id="33">
        <label>drv/3d/dag_consts.h</label>
      </node>
      <node id="24">
        <label>generic/dag_enumerate.h</label>
      </node>
      <node id="25">
        <label>generic/dag_expected.h</label>
      </node>
      <node id="14">
        <label>generic/dag_tab.h</label>
      </node>
      <node id="20">
        <label>hash/BLAKE3/blake3.h</label>
      </node>
      <node id="29">
        <label>memory/dag_mem.h</label>
      </node>
      <node id="32">
        <label>shaders/dag_shaderVarType.h</label>
      </node>
      <node id="30">
        <label>shaders/shExprTypes.h</label>
      </node>
      <node id="31">
        <label>shaders/shFunc.h</label>
      </node>
      <node id="36">
        <label>shaders/shader_layout.h</label>
      </node>
      <node id="28">
        <label>shaders/slotTexturesRange.h</label>
      </node>
      <node id="35">
        <label>ska_hash_map/flat_hash_map2.hpp</label>
      </node>
      <node id="15">
        <label>util/dag_bindump_ext.h</label>
      </node>
      <node id="6">
        <label>util/dag_globDef.h</label>
      </node>
      <node id="13">
        <label>util/dag_oaHashNameMap.h</label>
      </node>
      <node id="5">
        <label>util/dag_safeArg.h</label>
      </node>
      <node id="4">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>binDumpUtils.cpp</label>
        <link refid="binDumpUtils_8cpp"/>
      </node>
      <node id="2">
        <label>binDumpUtils.h</label>
        <link refid="binDumpUtils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>codeBlocks.cpp</label>
        <link refid="codeBlocks_8cpp"/>
      </node>
      <node id="20">
        <label>codeBlocks.h</label>
        <link refid="codeBlocks_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>condParser.cpp</label>
        <link refid="condParser_8cpp"/>
      </node>
      <node id="6">
        <label>cppStcode.cpp</label>
        <link refid="cppStcode_8cpp"/>
      </node>
      <node id="5">
        <label>cppStcode.h</label>
        <link refid="cppStcode_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cppStcodeAssembly.cpp</label>
        <link refid="cppStcodeAssembly_8cpp"/>
      </node>
      <node id="1">
        <label>cppStcodeAssembly.h</label>
        <link refid="cppStcodeAssembly_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>cppStcodePasses.cpp</label>
        <link refid="cppStcodePasses_8cpp"/>
      </node>
      <node id="41">
        <label>cppStcodePasses.h</label>
        <link refid="cppStcodePasses_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>cppStcodeUtils.h</label>
        <link refid="cppStcodeUtils_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>deSerializationContext.cpp</label>
        <link refid="deSerializationContext_8cpp"/>
      </node>
      <node id="29">
        <label>deSerializationContext.h</label>
        <link refid="deSerializationContext_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>globalConfig.cpp</label>
        <link refid="globalConfig_8cpp"/>
      </node>
      <node id="11">
        <label>globalConfig.h</label>
        <link refid="globalConfig_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>hlslRegisters.cpp</label>
        <link refid="hlslRegisters_8cpp"/>
      </node>
      <node id="14">
        <label>hwAssembly.cpp</label>
        <link refid="hwAssembly_8cpp"/>
      </node>
      <node id="15">
        <label>hwSemantic.cpp</label>
        <link refid="hwSemantic_8cpp"/>
      </node>
      <node id="57">
        <label>hwSemantic.h</label>
        <link refid="hwSemantic_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>intervals.cpp</label>
        <link refid="intervals_8cpp"/>
      </node>
      <node id="34">
        <label>linkShaders.cpp</label>
        <link refid="linkShaders_8cpp"/>
      </node>
      <node id="33">
        <label>linkShaders.h</label>
        <link refid="linkShaders_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>loadShaders.cpp</label>
        <link refid="loadShaders_8cpp"/>
      </node>
      <node id="37">
        <label>loadShaders.h</label>
        <link refid="loadShaders_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="4">
        <label>makeShBinDump.cpp</label>
        <link refid="makeShBinDump_8cpp"/>
      </node>
      <node id="60">
        <label>makeShBinDump.h</label>
        <link refid="makeShBinDump_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>namedConst.cpp</label>
        <link refid="namedConst_8cpp"/>
      </node>
      <node id="17">
        <label>namedConst.h</label>
        <link refid="namedConst_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>samplers.cpp</label>
        <link refid="samplers_8cpp"/>
      </node>
      <node id="18">
        <label>shCode.cpp</label>
        <link refid="shCode_8cpp"/>
      </node>
      <node id="56">
        <label>shCompContext.h</label>
        <link refid="shCompContext_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>shCompilationInfo.cpp</label>
        <link refid="shCompilationInfo_8cpp"/>
      </node>
      <node id="10">
        <label>shCompilationInfo.h</label>
        <link refid="shCompilationInfo_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>shCompiler.cpp</label>
        <link refid="shCompiler_8cpp"/>
      </node>
      <node id="50">
        <label>shExpr.cpp</label>
        <link refid="shExpr_8cpp"/>
      </node>
      <node id="24">
        <label>shExprParser.cpp</label>
        <link refid="shExprParser_8cpp"/>
      </node>
      <node id="35">
        <label>shSemCode.cpp</label>
        <link refid="shSemCode_8cpp"/>
      </node>
      <node id="39">
        <label>shShaderContext.h</label>
        <link refid="shShaderContext_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>shTargetContext.h</label>
        <link refid="shTargetContext_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>shTargetStorage.cpp</label>
        <link refid="shTargetStorage_8cpp"/>
      </node>
      <node id="40">
        <label>shVariantContext.h</label>
        <link refid="shVariantContext_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>sh_stat.cpp</label>
        <link refid="sh__stat_8cpp"/>
      </node>
      <node id="55">
        <label>shaderBytecodeCache.cpp</label>
        <link refid="shaderBytecodeCache_8cpp"/>
      </node>
      <node id="32">
        <label>shaderSave.cpp</label>
        <link refid="shaderSave_8cpp"/>
      </node>
      <node id="25">
        <label>shaderSemantic.cpp</label>
        <link refid="shaderSemantic_8cpp"/>
      </node>
      <node id="23">
        <label>shaderSemantic.h</label>
        <link refid="shaderSemantic_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>shaderVariant.cpp</label>
        <link refid="shaderVariant_8cpp"/>
      </node>
      <node id="47">
        <label>shaderVariant.h</label>
        <link refid="shaderVariant_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>shaderVariantSrc.cpp</label>
        <link refid="shaderVariantSrc_8cpp"/>
      </node>
      <node id="49">
        <label>shcode.h</label>
        <link refid="shcode_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>shlexterm.cpp</label>
        <link refid="shlexterm_8cpp"/>
      </node>
      <node id="26">
        <label>shsem.cpp</label>
        <link refid="shsem_8cpp"/>
      </node>
      <node id="52">
        <label>shsem.h</label>
        <link refid="shsem_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>variablesMerger.cpp</label>
        <link refid="variablesMerger_8cpp"/>
      </node>
      <node id="28">
        <label>variantAssembly.cpp</label>
        <link refid="variantAssembly_8cpp"/>
      </node>
      <node id="43">
        <label>variantAssembly.h</label>
        <link refid="variantAssembly_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>variantSemantic.cpp</label>
        <link refid="variantSemantic_8cpp"/>
      </node>
      <node id="45">
        <label>variantSemantic.h</label>
        <link refid="variantSemantic_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structStcodeStrings" prot="public">StcodeStrings</innerclass>
    <innerclass refid="structStcodeAccumulator" prot="public">StcodeAccumulator</innerclass>
    <innerclass refid="structStcodeExpression" prot="public">StcodeExpression</innerclass>
    <innerclass refid="structStcodeRegisters" prot="public">StcodeRegisters</innerclass>
    <innerclass refid="structStcodeRegisters_1_1VarLocation" prot="public">StcodeRegisters::VarLocation</innerclass>
    <innerclass refid="structStcodeStaticVars" prot="public">StcodeStaticVars</innerclass>
    <innerclass refid="structStcodeStaticVars_1_1Var" prot="public">StcodeStaticVars::Var</innerclass>
    <innerclass refid="structStcodeRoutine" prot="public">StcodeRoutine</innerclass>
    <innerclass refid="structDynamicStcodeRoutine" prot="public">DynamicStcodeRoutine</innerclass>
    <innerclass refid="structStaticStcodeRoutine" prot="public">StaticStcodeRoutine</innerclass>
    <innerclass refid="structStcodePass" prot="public">StcodePass</innerclass>
    <innerclass refid="structStcodeGlobalVars" prot="public">StcodeGlobalVars</innerclass>
    <innerclass refid="structStcodeGlobalVars_1_1Strings" prot="public">StcodeGlobalVars::Strings</innerclass>
    <innerclass refid="structStcodeShader" prot="public">StcodeShader</innerclass>
    <innerclass refid="structStcodeShader_1_1RegisterTable" prot="public">StcodeShader::RegisterTable</innerclass>
    <innerclass refid="structStcodeShader_1_1RoutineRemappingTables" prot="public">StcodeShader::RoutineRemappingTables</innerclass>
    <innerclass refid="structStcodeShader_1_1InterfaceStrings" prot="public">StcodeShader::InterfaceStrings</innerclass>
    <innerclass refid="structStcodePassRegInfo" prot="public">StcodePassRegInfo</innerclass>
    <innerclass refid="structStcodeBranchedRoutineDataTable" prot="public">StcodeBranchedRoutineDataTable</innerclass>
    <innernamespace refid="namespacesemantic">semantic</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="cppStcodeAssembly_8h_1ae3c630fb38a98930f6217a99d6e16e4c" prot="public" static="no">
        <type>ska::flat_hash_map&lt; <ref refid="structSemanticShaderPass" kindref="compound">SemanticShaderPass</ref> *, <ref refid="structStcodePassRegInfo" kindref="compound">StcodePassRegInfo</ref> &gt;</type>
        <definition>using StcodePassRegInfoTable =  ska::flat_hash_map&lt;SemanticShaderPass *, StcodePassRegInfo&gt;</definition>
        <argsstring></argsstring>
        <name>StcodePassRegInfoTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cppStcodeAssembly.h" line="436" column="1" bodyfile="cppStcodeAssembly.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cppStcodeAssembly_8h_1a49e0fce26520163288afcb011cad522e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cppStcodeAssembly_8h_1ae3c630fb38a98930f6217a99d6e16e4c" kindref="member">StcodePassRegInfoTable</ref></type>
        <definition>StcodePassRegInfoTable build_pass_stcode_reg_table</definition>
        <argsstring>(const ShaderSemCode &amp;semcode)</argsstring>
        <name>build_pass_stcode_reg_table</name>
        <param>
          <type>const <ref refid="classShaderSemCode" kindref="compound">ShaderSemCode</ref> &amp;</type>
          <declname>semcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cppStcodeAssembly.h" line="438" column="24" bodyfile="cppStcodeAssembly.cpp" bodystart="968" bodyend="1027" declfile="cppStcodeAssembly.h" declline="438" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="cppStcodeAssembly_8h_1a220e59c8493edc513dca5d1fd94d5a28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structStcodeBranchedRoutineDataTable" kindref="compound">StcodeBranchedRoutineDataTable</ref></type>
        <definition>StcodeBranchedRoutineDataTable build_pass_reg_tables_for_branched_dynstcode</definition>
        <argsstring>(const StcodePassRegInfoTable &amp;passRegsTable, DynamicStcodeRoutine &amp;branched_routine)</argsstring>
        <name>build_pass_reg_tables_for_branched_dynstcode</name>
        <param>
          <type>const <ref refid="cppStcodeAssembly_8h_1ae3c630fb38a98930f6217a99d6e16e4c" kindref="member">StcodePassRegInfoTable</ref> &amp;</type>
          <declname>passRegsTable</declname>
        </param>
        <param>
          <type><ref refid="structDynamicStcodeRoutine" kindref="compound">DynamicStcodeRoutine</ref> &amp;</type>
          <declname>branched_routine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cppStcodeAssembly.h" line="447" column="32" bodyfile="cppStcodeAssembly.cpp" bodystart="1041" bodyend="1093" declfile="cppStcodeAssembly.h" declline="447" declcolumn="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cppStcodeBuilder_8h" kindref="compound">cppStcodeBuilder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hash_8h" kindref="compound">hash.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hlslRegisters_8h" kindref="compound">hlslRegisters.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;shaders/slotTexturesRange.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory/dag_mem.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;shaders/shExprTypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;shaders/shFunc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;shaders/dag_shaderVarType.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drv/3d/dag_consts.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/unique_ptr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/array.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dag/dag_vector.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ska_hash_map/flat_hash_map2.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;shaders/shader_layout.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classShaderSemCode" kindref="compound">ShaderSemCode</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="structSemanticShaderPass" kindref="compound">SemanticShaderPass</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="namespacesemantic" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesemantic" kindref="compound">semantic</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespacesemantic_1a1fd7ba909c618ad56fbacae8b3226182" kindref="member">VariableType</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structStcodeStrings" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStcodeStrings" kindref="compound">StcodeStrings</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30" refid="structStcodeStrings_1a568292a13c82e8eb55f47d98e963d243" refkind="member"><highlight class="normal"><sp/><sp/>eastl::string<sp/><ref refid="structStcodeStrings_1a568292a13c82e8eb55f47d98e963d243" kindref="member">cppCode</ref>,<sp/><ref refid="structStcodeStrings_1a8465a0a4e47b4376dec531255c5249a7" kindref="member">headerCode</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structStcodeAccumulator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStcodeAccumulator" kindref="compound">StcodeAccumulator</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35" refid="structStcodeAccumulator_1af8209ee1604fffe5d39ca1835b6090fd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classStcodeBuilder" kindref="compound">StcodeBuilder</ref><sp/><ref refid="structStcodeAccumulator_1af8209ee1604fffe5d39ca1835b6090fd" kindref="member">cppStrings</ref>,<sp/><ref refid="structStcodeAccumulator_1a7c85824e9998e44e7deb09988df542d4" kindref="member">headerStrings</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structStcodeAccumulator_1a15142f09cb4b72f9b75b38c317e81870" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structStcodeStrings" kindref="compound">StcodeStrings</ref><sp/><ref refid="structStcodeAccumulator_1a15142f09cb4b72f9b75b38c317e81870" kindref="member">release</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structStcodeStrings" kindref="compound">StcodeStrings</ref>{<ref refid="structStcodeAccumulator_1af8209ee1604fffe5d39ca1835b6090fd" kindref="member">cppStrings</ref>.<ref refid="classStcodeBuilder_1af800507e36690d738a1633c2d922df74" kindref="member">release</ref>(),<sp/><ref refid="structStcodeAccumulator_1a7c85824e9998e44e7deb09988df542d4" kindref="member">headerStrings</ref>.<ref refid="classStcodeBuilder_1af800507e36690d738a1633c2d922df74" kindref="member">release</ref>()};<sp/>}</highlight></codeline>
<codeline lineno="38" refid="structStcodeAccumulator_1af790c95159521ebe8438be93ee8e8640" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeAccumulator_1af790c95159521ebe8438be93ee8e8640" kindref="member">merge</ref>(<ref refid="structStcodeAccumulator" kindref="compound">StcodeAccumulator</ref><sp/>&amp;&amp;other)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeAccumulator_1af8209ee1604fffe5d39ca1835b6090fd" kindref="member">cppStrings</ref>.<ref refid="classStcodeBuilder_1a6acb740daccdc2ead0421eb40d33d038" kindref="member">merge</ref>(eastl::move(other.cppStrings));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeAccumulator_1a7c85824e9998e44e7deb09988df542d4" kindref="member">headerStrings</ref>.<ref refid="classStcodeBuilder_1a6acb740daccdc2ead0421eb40d33d038" kindref="member">merge</ref>(eastl::move(other.headerStrings));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="structStcodeExpression" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStcodeExpression" kindref="compound">StcodeExpression</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47" refid="structStcodeExpression_1a0a933497c253764e2ba3260b2b8dc320" refkind="member"><highlight class="normal"><sp/><sp/>eastl::string<sp/><ref refid="structStcodeExpression_1a0a933497c253764e2ba3260b2b8dc320" kindref="member">content</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structStcodeExpression_1a79279ff102576c512783b8af33d787b0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structStcodeExpression_1a79279ff102576c512783b8af33d787b0" kindref="member">EXPR_ELEMENT_PLACEHOLDER</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50" refid="structStcodeExpression_1aa7457777ae06838c04d70ce7c0095fb3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structStcodeExpression_1aa7457777ae06838c04d70ce7c0095fb3" kindref="member">EXPR_UNARY_OP_PLACEHOLDER</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structStcodeExpression_1a66415b17d801d69b4653cefaa52a69f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structStcodeExpression_1a66415b17d801d69b4653cefaa52a69f8" kindref="member">DEFAULT_TEMPLATE</ref>[]<sp/>=<sp/>{<ref refid="structStcodeExpression_1a79279ff102576c512783b8af33d787b0" kindref="member">EXPR_ELEMENT_PLACEHOLDER</ref>,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@NOTE:<sp/>use<sp/>placeholder<sp/>constants<sp/>instead<sp/>of<sp/>literal<sp/>?<sp/>and<sp/>#<sp/>in<sp/>the<sp/>template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="structStcodeExpression_1adc48bcffa78311bd660081bf6704b442" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structStcodeExpression_1adc48bcffa78311bd660081bf6704b442" kindref="member">StcodeExpression</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*template_content<sp/>=<sp/><ref refid="structStcodeExpression_1a66415b17d801d69b4653cefaa52a69f8" kindref="member">DEFAULT_TEMPLATE</ref>)<sp/>:<sp/><ref refid="structStcodeExpression_1a0a933497c253764e2ba3260b2b8dc320" kindref="member">content</ref>(template_content)<sp/>{}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structStcodeExpression_1aaccadc8df002bf4a50f3700badd92c59" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="structStcodeExpression_1aaccadc8df002bf4a50f3700badd92c59" kindref="member">ElementType</ref></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeExpression_1aaccadc8df002bf4a50f3700badd92c59ab7230d8c2a8a24512f1433490edc73fd" kindref="member">COMPLEX_SINGLE_OP</ref>,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeExpression_1aaccadc8df002bf4a50f3700badd92c59ad692dff7ebc54a9feb3145854afc4b2e" kindref="member">COMPLEX_MULTIPLE_OPS</ref>,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeExpression_1aaccadc8df002bf4a50f3700badd92c59ab25f998178cd8c758b196d11f2684c86" kindref="member">COLORVAL</ref>,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeExpression_1aaccadc8df002bf4a50f3700badd92c59a3e76310ec68ca96f5a593b5ca640b304" kindref="member">GLOBVAR</ref>,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeExpression_1aaccadc8df002bf4a50f3700badd92c59a39c2c52380c55eebeef3660ad99c19e8" kindref="member">LOCVAR</ref>,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeExpression_1aaccadc8df002bf4a50f3700badd92c59a4bedf2a9395e6be97ed06ff72a388859" kindref="member">SHVAR</ref>,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeExpression_1aaccadc8df002bf4a50f3700badd92c59afd3c4b3f69f8d37b82044b0c07d7f4dd" kindref="member">REAL_CONST</ref>,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeExpression_1aaccadc8df002bf4a50f3700badd92c59a4c6783e0d3b3d7c183a6b0eca466f0ab" kindref="member">INT_CONST</ref>,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeExpression_1aaccadc8df002bf4a50f3700badd92c59ac94814fe3bae87cddef85c5e9ae4b63c" kindref="member">COLOR_CONST</ref>,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeExpression_1aaccadc8df002bf4a50f3700badd92c59a39b30de9c4f3bd4b6594d3a83be14928" kindref="member">SINGLE_CHANNEL_MASK</ref>,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeExpression_1aaccadc8df002bf4a50f3700badd92c59affa369d68551d973da92416b3b9159a9" kindref="member">MULTIPLE_CHANNEL_MASK</ref>,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeExpression_1aaccadc8df002bf4a50f3700badd92c59a1e49c8ad07b69571bfcafaf18ac9fa5b" kindref="member">FUNC</ref>,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeExpression_1a8b51ba11b686a94c48b82ece54692900" kindref="member">specifyNextExprElement</ref>(<ref refid="structStcodeExpression_1aaccadc8df002bf4a50f3700badd92c59" kindref="member">ElementType</ref><sp/>elem_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg1<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg2<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg3<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg4<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeExpression_1af33ad75172183c87461bdade64cbdaf2" kindref="member">specifyNextExprUnaryOp</ref>(shexpr::UnaryOperator<sp/>op);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>eastl::string<sp/><ref refid="structStcodeExpression_1a37c7fd3237bc1d47dde0b62b9daf1486" kindref="member">releaseAssembledCode</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>eastl::string<sp/><ref refid="structStcodeExpression_1a3e9c68af48104649b72114b1b8dd4e6c" kindref="member">getFunctionCallTemplate</ref>(functional::FunctionId<sp/>func_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg_cnt);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="structStcodeRegisters" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStcodeRegisters" kindref="compound">StcodeRegisters</ref></highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84" refid="structStcodeRegisters_1_1VarLocation" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStcodeRegisters_1_1VarLocation" kindref="compound">VarLocation</ref></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="86" refid="structStcodeRegisters_1_1VarLocation_1ac62e3e3348c247634e307b6ddf460b21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>eastl::string<sp/><ref refid="structStcodeRegisters_1_1VarLocation_1ac62e3e3348c247634e307b6ddf460b21" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="87" refid="structStcodeRegisters_1_1VarLocation_1aaf53448aeb1d78eb5fafff88e691d00b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structStcodeRegisters_1_1VarLocation_1aaf53448aeb1d78eb5fafff88e691d00b" kindref="member">reg</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="structStcodeRegisters_1_1VarLocation_1a88a05453e12fcb5c774f03d5e98387af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structStcodeRegisters_1_1VarLocation_1a88a05453e12fcb5c774f03d5e98387af" kindref="member">isNumeric</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90" refid="structStcodeRegisters_1_1VarLocation_1a1288ab9c7aaddedf1dc2e902e181b763" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structStcodeRegisters_1_1VarLocation_1a1288ab9c7aaddedf1dc2e902e181b763" kindref="member">regSize</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="92" refid="structStcodeRegisters_1ad8e02d5f66c905e50347f095de4d32fa" refkind="member"><highlight class="normal"><sp/><sp/>dag::Vector&lt;VarLocation&gt;<sp/><ref refid="structStcodeRegisters_1ad8e02d5f66c905e50347f095de4d32fa" kindref="member">content</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="structStcodeRegisters_1a9f00c01ee0f139bad8b2f7a0c550f6a7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeRegisters_1a9f00c01ee0f139bad8b2f7a0c550f6a7" kindref="member">add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_numeric<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reg_size<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRegisters_1ad8e02d5f66c905e50347f095de4d32fa" kindref="member">content</ref>.push_back(<ref refid="structStcodeRegisters_1_1VarLocation" kindref="compound">VarLocation</ref>{eastl::string(name),<sp/>reg,<sp/>is_numeric,<sp/>reg_size});</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="structStcodeRegisters_1acec71aa1ce407a2b893bd2adb471cad6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeRegisters_1acec71aa1ce407a2b893bd2adb471cad6" kindref="member">clear</ref>()<sp/>{<sp/><ref refid="structStcodeRegisters_1ad8e02d5f66c905e50347f095de4d32fa" kindref="member">content</ref>.clear();<sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="structStcodeRegisters_1a9ad6a226e5110b48b0b25b6d8336f67a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeRegisters_1a9ad6a226e5110b48b0b25b6d8336f67a" kindref="member">merge</ref>(<ref refid="structStcodeRegisters" kindref="compound">StcodeRegisters</ref><sp/>&amp;&amp;other)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRegisters_1ad8e02d5f66c905e50347f095de4d32fa" kindref="member">content</ref>.insert(<ref refid="structStcodeRegisters_1ad8e02d5f66c905e50347f095de4d32fa" kindref="member">content</ref>.end(),<sp/>eastl::make_move_iterator(other.content.begin()),<sp/>eastl::make_move_iterator(other.content.end()));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="structStcodeStaticVars" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStcodeStaticVars" kindref="compound">StcodeStaticVars</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109" refid="structStcodeStaticVars_1_1Var" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStcodeStaticVars_1_1Var" kindref="compound">Var</ref></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="111" refid="structStcodeStaticVars_1_1Var_1a63f969a965d3b6fee7eae0855d41908b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>eastl::string<sp/><ref refid="structStcodeStaticVars_1_1Var_1a63f969a965d3b6fee7eae0855d41908b" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="112" refid="structStcodeStaticVars_1_1Var_1ac5d7d3151c762d75b53074103692cd98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structStcodeStaticVars_1_1Var_1ac5d7d3151c762d75b53074103692cd98" kindref="member">initId</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="113" refid="structStcodeStaticVars_1_1Var_1a6c7b192f37123239b46d59f118033318" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structStcodeStaticVars_1_1Var_1a6c7b192f37123239b46d59f118033318" kindref="member">patchedId</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="structStcodeStaticVars_1_1Var_1aa3c520a0fc14920449ef13b1da3376e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structStcodeStaticVars_1_1Var_1aa3c520a0fc14920449ef13b1da3376e2" kindref="member">getId</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structStcodeStaticVars_1_1Var_1a6c7b192f37123239b46d59f118033318" kindref="member">patchedId</ref><sp/>==<sp/>-1<sp/>?<sp/><ref refid="structStcodeStaticVars_1_1Var_1ac5d7d3151c762d75b53074103692cd98" kindref="member">initId</ref><sp/>:<sp/><ref refid="structStcodeStaticVars_1_1Var_1a6c7b192f37123239b46d59f118033318" kindref="member">patchedId</ref>;<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="117" refid="structStcodeStaticVars_1ae18fb0ae1bad4b760082055be2eb33e9" refkind="member"><highlight class="normal"><sp/><sp/>dag::Vector&lt;Var&gt;<sp/><ref refid="structStcodeStaticVars_1ae18fb0ae1bad4b760082055be2eb33e9" kindref="member">content</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="structStcodeStaticVars_1a308290d19e9ced6925e09b2eb1fc2525" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeStaticVars_1a308290d19e9ced6925e09b2eb1fc2525" kindref="member">add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="structStcodeStaticVars_1ae18fb0ae1bad4b760082055be2eb33e9" kindref="member">content</ref>.push_back(<ref refid="structStcodeStaticVars_1_1Var" kindref="compound">Var</ref>{eastl::string(name),<sp/>id,<sp/>-1});<sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="structStcodeStaticVars_1a466f2bf0bb5779dfa8aea2a7dc8235f0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeStaticVars_1a466f2bf0bb5779dfa8aea2a7dc8235f0" kindref="member">patch</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>old_reg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_reg)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="structStcodeStaticVars_1_1Var" kindref="compound">Var</ref><sp/>&amp;loc<sp/>:<sp/><ref refid="structStcodeStaticVars_1ae18fb0ae1bad4b760082055be2eb33e9" kindref="member">content</ref>)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@NOTE:<sp/>all<sp/>regs<sp/>with<sp/>same<sp/>old<sp/>reg<sp/>get<sp/>patched<sp/>(so,<sp/>tex-smp<sp/>pair<sp/>get<sp/>patched<sp/>together)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loc.patchedId<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>loc.initId<sp/>==<sp/>old_reg)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loc.patchedId<sp/>=<sp/>new_reg;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal">};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="structStcodeRoutine" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStcodeRoutine" kindref="compound">StcodeRoutine</ref></highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134" refid="structStcodeRoutine_1a52f41230f067f3067000adef9bfb5eb9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1a52f41230f067f3067000adef9bfb5eb9" kindref="member">ResourceType</ref></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a52f41230f067f3067000adef9bfb5eb9a696b031073e74bf2cb98e5ef201d4aa3" kindref="member">UNKNOWN</ref>,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a52f41230f067f3067000adef9bfb5eb9a3f92f542bd9ec48f912b9350e22736ac" kindref="member">TEXTURE</ref>,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a52f41230f067f3067000adef9bfb5eb9aaa4fc1f642950410dd11d691fe974cca" kindref="member">SAMPLER</ref>,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a52f41230f067f3067000adef9bfb5eb9a17de626bcae5109bb2f7a66dfc4a8a1d" kindref="member">BUFFER</ref>,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a52f41230f067f3067000adef9bfb5eb9ab1cd3c72eeddd2a54d21c01e505b2685" kindref="member">CONST_BUFFER</ref>,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a52f41230f067f3067000adef9bfb5eb9a76f4c6aede139c265f747d185346ddc2" kindref="member">TLAS</ref>,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a52f41230f067f3067000adef9bfb5eb9a9c4288764cb73a83f46c7f4b70f7f0da" kindref="member">RWTEX</ref>,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a52f41230f067f3067000adef9bfb5eb9a7c1c2306b9742b4ad50eadaaa754916b" kindref="member">RWBUF</ref>,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="145" refid="structStcodeRoutine_1a8ea93f019765304f450c1924cb84c52c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1a8ea93f019765304f450c1924cb84c52c" kindref="member">GlobMatrixType</ref></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a8ea93f019765304f450c1924cb84c52ca04af3789c41e31cd71c10e1e4dbbec57" kindref="member">GLOB</ref>,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a8ea93f019765304f450c1924cb84c52cadd7512f5e0289cddce66b0f8bca0c280" kindref="member">PROJ</ref>,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a8ea93f019765304f450c1924cb84c52ca05159953951324f5cf786f86bdd340bd" kindref="member">VIEWPROJ</ref></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="151" refid="structStcodeRoutine_1a2e19d59b2785fa42c7084cd2e0fa45f3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1a2e19d59b2785fa42c7084cd2e0fa45f3" kindref="member">GlobVecType</ref></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a2e19d59b2785fa42c7084cd2e0fa45f3a5289492cf082446ca4a6eec9f72f1ec3" kindref="member">WORLD</ref>,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a2e19d59b2785fa42c7084cd2e0fa45f3a5824b315fdbb0f42abfe1bb03f78c270" kindref="member">VIEW</ref></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="structStcodeRoutine_1a79b3a88d088ad5748c5c11f132486697" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classStcodeBuilder" kindref="compound">StcodeBuilder</ref><sp/><ref refid="structStcodeRoutine_1a79b3a88d088ad5748c5c11f132486697" kindref="member">code</ref>;</highlight></codeline>
<codeline lineno="158" refid="structStcodeRoutine_1a65f07be4ac6541c4d3457d3bbe1c6774" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classStcodeBuilder" kindref="compound">StcodeBuilder</ref><sp/><ref refid="structStcodeRoutine_1a65f07be4ac6541c4d3457d3bbe1c6774" kindref="member">decls</ref>;</highlight></codeline>
<codeline lineno="159" refid="structStcodeRoutine_1aa63b75770f06597f8f0f1a04c369dbe8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structStcodeRegisters" kindref="compound">StcodeRegisters</ref><sp/><ref refid="structStcodeRoutine_1ac1b6d1d4a8f437337beb0c9973c35edf" kindref="member">vertexRegs</ref>,<sp/><ref refid="structStcodeRoutine_1aa63b75770f06597f8f0f1a04c369dbe8" kindref="member">pixelOrComputeRegs</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="structStcodeRoutine_1a90bea292e40f565eee2602e7bcb781ff" refkind="member"><highlight class="normal"><sp/><sp/>eastl::unique_ptr&lt;shader_layout::StcodeConstValidationMask&gt;<sp/><ref refid="structStcodeRoutine_1a90bea292e40f565eee2602e7bcb781ff" kindref="member">constMask</ref>{};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="structStcodeRoutine_1abd9817c49e5ecd7b181ca5abd200f2fc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1abd9817c49e5ecd7b181ca5abd200f2fc" kindref="member">nonContributingStatementsCnt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="164" refid="structStcodeRoutine_1af0a0fa1835a8049cce67a6139364c86c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1af0a0fa1835a8049cce67a6139364c86c" kindref="member">blockDepth</ref><sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Base<sp/>function<sp/>indentation<sp/>is<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="structStcodeRoutine_1afb8bf37166f1a27a35a670a0809a1433" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1afb8bf37166f1a27a35a670a0809a1433" kindref="member">hasCodeUnderConditions</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="structStcodeRoutine_1a78fee5f71241249cca34143bb078c8d8" kindref="member">StcodeRoutine</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="structStcodeRoutine_1a2c1c3bfdf0613f72ee5a89397e3b6e7f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structStcodeRoutine_1a2c1c3bfdf0613f72ee5a89397e3b6e7f" kindref="member">StcodeRoutine</ref>(<ref refid="structStcodeRoutine" kindref="compound">StcodeRoutine</ref><sp/>&amp;&amp;other)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171" refid="structStcodeRoutine_1a7460d1f9d1d2a0a7e354d6a23f0d09a2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structStcodeRoutine" kindref="compound">StcodeRoutine</ref><sp/>&amp;<ref refid="structStcodeRoutine_1a7460d1f9d1d2a0a7e354d6a23f0d09a2" kindref="member">operator=</ref>(<ref refid="structStcodeRoutine" kindref="compound">StcodeRoutine</ref><sp/>&amp;&amp;other)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-copyable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="structStcodeRoutine_1ab08b6710dc48afd0c6e64dff4de809d7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structStcodeRoutine_1ab08b6710dc48afd0c6e64dff4de809d7" kindref="member">StcodeRoutine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine" kindref="compound">StcodeRoutine</ref><sp/>&amp;other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175" refid="structStcodeRoutine_1a0cca6b6375f436074eae2d347140cc7a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structStcodeRoutine" kindref="compound">StcodeRoutine</ref><sp/>&amp;<ref refid="structStcodeRoutine_1a0cca6b6375f436074eae2d347140cc7a" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine" kindref="compound">StcodeRoutine</ref><sp/>&amp;other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="structStcodeRoutine_1a369ed87d71228864072aa892c4054a70" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1a369ed87d71228864072aa892c4054a70" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a79b3a88d088ad5748c5c11f132486697" kindref="member">code</ref>.<ref refid="classStcodeBuilder_1ad93f999de78031af3a8c05b3bc4929a5" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a65f07be4ac6541c4d3457d3bbe1c6774" kindref="member">decls</ref>.<ref refid="classStcodeBuilder_1ad93f999de78031af3a8c05b3bc4929a5" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1ac1b6d1d4a8f437337beb0c9973c35edf" kindref="member">vertexRegs</ref>.<ref refid="structStcodeRegisters_1acec71aa1ce407a2b893bd2adb471cad6" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1aa63b75770f06597f8f0f1a04c369dbe8" kindref="member">pixelOrComputeRegs</ref>.<ref refid="structStcodeRegisters_1acec71aa1ce407a2b893bd2adb471cad6" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a90bea292e40f565eee2602e7bcb781ff" kindref="member">constMask</ref>.reset();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="structStcodeRoutine_1a5830b77faa2e85d087f330c51c9d6f94" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1a5830b77faa2e85d087f330c51c9d6f94" kindref="member">merge</ref>(<ref refid="structStcodeRoutine" kindref="compound">StcodeRoutine</ref><sp/>&amp;&amp;other)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a79b3a88d088ad5748c5c11f132486697" kindref="member">code</ref>.<ref refid="classStcodeBuilder_1a6acb740daccdc2ead0421eb40d33d038" kindref="member">merge</ref>(eastl::move(other.code));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a65f07be4ac6541c4d3457d3bbe1c6774" kindref="member">decls</ref>.<ref refid="classStcodeBuilder_1a6acb740daccdc2ead0421eb40d33d038" kindref="member">merge</ref>(eastl::move(other.decls));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1ac1b6d1d4a8f437337beb0c9973c35edf" kindref="member">vertexRegs</ref>.<ref refid="structStcodeRegisters_1a9ad6a226e5110b48b0b25b6d8336f67a" kindref="member">merge</ref>(eastl::move(other.vertexRegs));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1aa63b75770f06597f8f0f1a04c369dbe8" kindref="member">pixelOrComputeRegs</ref>.<ref refid="structStcodeRegisters_1a9ad6a226e5110b48b0b25b6d8336f67a" kindref="member">merge</ref>(eastl::move(other.pixelOrComputeRegs));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structStcodeRoutine_1a90bea292e40f565eee2602e7bcb781ff" kindref="member">constMask</ref><sp/>&amp;&amp;<sp/>other.constMask)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>omask<sp/>=<sp/>eastl::move(other.constMask);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a90bea292e40f565eee2602e7bcb781ff" kindref="member">constMask</ref>-&gt;merge(*omask);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="structStcodeRoutine_1a7e3f29a7fffb2635c11f10ecdb9194da" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1a7e3f29a7fffb2635c11f10ecdb9194da" kindref="member">STATIC_VAR_ABSCENT_ID</ref><sp/>=<sp/>size_t(-1);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="structStcodeRoutine_1a27f002069a52afa2d7d73f73727455b4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1a27f002069a52afa2d7d73f73727455b4" kindref="member">hasCode</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1a79b3a88d088ad5748c5c11f132486697" kindref="member">code</ref>.<ref refid="classStcodeBuilder_1ae505b9a39d4c9fd54ebcf83a1c9a5d15" kindref="member">fragCount</ref>()<sp/>&gt;<sp/><ref refid="structStcodeRoutine_1abd9817c49e5ecd7b181ca5abd200f2fc" kindref="member">nonContributingStatementsCnt</ref>;<sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="structCryptoHash" kindref="compound">CryptoHash</ref><sp/><ref refid="structStcodeRoutine_1a5babc5921e35eb29e7cfe8f1e0181c3c" kindref="member">calcHash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCryptoHash" kindref="compound">CryptoHash</ref><sp/>*base<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="structStcodeRoutine_1adf3b15015bd8f9eb437d4aa67941084d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structStcodeRegisters" kindref="compound">StcodeRegisters</ref><sp/>&amp;<ref refid="structStcodeRoutine_1adf3b15015bd8f9eb437d4aa67941084d" kindref="member">regsForStage</ref>(ShaderStage<sp/>stage)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stage<sp/>==<sp/>STAGE_VS<sp/>?<sp/><ref refid="structStcodeRoutine_1ac1b6d1d4a8f437337beb0c9973c35edf" kindref="member">vertexRegs</ref><sp/>:<sp/><ref refid="structStcodeRoutine_1aa63b75770f06597f8f0f1a04c369dbe8" kindref="member">pixelOrComputeRegs</ref>;<sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1a4f376c7749e414c89ed9b70990d015e4" kindref="member">addBoolVarDecl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1afea3011003d486cdc2094d1ecb5227d1" kindref="member">addLocalVarDecl</ref>(ShaderVarType<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1a3aa9c49a9d2ffa5a0670be12dde467ec" kindref="member">setVarValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*val);</highlight></codeline>
<codeline lineno="212" refid="structStcodeRoutine_1a243e67e29b628fbad8e903f4edd2143c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1a243e67e29b628fbad8e903f4edd2143c" kindref="member">setVarValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="structStcodeExpression" kindref="compound">StcodeExpression</ref><sp/>&amp;&amp;expr)<sp/>{<sp/><ref refid="structStcodeRoutine_1a243e67e29b628fbad8e903f4edd2143c" kindref="member">setVarValue</ref>(name,<sp/>expr.releaseAssembledCode().c_str());<sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1a7923f13b9917706c92076c807e3ef73b" kindref="member">addStmt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*val);</highlight></codeline>
<codeline lineno="215" refid="structStcodeRoutine_1ab48c535db9e0ca9e1c0fedc8369bbf21" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1ab48c535db9e0ca9e1c0fedc8369bbf21" kindref="member">addStmt</ref>(<ref refid="structStcodeExpression" kindref="compound">StcodeExpression</ref><sp/>&amp;&amp;expr)<sp/>{<sp/><ref refid="structStcodeRoutine_1ab48c535db9e0ca9e1c0fedc8369bbf21" kindref="member">addStmt</ref>(expr.releaseAssembledCode().c_str());<sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1abd5112d8321812bca8c76b6aeb38ad29" kindref="member">addSetConstStmt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*type,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>type_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*location,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*expr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dest_array,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>array_index);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>TArgs&gt;</highlight></codeline>
<codeline lineno="221" refid="structStcodeRoutine_1a4482357fc0c8a5ffbd7950ddfe96d3d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeRoutine_1a4482357fc0c8a5ffbd7950ddfe96d3d3" kindref="member">addFormattedStatement</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>TArgs<sp/>&amp;&amp;...args)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERT(<ref refid="structStcodeRoutine_1af0a0fa1835a8049cce67a6139364c86c" kindref="member">blockDepth</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structStcodeRoutine_1af0a0fa1835a8049cce67a6139364c86c" kindref="member">blockDepth</ref><sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1afb8bf37166f1a27a35a670a0809a1433" kindref="member">hasCodeUnderConditions</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="structStcodeRoutine_1abd9817c49e5ecd7b181ca5abd200f2fc" kindref="member">nonContributingStatementsCnt</ref>;<sp/></highlight><highlight class="comment">//<sp/>For<sp/>indent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a79b3a88d088ad5748c5c11f132486697" kindref="member">code</ref>.<ref refid="classStcodeBuilder_1afa302f57e7422c4efbe63df807e61e2f" kindref="member">emplaceBack</ref>(<ref refid="structStcodeRoutine_1aea501750e08811b7aa3784b8db15490a" kindref="member">makeIndentedLine</ref>(<ref refid="structStcodeRoutine_1af0a0fa1835a8049cce67a6139364c86c" kindref="member">blockDepth</ref>));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a79b3a88d088ad5748c5c11f132486697" kindref="member">code</ref>.<ref refid="classStcodeBuilder_1a75203805b3d48da057cbe761021e19b3" kindref="member">emplaceBackFmt</ref>(fmt,<sp/>eastl::forward&lt;TArgs&gt;(args)...);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="structStcodeRoutine_1aea501750e08811b7aa3784b8db15490a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>eastl::string<sp/><ref refid="structStcodeRoutine_1aea501750e08811b7aa3784b8db15490a" kindref="member">makeIndentedLine</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>eastl::string<sp/>line{};</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>line.resize(depth<sp/>*<sp/>2,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>line;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal">};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="structDynamicStcodeRoutine" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structDynamicStcodeRoutine" kindref="compound">DynamicStcodeRoutine</ref><sp/>:<sp/><ref refid="structStcodeRoutine" kindref="compound">StcodeRoutine</ref></highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241" refid="structDynamicStcodeRoutine_1ad445bbe14daa249ee8c2422643325aa2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structDynamicStcodeRoutine_1ad445bbe14daa249ee8c2422643325aa2" kindref="member">isCompute</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242" refid="structDynamicStcodeRoutine_1a98109234eabf6edafeb4fc0c4d0a68c9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structDynamicStcodeRoutine_1a98109234eabf6edafeb4fc0c4d0a68c9" kindref="member">usesDynamicBranching</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="structDynamicStcodeRoutine_1ab87a84691b951182c33aea3a3fe8dfa6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structDynamicStcodeRoutine_1ab87a84691b951182c33aea3a3fe8dfa6" kindref="member">DynamicStcodeRoutine</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>uses_dynamic_branching<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="structDynamicStcodeRoutine_1a98109234eabf6edafeb4fc0c4d0a68c9" kindref="member">usesDynamicBranching</ref>{uses_dynamic_branching}<sp/>{}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structDynamicStcodeRoutine_1a554baae416302d8c2a8efe3bc2ce416a" kindref="member">addGlobalShaderResource</ref>(ShaderStage<sp/>stage,<sp/><ref refid="structStcodeRoutine_1a52f41230f067f3067000adef9bfb5eb9" kindref="member">ResourceType</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*var_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structDynamicStcodeRoutine_1a42f63f12511ebc50d12eeba245b76c8e" kindref="member">addDynamicShaderResource</ref>(ShaderStage<sp/>stage,<sp/><ref refid="structStcodeRoutine_1a52f41230f067f3067000adef9bfb5eb9" kindref="member">ResourceType</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*var_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structDynamicStcodeRoutine_1ae3f113f042917068e579c4975d99148b" kindref="member">addShaderGlobMatrix</ref>(ShaderStage<sp/>stage,<sp/><ref refid="structStcodeRoutine_1a8ea93f019765304f450c1924cb84c52c" kindref="member">GlobMatrixType</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structDynamicStcodeRoutine_1a6c6314cfdbda35c448f02c4bfe49f099" kindref="member">addShaderGlobVec</ref>(ShaderStage<sp/>stage,<sp/><ref refid="structStcodeRoutine_1a2e19d59b2785fa42c7084cd2e0fa45f3" kindref="member">GlobVecType</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp_id);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structDynamicStcodeRoutine_1ab06ec5869d901baecd80bf249d8e9fb7" kindref="member">addShaderConst</ref>(ShaderStage<sp/>stage,<sp/>ShaderVarType<sp/>shvt,<sp/><ref refid="namespacesemantic_1a1fd7ba909c618ad56fbacae8b3226182" kindref="member">semantic::VariableType</ref><sp/>vt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*val,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>array_index<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="253" refid="structDynamicStcodeRoutine_1a5a227fa3be4ea1567aee5e0ed26e6230" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structDynamicStcodeRoutine_1a5a227fa3be4ea1567aee5e0ed26e6230" kindref="member">addShaderConst</ref>(ShaderStage<sp/>stage,<sp/>ShaderVarType<sp/>shvt,<sp/><ref refid="namespacesemantic_1a1fd7ba909c618ad56fbacae8b3226182" kindref="member">semantic::VariableType</ref><sp/>vt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeExpression" kindref="compound">StcodeExpression</ref><sp/>&amp;&amp;expr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>array_index<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDynamicStcodeRoutine_1ab06ec5869d901baecd80bf249d8e9fb7" kindref="member">addShaderConst</ref>(stage,<sp/>shvt,<sp/>vt,<sp/>name,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>expr.releaseAssembledCode().c_str(),<sp/>array_index);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO:<sp/>make<sp/>a<sp/>builder<sp/>for<sp/>cpp<sp/>bool<sp/>expressions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="structDynamicStcodeRoutine_1ab2b220cb56690e8cac1fa3d07c33c85d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structDynamicStcodeRoutine_1ab2b220cb56690e8cac1fa3d07c33c85d" kindref="member">addIfClause</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cond_text)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERT(<ref refid="structDynamicStcodeRoutine_1a98109234eabf6edafeb4fc0c4d0a68c9" kindref="member">usesDynamicBranching</ref>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a4482357fc0c8a5ffbd7950ddfe96d3d3" kindref="member">addFormattedStatement</ref>(</highlight><highlight class="stringliteral">&quot;if<sp/>(%s)<sp/>{\n&quot;</highlight><highlight class="normal">,<sp/>cond_text);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="structStcodeRoutine_1abd9817c49e5ecd7b181ca5abd200f2fc" kindref="member">nonContributingStatementsCnt</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="structStcodeRoutine_1af0a0fa1835a8049cce67a6139364c86c" kindref="member">blockDepth</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268" refid="structDynamicStcodeRoutine_1a23cb88f9a61a246c76b452516feae406" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structDynamicStcodeRoutine_1a23cb88f9a61a246c76b452516feae406" kindref="member">addElseClause</ref>()</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERT(<ref refid="structDynamicStcodeRoutine_1a98109234eabf6edafeb4fc0c4d0a68c9" kindref="member">usesDynamicBranching</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>--<ref refid="structStcodeRoutine_1af0a0fa1835a8049cce67a6139364c86c" kindref="member">blockDepth</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a4482357fc0c8a5ffbd7950ddfe96d3d3" kindref="member">addFormattedStatement</ref>(</highlight><highlight class="stringliteral">&quot;}<sp/>else<sp/>{\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="structStcodeRoutine_1abd9817c49e5ecd7b181ca5abd200f2fc" kindref="member">nonContributingStatementsCnt</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="structStcodeRoutine_1af0a0fa1835a8049cce67a6139364c86c" kindref="member">blockDepth</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276" refid="structDynamicStcodeRoutine_1adec8a7be170fad4c059d92cec7a0e6f0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structDynamicStcodeRoutine_1adec8a7be170fad4c059d92cec7a0e6f0" kindref="member">addBlockClosing</ref>()</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERT(<ref refid="structDynamicStcodeRoutine_1a98109234eabf6edafeb4fc0c4d0a68c9" kindref="member">usesDynamicBranching</ref>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>--<ref refid="structStcodeRoutine_1af0a0fa1835a8049cce67a6139364c86c" kindref="member">blockDepth</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a4482357fc0c8a5ffbd7950ddfe96d3d3" kindref="member">addFormattedStatement</ref>(</highlight><highlight class="stringliteral">&quot;}\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="structStcodeRoutine_1abd9817c49e5ecd7b181ca5abd200f2fc" kindref="member">nonContributingStatementsCnt</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="structDynamicStcodeRoutine_1a52915845f86b734b137d40c30cce9731" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structDynamicStcodeRoutine_1a52915845f86b734b137d40c30cce9731" kindref="member">reportStageUsage</ref>(ShaderStage<sp/>stage)<sp/>{<sp/><ref refid="structDynamicStcodeRoutine_1ad445bbe14daa249ee8c2422643325aa2" kindref="member">isCompute</ref><sp/>=<sp/>stage<sp/>==<sp/>STAGE_CS;<sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Needed<sp/>for<sp/>the<sp/>following<sp/>use<sp/>case:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>for<sp/>global<sp/>const<sp/>block<sp/>registers<sp/>are<sp/>allocated<sp/>from<sp/>the<sp/>same<sp/>&apos;buffered&apos;<sp/>reg<sp/>allocator,<sp/>but<sp/>set<sp/>in<sp/>subranges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>for<sp/>each<sp/>stage<sp/>to<sp/>different<sp/>actual<sp/>constbuffers.<sp/>Therefore<sp/>we<sp/>can&apos;t<sp/>use<sp/>the<sp/>range<sp/>from<sp/>the<sp/>allocator,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>instead<sp/>have<sp/>to<sp/>calculate<sp/>from<sp/>the<sp/>actual<sp/>routine<sp/>mapping.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="structDynamicStcodeRoutine_1a4066d586b729c8fc9ed1f2df8e00d9e5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structHlslRegRange" kindref="compound">HlslRegRange</ref><sp/><ref refid="structDynamicStcodeRoutine_1a4066d586b729c8fc9ed1f2df8e00d9e5" kindref="member">collectSetRegistersRange</ref>(ShaderStage<sp/>stage)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="291"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHlslRegRange" kindref="compound">HlslRegRange</ref><sp/>range{};</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;regs<sp/>=<sp/>stage<sp/>==<sp/>STAGE_VS<sp/>?<sp/><ref refid="structStcodeRoutine_1ac1b6d1d4a8f437337beb0c9973c35edf" kindref="member">vertexRegs</ref><sp/>:<sp/><ref refid="structStcodeRoutine_1aa63b75770f06597f8f0f1a04c369dbe8" kindref="member">pixelOrComputeRegs</ref>;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;loc<sp/>:<sp/>regs.content)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loc.isNumeric)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range<sp/>=<sp/><ref refid="hlslRegisters_8h_1acf1cf57da1840c1811c3195d05ea03b8" kindref="member">update_range</ref>(range,<sp/>loc.reg);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>range;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><ref refid="structStcodeAccumulator" kindref="compound">StcodeAccumulator</ref><sp/><ref refid="structDynamicStcodeRoutine_1a2aee43209295b14ac48342b85f6703e3" kindref="member">releaseAssembledCode</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>routine_idx,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>static_var_idx,<sp/><ref refid="structHlslRegRange" kindref="compound">HlslRegRange</ref><sp/>ps_or_cs_const_range,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHlslRegRange" kindref="compound">HlslRegRange</ref><sp/>vs_const_range);</highlight></codeline>
<codeline lineno="304"><highlight class="normal">};</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="structStaticStcodeRoutine" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStaticStcodeRoutine" kindref="compound">StaticStcodeRoutine</ref><sp/>:<sp/><ref refid="structStcodeRoutine" kindref="compound">StcodeRoutine</ref></highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308" refid="structStaticStcodeRoutine_1a83da60c713504ec7331f1d99b849d3fa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structStcodeRegisters" kindref="compound">StcodeRegisters</ref><sp/><ref refid="structStaticStcodeRoutine_1a83da60c713504ec7331f1d99b849d3fa" kindref="member">constRegs</ref>;</highlight></codeline>
<codeline lineno="309" refid="structStaticStcodeRoutine_1a8c5e6e6a9040772a8094250f0b1a89ea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structStaticStcodeRoutine_1a8c5e6e6a9040772a8094250f0b1a89ea" kindref="member">supportsMultidraw</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="structStaticStcodeRoutine_1a7f73ebdb1c5b358c4e2c5325b9fe4ca5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStaticStcodeRoutine_1a7f73ebdb1c5b358c4e2c5325b9fe4ca5" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a369ed87d71228864072aa892c4054a70" kindref="member">StcodeRoutine::reset</ref>();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStaticStcodeRoutine_1a83da60c713504ec7331f1d99b849d3fa" kindref="member">constRegs</ref>.<ref refid="structStcodeRegisters_1acec71aa1ce407a2b893bd2adb471cad6" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="316" refid="structStaticStcodeRoutine_1a4919f85cfb14bb1decb20819617339eb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStaticStcodeRoutine_1a4919f85cfb14bb1decb20819617339eb" kindref="member">merge</ref>(<ref refid="structStaticStcodeRoutine" kindref="compound">StaticStcodeRoutine</ref><sp/>&amp;&amp;other)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStaticStcodeRoutine_1a83da60c713504ec7331f1d99b849d3fa" kindref="member">constRegs</ref>.<ref refid="structStcodeRegisters_1a9ad6a226e5110b48b0b25b6d8336f67a" kindref="member">merge</ref>(eastl::move(other.constRegs));</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeRoutine_1a5830b77faa2e85d087f330c51c9d6f94" kindref="member">StcodeRoutine::merge</ref>(eastl::move(other));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStaticStcodeRoutine_1ab4c051fc8b1efc4796ba7e284967fe75" kindref="member">addShaderConst</ref>(ShaderVarType<sp/>shvt,<sp/><ref refid="namespacesemantic_1a1fd7ba909c618ad56fbacae8b3226182" kindref="member">semantic::VariableType</ref><sp/>vt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>array_index<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="323" refid="structStaticStcodeRoutine_1aa0bc3f40847b26ea10351265cce47a5a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStaticStcodeRoutine_1aa0bc3f40847b26ea10351265cce47a5a" kindref="member">addShaderConst</ref>(ShaderVarType<sp/>shvt,<sp/><ref refid="namespacesemantic_1a1fd7ba909c618ad56fbacae8b3226182" kindref="member">semantic::VariableType</ref><sp/>vt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="structStcodeExpression" kindref="compound">StcodeExpression</ref><sp/>&amp;&amp;expr,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>array_index<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStaticStcodeRoutine_1ab4c051fc8b1efc4796ba7e284967fe75" kindref="member">addShaderConst</ref>(shvt,<sp/>vt,<sp/>name,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>expr.releaseAssembledCode().c_str(),<sp/>array_index);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStaticStcodeRoutine_1a5b651f9fbc8618a550c3ab26ff7d96f4" kindref="member">addStaticShaderTex</ref>(ShaderStage<sp/>stage,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*var_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStaticStcodeRoutine_1a446517c520fa7abd98e700824359b950" kindref="member">addBindlessShaderTexture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*var_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="structStaticStcodeRoutine_1a60fe3ba812dfcc742b07f10f46dce88b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStaticStcodeRoutine_1a60fe3ba812dfcc742b07f10f46dce88b" kindref="member">reportMutlidrawSupport</ref>()<sp/>{<sp/><ref refid="structStaticStcodeRoutine_1a8c5e6e6a9040772a8094250f0b1a89ea" kindref="member">supportsMultidraw</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><ref refid="structStcodeAccumulator" kindref="compound">StcodeAccumulator</ref><sp/><ref refid="structStaticStcodeRoutine_1a46252d69ecea3b1c9c6ce8cbc622dcac" kindref="member">releaseAssembledCode</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>routine_idx,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>static_var_idx,<sp/><ref refid="structHlslRegRange" kindref="compound">HlslRegRange</ref><sp/>const_range,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>SlotTexturesRangeInfo<sp/>ps_tex_smp_range,<sp/>SlotTexturesRangeInfo<sp/>vs_tex_smp_range);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><ref refid="structCryptoHash" kindref="compound">CryptoHash</ref><sp/><ref refid="structStaticStcodeRoutine_1a0c23a35a3ca5f69013c3bb171fdfd6b7" kindref="member">calcHash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCryptoHash" kindref="compound">CryptoHash</ref><sp/>*base<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal">};</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="structStcodePass" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStcodePass" kindref="compound">StcodePass</ref></highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342" refid="structStcodePass_1afa8af3e7f8aeba50095318fbd536a0c4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structDynamicStcodeRoutine" kindref="compound">DynamicStcodeRoutine</ref><sp/><ref refid="structStcodePass_1afa8af3e7f8aeba50095318fbd536a0c4" kindref="member">cppStcode</ref>;</highlight></codeline>
<codeline lineno="343" refid="structStcodePass_1ab7862ff68f12bb13c123a66f608226a2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structStaticStcodeRoutine" kindref="compound">StaticStcodeRoutine</ref><sp/><ref refid="structStcodePass_1ab7862ff68f12bb13c123a66f608226a2" kindref="member">cppStblkcode</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="structStcodePass_1acd2deac1b760dadc131622af4cbc701b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structStcodePass_1acd2deac1b760dadc131622af4cbc701b" kindref="member">StcodePass</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>uses_dynamic_branching<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="structStcodePass_1afa8af3e7f8aeba50095318fbd536a0c4" kindref="member">cppStcode</ref>{uses_dynamic_branching},<sp/><ref refid="structStcodePass_1ab7862ff68f12bb13c123a66f608226a2" kindref="member">cppStblkcode</ref>{}<sp/>{}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="structStcodePass_1a89f89cfd5de40f512e9b47d5c0874512" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodePass_1a89f89cfd5de40f512e9b47d5c0874512" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodePass_1afa8af3e7f8aeba50095318fbd536a0c4" kindref="member">cppStcode</ref>.<ref refid="structStcodeRoutine_1a369ed87d71228864072aa892c4054a70" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodePass_1ab7862ff68f12bb13c123a66f608226a2" kindref="member">cppStblkcode</ref>.<ref refid="structStaticStcodeRoutine_1a7f73ebdb1c5b358c4e2c5325b9fe4ca5" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal">};</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="structStcodeGlobalVars" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStcodeGlobalVars" kindref="compound">StcodeGlobalVars</ref></highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356" refid="structStcodeGlobalVars_1a9d13cdcc3efc084d3f6ed74206268112" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="structStcodeGlobalVars_1a9d13cdcc3efc084d3f6ed74206268112" kindref="member">Type</ref></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeGlobalVars_1a9d13cdcc3efc084d3f6ed74206268112a2eca6bbd79604d1d742efa40e3a9a82a" kindref="member">MAIN_COLLECTION</ref>,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStcodeGlobalVars_1a9d13cdcc3efc084d3f6ed74206268112a688be6b57b2ae8580215def4a96efdc1" kindref="member">REFERENCED_BY_SHADER</ref></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="structStcodeGlobalVars_1_1Strings" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStcodeGlobalVars_1_1Strings" kindref="compound">Strings</ref></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="364" refid="structStcodeGlobalVars_1_1Strings_1ad728d0054603665c54d7b3998ce36c60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>eastl::string<sp/><ref refid="structStcodeGlobalVars_1_1Strings_1ad728d0054603665c54d7b3998ce36c60" kindref="member">cppCode</ref>;</highlight></codeline>
<codeline lineno="365" refid="structStcodeGlobalVars_1_1Strings_1a72eb4a40d8d3964701dfd71caf4f0b77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>eastl::string<sp/><ref refid="structStcodeGlobalVars_1_1Strings_1a72eb4a40d8d3964701dfd71caf4f0b77" kindref="member">fetchersOrFwdCppCode</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="structStcodeGlobalVars_1a73ba26c0f43122b89eb234fff9dc0fc7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structStcodeGlobalVars_1a73ba26c0f43122b89eb234fff9dc0fc7" kindref="member">INVALID_IN_DUMP_VAR_ID</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="structStcodeGlobalVars_1a88d1c004290867487c70656306888efe" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classStcodeBuilder" kindref="compound">StcodeBuilder</ref><sp/><ref refid="structStcodeGlobalVars_1a88d1c004290867487c70656306888efe" kindref="member">cppCode</ref>;</highlight></codeline>
<codeline lineno="371" refid="structStcodeGlobalVars_1afc4108c6e140f5b9a215af60650e499f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classStcodeBuilder" kindref="compound">StcodeBuilder</ref><sp/><ref refid="structStcodeGlobalVars_1afc4108c6e140f5b9a215af60650e499f" kindref="member">fetchersOrFwdCpp</ref>;</highlight></codeline>
<codeline lineno="372" refid="structStcodeGlobalVars_1a3850a54b1390302582519156cb3af648" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structStcodeGlobalVars_1a9d13cdcc3efc084d3f6ed74206268112" kindref="member">Type</ref><sp/><ref refid="structStcodeGlobalVars_1a3850a54b1390302582519156cb3af648" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="structStcodeGlobalVars_1a3c96a117c45ab2bfee27fbfb2f4a3ce0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structStcodeGlobalVars_1a3c96a117c45ab2bfee27fbfb2f4a3ce0" kindref="member">StcodeGlobalVars</ref>(<ref refid="structStcodeGlobalVars_1a9d13cdcc3efc084d3f6ed74206268112" kindref="member">Type</ref><sp/>a_type)<sp/>:<sp/><ref refid="structStcodeGlobalVars_1a3850a54b1390302582519156cb3af648" kindref="member">type</ref>(a_type)<sp/>{}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeGlobalVars_1ab2f9e5dd6a9e752be67ea7951fd4e6f1" kindref="member">setVar</ref>(ShaderVarType<sp/>shv_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id_in_final_dump<sp/>=<sp/><ref refid="structStcodeGlobalVars_1a73ba26c0f43122b89eb234fff9dc0fc7" kindref="member">INVALID_IN_DUMP_VAR_ID</ref>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>Strings<sp/><ref refid="structStcodeGlobalVars_1a802c7ba5fda2f6b7181f45d650f3f9ed" kindref="member">releaseAssembledCode</ref>();</highlight></codeline>
<codeline lineno="378"><highlight class="normal">};</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="structStcodeShader" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStcodeShader" kindref="compound">StcodeShader</ref></highlight></codeline>
<codeline lineno="381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="382" refid="structStcodeShader_1_1RegisterTable" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStcodeShader_1_1RegisterTable" kindref="compound">RegisterTable</ref></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="384" refid="structStcodeShader_1_1RegisterTable_1ac76a82a19c0444083bab58903faf2d92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;Tab&lt;int&gt;&gt;<sp/><ref refid="structStcodeShader_1_1RegisterTable_1ac76a82a19c0444083bab58903faf2d92" kindref="member">combinedTable</ref>{};</highlight></codeline>
<codeline lineno="385" refid="structStcodeShader_1_1RegisterTable_1a5e9b663761faab1a927d1c2d80e077db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;int&gt;<sp/><ref refid="structStcodeShader_1_1RegisterTable_1a5e9b663761faab1a927d1c2d80e077db" kindref="member">offsets</ref>{};</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="387" refid="structStcodeShader_1_1RoutineRemappingTables" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStcodeShader_1_1RoutineRemappingTables" kindref="compound">RoutineRemappingTables</ref></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="389" refid="structStcodeShader_1_1RoutineRemappingTables_1a8304a5effdf074148d9c0d4727b57bdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;int&gt;<sp/><ref refid="structStcodeShader_1_1RoutineRemappingTables_1a8304a5effdf074148d9c0d4727b57bdb" kindref="member">dynamicRemapping</ref>;</highlight></codeline>
<codeline lineno="390" refid="structStcodeShader_1_1RoutineRemappingTables_1a4766226c00aea66afc45707830868cb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;int&gt;<sp/><ref refid="structStcodeShader_1_1RoutineRemappingTables_1a4766226c00aea66afc45707830868cb6" kindref="member">staticRemapping</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="392" refid="structStcodeShader_1_1InterfaceStrings" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStcodeShader_1_1InterfaceStrings" kindref="compound">InterfaceStrings</ref></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="394" refid="structStcodeShader_1_1InterfaceStrings_1aafe0e6bca724c730c8ac52f675ef6b6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>eastl::string<sp/><ref refid="structStcodeShader_1_1InterfaceStrings_1aafe0e6bca724c730c8ac52f675ef6b6f" kindref="member">regTable</ref>;</highlight></codeline>
<codeline lineno="395" refid="structStcodeShader_1_1InterfaceStrings_1aae8a27b3b3c53600fe169ee076942052" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>eastl::string<sp/><ref refid="structStcodeShader_1_1InterfaceStrings_1aae8a27b3b3c53600fe169ee076942052" kindref="member">dynamicFuncPointerTable</ref>;</highlight></codeline>
<codeline lineno="396" refid="structStcodeShader_1_1InterfaceStrings_1ab475f1bbc0694453ff526fdf570f5faa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>eastl::string<sp/><ref refid="structStcodeShader_1_1InterfaceStrings_1ab475f1bbc0694453ff526fdf570f5faa" kindref="member">staticFuncPointerTable</ref>;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="structStcodeShader_1a263399922da422133761280ed69e664e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structStcodeShader_1a263399922da422133761280ed69e664e" kindref="member">hasCode</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400" refid="structStcodeShader_1a0eb8bc68674356efadc910b83b377057" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structStcodeAccumulator" kindref="compound">StcodeAccumulator</ref><sp/><ref refid="structStcodeShader_1a0eb8bc68674356efadc910b83b377057" kindref="member">code</ref>;</highlight></codeline>
<codeline lineno="401" refid="structStcodeShader_1a01c03b612786960a7e5fe1909f5cac30" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structStcodeGlobalVars" kindref="compound">StcodeGlobalVars</ref><sp/><ref refid="structStcodeShader_1a01c03b612786960a7e5fe1909f5cac30" kindref="member">globVars</ref>{<ref refid="structStcodeGlobalVars_1a9d13cdcc3efc084d3f6ed74206268112a688be6b57b2ae8580215def4a96efdc1" kindref="member">StcodeGlobalVars::Type::REFERENCED_BY_SHADER</ref>};</highlight></codeline>
<codeline lineno="402" refid="structStcodeShader_1acd6a0a3ecb9b166c011c34d269bf561f" refkind="member"><highlight class="normal"><sp/><sp/>eastl::string<sp/><ref refid="structStcodeShader_1acd6a0a3ecb9b166c011c34d269bf561f" kindref="member">shaderName</ref>;</highlight></codeline>
<codeline lineno="403" refid="structStcodeShader_1adc30de4d892b6a90585434de98a1cafb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structStcodeShader_1adc30de4d892b6a90585434de98a1cafb" kindref="member">curStvarId</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="structStcodeShader_1ae1da4c67798cda2f7e2fbc8be42c8285" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;CryptoHash&gt;<sp/><ref refid="structStcodeShader_1ae1da4c67798cda2f7e2fbc8be42c8285" kindref="member">dynamicRoutineHashes</ref>{};</highlight></codeline>
<codeline lineno="406" refid="structStcodeShader_1a4d978241d88464a82844489fcda09685" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;CryptoHash&gt;<sp/><ref refid="structStcodeShader_1a4d978241d88464a82844489fcda09685" kindref="member">staticRoutineHashes</ref>{};</highlight></codeline>
<codeline lineno="407" refid="structStcodeShader_1a4f2eeefb69c7f781961e8fd2dd71fba5" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;CryptoHash&gt;<sp/><ref refid="structStcodeShader_1a4f2eeefb69c7f781961e8fd2dd71fba5" kindref="member">stvarHashes</ref>{};</highlight></codeline>
<codeline lineno="408" refid="structStcodeShader_1a06e085d179bc8bc3d7291ca7571d9d38" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;bindump::string&gt;<sp/><ref refid="structStcodeShader_1a06e085d179bc8bc3d7291ca7571d9d38" kindref="member">dynamicRoutineNames</ref>{};</highlight></codeline>
<codeline lineno="409" refid="structStcodeShader_1aa2274b5285ec7958fc49a1ce87d5ac8b" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;bindump::string&gt;<sp/><ref refid="structStcodeShader_1aa2274b5285ec7958fc49a1ce87d5ac8b" kindref="member">staticRoutineNames</ref>{};</highlight></codeline>
<codeline lineno="410" refid="structStcodeShader_1a0fc5dcef4db2f3f00b1ceb1655311c00" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structStcodeShader_1_1RegisterTable" kindref="compound">RegisterTable</ref><sp/><ref refid="structStcodeShader_1a0fc5dcef4db2f3f00b1ceb1655311c00" kindref="member">regTable</ref>{};</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="structStcodeShader_1a3562a2aff09410fe179e9f451d0002d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeShader_1a3562a2aff09410fe179e9f451d0002d8" kindref="member">reset</ref>()<sp/>{<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="structStcodeShader" kindref="compound">StcodeShader</ref>();<sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStcodeShader_1a328a8dc795491ff3da3d032bc46c7f51" kindref="member">addStaticVarLocations</ref>(<ref refid="structStcodeStaticVars" kindref="compound">StcodeStaticVars</ref><sp/>&amp;&amp;locations);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structStcodeShader_1ae3c24ffd52b1236b13e7715878a9c387" kindref="member">addRegisterTableWithIndex</ref>(Tab&lt;int&gt;<sp/>&amp;&amp;table);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structStcodeShader_1a36813a7078bf6490784b97e700de11b7" kindref="member">addRegisterTableWithOffset</ref>(Tab&lt;int&gt;<sp/>&amp;&amp;table);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structStcodeShader_1af574f4aa9ce369abcfeaccee84e198a6" kindref="member">addCode</ref>(<ref refid="structDynamicStcodeRoutine" kindref="compound">DynamicStcodeRoutine</ref><sp/>&amp;&amp;routine,<sp/><ref refid="structHlslRegRange" kindref="compound">HlslRegRange</ref><sp/>ps_or_cs_const_range,<sp/><ref refid="structHlslRegRange" kindref="compound">HlslRegRange</ref><sp/>vs_const_range);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structStcodeShader_1af574f4aa9ce369abcfeaccee84e198a6" kindref="member">addCode</ref>(<ref refid="structStaticStcodeRoutine" kindref="compound">StaticStcodeRoutine</ref><sp/>&amp;&amp;routine,<sp/><ref refid="structHlslRegRange" kindref="compound">HlslRegRange</ref><sp/>const_range,<sp/>SlotTexturesRangeInfo<sp/>ps_tex_smp_range,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>SlotTexturesRangeInfo<sp/>vs_tex_smp_range);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>RoutineRemappingTables<sp/><ref refid="structStcodeShader_1ac8074e036f8c87ab87d9b9567faca319" kindref="member">linkRoutinesFromFile</ref>(dag::ConstSpan&lt;CryptoHash&gt;<sp/>dynamic_routine_hashes,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>dag::ConstSpan&lt;CryptoHash&gt;<sp/>static_routine_hashes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>InterfaceStrings<sp/><ref refid="structStcodeShader_1a3506a62de760339f550342a82977ffd0" kindref="member">releaseAssembledInterfaceCode</ref>();</highlight></codeline>
<codeline lineno="426"><highlight class="normal">};</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="structStcodePassRegInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStcodePassRegInfo" kindref="compound">StcodePassRegInfo</ref></highlight></codeline>
<codeline lineno="429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="430" refid="structStcodePassRegInfo_1a21e6340311e7dd27e2e2e5049210386c" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;eastl::pair&lt;eastl::string,<sp/>int&gt;&gt;<sp/><ref refid="structStcodePassRegInfo_1a21e6340311e7dd27e2e2e5049210386c" kindref="member">regsByName</ref>{};</highlight></codeline>
<codeline lineno="431" refid="structStcodePassRegInfo_1a415b97fa0cd5af24f4c75a9ca09022bd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structHlslRegRange" kindref="compound">HlslRegRange</ref><sp/><ref refid="structStcodePassRegInfo_1ab850e38fbe84130d2e4ff2235b220f8b" kindref="member">vsCstRange</ref>,<sp/><ref refid="structStcodePassRegInfo_1a415b97fa0cd5af24f4c75a9ca09022bd" kindref="member">psOrCsCstRange</ref>;</highlight></codeline>
<codeline lineno="432" refid="structStcodePassRegInfo_1a72e721db638f8ca00f0479a73f9ca5c3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structStcodePassRegInfo_1a72e721db638f8ca00f0479a73f9ca5c3" kindref="member">isCompute</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal">};</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Table<sp/>processing<sp/>for<sp/>dynamic<sp/>branches<sp/>for<sp/>ability<sp/>to<sp/>restore<sp/>dyn<sp/>variant<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="cppStcodeAssembly_8h_1ae3c630fb38a98930f6217a99d6e16e4c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="cppStcodeAssembly_8h_1ae3c630fb38a98930f6217a99d6e16e4c" kindref="member">StcodePassRegInfoTable</ref><sp/>=<sp/>ska::flat_hash_map&lt;SemanticShaderPass<sp/>*,<sp/>StcodePassRegInfo&gt;;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><ref refid="cppStcodeAssembly_8h_1ae3c630fb38a98930f6217a99d6e16e4c" kindref="member">StcodePassRegInfoTable</ref><sp/><ref refid="cppStcodeAssembly_8h_1a49e0fce26520163288afcb011cad522e" kindref="member">build_pass_stcode_reg_table</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classShaderSemCode" kindref="compound">ShaderSemCode</ref><sp/>&amp;semcode);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="structStcodeBranchedRoutineDataTable" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStcodeBranchedRoutineDataTable" kindref="compound">StcodeBranchedRoutineDataTable</ref></highlight></codeline>
<codeline lineno="441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="442" refid="structStcodeBranchedRoutineDataTable_1a71dd9604fe6e3dc1b1c4396dc28c3497" refkind="member"><highlight class="normal"><sp/><sp/>ska::flat_hash_map&lt;SemanticShaderPass<sp/>*,<sp/>Tab&lt;int&gt;&gt;<sp/><ref refid="structStcodeBranchedRoutineDataTable_1a71dd9604fe6e3dc1b1c4396dc28c3497" kindref="member">passRegisterTables</ref>;</highlight></codeline>
<codeline lineno="443" refid="structStcodeBranchedRoutineDataTable_1ad47b8fbd9efb2df2c31afc53aa7f0250" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structHlslRegRange" kindref="compound">HlslRegRange</ref><sp/><ref refid="structStcodeBranchedRoutineDataTable_1ad47b8fbd9efb2df2c31afc53aa7f0250" kindref="member">commonVsConstRange</ref>{};</highlight></codeline>
<codeline lineno="444" refid="structStcodeBranchedRoutineDataTable_1a8f390d0921ee27383104fa4216eeb9c6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structHlslRegRange" kindref="compound">HlslRegRange</ref><sp/><ref refid="structStcodeBranchedRoutineDataTable_1a8f390d0921ee27383104fa4216eeb9c6" kindref="member">commonPsOrCsConstRange</ref>{};</highlight></codeline>
<codeline lineno="445"><highlight class="normal">};</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><ref refid="structStcodeBranchedRoutineDataTable" kindref="compound">StcodeBranchedRoutineDataTable</ref><sp/><ref refid="cppStcodeAssembly_8h_1a220e59c8493edc513dca5d1fd94d5a28" kindref="member">build_pass_reg_tables_for_branched_dynstcode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cppStcodeAssembly_8h_1ae3c630fb38a98930f6217a99d6e16e4c" kindref="member">StcodePassRegInfoTable</ref><sp/>&amp;passRegsTable,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><ref refid="structDynamicStcodeRoutine" kindref="compound">DynamicStcodeRoutine</ref><sp/>&amp;branched_routine);</highlight></codeline>
    </programlisting>
    <location file="cppStcodeAssembly.h"/>
  </compounddef>
</doxygen>
