<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="codeBlocks_8h" kind="file" language="C++">
    <compoundname>codeBlocks.h</compoundname>
    <includes refid="shsem_8h" local="yes">shsem.h</includes>
    <includes refid="shTargetContext_8h" local="yes">shTargetContext.h</includes>
    <includes local="no">generic/dag_tab.h</includes>
    <includes local="no">util/dag_globDef.h</includes>
    <includes refid="nameMap_8h" local="yes">nameMap.h</includes>
    <includes local="no">dag/dag_vector.h</includes>
    <includes local="no">EASTL/string.h</includes>
    <includedby refid="codeBlocks_8cpp" local="yes">codeBlocks.cpp</includedby>
    <includedby refid="shCompiler_8cpp" local="yes">shCompiler.cpp</includedby>
    <includedby refid="shaderSemantic_8h" local="yes">shaderSemantic.h</includedby>
    <includedby refid="shsem_8cpp" local="yes">shsem.cpp</includedby>
    <includedby refid="variantAssembly_8cpp" local="yes">variantAssembly.cpp</includedby>
    <incdepgraph>
      <node id="89">
        <label>DebugLevel.h</label>
        <link refid="DebugLevel_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>blkHash.h</label>
        <link refid="blkHash_8h"/>
      </node>
      <node id="82">
        <label>boolVar.h</label>
        <link refid="boolVar_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>codeBlocks.h</label>
        <link refid="codeBlocks_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>commonUtils.h</label>
        <link refid="commonUtils_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>compileResult.h</label>
        <link refid="compileResult_8h"/>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>const3d.h</label>
        <link refid="const3d_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>cppStcode.h</label>
        <link refid="cppStcode_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>cppStcodeAssembly.h</label>
        <link refid="cppStcodeAssembly_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>cppStcodeBuilder.h</label>
        <link refid="cppStcodeBuilder_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>cppStcodePlatformInfo.h</label>
        <link refid="cppStcodePlatformInfo_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>cppStcodeUtils.h</label>
        <link refid="cppStcodeUtils_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>globVar.h</label>
        <link refid="globVar_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>globalConfig.h</label>
        <link refid="globalConfig_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>hashStrings.h</label>
        <link refid="hashStrings_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>hlslRegisters.h</label>
        <link refid="hlslRegisters_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>hlslStage.h</label>
        <link refid="hlslStage_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>hwAssembly.h</label>
        <link refid="hwAssembly_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>intervals.h</label>
        <link refid="intervals_8h"/>
      </node>
      <node id="22">
        <label>nameMap.h</label>
        <link refid="nameMap_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>namedConst.h</label>
        <link refid="namedConst_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>processes.h</label>
        <link refid="processes_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>samplers.h</label>
        <link refid="samplers_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>shAssumes.h</label>
        <link refid="shAssumes_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>shCompContext.h</label>
        <link refid="shCompContext_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>shCompilationInfo.h</label>
        <link refid="shCompilationInfo_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>shErrorReporting.h</label>
        <link refid="shErrorReporting_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>shLog.h</label>
        <link refid="shLog_8h"/>
      </node>
      <node id="5">
        <label>shMacro.h</label>
        <link refid="shMacro_8h"/>
      </node>
      <node id="13">
        <label>shTargetContext.h</label>
        <link refid="shTargetContext_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>shTargetStorage.h</label>
        <link refid="shTargetStorage_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>shVarBool.h</label>
        <link refid="shVarBool_8h"/>
      </node>
      <node id="62">
        <label>shVarVecTypes.h</label>
        <link refid="shVarVecTypes_8h"/>
      </node>
      <node id="69">
        <label>shaderBytecodeCache.h</label>
        <link refid="shaderBytecodeCache_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>shaderSave.h</label>
        <link refid="shaderSave_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>shaderTab.h</label>
        <link refid="shaderTab_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>shlexterm.h</label>
        <link refid="shlexterm_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>shsem.h</label>
        <link refid="shsem_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>stcodeBytecode.h</label>
        <link refid="stcodeBytecode_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>varMap.h</label>
        <link refid="varMap_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>varTypes.h</label>
        <link refid="varTypes_8h"/>
      </node>
      <node id="84">
        <label>variablesMerger.h</label>
        <link refid="variablesMerger_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>3d/dag_texMgr.h</label>
      </node>
      <node id="28">
        <label>EASTL/algorithm.h</label>
      </node>
      <node id="36">
        <label>EASTL/array.h</label>
      </node>
      <node id="87">
        <label>EASTL/bitvector.h</label>
      </node>
      <node id="85">
        <label>EASTL/fixed_vector.h</label>
      </node>
      <node id="86">
        <label>EASTL/map.h</label>
      </node>
      <node id="11">
        <label>EASTL/optional.h</label>
      </node>
      <node id="10">
        <label>EASTL/string.h</label>
      </node>
      <node id="66">
        <label>EASTL/string_view.h</label>
      </node>
      <node id="72">
        <label>EASTL/type_traits.h</label>
      </node>
      <node id="44">
        <label>EASTL/unique_ptr.h</label>
      </node>
      <node id="75">
        <label>EASTL/vector.h</label>
      </node>
      <node id="81">
        <label>EASTL/vector_map.h</label>
      </node>
      <node id="91">
        <label>EASTL/vector_set.h</label>
      </node>
      <node id="37">
        <label>cstdint</label>
      </node>
      <node id="31">
        <label>cstring</label>
      </node>
      <node id="27">
        <label>dag/dag_vector.h</label>
      </node>
      <node id="26">
        <label>debug/dag_assert.h</label>
      </node>
      <node id="80">
        <label>debug/dag_debug.h</label>
      </node>
      <node id="43">
        <label>drv/3d/dag_consts.h</label>
      </node>
      <node id="68">
        <label>drv/3d/dag_renderStates.h</label>
      </node>
      <node id="60">
        <label>drv/3d/dag_sampler.h</label>
      </node>
      <node id="34">
        <label>generic/dag_enumerate.h</label>
      </node>
      <node id="35">
        <label>generic/dag_expected.h</label>
      </node>
      <node id="48">
        <label>generic/dag_fixedMoveOnlyFunction.h</label>
      </node>
      <node id="24">
        <label>generic/dag_tab.h</label>
      </node>
      <node id="30">
        <label>hash/BLAKE3/blake3.h</label>
      </node>
      <node id="53">
        <label>ioSys/dag_dataBlock.h</label>
      </node>
      <node id="57">
        <label>math/dag_color.h</label>
      </node>
      <node id="58">
        <label>math/integer/dag_IPoint4.h</label>
      </node>
      <node id="73">
        <label>memory</label>
      </node>
      <node id="39">
        <label>memory/dag_mem.h</label>
      </node>
      <node id="76">
        <label>memory/dag_memBase.h</label>
      </node>
      <node id="42">
        <label>shaders/dag_shaderVarType.h</label>
      </node>
      <node id="51">
        <label>shaders/dag_shaders.h</label>
      </node>
      <node id="40">
        <label>shaders/shExprTypes.h</label>
      </node>
      <node id="41">
        <label>shaders/shFunc.h</label>
      </node>
      <node id="46">
        <label>shaders/shader_layout.h</label>
      </node>
      <node id="38">
        <label>shaders/slotTexturesRange.h</label>
      </node>
      <node id="3">
        <label>shsyn.h</label>
      </node>
      <node id="45">
        <label>ska_hash_map/flat_hash_map2.hpp</label>
      </node>
      <node id="25">
        <label>util/dag_bindump_ext.h</label>
      </node>
      <node id="9">
        <label>util/dag_globDef.h</label>
      </node>
      <node id="23">
        <label>util/dag_oaHashNameMap.h</label>
      </node>
      <node id="8">
        <label>util/dag_safeArg.h</label>
      </node>
      <node id="77">
        <label>util/dag_simpleString.h</label>
      </node>
      <node id="55">
        <label>util/dag_stdint.h</label>
      </node>
      <node id="50">
        <label>util/dag_string.h</label>
      </node>
      <node id="7">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>codeBlocks.cpp</label>
        <link refid="codeBlocks_8cpp"/>
      </node>
      <node id="1">
        <label>codeBlocks.h</label>
        <link refid="codeBlocks_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>shCompiler.cpp</label>
        <link refid="shCompiler_8cpp"/>
      </node>
      <node id="5">
        <label>shExprParser.cpp</label>
        <link refid="shExprParser_8cpp"/>
      </node>
      <node id="6">
        <label>shaderSemantic.cpp</label>
        <link refid="shaderSemantic_8cpp"/>
      </node>
      <node id="4">
        <label>shaderSemantic.h</label>
        <link refid="shaderSemantic_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>shsem.cpp</label>
        <link refid="shsem_8cpp"/>
      </node>
      <node id="9">
        <label>variantAssembly.cpp</label>
        <link refid="variantAssembly_8cpp"/>
      </node>
      <node id="8">
        <label>variantSemantic.cpp</label>
        <link refid="variantSemantic_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classCodeSourceBlocks" prot="public">CodeSourceBlocks</innerclass>
    <innerclass refid="structCodeSourceBlocks_1_1CondIf" prot="public">CodeSourceBlocks::CondIf</innerclass>
    <innerclass refid="structCodeSourceBlocks_1_1Condition" prot="public">CodeSourceBlocks::Condition</innerclass>
    <innerclass refid="structCodeSourceBlocks_1_1Unconditional" prot="public">CodeSourceBlocks::Unconditional</innerclass>
    <innerclass refid="structCodeSourceBlocks_1_1Unconditional_1_1Decl" prot="public">CodeSourceBlocks::Unconditional::Decl</innerclass>
    <innerclass refid="structCodeSourceBlocks_1_1Unconditional_1_1DeclBool" prot="public">CodeSourceBlocks::Unconditional::DeclBool</innerclass>
    <innerclass refid="structCodeSourceBlocks_1_1Fragment" prot="public">CodeSourceBlocks::Fragment</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="codeBlocks_8h_1af354d018431265efc4f1b0f51d53db68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DAG_DECLARE_RELOCATABLE</definition>
        <argsstring>(CodeSourceBlocks::Fragment)</argsstring>
        <name>DAG_DECLARE_RELOCATABLE</name>
        <param>
          <type><ref refid="structCodeSourceBlocks_1_1Fragment" kindref="compound">CodeSourceBlocks::Fragment</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="codeBlocks.h" line="125" column="1" declfile="codeBlocks.h" declline="125" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shsem_8h" kindref="compound">shsem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shTargetContext_8h" kindref="compound">shTargetContext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;generic/dag_tab.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/dag_globDef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nameMap_8h" kindref="compound">nameMap.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dag/dag_vector.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structCryptoHash" kindref="compound">CryptoHash</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classCodeSourceBlocks" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCodeSourceBlocks" kindref="compound">CodeSourceBlocks</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structCodeSourceBlocks_1_1ParserContext" kindref="compound">ParserContext</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structCodeSourceBlocks_1_1Fragment" kindref="compound">Fragment</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structCodeSourceBlocks_1_1Condition" kindref="compound">Condition</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structCodeSourceBlocks_1_1Unconditional" kindref="compound">Unconditional</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classCodeSourceBlocks_1a32e3a067a09b1c3c6b13a9a95e5c7a3c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="classCodeSourceBlocks_1a32e3a067a09b1c3c6b13a9a95e5c7a3c" kindref="member">ExprValue</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeSourceBlocks_1a32e3a067a09b1c3c6b13a9a95e5c7a3ca6267ef339fe3b5e7cc5d6160917ca593" kindref="member">NonConst</ref>,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeSourceBlocks_1a32e3a067a09b1c3c6b13a9a95e5c7a3ca2f7a06bf2844224cac2140b35e20a9bb" kindref="member">ConstFalse</ref>,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeSourceBlocks_1a32e3a067a09b1c3c6b13a9a95e5c7a3caf7a81025ec822b1a7554e3b641cff501" kindref="member">ConstTrue</ref>,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structCodeSourceBlocks_1_1CondIf" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structCodeSourceBlocks_1_1CondIf" kindref="compound">CondIf</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="31" refid="structCodeSourceBlocks_1_1CondIf_1a1299b58ae55209d2f265065a5ca7b33d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ShaderTerminal::bool_expr<sp/>*<ref refid="structCodeSourceBlocks_1_1CondIf_1a1299b58ae55209d2f265065a5ca7b33d" kindref="member">expr</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32" refid="structCodeSourceBlocks_1_1CondIf_1a58c8ba4d4d6bc35ad86517d1ecd1f236" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeSourceBlocks_1a32e3a067a09b1c3c6b13a9a95e5c7a3c" kindref="member">ExprValue</ref><sp/><ref refid="structCodeSourceBlocks_1_1CondIf_1a58c8ba4d4d6bc35ad86517d1ecd1f236" kindref="member">constExprVal</ref><sp/>=<sp/><ref refid="classCodeSourceBlocks_1a32e3a067a09b1c3c6b13a9a95e5c7a3ca6267ef339fe3b5e7cc5d6160917ca593" kindref="member">ExprValue::NonConst</ref>;</highlight></codeline>
<codeline lineno="33" refid="structCodeSourceBlocks_1_1CondIf_1a5082e17e70d2a47f60493eb097d995ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;Fragment&gt;<sp/><ref refid="structCodeSourceBlocks_1_1CondIf_1a5082e17e70d2a47f60493eb097d995ed" kindref="member">onTrue</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structCodeSourceBlocks_1_1Condition" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structCodeSourceBlocks_1_1Condition" kindref="compound">Condition</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="38" refid="structCodeSourceBlocks_1_1Condition_1afebec985ea2d605bcf0072159f45ebbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCodeSourceBlocks_1_1CondIf" kindref="compound">CondIf</ref><sp/><ref refid="structCodeSourceBlocks_1_1Condition_1afebec985ea2d605bcf0072159f45ebbd" kindref="member">onIf</ref>;</highlight></codeline>
<codeline lineno="40" refid="structCodeSourceBlocks_1_1Condition_1aef14fa985230d68a692f6ad43c7d1bb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;CondIf&gt;<sp/><ref refid="structCodeSourceBlocks_1_1Condition_1aef14fa985230d68a692f6ad43c7d1bb2" kindref="member">onElif</ref>;</highlight></codeline>
<codeline lineno="42" refid="structCodeSourceBlocks_1_1Condition_1a56eaf214e13da54c0070cdcea9533396" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;Fragment&gt;<sp/><ref refid="structCodeSourceBlocks_1_1Condition_1a56eaf214e13da54c0070cdcea9533396" kindref="member">onElse</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="structCodeSourceBlocks_1_1Unconditional" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structCodeSourceBlocks_1_1Unconditional" kindref="compound">Unconditional</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48" refid="structCodeSourceBlocks_1_1Unconditional_1a72edc72431fdc5ef137edb86815ffd35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structCodeSourceBlocks_1_1Unconditional_1a72edc72431fdc5ef137edb86815ffd35" kindref="member">codeId</ref>,<sp/><ref refid="structCodeSourceBlocks_1_1Unconditional_1a2f8994ca676bc57a3f8e791deda5b5a7" kindref="member">fnameId</ref>,<sp/><ref refid="structCodeSourceBlocks_1_1Unconditional_1a132cad1ccc970cadd62b658fac56812c" kindref="member">line</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structCodeSourceBlocks_1_1Unconditional_1_1Decl" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structCodeSourceBlocks_1_1Unconditional_1_1Decl" kindref="compound">Decl</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52" refid="structCodeSourceBlocks_1_1Unconditional_1_1Decl_1a31b0dcb5e14d2be3e2d2d1653c828034" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structCodeSourceBlocks_1_1Unconditional_1_1Decl_1a31b0dcb5e14d2be3e2d2d1653c828034" kindref="member">identId</ref>,<sp/><ref refid="structCodeSourceBlocks_1_1Unconditional_1_1Decl_1a3e73d6ba6cd3cccb70f6b5e7a0bdcd87" kindref="member">identValue</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="54" refid="structCodeSourceBlocks_1_1Unconditional_1a1392997cb575a2f1887f80f951187f57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCodeSourceBlocks_1_1Unconditional_1_1Decl" kindref="compound">Decl</ref><sp/><ref refid="structCodeSourceBlocks_1_1Unconditional_1a1392997cb575a2f1887f80f951187f57" kindref="member">decl</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structCodeSourceBlocks_1_1Unconditional_1_1DeclBool" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structCodeSourceBlocks_1_1Unconditional_1_1DeclBool" kindref="compound">DeclBool</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58" refid="structCodeSourceBlocks_1_1Unconditional_1_1DeclBool_1a3584b7453ba270285491fba5f9fb974b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structCodeSourceBlocks_1_1Unconditional_1_1DeclBool_1a3584b7453ba270285491fba5f9fb974b" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59" refid="structCodeSourceBlocks_1_1Unconditional_1_1DeclBool_1a6d6e4bafb0305cc6d4eb81c89eb67f98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ShaderTerminal::bool_expr<sp/>*<ref refid="structCodeSourceBlocks_1_1Unconditional_1_1DeclBool_1a6d6e4bafb0305cc6d4eb81c89eb67f98" kindref="member">expr</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="61" refid="structCodeSourceBlocks_1_1Unconditional_1a0f681f329d6c5bacfa61ee14a85750ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCodeSourceBlocks_1_1Unconditional_1_1DeclBool" kindref="compound">DeclBool</ref><sp/><ref refid="structCodeSourceBlocks_1_1Unconditional_1a0f681f329d6c5bacfa61ee14a85750ce" kindref="member">declBool</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>This<sp/>is<sp/>supposed<sp/>to<sp/>trigger<sp/>errors<sp/>only<sp/>when<sp/>blocks<sp/>are<sp/>resolved<sp/>for<sp/>a<sp/>given<sp/>variant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structCodeSourceBlocks_1_1Unconditional_1a2ff45729360582327c0d2e3bdb024ce7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>dag::Vector&lt;eastl::string&gt;<sp/><ref refid="structCodeSourceBlocks_1_1Unconditional_1a2ff45729360582327c0d2e3bdb024ce7" kindref="member">errors</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="structCodeSourceBlocks_1_1Unconditional_1a2038f06d30d3886c4a01c5d94f387b61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structCodeSourceBlocks_1_1Unconditional_1a2038f06d30d3886c4a01c5d94f387b61" kindref="member">isDecl</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structCodeSourceBlocks_1_1Unconditional_1a72edc72431fdc5ef137edb86815ffd35" kindref="member">codeId</ref><sp/>==<sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="68" refid="structCodeSourceBlocks_1_1Unconditional_1a8d5b2d6e2ddc3d6135c61ea3ff7eaa6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structCodeSourceBlocks_1_1Unconditional_1a8d5b2d6e2ddc3d6135c61ea3ff7eaa6f" kindref="member">isDeclBool</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structCodeSourceBlocks_1_1Unconditional_1a72edc72431fdc5ef137edb86815ffd35" kindref="member">codeId</ref><sp/>==<sp/>-2;<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="structCodeSourceBlocks_1_1Fragment" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structCodeSourceBlocks_1_1Fragment" kindref="compound">Fragment</ref></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="74" refid="structCodeSourceBlocks_1_1Fragment_1ab1d7388b309ffe031261bbd55e9a1349" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>eastl::unique_ptr&lt;Condition&gt;<sp/><ref refid="structCodeSourceBlocks_1_1Fragment_1ab1d7388b309ffe031261bbd55e9a1349" kindref="member">cond</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structCodeSourceBlocks_1_1Fragment_1a72413f0098608c3389d20f52c1ce7835" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCodeSourceBlocks_1_1Unconditional" kindref="compound">Unconditional</ref><sp/><ref refid="structCodeSourceBlocks_1_1Fragment_1a72413f0098608c3389d20f52c1ce7835" kindref="member">uncond</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="structCodeSourceBlocks_1_1Fragment_1a6f2fd090dc211e4f877173602c7948ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structCodeSourceBlocks_1_1Fragment_1a6f2fd090dc211e4f877173602c7948ac" kindref="member">isCond</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structCodeSourceBlocks_1_1Fragment_1ab1d7388b309ffe031261bbd55e9a1349" kindref="member">cond</ref><sp/>!=<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="80" refid="structCodeSourceBlocks_1_1Fragment_1a4d98b638086abb3e3f81bf9d69bd5246" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structCodeSourceBlocks_1_1Fragment_1a4d98b638086abb3e3f81bf9d69bd5246" kindref="member">isDecl</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structCodeSourceBlocks_1_1Fragment_1a72413f0098608c3389d20f52c1ce7835" kindref="member">uncond</ref>.<ref refid="structCodeSourceBlocks_1_1Unconditional_1a2038f06d30d3886c4a01c5d94f387b61" kindref="member">isDecl</ref>();<sp/>}</highlight></codeline>
<codeline lineno="81" refid="structCodeSourceBlocks_1_1Fragment_1a087768bf8f3e19e450e8957a18185e77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structCodeSourceBlocks_1_1Fragment_1a087768bf8f3e19e450e8957a18185e77" kindref="member">isDeclBool</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structCodeSourceBlocks_1_1Fragment_1a72413f0098608c3389d20f52c1ce7835" kindref="member">uncond</ref>.<ref refid="structCodeSourceBlocks_1_1Unconditional_1a8d5b2d6e2ddc3d6135c61ea3ff7eaa6f" kindref="member">isDeclBool</ref>();<sp/>}</highlight></codeline>
<codeline lineno="82" refid="structCodeSourceBlocks_1_1Fragment_1a205381e03619e92708cb5cbc6affe3ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCodeSourceBlocks_1_1Unconditional_1_1Decl" kindref="compound">Unconditional::Decl</ref><sp/>&amp;<ref refid="structCodeSourceBlocks_1_1Fragment_1a205381e03619e92708cb5cbc6affe3ac" kindref="member">decl</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structCodeSourceBlocks_1_1Fragment_1a72413f0098608c3389d20f52c1ce7835" kindref="member">uncond</ref>.<ref refid="structCodeSourceBlocks_1_1Unconditional_1a1392997cb575a2f1887f80f951187f57" kindref="member">decl</ref>;<sp/>}</highlight></codeline>
<codeline lineno="83" refid="structCodeSourceBlocks_1_1Fragment_1ad36d13007ef6cbc779d2459fdbd7974c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCodeSourceBlocks_1_1Unconditional_1_1DeclBool" kindref="compound">Unconditional::DeclBool</ref><sp/>&amp;<ref refid="structCodeSourceBlocks_1_1Fragment_1ad36d13007ef6cbc779d2459fdbd7974c" kindref="member">declBool</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structCodeSourceBlocks_1_1Fragment_1a72413f0098608c3389d20f52c1ce7835" kindref="member">uncond</ref>.<ref refid="structCodeSourceBlocks_1_1Unconditional_1a0f681f329d6c5bacfa61ee14a85750ce" kindref="member">declBool</ref>;<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87" refid="classCodeSourceBlocks_1a17b846d381335238c85b16271f096687" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classCodeSourceBlocks_1a17b846d381335238c85b16271f096687" kindref="member">CodeSourceBlocks</ref>()<sp/>:<sp/><ref refid="classCodeSourceBlocks_1ab6ab4d1de2fc690ec8de6c5c79e87f8b" kindref="member">blocks</ref>(midmem),<sp/><ref refid="classCodeSourceBlocks_1abaa15702645aa8ba99ff4367b643f83f" kindref="member">declCount</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classCodeSourceBlocks_1af8bec0946473ef49a4d057b4eadc9dd2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCodeSourceBlocks_1af8bec0946473ef49a4d057b4eadc9dd2" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeSourceBlocks_1ab6ab4d1de2fc690ec8de6c5c79e87f8b" kindref="member">blocks</ref>.clear();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeSourceBlocks_1abaa15702645aa8ba99ff4367b643f83f" kindref="member">declCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCodeSourceBlocks_1a2e8f5b78279512fb8ed6ddcab3486dbf" kindref="member">parseSourceCode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stage,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/><ref refid="classShaderParser_1_1ShaderBoolEvalCB" kindref="compound">ShaderParser::ShaderBoolEvalCB</ref><sp/>&amp;cb,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pp_as_comments,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshc_1_1TargetContext" kindref="compound">shc::TargetContext</ref><sp/>&amp;a_ctx);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>dag::ConstSpan&lt;Unconditional<sp/>*&gt;<sp/><ref refid="classCodeSourceBlocks_1adf3f0ae6d5be4fa27b0e9bee5789dcb2" kindref="member">getPreprocessedCode</ref>(<ref refid="classShaderParser_1_1ShaderBoolEvalCB" kindref="compound">ShaderParser::ShaderBoolEvalCB</ref><sp/>&amp;cb);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="structCryptoHash" kindref="compound">CryptoHash</ref><sp/><ref refid="classCodeSourceBlocks_1a8406dddd1aaff87dcf17ca60b30fabea" kindref="member">getCodeDigest</ref>(dag::ConstSpan&lt;Unconditional<sp/>*&gt;<sp/>code)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>dag::ConstSpan&lt;char&gt;<sp/><ref refid="classCodeSourceBlocks_1a6b7e88fe6e26dbe946f23fb45be76f7a" kindref="member">buildSourceCode</ref>(dag::ConstSpan&lt;Unconditional<sp/>*&gt;<sp/>code);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCodeSourceBlocks_1aa9580c5ad7a0f07a5066c9a4c90074bf" kindref="member">resetCompilation</ref>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114" refid="classCodeSourceBlocks_1ab6ab4d1de2fc690ec8de6c5c79e87f8b" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;Fragment&gt;<sp/><ref refid="classCodeSourceBlocks_1ab6ab4d1de2fc690ec8de6c5c79e87f8b" kindref="member">blocks</ref>;</highlight></codeline>
<codeline lineno="115" refid="classCodeSourceBlocks_1abaa15702645aa8ba99ff4367b643f83f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCodeSourceBlocks_1abaa15702645aa8ba99ff4367b643f83f" kindref="member">declCount</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classCodeSourceBlocks_1a019f1745807a8f2da9de6362c5629d17" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="nameMap_8h_1ad3f42c540507651a7e4ce93760afc216" kindref="member">SCFastNameMap</ref><sp/><ref refid="classCodeSourceBlocks_1a019f1745807a8f2da9de6362c5629d17" kindref="member">incFiles</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCodeSourceBlocks_1a09af05a0f0bd204e2515dd7a890bfd3a" kindref="member">ppSrcCode</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fnameId,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/><ref refid="structCodeSourceBlocks_1_1ParserContext" kindref="compound">ParserContext</ref><sp/>&amp;ctx,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*st_comment,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*end_comment);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCodeSourceBlocks_1accda1ef626ab5b6ca05707da18f132bd" kindref="member">ppCheckDirective</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/><ref refid="structCodeSourceBlocks_1_1ParserContext" kindref="compound">ParserContext</ref><sp/>&amp;ctx);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCodeSourceBlocks_1a0d4a24b752fe215455a3f8cd0232f7e5" kindref="member">ppDirective</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dtext,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fnameId,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/><ref refid="structCodeSourceBlocks_1_1ParserContext" kindref="compound">ParserContext</ref><sp/>&amp;ctx);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCodeSourceBlocks_1af099e1a1bbbc1bdd6d50d106abb7a78e" kindref="member">ppDoInclude</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*incl_fn,<sp/>Tab&lt;char&gt;<sp/>&amp;out_text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src_fn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_ln,<sp/><ref refid="structCodeSourceBlocks_1_1ParserContext" kindref="compound">ParserContext</ref><sp/>&amp;ctx);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">};</highlight></codeline>
<codeline lineno="125" refid="codeBlocks_8h_1af354d018431265efc4f1b0f51d53db68" refkind="member"><highlight class="normal"><ref refid="codeBlocks_8h_1af354d018431265efc4f1b0f51d53db68" kindref="member">DAG_DECLARE_RELOCATABLE</ref>(<ref refid="structCodeSourceBlocks_1_1Fragment" kindref="compound">CodeSourceBlocks::Fragment</ref>);</highlight></codeline>
    </programlisting>
    <location file="codeBlocks.h"/>
  </compounddef>
</doxygen>
