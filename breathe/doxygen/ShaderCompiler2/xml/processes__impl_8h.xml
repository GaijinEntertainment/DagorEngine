<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="processes__impl_8h" kind="file" language="C++">
    <compoundname>processes_impl.h</compoundname>
    <includes refid="processes_8h" local="yes">processes.h</includes>
    <includes local="no">EASTL/unique_ptr.h</includes>
    <includes local="no">EASTL/optional.h</includes>
    <includes local="no">EASTL/deque.h</includes>
    <includes local="no">generic/dag_tab.h</includes>
    <includes local="no">osApiWrappers/dag_atomic_types.h</includes>
    <includedby refid="processes_8cpp" local="yes">processes.cpp</includedby>
    <includedby refid="processes__unix_8cpp" local="yes">processes_unix.cpp</includedby>
    <includedby refid="processes__win_8cpp" local="yes">processes_win.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>processes.h</label>
        <link refid="processes_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>processes_impl.h</label>
        <link refid="processes__impl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>EASTL/deque.h</label>
      </node>
      <node id="6">
        <label>EASTL/optional.h</label>
      </node>
      <node id="5">
        <label>EASTL/string.h</label>
      </node>
      <node id="7">
        <label>EASTL/unique_ptr.h</label>
      </node>
      <node id="4">
        <label>dag/dag_vector.h</label>
      </node>
      <node id="3">
        <label>generic/dag_fixedMoveOnlyFunction.h</label>
      </node>
      <node id="9">
        <label>generic/dag_tab.h</label>
      </node>
      <node id="10">
        <label>osApiWrappers/dag_atomic_types.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>processes.cpp</label>
        <link refid="processes_8cpp"/>
      </node>
      <node id="1">
        <label>processes_impl.h</label>
        <link refid="processes__impl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>processes_unix.cpp</label>
        <link refid="processes__unix_8cpp"/>
      </node>
      <node id="4">
        <label>processes_win.cpp</label>
        <link refid="processes__win_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structproc_1_1internal_1_1OutputSink" prot="public">proc::internal::OutputSink</innerclass>
    <innerclass refid="structproc_1_1internal_1_1ProcessHandle" prot="public">proc::internal::ProcessHandle</innerclass>
    <innerclass refid="structproc_1_1internal_1_1ExecutionState" prot="public">proc::internal::ExecutionState</innerclass>
    <innernamespace refid="namespaceproc">proc</innernamespace>
    <innernamespace refid="namespaceproc_1_1internal">proc::internal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="processes_8h" kindref="compound">processes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/unique_ptr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/optional.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/deque.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;generic/dag_tab.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;osApiWrappers/dag_atomic_types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceproc" kindref="compound">proc</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13" refid="namespaceproc_1_1internal" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Opaque<sp/>types<sp/>specified<sp/>by<sp/>the<sp/>platform<sp/>specific<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structproc_1_1internal_1_1ProcessData" kindref="compound">ProcessData</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structproc_1_1internal_1_1ExtraStateData" kindref="compound">ExtraStateData</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="structproc_1_1internal_1_1OutputSink" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structproc_1_1internal_1_1OutputSink" kindref="compound">OutputSink</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21" refid="structproc_1_1internal_1_1OutputSink_1a9c99c8a339c38c441fe1aa1baba0acda" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;char&gt;<sp/><ref refid="structproc_1_1internal_1_1OutputSink_1a9c99c8a339c38c441fe1aa1baba0acda" kindref="member">buffer</ref>{};</highlight></codeline>
<codeline lineno="22" refid="structproc_1_1internal_1_1OutputSink_1a88e9d69a0f203e32fcff858bab3053ce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structproc_1_1internal_1_1OutputSink_1a88e9d69a0f203e32fcff858bab3053ce" kindref="member">lastTs</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="23" refid="structproc_1_1internal_1_1OutputSink_1a6b21e12821791b460d791c32cae86491" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structproc_1_1internal_1_1OutputSink_1a6b21e12821791b460d791c32cae86491" kindref="member">messageSep</ref><sp/>=<sp/><ref refid="namespaceproc_1a2d59f96d30d2d59f859f636daeeb9948" kindref="member">MANAGED_MESSAGE_SEPARATOR</ref>;</highlight></codeline>
<codeline lineno="24" refid="structproc_1_1internal_1_1OutputSink_1af249c1edcde90402cf129e9d337e077e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structproc_1_1internal_1_1OutputSink_1af249c1edcde90402cf129e9d337e077e" kindref="member">free</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="namespaceproc_1_1internal_1ad2096b942d412deeebcd891d4d276f7c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespaceproc_1_1internal_1ad2096b942d412deeebcd891d4d276f7c" kindref="member">SinkHandle</ref><sp/>:<sp/>uint32_t</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="namespaceproc_1_1internal_1ad2096b942d412deeebcd891d4d276f7caccc0377a8afbf50e7094f5c23a8af223" kindref="member">INVALID</ref><sp/>=<sp/>uint32_t(-1)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structproc_1_1internal_1_1ProcessHandle" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structproc_1_1internal_1_1ProcessHandle" kindref="compound">ProcessHandle</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34" refid="structproc_1_1internal_1_1ProcessHandle_1aa0a9af603c4fbc2ae6d3b1bb277de629" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structproc_1_1ProcessTask" kindref="compound">ProcessTask</ref><sp/><ref refid="structproc_1_1internal_1_1ProcessHandle_1aa0a9af603c4fbc2ae6d3b1bb277de629" kindref="member">task</ref>{};</highlight></codeline>
<codeline lineno="35" refid="structproc_1_1internal_1_1ProcessHandle_1affd838c8f9407c54fa0568ba1b67e772" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structproc_1_1internal_1_1ProcessData" kindref="compound">ProcessData</ref><sp/>*<ref refid="structproc_1_1internal_1_1ProcessHandle_1affd838c8f9407c54fa0568ba1b67e772" kindref="member">processData</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36" refid="structproc_1_1internal_1_1ProcessHandle_1a23f455f33a3d764ff1372421ef1deb5d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceproc_1_1internal_1ad2096b942d412deeebcd891d4d276f7c" kindref="member">SinkHandle</ref><sp/><ref refid="structproc_1_1internal_1_1ProcessHandle_1a23f455f33a3d764ff1372421ef1deb5d" kindref="member">sink</ref><sp/>=<sp/><ref refid="namespaceproc_1_1internal_1ad2096b942d412deeebcd891d4d276f7caccc0377a8afbf50e7094f5c23a8af223" kindref="member">SinkHandle::INVALID</ref>;</highlight></codeline>
<codeline lineno="37" refid="structproc_1_1internal_1_1ProcessHandle_1a7b34e1994ba23e4695f383beb371f562" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structproc_1_1internal_1_1ProcessHandle_1a7b34e1994ba23e4695f383beb371f562" kindref="member">hasCommunicated</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38" refid="structproc_1_1internal_1_1ProcessHandle_1ad79bf8201d4bad51d73ab51e706fed25" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structproc_1_1internal_1_1ProcessHandle_1ad79bf8201d4bad51d73ab51e706fed25" kindref="member">hasBeenSignalled</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structproc_1_1internal_1_1ExecutionState" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structproc_1_1internal_1_1ExecutionState" kindref="compound">ExecutionState</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43" refid="structproc_1_1internal_1_1ExecutionState_1a9777d85c4cd0eb0a3c0933a69fc7bff8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structproc_1_1internal_1_1ExecutionState_1a9777d85c4cd0eb0a3c0933a69fc7bff8" kindref="member">maxProcs</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="44" refid="structproc_1_1internal_1_1ExecutionState_1a56dd20117f73dd24ec51dd4bf70b6712" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structproc_1_1internal_1_1ExecutionState_1a56dd20117f73dd24ec51dd4bf70b6712" kindref="member">shouldCancelOnProcFail</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="structproc_1_1internal_1_1ExecutionState_1a6f3c972a055e390fad8ac722b67e7057" refkind="member"><highlight class="normal"><sp/><sp/>eastl::deque&lt;ProcessTask&gt;<sp/><ref refid="structproc_1_1internal_1_1ExecutionState_1a6f3c972a055e390fad8ac722b67e7057" kindref="member">tasks</ref>{};</highlight></codeline>
<codeline lineno="47" refid="structproc_1_1internal_1_1ExecutionState_1a52113053b89b47c590a04aed52d8cbed" refkind="member"><highlight class="normal"><sp/><sp/>eastl::deque&lt;ProcessHandle&gt;<sp/><ref refid="structproc_1_1internal_1_1ExecutionState_1a52113053b89b47c590a04aed52d8cbed" kindref="member">processes</ref>{};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structproc_1_1internal_1_1ExecutionState_1ad43f4f5f407e36f94d02b12a00f7269a" refkind="member"><highlight class="normal"><sp/><sp/>dag::Vector&lt;OutputSink&gt;<sp/><ref refid="structproc_1_1internal_1_1ExecutionState_1ad43f4f5f407e36f94d02b12a00f7269a" kindref="member">sinkPool</ref>{};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="structproc_1_1internal_1_1ExecutionState_1a06a4a1637108f2cfa9eceacfaf0d5aba" refkind="member"><highlight class="normal"><sp/><sp/>dag::AtomicInteger&lt;bool&gt;<sp/><ref refid="structproc_1_1internal_1_1ExecutionState_1a06a4a1637108f2cfa9eceacfaf0d5aba" kindref="member">cancelled</ref>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structproc_1_1internal_1_1ExecutionState_1ad0b597eff5c66f6fcce0da301edb874e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structproc_1_1internal_1_1ExtraStateData" kindref="compound">ExtraStateData</ref><sp/>*<ref refid="structproc_1_1internal_1_1ExecutionState_1ad0b597eff5c66f6fcce0da301edb874e" kindref="member">extraData</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="namespaceproc_1_1internal_1a57a46be36e26d46d3477e81e4ea2f24a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespaceproc_1_1internal_1a57a46be36e26d46d3477e81e4ea2f24a" kindref="member">AwaitResult</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="namespaceproc_1_1internal_1a57a46be36e26d46d3477e81e4ea2f24aaeabec104085a41ddaf3d1bf51e8662dd" kindref="member">ALL_SUCCEEDED</ref>,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="namespaceproc_1_1internal_1a57a46be36e26d46d3477e81e4ea2f24aa1d645d8f91c3389ba01ed60174902e87" kindref="member">SOME_FAILED</ref>,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="namespaceproc_1_1internal_1a57a46be36e26d46d3477e81e4ea2f24aaeb33eebbfae2724bc463f0e6ecfe7acb" kindref="member">CANCELLED_BY_USER</ref>,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="namespaceproc_1_1internal_1a57a46be36e26d46d3477e81e4ea2f24aa070a0fb40f6c308ab544b227660aadff" kindref="member">TIMEOUT</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="namespaceproc_1_1internal_1a14600a831f3eac0fffde2ddedaa8a192" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceproc_1_1internal_1a14600a831f3eac0fffde2ddedaa8a192" kindref="member">NO_TIMEOUT</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceproc_1_1internal_1a4905227b272aef8099609719028dffba" kindref="member">init_state</ref>(<ref refid="structproc_1_1internal_1_1ExecutionState" kindref="compound">ExecutionState</ref><sp/>&amp;state);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceproc_1_1internal_1a19b4179d06707dea59dea74999925c80" kindref="member">deinit_state</ref>(<ref refid="structproc_1_1internal_1_1ExecutionState" kindref="compound">ExecutionState</ref><sp/>&amp;state);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceproc_1_1internal_1a6f862e381c8b02a8b325d2a8553a1bd9" kindref="member">start_execution</ref>(<ref refid="structproc_1_1internal_1_1ExecutionState" kindref="compound">ExecutionState</ref><sp/>&amp;state);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceproc_1_1internal_1aece7975439e3ef6b29a1cba7bab509ad" kindref="member">end_execution</ref>(<ref refid="structproc_1_1internal_1_1ExecutionState" kindref="compound">ExecutionState</ref><sp/>&amp;state);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="namespaceproc_1_1internal_1a57a46be36e26d46d3477e81e4ea2f24a" kindref="member">AwaitResult</ref><sp/><ref refid="namespaceproc_1_1internal_1a4a114e1b87e6f949387bf2de9d1d2b19" kindref="member">await_processes</ref>(<ref refid="structproc_1_1internal_1_1ExecutionState" kindref="compound">ExecutionState</ref><sp/>&amp;state,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>listen_to_cancellation_event,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout_ms<sp/>=<sp/><ref refid="namespaceproc_1_1internal_1a14600a831f3eac0fffde2ddedaa8a192" kindref="member">NO_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">eastl::optional&lt;ProcessHandle&gt;<sp/><ref refid="namespaceproc_1_1internal_1ad837746d9e2f36aefca39e78d569ae4e" kindref="member">spawn_process</ref>(<ref refid="structproc_1_1internal_1_1ExecutionState" kindref="compound">ExecutionState</ref><sp/>&amp;state,<sp/><ref refid="structproc_1_1ProcessTask" kindref="compound">ProcessTask</ref><sp/>&amp;&amp;task);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceproc_1_1internal_1ace481c1794d7a8c1214e97993a7dbc48" kindref="member">serve_process_output</ref>(<ref refid="structproc_1_1internal_1_1ExecutionState" kindref="compound">ExecutionState</ref><sp/>&amp;state,<sp/><ref refid="structproc_1_1internal_1_1ProcessHandle" kindref="compound">ProcessHandle</ref><sp/>&amp;hnd);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceproc_1_1internal_1a3a8e8a76befc94e8fb0412f6b498c634" kindref="member">send_interrupt_signal_to_process</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structproc_1_1internal_1_1ProcessHandle" kindref="compound">ProcessHandle</ref><sp/>&amp;process);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceproc_1_1internal_1aa7c8c1690b4664163b51eb9ca5351472" kindref="member">kill_process</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structproc_1_1internal_1_1ProcessHandle" kindref="compound">ProcessHandle</ref><sp/>&amp;process);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceproc_1_1internal_1a6cd68800bcaada199b72a5320a36adf6" kindref="member">fire_cancellation_event</ref>(<ref refid="structproc_1_1internal_1_1ExecutionState" kindref="compound">ExecutionState</ref><sp/>&amp;state);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>proc</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="processes_impl.h"/>
  </compounddef>
</doxygen>
