<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="shExprParser_8h" kind="file" language="C++">
    <compoundname>shExprParser.h</compoundname>
    <includedby refid="semUtils_8cpp" local="yes">semUtils.cpp</includedby>
    <includedby refid="shExprParser_8cpp" local="yes">shExprParser.cpp</includedby>
    <includedby refid="variablesMerger_8cpp" local="yes">variablesMerger.cpp</includedby>
    <includedby refid="variantAssembly_8cpp" local="yes">variantAssembly.cpp</includedby>
    <includedby refid="variantSemantic_8cpp" local="yes">variantSemantic.cpp</includedby>
    <invincdepgraph>
      <node id="2">
        <label>semUtils.cpp</label>
        <link refid="semUtils_8cpp"/>
      </node>
      <node id="3">
        <label>shExprParser.cpp</label>
        <link refid="shExprParser_8cpp"/>
      </node>
      <node id="1">
        <label>shExprParser.h</label>
        <link refid="shExprParser_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>variablesMerger.cpp</label>
        <link refid="variablesMerger_8cpp"/>
      </node>
      <node id="5">
        <label>variantAssembly.cpp</label>
        <link refid="variantAssembly_8cpp"/>
      </node>
      <node id="6">
        <label>variantSemantic.cpp</label>
        <link refid="variantSemantic_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classShaderParser_1_1ExpressionParser" prot="public">ShaderParser::ExpressionParser</innerclass>
    <innerclass refid="structShaderParser_1_1ExpressionParser_1_1Context" prot="public">ShaderParser::ExpressionParser::Context</innerclass>
    <innernamespace refid="namespaceshc">shc</innernamespace>
    <innernamespace refid="namespaceShaderParser">ShaderParser</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>support<sp/>for<sp/>shader<sp/>arithemtic<sp/>expressions<sp/>&amp;<sp/>local<sp/>variables</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shExpr_8h" kindref="compound">shExpr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;shaders/shExprTypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/stack.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dag/dag_vector.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structParser" kindref="compound">Parser</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structLocalVar" kindref="compound">LocalVar</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceshc" kindref="compound">shc</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">VariantContext;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceShaderParser" kindref="compound">ShaderParser</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*********************************</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>class<sp/>ExpressionParser</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*********************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classShaderParser_1_1ExpressionParser" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classShaderParser_1_1ExpressionParser" kindref="compound">ExpressionParser</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33" refid="structShaderParser_1_1ExpressionParser_1_1Context" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structShaderParser_1_1ExpressionParser_1_1Context" kindref="compound">Context</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="35" refid="structShaderParser_1_1ExpressionParser_1_1Context_1abf41229ea2ae08fd0ab8cea6882f6ddf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>shexpr::ValueType<sp/><ref refid="structShaderParser_1_1ExpressionParser_1_1Context_1abf41229ea2ae08fd0ab8cea6882f6ddf" kindref="member">destValueType</ref><sp/>=<sp/>shexpr::VT_UNDEFINED;</highlight></codeline>
<codeline lineno="36" refid="structShaderParser_1_1ExpressionParser_1_1Context_1a5c308911175a6b73a5db37a039706c94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structShaderParser_1_1ExpressionParser_1_1Context_1a5c308911175a6b73a5db37a039706c94" kindref="member">destIsInteger</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37" refid="structShaderParser_1_1ExpressionParser_1_1Context_1ab2c5f6845a00aec85b444ba87ff8302c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Terminal<sp/>*<ref refid="structShaderParser_1_1ExpressionParser_1_1Context_1ab2c5f6845a00aec85b444ba87ff8302c" kindref="member">destTerm</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ctor/dtor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1ExpressionParser" kindref="compound">ExpressionParser</ref>(<ref refid="classshc_1_1VariantContext" kindref="compound">shc::VariantContext</ref><sp/>&amp;ctx);</highlight></codeline>
<codeline lineno="42" refid="classShaderParser_1_1ExpressionParser_1a9085b7eeeaa376548bba93457786f708" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1ExpressionParser_1a9085b7eeeaa376548bba93457786f708" kindref="member">ExpressionParser</ref>(<ref refid="structParser" kindref="compound">Parser</ref><sp/>&amp;parser)<sp/>:<sp/>variantCtx{nullptr},<sp/>parser{parser}<sp/>{}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1ExpressionParser_1a107fbfb633c8a18c8f24fac035605fe6" kindref="member">parseExpression</ref>(ShaderTerminal::arithmetic_expr<sp/>&amp;s,<sp/><ref refid="classShaderParser_1_1ComplexExpression" kindref="compound">ComplexExpression</ref><sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Context<sp/>&amp;ctx)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>expression<sp/>-<sp/>return<sp/>true,<sp/>if<sp/>it&apos;s<sp/>constant<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classShaderParser_1_1ExpressionParser_1af038fb80abc17ef3c6f532a36642b8d7" kindref="member">parseConstExpression</ref>(ShaderTerminal::arithmetic_expr<sp/>&amp;s,<sp/>Color4<sp/>&amp;ret_value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Context<sp/>&amp;ctx)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classshc_1_1VariantContext" kindref="compound">shc::VariantContext</ref><sp/>*variantCtx<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="structParser" kindref="compound">Parser</ref><sp/>&amp;parser;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>expression<sp/>-<sp/>*<sp/>and<sp/>/<sp/>operators<sp/>or<sp/>single<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>parseSubExpression(ShaderTerminal::arithmetic_expr_md<sp/>&amp;s,<sp/><ref refid="classShaderParser_1_1ComplexExpression" kindref="compound">ComplexExpression</ref><sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Context<sp/>&amp;ctx)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>operand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>parseOperand(ShaderTerminal::arithmetic_operand<sp/>&amp;s,<sp/>shexpr::OperandType<sp/>op_type,<sp/><ref refid="classShaderParser_1_1ComplexExpression" kindref="compound">ComplexExpression</ref><sp/>*e,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Context<sp/>&amp;ctx)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>parseColor(ShaderTerminal::arithmetic_color<sp/>&amp;s,<sp/><ref refid="classShaderParser_1_1ColorValueExpression" kindref="compound">ColorValueExpression</ref><sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Context<sp/>&amp;ctx)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>color<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>shexpr::ColorChannel<sp/>parseColorMask(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>channel)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>ExpressionParser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ShaderParser</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="shExprParser.h"/>
  </compounddef>
</doxygen>
