<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="hwAssembly_8cpp" kind="file" language="C++">
    <compoundname>hwAssembly.cpp</compoundname>
    <includes refid="hwAssembly_8h" local="yes">hwAssembly.h</includes>
    <includes refid="hwSemantic_8h" local="yes">hwSemantic.h</includes>
    <includes refid="shCompContext_8h" local="yes">shCompContext.h</includes>
    <includes refid="globalConfig_8h" local="yes">globalConfig.h</includes>
    <incdepgraph>
      <node id="58">
        <label>DebugLevel.h</label>
        <link refid="DebugLevel_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>blkHash.h</label>
        <link refid="blkHash_8h"/>
      </node>
      <node id="7">
        <label>commonUtils.h</label>
        <link refid="commonUtils_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>const3d.h</label>
        <link refid="const3d_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>cppStcode.h</label>
        <link refid="cppStcode_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cppStcodeAssembly.h</label>
        <link refid="cppStcodeAssembly_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>cppStcodeBuilder.h</label>
        <link refid="cppStcodeBuilder_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>cppStcodePlatformInfo.h</label>
        <link refid="cppStcodePlatformInfo_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>globalConfig.h</label>
        <link refid="globalConfig_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>hlslRegisters.h</label>
        <link refid="hlslRegisters_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>hlslStage.h</label>
        <link refid="hlslStage_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>hwAssembly.cpp</label>
        <link refid="hwAssembly_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hwAssembly.h</label>
        <link refid="hwAssembly_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>hwSemantic.h</label>
        <link refid="hwSemantic_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>nameMap.h</label>
        <link refid="nameMap_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>processes.h</label>
        <link refid="processes_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>shCompContext.h</label>
        <link refid="shCompContext_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>shCompilationInfo.h</label>
        <link refid="shCompilationInfo_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>shLog.h</label>
        <link refid="shLog_8h"/>
      </node>
      <node id="51">
        <label>shMacro.h</label>
        <link refid="shMacro_8h"/>
      </node>
      <node id="16">
        <label>shaderSave.h</label>
        <link refid="shaderSave_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>shaderTab.h</label>
        <link refid="shaderTab_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>shlexterm.h</label>
        <link refid="shlexterm_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>varMap.h</label>
        <link refid="varMap_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>EASTL/algorithm.h</label>
      </node>
      <node id="32">
        <label>EASTL/array.h</label>
      </node>
      <node id="11">
        <label>EASTL/optional.h</label>
      </node>
      <node id="3">
        <label>EASTL/string.h</label>
      </node>
      <node id="54">
        <label>EASTL/type_traits.h</label>
      </node>
      <node id="40">
        <label>EASTL/unique_ptr.h</label>
      </node>
      <node id="56">
        <label>EASTL/variant.h</label>
      </node>
      <node id="33">
        <label>cstdint</label>
      </node>
      <node id="27">
        <label>cstring</label>
      </node>
      <node id="23">
        <label>dag/dag_vector.h</label>
      </node>
      <node id="22">
        <label>debug/dag_assert.h</label>
      </node>
      <node id="39">
        <label>drv/3d/dag_consts.h</label>
      </node>
      <node id="30">
        <label>generic/dag_enumerate.h</label>
      </node>
      <node id="31">
        <label>generic/dag_expected.h</label>
      </node>
      <node id="44">
        <label>generic/dag_fixedMoveOnlyFunction.h</label>
      </node>
      <node id="20">
        <label>generic/dag_tab.h</label>
      </node>
      <node id="26">
        <label>hash/BLAKE3/blake3.h</label>
      </node>
      <node id="48">
        <label>ioSys/dag_dataBlock.h</label>
      </node>
      <node id="55">
        <label>memory</label>
      </node>
      <node id="35">
        <label>memory/dag_mem.h</label>
      </node>
      <node id="38">
        <label>shaders/dag_shaderVarType.h</label>
      </node>
      <node id="47">
        <label>shaders/dag_shaders.h</label>
      </node>
      <node id="36">
        <label>shaders/shExprTypes.h</label>
      </node>
      <node id="37">
        <label>shaders/shFunc.h</label>
      </node>
      <node id="42">
        <label>shaders/shader_layout.h</label>
      </node>
      <node id="34">
        <label>shaders/slotTexturesRange.h</label>
      </node>
      <node id="50">
        <label>shsyn.h</label>
      </node>
      <node id="41">
        <label>ska_hash_map/flat_hash_map2.hpp</label>
      </node>
      <node id="21">
        <label>util/dag_bindump_ext.h</label>
      </node>
      <node id="10">
        <label>util/dag_globDef.h</label>
      </node>
      <node id="19">
        <label>util/dag_oaHashNameMap.h</label>
      </node>
      <node id="9">
        <label>util/dag_safeArg.h</label>
      </node>
      <node id="46">
        <label>util/dag_string.h</label>
      </node>
      <node id="8">
        <label>utility</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceassembly">assembly</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="hwAssembly_8cpp_1a0d5ba2ce1cbcf9e030e994ee5396f39d" prot="public" static="no">
        <name>ADD_HW_MACRO</name>
        <param><defname>TOKEN</defname></param>
        <initializer>  if (<ref refid="namespacesemantic_1a3f41f0541f7be2032f5c877c84ec11a5" kindref="member">semantic::compare_hw_token</ref>(SHADER_TOKENS::SHTOK_##TOKEN, ctx)) \
  res.append_sprintf(&quot;#define _HARDWARE_%s 1\n&quot;, to_upcase_str(#TOKEN).c_str())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hwAssembly.cpp" line="31" column="9"/>
      </memberdef>
      <memberdef kind="define" id="hwAssembly_8cpp_1a1d501dc8229be6c016ba171f90394806" prot="public" static="no">
        <name>TRY_ADD_HW_MACRO</name>
        <param><defname>TOKEN</defname></param>
        <initializer>  do                                                                                        \
  {                                                                                         \
    const eastl::string tok = to_upcase_str(#TOKEN);                                        \
    if (defines.find(tok.c_str()) == eastl::string::npos &amp;&amp; shaderModelLe(#TOKEN, profile)) \
      defines.append_sprintf(&quot;#define _HARDWARE_%s 1\n&quot;, tok.c_str());                      \
  } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hwAssembly.cpp" line="119" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hwAssembly_8h" kindref="compound">hwAssembly.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hwSemantic_8h" kindref="compound">hwSemantic.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shCompContext_8h" kindref="compound">shCompContext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="globalConfig_8h" kindref="compound">globalConfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_DX12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dx12/asmShaderDXIL.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="namespaceassembly" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceassembly" kindref="compound">assembly</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>eastl::string<sp/>to_upcase_str(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;s)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>eastl::string<sp/>res<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>&amp;c<sp/>:<sp/>res)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">eastl::string<sp/><ref refid="namespaceassembly_1a7c62fb915f6b0f8146ecec1045b43bbb" kindref="member">build_common_hardware_defines_hlsl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshc_1_1CompilationContext" kindref="compound">shc::CompilationContext</ref><sp/>&amp;ctx)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>eastl::string<sp/>res{};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADD_HW_MACRO(TOKEN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/>if<sp/>(semantic::compare_hw_token(SHADER_TOKENS::SHTOK_##TOKEN,<sp/>ctx))<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/>res.append_sprintf(&quot;#define<sp/>_HARDWARE_%s<sp/>1\n&quot;</highlight><highlight class="normal">,<sp/>to_upcase_str(#TOKEN).c_str())</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="hwAssembly_8cpp_1a0d5ba2ce1cbcf9e030e994ee5396f39d" kindref="member">ADD_HW_MACRO</ref>(pc);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="hwAssembly_8cpp_1a0d5ba2ce1cbcf9e030e994ee5396f39d" kindref="member">ADD_HW_MACRO</ref>(dx11);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="hwAssembly_8cpp_1a0d5ba2ce1cbcf9e030e994ee5396f39d" kindref="member">ADD_HW_MACRO</ref>(dx12);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="hwAssembly_8cpp_1a0d5ba2ce1cbcf9e030e994ee5396f39d" kindref="member">ADD_HW_MACRO</ref>(metaliOS);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="hwAssembly_8cpp_1a0d5ba2ce1cbcf9e030e994ee5396f39d" kindref="member">ADD_HW_MACRO</ref>(metal);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="hwAssembly_8cpp_1a0d5ba2ce1cbcf9e030e994ee5396f39d" kindref="member">ADD_HW_MACRO</ref>(vulkan);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="hwAssembly_8cpp_1a0d5ba2ce1cbcf9e030e994ee5396f39d" kindref="member">ADD_HW_MACRO</ref>(ps4);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="hwAssembly_8cpp_1a0d5ba2ce1cbcf9e030e994ee5396f39d" kindref="member">ADD_HW_MACRO</ref>(ps5);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="hwAssembly_8cpp_1a0d5ba2ce1cbcf9e030e994ee5396f39d" kindref="member">ADD_HW_MACRO</ref>(xbox);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="hwAssembly_8cpp_1a0d5ba2ce1cbcf9e030e994ee5396f39d" kindref="member">ADD_HW_MACRO</ref>(scarlett);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="hwAssembly_8cpp_1a0d5ba2ce1cbcf9e030e994ee5396f39d" kindref="member">ADD_HW_MACRO</ref>(fsh_4_0);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="hwAssembly_8cpp_1a0d5ba2ce1cbcf9e030e994ee5396f39d" kindref="member">ADD_HW_MACRO</ref>(fsh_4_1);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="hwAssembly_8cpp_1a0d5ba2ce1cbcf9e030e994ee5396f39d" kindref="member">ADD_HW_MACRO</ref>(fsh_5_0);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="hwAssembly_8cpp_1a0d5ba2ce1cbcf9e030e994ee5396f39d" kindref="member">ADD_HW_MACRO</ref>(fsh_6_0);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="hwAssembly_8cpp_1a0d5ba2ce1cbcf9e030e994ee5396f39d" kindref="member">ADD_HW_MACRO</ref>(fsh_6_2);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="hwAssembly_8cpp_1a0d5ba2ce1cbcf9e030e994ee5396f39d" kindref="member">ADD_HW_MACRO</ref>(fsh_6_6);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ADD_HW_MACRO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>target-specific<sp/>predefines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*predefines_str<sp/>=</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_C1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_CROSS_TARGET_C2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_CROSS_TARGET_DX12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>dx12::dxil::Platform::XBOX_ONE<sp/>==<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().targetPlatform</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>?</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;predefines_dx12x.hlsl.inl&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>dx12::dxil::Platform::XBOX_SCARLETT<sp/>==<sp/><ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().targetPlatform<sp/>?</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;predefines_dx12xs.hlsl.inl&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;predefines_dx12.hlsl.inl&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_CROSS_TARGET_DX11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;predefines_dx11.hlsl.inl&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_CROSS_TARGET_SPIRV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;predefines_spirv.hlsl.inl&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_CROSS_TARGET_METAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;predefines_metal.hlsl.inl&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().hlslDefines.length())</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>res.append(<ref refid="namespaceshc_1a47efde6b3d493adbe2119a5593807d36" kindref="member">shc::config</ref>().hlslDefines.c_str());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(predefines_str)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>res.append(predefines_str);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>res.push_back(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_CROSS_TARGET_C2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">eastl::string<sp/><ref refid="namespaceassembly_1a07f2c200251b6e2fc46997a991093302" kindref="member">build_hardware_defines_hlsl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*profile,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_halfs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshc_1_1CompilationContext" kindref="compound">shc::CompilationContext</ref><sp/>&amp;ctx)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>eastl::string<sp/>defines{};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>defines.sprintf(</highlight><highlight class="stringliteral">&quot;#define<sp/>_SHADER_STAGE_%cS<sp/>1\n&quot;</highlight><highlight class="normal">,<sp/>toupper(profile[0]));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>defines<sp/>+=<sp/>ctx.<ref refid="classshc_1_1CompilationContext_1aa26118117091cbb3b7c91678d11e49fc" kindref="member">commonHlslDefines</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(profile)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Format<sp/>required:<sp/>..._#_#,<sp/>where<sp/>#<sp/>are<sp/>digits<sp/>in<sp/>the<sp/>shader<sp/>model<sp/>version,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>user-defined<sp/>profiles<sp/>this<sp/>is<sp/>validated<sp/>on<sp/>hlsl_compile<sp/>evaluation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shaderModelLe<sp/>=<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*t1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*t2)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>isNum<sp/>=<sp/>[](</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">;<sp/>};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l1<sp/>=<sp/>strlen(t1);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l2<sp/>=<sp/>strlen(t2);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G_ASSERT(l1<sp/>&gt;=<sp/>3<sp/>&amp;&amp;<sp/>l2<sp/>&gt;=<sp/>3);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>+=<sp/>l1<sp/>-<sp/>3;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>+=<sp/>l2<sp/>-<sp/>3;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G_ASSERT(isNum(t1[0])<sp/>&amp;&amp;<sp/>isNum(t2[0])<sp/>&amp;&amp;<sp/>isNum(t1[2])<sp/>&amp;&amp;<sp/>isNum(t2[2]));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G_ASSERT(t1[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>t2[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t1[0]<sp/>&lt;<sp/>t2[0]<sp/>||<sp/>(t1[0]<sp/>==<sp/>t2[0]<sp/>&amp;&amp;<sp/>t1[2]<sp/>&lt;=<sp/>t2[2]);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRY_ADD_HW_MACRO(TOKEN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/>do<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>const<sp/>eastl::string<sp/>tok<sp/>=<sp/>to_upcase_str(#TOKEN);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(defines.find(tok.c_str())<sp/>==<sp/>eastl::string::npos<sp/>&amp;&amp;<sp/>shaderModelLe(#TOKEN,<sp/>profile))<sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>defines.append_sprintf(&quot;#define<sp/>_HARDWARE_%s<sp/>1\n&quot;</highlight><highlight class="normal">,<sp/>tok.c_str());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}<sp/>while<sp/>(0)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hwAssembly_8cpp_1a1d501dc8229be6c016ba171f90394806" kindref="member">TRY_ADD_HW_MACRO</ref>(fsh_4_0);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hwAssembly_8cpp_1a1d501dc8229be6c016ba171f90394806" kindref="member">TRY_ADD_HW_MACRO</ref>(fsh_4_1);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hwAssembly_8cpp_1a1d501dc8229be6c016ba171f90394806" kindref="member">TRY_ADD_HW_MACRO</ref>(fsh_5_0);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hwAssembly_8cpp_1a1d501dc8229be6c016ba171f90394806" kindref="member">TRY_ADD_HW_MACRO</ref>(fsh_6_0);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hwAssembly_8cpp_1a1d501dc8229be6c016ba171f90394806" kindref="member">TRY_ADD_HW_MACRO</ref>(fsh_6_2);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hwAssembly_8cpp_1a1d501dc8229be6c016ba171f90394806" kindref="member">TRY_ADD_HW_MACRO</ref>(fsh_6_6);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TRY_ADD_HW_MACRO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_halfs)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>defines<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;#define<sp/>_USE_HALFS<sp/>1\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>defines;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>assembly</highlight></codeline>
    </programlisting>
    <location file="hwAssembly.cpp"/>
  </compounddef>
</doxygen>
