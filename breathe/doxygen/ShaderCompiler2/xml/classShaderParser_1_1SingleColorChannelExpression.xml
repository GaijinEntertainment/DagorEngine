<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="classShaderParser_1_1SingleColorChannelExpression" kind="class" language="C++" prot="public">
    <compoundname>ShaderParser::SingleColorChannelExpression</compoundname>
    <basecompoundref refid="classShaderParser_1_1ColorChannelExpression" prot="public" virt="non-virtual">ShaderParser::ColorChannelExpression</basecompoundref>
    <includes refid="shExpr_8h" local="no">shExpr.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classShaderParser_1_1SingleColorChannelExpression_1ae2f195c0205116a5593827913579140c" prot="private" static="no" mutable="no">
        <type>shexpr::ColorChannel</type>
        <definition>shexpr::ColorChannel ShaderParser::SingleColorChannelExpression::colorChannel</definition>
        <argsstring></argsstring>
        <name>colorChannel</name>
        <qualifiedname>ShaderParser::SingleColorChannelExpression::colorChannel</qualifiedname>
        <initializer>= shexpr::_CC_UNDEFINED</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shExpr.h" line="283" column="24" bodyfile="shExpr.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classShaderParser_1_1SingleColorChannelExpression_1a1e7c9113c8b4e70b11ed0ed925633f0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SingleColorChannelExpression::SingleColorChannelExpression</definition>
        <argsstring>(Terminal *s, shexpr::ColorChannel cc)</argsstring>
        <name>SingleColorChannelExpression</name>
        <qualifiedname>ShaderParser::SingleColorChannelExpression::SingleColorChannelExpression</qualifiedname>
        <param>
          <type>Terminal *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>shexpr::ColorChannel</type>
          <declname>cc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shExpr.h" line="252" column="3" bodyfile="shExpr.cpp" bodystart="683" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="classShaderParser_1_1SingleColorChannelExpression_1a3d7542112cf0a479f666d1faad6c0ea1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>shexpr::ValueType</type>
        <definition>shexpr::ValueType ShaderParser::SingleColorChannelExpression::getValueType</definition>
        <argsstring>() const override</argsstring>
        <name>getValueType</name>
        <qualifiedname>ShaderParser::SingleColorChannelExpression::getValueType</qualifiedname>
        <reimplements refid="classShaderParser_1_1Expression_1acc2906c41ab9f1277d513f3c2c97096d">getValueType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shExpr.h" line="255" column="21" bodyfile="shExpr.h" bodystart="255" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classShaderParser_1_1SingleColorChannelExpression_1a2be4627ffaf4483c23d205cbf5bc30d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SingleColorChannelExpression::assembleBytecode</definition>
        <argsstring>(CodeTable &amp;code, Register &amp;dest_reg, StcodeVMRegisterAllocator &amp;reg_allocator, bool is_integer) const override</argsstring>
        <name>assembleBytecode</name>
        <qualifiedname>ShaderParser::SingleColorChannelExpression::assembleBytecode</qualifiedname>
        <reimplements refid="classShaderParser_1_1Expression_1adf4dc5757229bb9e7a7d50d3cc6d82f0">assembleBytecode</reimplements>
        <param>
          <type><ref refid="namespaceShaderParser_1a732af6cbcecefe1051d9165d3718d702" kindref="member">CodeTable</ref> &amp;</type>
          <declname>code</declname>
        </param>
        <param>
          <type><ref refid="classRegister" kindref="compound">Register</ref> &amp;</type>
          <declname>dest_reg</declname>
        </param>
        <param>
          <type><ref refid="classStcodeVMRegisterAllocator" kindref="compound">StcodeVMRegisterAllocator</ref> &amp;</type>
          <declname>reg_allocator</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_integer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shExpr.h" line="258" column="8" bodyfile="shExpr.cpp" bodystart="691" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="classShaderParser_1_1SingleColorChannelExpression_1ae2877687d5d67b8d677b37142737cffc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SingleColorChannelExpression::assembleCpp</definition>
        <argsstring>(StcodeExpression &amp;cpp_expr, bool is_integer) const override</argsstring>
        <name>assembleCpp</name>
        <qualifiedname>ShaderParser::SingleColorChannelExpression::assembleCpp</qualifiedname>
        <reimplements refid="classShaderParser_1_1Expression_1a9487371df0a50670438cc4343d06cdb2">assembleCpp</reimplements>
        <param>
          <type><ref refid="structStcodeExpression" kindref="compound">StcodeExpression</ref> &amp;</type>
          <declname>cpp_expr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_integer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shExpr.h" line="259" column="8" bodyfile="shExpr.cpp" bodystart="700" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="classShaderParser_1_1SingleColorChannelExpression_1aa81c400ed78862b9224cce51671a73d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool SingleColorChannelExpression::evaluate</definition>
        <argsstring>(real &amp;out_value, Parser &amp;parser) override</argsstring>
        <name>evaluate</name>
        <qualifiedname>ShaderParser::SingleColorChannelExpression::evaluate</qualifiedname>
        <reimplements refid="classShaderParser_1_1Expression_1a8941f97eca15c43e1ecd37d5c7dc3caf">evaluate</reimplements>
        <param>
          <type>real &amp;</type>
          <declname>out_value</declname>
        </param>
        <param>
          <type><ref refid="structParser" kindref="compound">Parser</ref> &amp;</type>
          <declname>parser</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shExpr.h" line="262" column="8" bodyfile="shExpr.cpp" bodystart="708" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="classShaderParser_1_1SingleColorChannelExpression_1ab30a7a24234d9f280b2d87fcd3c67d2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool SingleColorChannelExpression::evaluate</definition>
        <argsstring>(Color4 &amp;out_value, Parser &amp;parser) override</argsstring>
        <name>evaluate</name>
        <qualifiedname>ShaderParser::SingleColorChannelExpression::evaluate</qualifiedname>
        <reimplements refid="classShaderParser_1_1Expression_1af8c5f003ef7d6a21c423c741f3587a1f">evaluate</reimplements>
        <param>
          <type>Color4 &amp;</type>
          <declname>out_value</declname>
        </param>
        <param>
          <type><ref refid="structParser" kindref="compound">Parser</ref> &amp;</type>
          <declname>parser</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shExpr.h" line="265" column="8" bodyfile="shExpr.cpp" bodystart="746" bodyend="777"/>
      </memberdef>
      <memberdef kind="function" id="classShaderParser_1_1SingleColorChannelExpression_1a92d6e9e07882447bb2d0a3311db553ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>Terminal *</type>
        <definition>Terminal * ShaderParser::SingleColorChannelExpression::getTerminal</definition>
        <argsstring>() const override</argsstring>
        <name>getTerminal</name>
        <qualifiedname>ShaderParser::SingleColorChannelExpression::getTerminal</qualifiedname>
        <reimplements refid="classShaderParser_1_1ColorChannelExpression_1aa81a68a7672936ba4804ced027623354">getTerminal</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shExpr.h" line="268" column="12" bodyfile="shExpr.h" bodystart="268" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classShaderParser_1_1SingleColorChannelExpression_1ace68d2a5e86ac7b5c799c2f5c5fa85b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>shexpr::ColorChannel</type>
        <definition>shexpr::ColorChannel ShaderParser::SingleColorChannelExpression::getColorChannel</definition>
        <argsstring>() const</argsstring>
        <name>getColorChannel</name>
        <qualifiedname>ShaderParser::SingleColorChannelExpression::getColorChannel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shExpr.h" line="271" column="31" bodyfile="shExpr.h" bodystart="271" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classShaderParser_1_1SingleColorChannelExpression_1ab28a3ead802f9af12a2d6a1bf189364f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ShaderParser::SingleColorChannelExpression::setColorChannel</definition>
        <argsstring>(shexpr::ColorChannel c)</argsstring>
        <name>setColorChannel</name>
        <qualifiedname>ShaderParser::SingleColorChannelExpression::setColorChannel</qualifiedname>
        <param>
          <type>shexpr::ColorChannel</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shExpr.h" line="272" column="15" bodyfile="shExpr.h" bodystart="272" bodyend="276"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classShaderParser_1_1SingleColorChannelExpression_1af8afa677d8e2e52f8fbb86b0b22330c4" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SingleColorChannelExpression::dump_internal</definition>
        <argsstring>(int level, const char *tabs) const override</argsstring>
        <name>dump_internal</name>
        <qualifiedname>ShaderParser::SingleColorChannelExpression::dump_internal</qualifiedname>
        <reimplements refid="classShaderParser_1_1Expression_1ae3261bc8b45356c6090bd84db2508fcb">dump_internal</reimplements>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tabs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shExpr.h" line="280" column="8" bodyfile="shExpr.cpp" bodystart="781" bodyend="789"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ShaderParser::ColorChannelExpression</label>
        <link refid="classShaderParser_1_1ColorChannelExpression"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ShaderParser::Expression</label>
        <link refid="classShaderParser_1_1Expression"/>
      </node>
      <node id="1">
        <label>ShaderParser::SingleColorChannelExpression</label>
        <link refid="classShaderParser_1_1SingleColorChannelExpression"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>ShaderParser::ColorChannelExpression</label>
        <link refid="classShaderParser_1_1ColorChannelExpression"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ShaderParser::Expression</label>
        <link refid="classShaderParser_1_1Expression"/>
      </node>
      <node id="1">
        <label>ShaderParser::SingleColorChannelExpression</label>
        <link refid="classShaderParser_1_1SingleColorChannelExpression"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="shExpr.h" line="248" column="1" bodyfile="shExpr.h" bodystart="249" bodyend="284"/>
    <listofallmembers>
      <member refid="classShaderParser_1_1Expression_1a68e771cf9c1584e59c0f5c5e298d3eea" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>__getName</name></member>
      <member refid="classShaderParser_1_1Expression_1aaec5897d85a74cfadd26bf18752a23f1" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>__getName</name></member>
      <member refid="classShaderParser_1_1Expression_1a633bdaee53233d1474dacd39ab7e2d89" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>__getName</name></member>
      <member refid="classShaderParser_1_1Expression_1a77ed6f7aab61c1f6367d6c1f5fcfdbb1" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>allocateRegForResult</name></member>
      <member refid="classShaderParser_1_1SingleColorChannelExpression_1a2be4627ffaf4483c23d205cbf5bc30d5" prot="public" virt="virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>assembleBytecode</name></member>
      <member refid="classShaderParser_1_1Expression_1a7cc153456d29d1e3e52ec2d20563b5d1" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>assembleBytecodeForConstant</name></member>
      <member refid="classShaderParser_1_1Expression_1ac03d00732e3242385f7c5efca77f5d3f" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>assembleBytecodeForConstant</name></member>
      <member refid="classShaderParser_1_1SingleColorChannelExpression_1ae2877687d5d67b8d677b37142737cffc" prot="public" virt="virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>assembleCpp</name></member>
      <member refid="classShaderParser_1_1Expression_1a4037bf3eee8071bba8ab6886455769e1" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>assembleCppForConstant</name></member>
      <member refid="classShaderParser_1_1Expression_1a56f313f3547738e55c1aada81a1dca07" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>assembleCppForConstant</name></member>
      <member refid="classShaderParser_1_1Expression_1ac19dd34018b4470ad166a8ab244f981d" prot="public" virt="virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>canConvert</name></member>
      <member refid="classShaderParser_1_1ColorChannelExpression_1acb738bdb2f1c713407c2ca75ffa866b4" prot="protected" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>child</name></member>
      <member refid="classShaderParser_1_1ColorChannelExpression_1a0155330eb5dae83e0d56d7e526932132" prot="public" virt="virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>collapseNumbers</name></member>
      <member refid="classShaderParser_1_1SingleColorChannelExpression_1ae2f195c0205116a5593827913579140c" prot="private" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>colorChannel</name></member>
      <member refid="classShaderParser_1_1ColorChannelExpression_1a33663661e4ed05807d7e30e943dd654b" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>ColorChannelExpression</name></member>
      <member refid="classShaderParser_1_1Expression_1a08d3c7f008450499ebf2ce26a8f346d5" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>dump</name></member>
      <member refid="classShaderParser_1_1SingleColorChannelExpression_1af8afa677d8e2e52f8fbb86b0b22330c4" prot="protected" virt="virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>dump_internal</name></member>
      <member refid="classShaderParser_1_1SingleColorChannelExpression_1aa81c400ed78862b9224cce51671a73d2" prot="public" virt="virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>evaluate</name></member>
      <member refid="classShaderParser_1_1SingleColorChannelExpression_1ab30a7a24234d9f280b2d87fcd3c67d2a" prot="public" virt="virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>evaluate</name></member>
      <member refid="classShaderParser_1_1Expression_1a4aeeda4b23b0d2b14c2ad2caab0390c5" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>Expression</name></member>
      <member refid="classShaderParser_1_1Expression_1a624688ee88ace66f0cafa9481d4e4536" prot="public" virt="virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>getChannels</name></member>
      <member refid="classShaderParser_1_1ColorChannelExpression_1ae5e7fceccb9082feb174a87f747fb170" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>getChild</name></member>
      <member refid="classShaderParser_1_1SingleColorChannelExpression_1ace68d2a5e86ac7b5c799c2f5c5fa85b3" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>getColorChannel</name></member>
      <member refid="classShaderParser_1_1Expression_1a21b42b73baa2d365e975d950b60a613d" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>getParent</name></member>
      <member refid="classShaderParser_1_1Expression_1a066eed5146bd48cfcc3acb30a50e9068" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>getParserSymbol</name></member>
      <member refid="classShaderParser_1_1SingleColorChannelExpression_1a92d6e9e07882447bb2d0a3311db553ec" prot="public" virt="virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>getTerminal</name></member>
      <member refid="classShaderParser_1_1ColorChannelExpression_1a283d759ed61f8b58be2792a7da7a1946" prot="public" virt="virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>getType</name></member>
      <member refid="classShaderParser_1_1Expression_1a1ab07814f1b27a6786d043da4e080c44" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>getUnaryOperator</name></member>
      <member refid="classShaderParser_1_1SingleColorChannelExpression_1a3d7542112cf0a479f666d1faad6c0ea1" prot="public" virt="virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>getValueType</name></member>
      <member refid="classShaderParser_1_1Expression_1a20844e4f958c20d70cc4824650652f67" prot="public" virt="virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>hasDynamicAndMaterialTermsAt</name></member>
      <member refid="classShaderParser_1_1ColorChannelExpression_1a95fe662a6d979b5d4fa93f252c26d456" prot="public" virt="virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>isConst</name></member>
      <member refid="classShaderParser_1_1ColorChannelExpression_1ac83da685f248d7f6864d62165fc562b5" prot="public" virt="virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>isDynamic</name></member>
      <member refid="classShaderParser_1_1ColorChannelExpression_1a9645ea025110cb5b36d73abea81a549a" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>setChild</name></member>
      <member refid="classShaderParser_1_1SingleColorChannelExpression_1ab28a3ead802f9af12a2d6a1bf189364f" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>setColorChannel</name></member>
      <member refid="classShaderParser_1_1Expression_1a85fe9b97eae19d91e0affe293d3eefdf" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>SetParent</name></member>
      <member refid="classShaderParser_1_1Expression_1a6438a4e71937292586b86d9e3e1202f9" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>setUnaryOperator</name></member>
      <member refid="classShaderParser_1_1SingleColorChannelExpression_1a1e7c9113c8b4e70b11ed0ed925633f0d" prot="public" virt="non-virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>SingleColorChannelExpression</name></member>
      <member refid="classShaderParser_1_1Expression_1a9e01aa5ac9dd2e26fa87d4cdd7a042ca" prot="public" virt="virtual"><scope>ShaderParser::SingleColorChannelExpression</scope><name>~Expression</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
