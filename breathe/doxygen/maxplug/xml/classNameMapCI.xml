<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="classNameMapCI" kind="class" language="C++" prot="public">
    <compoundname>NameMapCI</compoundname>
    <basecompoundref refid="classBaseNameMap" prot="public" virt="non-virtual">BaseNameMap</basecompoundref>
    <includes refid="namemap_8h" local="no">namemap.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classNameMapCI_1ab792158df777c9001a16f60f5bd51aa7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NameMapCI::NameMapCI</definition>
        <argsstring>()</argsstring>
        <name>NameMapCI</name>
        <qualifiedname>NameMapCI::NameMapCI</qualifiedname>
        <briefdescription>
<para>Constructor. Memory allocator can be specified (defaults to #tmpmem). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="namemap.h" line="90" column="3" bodyfile="namemap.h" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classNameMapCI_1aaf0e95d9545da2c3fb625f91e41ef5f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NameMapCI::getNameId</definition>
        <argsstring>(const char *name) const</argsstring>
        <name>getNameId</name>
        <qualifiedname>NameMapCI::getNameId</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns -1 if not found. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="namemap.h" line="93" column="7" bodyfile="namemap.cpp" bodystart="114" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classNameMapCI_1a8e025492600f75ea9b2179088090edd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NameMapCI::addNameId</definition>
        <argsstring>(const char *name)</argsstring>
        <name>addNameId</name>
        <qualifiedname>NameMapCI::addNameId</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns -1 if NULL. Adds name to the list if not found. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="namemap.h" line="96" column="7" bodyfile="namemap.cpp" bodystart="126" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classNameMapCI_1aa50f8112fc9eb0adc7bd890a5c704deb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NameMapCI::copyFrom</definition>
        <argsstring>(const NameMapCI &amp;nm)</argsstring>
        <name>copyFrom</name>
        <qualifiedname>NameMapCI::copyFrom</qualifiedname>
        <param>
          <type>const <ref refid="classNameMapCI" kindref="compound">NameMapCI</ref> &amp;</type>
          <declname>nm</declname>
        </param>
        <briefdescription>
<para>To be used instead of private copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="namemap.h" line="99" column="8" bodyfile="namemap.h" bodystart="99" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Case-insensitive version of <ref refid="classBaseNameMap" kindref="compound">BaseNameMap</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BaseNameMap</label>
        <link refid="classBaseNameMap"/>
      </node>
      <node id="1">
        <label>NameMapCI</label>
        <link refid="classNameMapCI"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BaseNameMap</label>
        <link refid="classBaseNameMap"/>
      </node>
      <node id="1">
        <label>NameMapCI</label>
        <link refid="classNameMapCI"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="namemap.h" line="84" column="1" bodyfile="namemap.h" bodystart="85" bodyend="100"/>
    <listofallmembers>
      <member refid="classNameMapCI_1a8e025492600f75ea9b2179088090edd4" prot="public" virt="non-virtual"><scope>NameMapCI</scope><name>addNameId</name></member>
      <member refid="classBaseNameMap_1a9f4799aa8bbfb1c2a50c7b3ab581e7fd" prot="public" virt="non-virtual"><scope>NameMapCI</scope><name>BaseNameMap</name></member>
      <member refid="classBaseNameMap_1a379dcfcd995d228fb440ba46dff71efa" prot="public" virt="non-virtual"><scope>NameMapCI</scope><name>clear</name></member>
      <member refid="classNameMapCI_1aa50f8112fc9eb0adc7bd890a5c704deb" prot="public" virt="non-virtual"><scope>NameMapCI</scope><name>copyFrom</name></member>
      <member refid="classBaseNameMap_1aa12d4ba58ab9753e5b30595c9b7e9718" prot="protected" virt="non-virtual" ambiguityscope="BaseNameMap::"><scope>NameMapCI</scope><name>copyFrom</name></member>
      <member refid="classBaseNameMap_1ad27291165fe02dcd33077696c0df2a51" prot="public" virt="non-virtual"><scope>NameMapCI</scope><name>getName</name></member>
      <member refid="classNameMapCI_1aaf0e95d9545da2c3fb625f91e41ef5f7" prot="public" virt="non-virtual"><scope>NameMapCI</scope><name>getNameId</name></member>
      <member refid="classBaseNameMap_1a017e5959e9c9e8c7624e34f7fdba9447" prot="public" virt="non-virtual"><scope>NameMapCI</scope><name>load</name></member>
      <member refid="classBaseNameMap_1a09fb9cc27dc905135f38e49f5b898637" prot="public" virt="non-virtual"><scope>NameMapCI</scope><name>nameCount</name></member>
      <member refid="classNameMapCI_1ab792158df777c9001a16f60f5bd51aa7" prot="public" virt="non-virtual"><scope>NameMapCI</scope><name>NameMapCI</name></member>
      <member refid="classBaseNameMap_1ad7e889893aef629ea322484d0638eb26" prot="protected" virt="non-virtual"><scope>NameMapCI</scope><name>names</name></member>
      <member refid="classBaseNameMap_1a1d3bd0a327df8efbf135ae5ac552f5a1" prot="public" virt="non-virtual"><scope>NameMapCI</scope><name>save</name></member>
      <member refid="classBaseNameMap_1a27f04775f7b188f0eba8472fc608471a" prot="public" virt="non-virtual"><scope>NameMapCI</scope><name>~BaseNameMap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
