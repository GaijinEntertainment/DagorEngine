<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="meshtrace_8cpp" kind="file" language="C++">
    <compoundname>meshtrace.cpp</compoundname>
    <includes refid="math3d_8h" local="yes">math3d.h</includes>
    <includes refid="qsort_8h" local="yes">qsort.h</includes>
    <includes refid="debug_8h" local="yes">debug.h</includes>
    <incdepgraph>
      <node id="8">
        <label>debug.h</label>
        <link refid="debug_8h"/>
      </node>
      <node id="2">
        <label>math3d.h</label>
        <link refid="math3d_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>meshtrace.cpp</label>
        <link refid="meshtrace_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>qsort.h</label>
        <link refid="qsort_8h"/>
      </node>
      <node id="5">
        <label>float.h</label>
      </node>
      <node id="3">
        <label>math.h</label>
      </node>
      <node id="6">
        <label>max.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classStaticMeshRTracer" prot="public">StaticMeshRTracer</innerclass>
    <innerclass refid="structStaticMeshRTracer_1_1RTface" prot="public">StaticMeshRTracer::RTface</innerclass>
    <innerclass refid="structStaticMeshRTracer_1_1Node" prot="public">StaticMeshRTracer::Node</innerclass>
    <innerclass refid="structStaticMeshRTracer_1_1BNode" prot="public">StaticMeshRTracer::BNode</innerclass>
    <innerclass refid="structStaticMeshRTracer_1_1LNode" prot="public">StaticMeshRTracer::LNode</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="meshtrace_8cpp_1a564c99bc2e76d8090db35eda91bc820b" prot="public" static="no">
        <name>nomemchk</name>
        <param><defname>o</defname></param>
        <initializer><ref refid="meshtrace_8cpp_1af9e12a6703ca99bc30d10e22e7cf7611" kindref="member">__memchk</ref>(o, __FILE__, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meshtrace.cpp" line="18" column="9" bodyfile="meshtrace.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="meshtrace_8cpp_1af39b825f1ab49f23cff8c4b2b5c8ca04" prot="public" static="no">
        <name>nomem</name>
        <param><defname>a</defname></param>
        <initializer>  {                                                                           \
    <ref refid="polyBumpUtil_8cpp_1a7699f0fa17b7a8c6cc60895b6ec8bb97" kindref="member">if</ref> (!(a))                                                                 \
      fatal(&quot;Not enough memory in file &lt;%s&gt;, line &lt;%d&gt;&quot;, __FILE__, __LINE__); \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meshtrace.cpp" line="21" column="9" bodyfile="meshtrace.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="meshtrace_8cpp_1a676bcf61132b7d22bc6f825c50a52e3e" prot="public" static="no">
        <name>bugchk</name>
        <param><defname>a</defname></param>
        <initializer>assert(a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meshtrace.cpp" line="28" column="9" bodyfile="meshtrace.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="meshtrace_8cpp_1a3545f01ad15f15ef6ce9624a156b8b00" prot="public" static="no">
        <name>MAX_LEAF_FACES</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meshtrace.cpp" line="30" column="9" bodyfile="meshtrace.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="meshtrace_8cpp_1a44b7751428c58285d83b70f379d9fcc3" prot="public" static="no">
        <name>MAX_LEAF_LENGTH</name>
        <initializer><ref refid="group__common_1gaddbad2bc626a64a9917c2224de315b6c" kindref="member">MAX_REAL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meshtrace.cpp" line="31" column="9" bodyfile="meshtrace.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="meshtrace_8cpp_1aa2bcce57e2a753cc17664d2e851945de" prot="public" static="no">
        <name>MIN_LEAF_FACES</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meshtrace.cpp" line="32" column="9" bodyfile="meshtrace.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="meshtrace_8cpp_1a3fcf06440b7958d019cf6ba51f885776" prot="public" static="no">
        <name>MAX_SCENE_LEAF_FACES</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meshtrace.cpp" line="34" column="9" bodyfile="meshtrace.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="meshtrace_8cpp_1a039a1c85cf9488df850db370cb43ed58" prot="public" static="yes" mutable="no">
        <type>Tab&lt; float &gt;</type>
        <definition>Tab&lt;float&gt; fgrp2</definition>
        <argsstring></argsstring>
        <name>fgrp2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meshtrace.cpp" line="280" column="12" bodyfile="meshtrace.cpp" bodystart="280" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="meshtrace_8cpp_1af9e12a6703ca99bc30d10e22e7cf7611" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * __memchk</definition>
        <argsstring>(T *o, const char *f, int l)</argsstring>
        <name>__memchk</name>
        <param>
          <type>T *</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meshtrace.cpp" line="8" column="10" bodyfile="meshtrace.cpp" bodystart="8" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="meshtrace_8cpp_1aad660c21909755ae7a48c9cd02feade4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classStaticMeshRayTracer" kindref="compound">StaticMeshRayTracer</ref> *</type>
        <definition>StaticMeshRayTracer * create_staticmeshraytracer</definition>
        <argsstring>()</argsstring>
        <name>create_staticmeshraytracer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meshtrace.cpp" line="393" column="21" bodyfile="meshtrace.cpp" bodystart="393" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="meshtrace_8cpp_1a7a7cc74183925e2df0ab9c8f5eab973a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classStaticMeshRayTracer" kindref="compound">StaticMeshRayTracer</ref> *</type>
        <definition>StaticMeshRayTracer * create_staticmeshraytracer</definition>
        <argsstring>(Mesh &amp;m)</argsstring>
        <name>create_staticmeshraytracer</name>
        <param>
          <type>Mesh &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meshtrace.cpp" line="399" column="21" bodyfile="meshtrace.cpp" bodystart="399" bodyend="404"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="math3d_8h" kindref="compound">math3d.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="qsort_8h" kindref="compound">qsort.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="debug_8h" kindref="compound">debug.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/>*<ref refid="meshtrace_8cpp_1af9e12a6703ca99bc30d10e22e7cf7611" kindref="member">__memchk</ref>(T<sp/>*o,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="debug_8cpp_1ad66a73f3673f2879326899cf57fd8d2e" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>enough<sp/>memory<sp/>in<sp/>file<sp/>&lt;%s&gt;,<sp/>line<sp/>&lt;%d&gt;&quot;</highlight><highlight class="normal">,<sp/>f,<sp/>l);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>nomemchk(o)<sp/>__memchk(o,<sp/>__FILE__,<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>nomem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>nomem(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!(a))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>fatal(&quot;Not<sp/>enough<sp/>memory<sp/>in<sp/>file<sp/>&lt;%s&gt;,<sp/>line<sp/>&lt;%d&gt;&quot;</highlight><highlight class="normal">,<sp/>__FILE__,<sp/>__LINE__);<sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>bugchk(a)<sp/>assert(a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_LEAF_FACES<sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_LEAF_LENGTH<sp/>MAX_REAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_LEAF_FACES<sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SCENE_LEAF_FACES<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classStaticMeshRTracer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classStaticMeshRTracer" kindref="compound">StaticMeshRTracer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classStaticMeshRayTracer" kindref="compound">StaticMeshRayTracer</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/><ref refid="classStaticMeshRTracer_1acd05ab1371a64a8b593d077931a804ee" kindref="member">a2</ref>,<sp/><ref refid="classStaticMeshRTracer_1a8b49d0ea4e80d4d9e6ad898840526823" kindref="member">a4</ref>;</highlight></codeline>
<codeline lineno="41" refid="structStaticMeshRTracer_1_1RTface" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStaticMeshRTracer_1_1RTface" kindref="compound">RTface</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMatrix33" kindref="compound">Matrix33</ref><sp/><ref refid="structStaticMeshRTracer_1_1RTface_1a18af322fec196f9cd78891ff7abd3321" kindref="member">bcm</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/><ref refid="structStaticMeshRTracer_1_1RTface_1a15803c122d3ab2b6fa00a403cfe22e06" kindref="member">sc</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/><ref refid="structStaticMeshRTracer_1_1RTface_1a98e465af8e5d8789891ce47d7f37511a" kindref="member">sr2</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/><ref refid="structStaticMeshRTracer_1_1RTface_1a657eaf4cac055af572496a1225b79687" kindref="member">n</ref>,<sp/><ref refid="structStaticMeshRTracer_1_1RTface_1af67b8da426399ccf45773fea636ab45a" kindref="member">en</ref>[3];</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/><ref refid="structStaticMeshRTracer_1_1RTface_1a64ce11d2857b52ca73f1476e416cb7cd" kindref="member">d</ref>,<sp/><ref refid="structStaticMeshRTracer_1_1RTface_1a31ec6c9951af86504256958b93463009" kindref="member">ed</ref>[3];</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structStaticMeshRTracer_1_1RTface_1aa348dd6ddd18ca104c5b257900d5cd05" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="50" refid="structStaticMeshRTracer_1_1Node" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStaticMeshRTracer_1_1Node" kindref="compound">Node</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/><ref refid="structStaticMeshRTracer_1_1Node_1a1cdd6c99d14a85263e39d5dc16f67d83" kindref="member">bsc</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/><ref refid="structStaticMeshRTracer_1_1Node_1aeb6b2b3da451fc83c0c8fe4a871fba2e" kindref="member">bsr2</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStaticMeshRTracer_1_1Node" kindref="compound">Node</ref><sp/>*<ref refid="structStaticMeshRTracer_1_1Node_1a93ce08dede8fa7e7516d2f4c933cada7" kindref="member">sub0</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStaticMeshRTracer_1_1Node_1a7be0ebe4038132255427b5206630f2dc" kindref="member">Node</ref>()<sp/>:<sp/><ref refid="structStaticMeshRTracer_1_1Node_1a93ce08dede8fa7e7516d2f4c933cada7" kindref="member">sub0</ref>(NULL)<sp/>{}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structStaticMeshRTracer_1_1Node_1ae9bd03ab820354496f4ef597d655b8c7" kindref="member">traceray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;dir,<sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>&amp;t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;fi,<sp/>Point3<sp/>&amp;bc);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structStaticMeshRTracer_1_1Node_1a875c08cc45d9667379b2a61b1fb58140" kindref="member">traceray_back</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;dir,<sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>&amp;t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;fi,<sp/>Point3<sp/>&amp;bc);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="60" refid="structStaticMeshRTracer_1_1BNode" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStaticMeshRTracer_1_1BNode" kindref="compound">BNode</ref><sp/>:<sp/><ref refid="structStaticMeshRTracer_1_1Node" kindref="compound">Node</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStaticMeshRTracer_1_1Node" kindref="compound">Node</ref><sp/>*<ref refid="structStaticMeshRTracer_1_1BNode_1ace5d09b55c27cfe2c73bf9def4361200" kindref="member">sub1</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStaticMeshRTracer_1_1BNode_1a63b448bca09440625caa7105d92847cc" kindref="member">BNode</ref>()<sp/>:<sp/><ref refid="structStaticMeshRTracer_1_1BNode_1ace5d09b55c27cfe2c73bf9def4361200" kindref="member">sub1</ref>(NULL)<sp/>{}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="65" refid="structStaticMeshRTracer_1_1LNode" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStaticMeshRTracer_1_1LNode" kindref="compound">LNode</ref><sp/>:<sp/><ref refid="structStaticMeshRTracer_1_1Node" kindref="compound">Node</ref></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;RTface&gt;<sp/><ref refid="structStaticMeshRTracer_1_1LNode_1aadfec37644f6b73814ce7d4c482fc93f" kindref="member">face</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStaticMeshRTracer_1_1LNode_1acaeffb5277a8dd3f32de3d2a5ed3ab53" kindref="member">LNode</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structStaticMeshRTracer_1_1LNode_1a18f58b22327a08110274c64badf4c8e8" kindref="member">traceray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;dir,<sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>&amp;t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;fi,<sp/>Point3<sp/>&amp;bc);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structStaticMeshRTracer_1_1LNode_1a7e7bdb28784d56cbf883c1f149ffb987" kindref="member">traceray_back</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;dir,<sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>&amp;t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;fi,<sp/>Point3<sp/>&amp;bc);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStaticMeshRTracer_1_1LNode_1a800ec81ccf07f72b688353378961564e" kindref="member">build</ref>(Mesh<sp/>&amp;m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*fc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numf);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classStaticMeshRTracer_1a19d928167268324ce4a4a445346411a1" kindref="member">kill_node</ref>(<ref refid="structStaticMeshRTracer_1_1Node" kindref="compound">Node</ref><sp/>*);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="structStaticMeshRTracer_1_1Node" kindref="compound">Node</ref><sp/>*<ref refid="classStaticMeshRTracer_1ae5ac50feb27382c0cfc934203fce894c" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="classStaticMeshRTracer_1ab57e4d0c88dbb48cbeb62e40a3a17830" kindref="member">StaticMeshRTracer</ref>()<sp/>:<sp/><ref refid="classStaticMeshRTracer_1ae5ac50feb27382c0cfc934203fce894c" kindref="member">root</ref>(NULL)<sp/>{}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classStaticMeshRTracer_1a542abaec0d8af37bfa5cb6b3525eec85" kindref="member">~StaticMeshRTracer</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/><ref refid="classStaticMeshRTracer_1a19d928167268324ce4a4a445346411a1" kindref="member">kill_node</ref>(<ref refid="classStaticMeshRTracer_1ae5ac50feb27382c0cfc934203fce894c" kindref="member">root</ref>);<sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStaticMeshRTracer_1a2ffd4d56b1d9f45d16629dd680cfecb5" kindref="member">traceray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;dir,<sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>&amp;t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;fi,<sp/>Point3<sp/>&amp;bc)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStaticMeshRTracer_1aa180b29b99047f7889cb92bfca9b663b" kindref="member">traceray_back</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;dir,<sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>&amp;t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;fi,<sp/>Point3<sp/>&amp;bc)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>Node<sp/>*<ref refid="classStaticMeshRTracer_1a4ea64e5ac5dbde72253feb344dc0ab78" kindref="member">build_node</ref>(Mesh<sp/>&amp;m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*fc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numf);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classStaticMeshRTracer_1a30034ef5921f81041e76eb9639f1d913" kindref="member">build</ref>(Mesh<sp/>&amp;m)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/><ref refid="classStaticMeshRTracer_1acd05ab1371a64a8b593d077931a804ee" kindref="member">StaticMeshRTracer::a2</ref>,<sp/><ref refid="classStaticMeshRTracer_1a8b49d0ea4e80d4d9e6ad898840526823" kindref="member">StaticMeshRTracer::a4</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classStaticMeshRTracer_1a19d928167268324ce4a4a445346411a1" kindref="member">StaticMeshRTracer::kill_node</ref>(Node<sp/>*n)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;sub0)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classStaticMeshRTracer_1a19d928167268324ce4a4a445346411a1" kindref="member">kill_node</ref>(n-&gt;sub0);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classStaticMeshRTracer_1a19d928167268324ce4a4a445346411a1" kindref="member">kill_node</ref>(((BNode<sp/>*)n)-&gt;sub1);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>((BNode<sp/>*)n);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>((LNode<sp/>*)n);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structStaticMeshRTracer_1_1LNode_1a18f58b22327a08110274c64badf4c8e8" kindref="member">StaticMeshRTracer::LNode::traceray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;dir,<sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>&amp;mint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;fid,<sp/>Point3<sp/>&amp;bary)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fi<sp/>=<sp/>0;<sp/>fi<sp/>&lt;<sp/><ref refid="structStaticMeshRTracer_1_1LNode_1aadfec37644f6b73814ce7d4c482fc93f" kindref="member">face</ref>.Count();<sp/>++fi)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>RTface<sp/>&amp;f<sp/>=<sp/><ref refid="structStaticMeshRTracer_1_1LNode_1aadfec37644f6b73814ce7d4c482fc93f" kindref="member">face</ref>[fi];</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>den<sp/>=<sp/>DotProd(f.n,<sp/>dir);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(den<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>pc<sp/>=<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>-<sp/>f.sc;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>b<sp/>=<sp/>DotProd(pc,<sp/>dir)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>c<sp/>=<sp/>DotProd(pc,<sp/>pc)<sp/>-<sp/>f.sr2;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>d<sp/>=<sp/>b<sp/>*<sp/>b<sp/>-<sp/><ref refid="classStaticMeshRTracer_1a8b49d0ea4e80d4d9e6ad898840526823" kindref="member">a4</ref><sp/>*<sp/>c;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>s<sp/>=<sp/>sqrtf(d);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>t2<sp/>=<sp/>(-b<sp/>+<sp/>s)<sp/>*<sp/><ref refid="classStaticMeshRTracer_1acd05ab1371a64a8b593d077931a804ee" kindref="member">a2</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>t1<sp/>=<sp/>(-b<sp/>-<sp/>s)<sp/>*<sp/><ref refid="classStaticMeshRTracer_1acd05ab1371a64a8b593d077931a804ee" kindref="member">a2</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&gt;=<sp/>mint)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>intersect<sp/>face<sp/>plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>t<sp/>=<sp/>-(DotProd(f.n,<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>)<sp/>+<sp/>f.d)<sp/>/<sp/>den;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&gt;=<sp/>mint)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>pt<sp/>=<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>+<sp/>dir<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>++j)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DotProd(f.en[j],<sp/>pt)<sp/>+<sp/>f.ed[j]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>3)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>bc<sp/>=<sp/>f.bcm<sp/>*<sp/>pt;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>mint<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>fid<sp/>=<sp/>f.id;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>bary<sp/>=<sp/>bc;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>hit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hit;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structStaticMeshRTracer_1_1Node_1ae9bd03ab820354496f4ef597d655b8c7" kindref="member">StaticMeshRTracer::Node::traceray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;dir,<sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>&amp;mint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;fid,<sp/>Point3<sp/>&amp;bary)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>Point3<sp/>pc<sp/>=<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>-<sp/>bsc;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>b<sp/>=<sp/>DotProd(pc,<sp/>dir)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>c<sp/>=<sp/>DotProd(pc,<sp/>pc)<sp/>-<sp/>bsr2;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>d<sp/>=<sp/>b<sp/>*<sp/>b<sp/>-<sp/><ref refid="classStaticMeshRTracer_1a8b49d0ea4e80d4d9e6ad898840526823" kindref="member">a4</ref><sp/>*<sp/>c;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>s<sp/>=<sp/>sqrtf(d);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>t2<sp/>=<sp/>(-b<sp/>+<sp/>s)<sp/>*<sp/><ref refid="classStaticMeshRTracer_1acd05ab1371a64a8b593d077931a804ee" kindref="member">a2</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>t1<sp/>=<sp/>(-b<sp/>-<sp/>s)<sp/>*<sp/><ref refid="classStaticMeshRTracer_1acd05ab1371a64a8b593d077931a804ee" kindref="member">a2</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&gt;=<sp/>mint)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub0)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>branch<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hit<sp/>=<sp/>sub0-&gt;traceray(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/>dir,<sp/>mint,<sp/>fid,<sp/>bary);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((BNode<sp/>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;sub1-&gt;traceray(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/>dir,<sp/>mint,<sp/>fid,<sp/>bary))</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hit;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>leaf<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((LNode<sp/>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;<ref refid="classStaticMeshRTracer_1a2ffd4d56b1d9f45d16629dd680cfecb5" kindref="member">traceray</ref>(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/>dir,<sp/>mint,<sp/>fid,<sp/>bary);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStaticMeshRTracer_1a2ffd4d56b1d9f45d16629dd680cfecb5" kindref="member">StaticMeshRTracer::traceray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;dir,<sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>&amp;mint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;fid,<sp/>Point3<sp/>&amp;bary)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classStaticMeshRTracer_1ae5ac50feb27382c0cfc934203fce894c" kindref="member">root</ref>)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="classStaticMeshRTracer_1a8b49d0ea4e80d4d9e6ad898840526823" kindref="member">a4</ref><sp/>=<sp/><ref refid="group__common_1gaaff3fa783c7ad74aa0e9656ef3eda330" kindref="member">lengthSq</ref>(dir)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="classStaticMeshRTracer_1acd05ab1371a64a8b593d077931a804ee" kindref="member">a2</ref><sp/>=<sp/>1<sp/>/<sp/><ref refid="classStaticMeshRTracer_1a8b49d0ea4e80d4d9e6ad898840526823" kindref="member">a4</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="classStaticMeshRTracer_1a8b49d0ea4e80d4d9e6ad898840526823" kindref="member">a4</ref><sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classStaticMeshRTracer_1ae5ac50feb27382c0cfc934203fce894c" kindref="member">root</ref>-&gt;<ref refid="structStaticMeshRTracer_1_1Node_1ae9bd03ab820354496f4ef597d655b8c7" kindref="member">traceray</ref>(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/>dir,<sp/>mint,<sp/>fid,<sp/>bary);</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structStaticMeshRTracer_1_1LNode_1a7e7bdb28784d56cbf883c1f149ffb987" kindref="member">StaticMeshRTracer::LNode::traceray_back</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;dir,<sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>&amp;mint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;fid,<sp/>Point3<sp/>&amp;bary)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fi<sp/>=<sp/>0;<sp/>fi<sp/>&lt;<sp/>face.Count();<sp/>++fi)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>RTface<sp/>&amp;f<sp/>=<sp/>face[fi];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>den<sp/>=<sp/>DotProd(f.n,<sp/>dir);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(den<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>pc<sp/>=<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>-<sp/>f.sc;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>b<sp/>=<sp/>DotProd(pc,<sp/>dir)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>c<sp/>=<sp/>DotProd(pc,<sp/>pc)<sp/>-<sp/>f.sr2;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>d<sp/>=<sp/>b<sp/>*<sp/>b<sp/>-<sp/><ref refid="classStaticMeshRTracer_1a8b49d0ea4e80d4d9e6ad898840526823" kindref="member">a4</ref><sp/>*<sp/>c;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>s<sp/>=<sp/>sqrtf(d);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>t2<sp/>=<sp/>(-b<sp/>+<sp/>s)<sp/>*<sp/><ref refid="classStaticMeshRTracer_1acd05ab1371a64a8b593d077931a804ee" kindref="member">a2</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>t1<sp/>=<sp/>(-b<sp/>-<sp/>s)<sp/>*<sp/><ref refid="classStaticMeshRTracer_1acd05ab1371a64a8b593d077931a804ee" kindref="member">a2</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&gt;=<sp/>mint)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>intersect<sp/>face<sp/>plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>t<sp/>=<sp/>-(DotProd(f.n,<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>)<sp/>+<sp/>f.d)<sp/>/<sp/>den;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&gt;=<sp/>mint)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>pt<sp/>=<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>+<sp/>dir<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>++j)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DotProd(f.en[j],<sp/>pt)<sp/>+<sp/>f.ed[j]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>3)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>bc<sp/>=<sp/>f.bcm<sp/>*<sp/>pt;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>mint<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>fid<sp/>=<sp/>f.id;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>bary<sp/>=<sp/>bc;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>hit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hit;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structStaticMeshRTracer_1_1Node_1a875c08cc45d9667379b2a61b1fb58140" kindref="member">StaticMeshRTracer::Node::traceray_back</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;dir,<sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>&amp;mint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;fid,<sp/>Point3<sp/>&amp;bary)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>Point3<sp/>pc<sp/>=<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>-<sp/>bsc;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>b<sp/>=<sp/>DotProd(pc,<sp/>dir)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>c<sp/>=<sp/>DotProd(pc,<sp/>pc)<sp/>-<sp/>bsr2;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>d<sp/>=<sp/>b<sp/>*<sp/>b<sp/>-<sp/><ref refid="classStaticMeshRTracer_1a8b49d0ea4e80d4d9e6ad898840526823" kindref="member">a4</ref><sp/>*<sp/>c;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>s<sp/>=<sp/>sqrtf(d);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>t2<sp/>=<sp/>(-b<sp/>+<sp/>s)<sp/>*<sp/><ref refid="classStaticMeshRTracer_1acd05ab1371a64a8b593d077931a804ee" kindref="member">a2</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>t1<sp/>=<sp/>(-b<sp/>-<sp/>s)<sp/>*<sp/><ref refid="classStaticMeshRTracer_1acd05ab1371a64a8b593d077931a804ee" kindref="member">a2</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&gt;=<sp/>mint)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub0)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>branch<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hit<sp/>=<sp/>sub0-&gt;traceray_back(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/>dir,<sp/>mint,<sp/>fid,<sp/>bary);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((BNode<sp/>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;sub1-&gt;traceray_back(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/>dir,<sp/>mint,<sp/>fid,<sp/>bary))</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hit;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>leaf<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((LNode<sp/>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;<ref refid="classStaticMeshRTracer_1aa180b29b99047f7889cb92bfca9b663b" kindref="member">traceray_back</ref>(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/>dir,<sp/>mint,<sp/>fid,<sp/>bary);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStaticMeshRTracer_1aa180b29b99047f7889cb92bfca9b663b" kindref="member">StaticMeshRTracer::traceray_back</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;dir,<sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>&amp;mint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;fid,<sp/>Point3<sp/>&amp;bary)</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classStaticMeshRTracer_1ae5ac50feb27382c0cfc934203fce894c" kindref="member">root</ref>)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="classStaticMeshRTracer_1a8b49d0ea4e80d4d9e6ad898840526823" kindref="member">a4</ref><sp/>=<sp/><ref refid="group__common_1gaaff3fa783c7ad74aa0e9656ef3eda330" kindref="member">lengthSq</ref>(dir)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><ref refid="classStaticMeshRTracer_1acd05ab1371a64a8b593d077931a804ee" kindref="member">a2</ref><sp/>=<sp/>1<sp/>/<sp/><ref refid="classStaticMeshRTracer_1a8b49d0ea4e80d4d9e6ad898840526823" kindref="member">a4</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="classStaticMeshRTracer_1a8b49d0ea4e80d4d9e6ad898840526823" kindref="member">a4</ref><sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classStaticMeshRTracer_1ae5ac50feb27382c0cfc934203fce894c" kindref="member">root</ref>-&gt;<ref refid="structStaticMeshRTracer_1_1Node_1a875c08cc45d9667379b2a61b1fb58140" kindref="member">traceray_back</ref>(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/>dir,<sp/>mint,<sp/>fid,<sp/>bary);</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Tab&lt;float&gt;<sp/>fgrp2;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><ref refid="structStaticMeshRTracer_1_1Node" kindref="compound">StaticMeshRTracer::Node</ref><sp/>*<ref refid="classStaticMeshRTracer_1a4ea64e5ac5dbde72253feb344dc0ab78" kindref="member">StaticMeshRTracer::build_node</ref>(Mesh<sp/>&amp;m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*fc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numf)</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numf<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><ref refid="classBBox3" kindref="compound">BBox3</ref><sp/>box;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numf;<sp/>++i)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>++j)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>box<sp/>+=<sp/>m.verts[m.faces[fc[i]].v[j]];</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>Point3<sp/>c<sp/>=<sp/>box.<ref refid="group__common_1ga33a8d95cdfcb26b5fafde9165e0b3b6e" kindref="member">center</ref>();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numf;<sp/>++i)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>++j)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>d<sp/>=<sp/><ref refid="group__common_1gaaff3fa783c7ad74aa0e9656ef3eda330" kindref="member">lengthSq</ref>(m.verts[m.faces[fc[i]].v[j]]<sp/>-<sp/>c);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&gt;<sp/>r)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="polyBumpUtil_8cpp_1a2376ba14486c4117302393046c3abdd5" kindref="member">wd</ref><sp/>=<sp/>box.<ref refid="group__common_1ga34f6664227f8531a0708a69314c9eb21" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>md<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>ms<sp/>=<sp/><ref refid="polyBumpUtil_8cpp_1a2376ba14486c4117302393046c3abdd5" kindref="member">wd</ref>[0];</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="polyBumpUtil_8cpp_1a2376ba14486c4117302393046c3abdd5" kindref="member">wd</ref>[i]<sp/>&gt;<sp/>ms)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ms<sp/>=<sp/><ref refid="polyBumpUtil_8cpp_1a2376ba14486c4117302393046c3abdd5" kindref="member">wd</ref>[md<sp/>=<sp/>i];</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numf<sp/>&lt;=<sp/><ref refid="meshtrace_8cpp_1a3545f01ad15f15ef6ce9624a156b8b00" kindref="member">MAX_LEAF_FACES</ref><sp/>&amp;&amp;<sp/>(ms<sp/>&lt;=<sp/><ref refid="meshtrace_8cpp_1a44b7751428c58285d83b70f379d9fcc3" kindref="member">MAX_LEAF_LENGTH</ref><sp/>||<sp/>numf<sp/>&lt;=<sp/><ref refid="meshtrace_8cpp_1aa2bcce57e2a753cc17664d2e851945de" kindref="member">MIN_LEAF_FACES</ref>))</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>leaf<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>LNode<sp/>*n<sp/>=<sp/><ref refid="meshtrace_8cpp_1a564c99bc2e76d8090db35eda91bc820b" kindref="member">nomemchk</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LNode);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;bsc<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;bsr2<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;build(m,<sp/>fc,<sp/>numf);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>branch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>BNode<sp/>*n<sp/>=<sp/><ref refid="meshtrace_8cpp_1a564c99bc2e76d8090db35eda91bc820b" kindref="member">nomemchk</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BNode);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;bsc<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;bsr2<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Point3<sp/>wd=box.width();</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>md=0;</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/><sp/><sp/><sp/>real<sp/>ms=wd[0];</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/><sp/><sp/><sp/>for(i=1;i&lt;3;++i)<sp/>if(wd[i]&gt;ms)<sp/>ms=wd[md=i];*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>dp<sp/>=<sp/>c[md]<sp/>*<sp/>3;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numf;<sp/>++i)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>fc[i];</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fgrp[f]=((m.vert[m.face[f].v[0]][md]+m.vert[m.face[f].v[1]][md]+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m.vert[m.face[f].v[2]][md])&gt;=dp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fgrp2[f]<sp/>=<sp/>((m.verts[m.faces[f].v[0]][md]<sp/>+<sp/>m.verts[m.faces[f].v[1]][md]<sp/>+<sp/>m.verts[m.faces[f].v[2]][md]));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DataSimpleQsort&lt;int,MapSimpleAscentCompare&lt;char&gt;,char&gt;<sp/>qs;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>qs.sort(fc,numf,fgrp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDataSimpleQsort" kindref="compound">DataSimpleQsort&lt;int, MapSimpleAscentCompare&lt;float&gt;</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;<sp/>qs;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>qs.<ref refid="classDataSimpleQsort_1a318fd869f589bf46d88a27620de05550" kindref="member">sort</ref>(fc,<sp/>numf,<sp/>fgrp2.Addr(0));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>df<sp/>=<sp/>numf<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;sub0<sp/>=<sp/><ref refid="classStaticMeshRTracer_1a4ea64e5ac5dbde72253feb344dc0ab78" kindref="member">build_node</ref>(m,<sp/>fc,<sp/>df);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;sub1<sp/>=<sp/><ref refid="classStaticMeshRTracer_1a4ea64e5ac5dbde72253feb344dc0ab78" kindref="member">build_node</ref>(m,<sp/>fc<sp/>+<sp/>df,<sp/>numf<sp/>-<sp/>df);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="meshtrace_8cpp_1a676bcf61132b7d22bc6f825c50a52e3e" kindref="member">bugchk</ref>(n-&gt;sub0);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structStaticMeshRTracer_1_1LNode_1a800ec81ccf07f72b688353378961564e" kindref="member">StaticMeshRTracer::LNode::build</ref>(Mesh<sp/>&amp;m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*fc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numf)</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>face.SetCount(numf);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numf;<sp/>++i)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMatrix33" kindref="compound">Matrix33</ref><sp/>tm;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>tm.<ref refid="group__common_1ga85eb647b8096cc0fdf7c23b0b26e4f79" kindref="member">setcol</ref>(0,<sp/>m.verts[m.faces[fc[i]].v[0]]);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>tm.<ref refid="group__common_1ga85eb647b8096cc0fdf7c23b0b26e4f79" kindref="member">setcol</ref>(1,<sp/>m.verts[m.faces[fc[i]].v[1]]);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>tm.<ref refid="group__common_1ga85eb647b8096cc0fdf7c23b0b26e4f79" kindref="member">setcol</ref>(2,<sp/>m.verts[m.faces[fc[i]].v[2]]);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>RTface<sp/>&amp;f<sp/>=<sp/>face[i];</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>f.id<sp/>=<sp/>fc[i];</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>f.sc<sp/>=<sp/>(tm.<ref refid="group__common_1gac94266011945877c5639b5fedd2fd9d9" kindref="member">getcol</ref>(0)<sp/>+<sp/>tm.<ref refid="group__common_1gac94266011945877c5639b5fedd2fd9d9" kindref="member">getcol</ref>(1)<sp/>+<sp/>tm.<ref refid="group__common_1gac94266011945877c5639b5fedd2fd9d9" kindref="member">getcol</ref>(2))<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>f.sr2<sp/>=<sp/><ref refid="group__common_1gaaff3fa783c7ad74aa0e9656ef3eda330" kindref="member">lengthSq</ref>(tm.<ref refid="group__common_1gac94266011945877c5639b5fedd2fd9d9" kindref="member">getcol</ref>(0)<sp/>-<sp/>f.sc);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>r<sp/>=<sp/><ref refid="group__common_1gaaff3fa783c7ad74aa0e9656ef3eda330" kindref="member">lengthSq</ref>(tm.<ref refid="group__common_1gac94266011945877c5639b5fedd2fd9d9" kindref="member">getcol</ref>(1)<sp/>-<sp/>f.sc);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&gt;<sp/>f.sr2)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.sr2<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="group__common_1gaaff3fa783c7ad74aa0e9656ef3eda330" kindref="member">lengthSq</ref>(tm.<ref refid="group__common_1gac94266011945877c5639b5fedd2fd9d9" kindref="member">getcol</ref>(2)<sp/>-<sp/>f.sc);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&gt;<sp/>f.sr2)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.sr2<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>f.bcm<sp/>=<sp/><ref refid="group__common_1ga74b885fe7e4bd4acec51c9c0a8232877" kindref="member">inverse</ref>(tm);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>f.n<sp/>=<sp/>CrossProd((tm.<ref refid="group__common_1gac94266011945877c5639b5fedd2fd9d9" kindref="member">getcol</ref>(2)<sp/>-<sp/>tm.<ref refid="group__common_1gac94266011945877c5639b5fedd2fd9d9" kindref="member">getcol</ref>(0)),<sp/>(tm.<ref refid="group__common_1gac94266011945877c5639b5fedd2fd9d9" kindref="member">getcol</ref>(1)<sp/>-<sp/>tm.<ref refid="group__common_1gac94266011945877c5639b5fedd2fd9d9" kindref="member">getcol</ref>(0)));</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>f.d<sp/>=<sp/>-DotProd(tm.<ref refid="group__common_1gac94266011945877c5639b5fedd2fd9d9" kindref="member">getcol</ref>(0),<sp/>f.n);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>++j)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.en[j]<sp/>=<sp/>CrossProd((tm.<ref refid="group__common_1gac94266011945877c5639b5fedd2fd9d9" kindref="member">getcol</ref>(j<sp/>+<sp/>1<sp/>&gt;=<sp/>3<sp/>?<sp/>0<sp/>:<sp/>j<sp/>+<sp/>1)<sp/>-<sp/>tm.getcol(j)),<sp/>f.n);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.ed[j]<sp/>=<sp/>-DotProd(f.en[j],<sp/>tm.<ref refid="group__common_1gac94266011945877c5639b5fedd2fd9d9" kindref="member">getcol</ref>(j));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classStaticMeshRTracer_1a30034ef5921f81041e76eb9639f1d913" kindref="member">StaticMeshRTracer::build</ref>(Mesh<sp/>&amp;m)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classStaticMeshRTracer_1ae5ac50feb27382c0cfc934203fce894c" kindref="member">root</ref>)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classStaticMeshRTracer_1a19d928167268324ce4a4a445346411a1" kindref="member">kill_node</ref>(<ref refid="classStaticMeshRTracer_1ae5ac50feb27382c0cfc934203fce894c" kindref="member">root</ref>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classStaticMeshRTracer_1ae5ac50feb27382c0cfc934203fce894c" kindref="member">root</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>Tab&lt;int&gt;<sp/>fc;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>fc.SetCount(m.numFaces);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>nomem(fgrp.resize(m.face.size()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>fgrp2.SetCount(m.numFaces);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fc.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>fc[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><ref refid="classStaticMeshRTracer_1ae5ac50feb27382c0cfc934203fce894c" kindref="member">root</ref><sp/>=<sp/><ref refid="classStaticMeshRTracer_1a4ea64e5ac5dbde72253feb344dc0ab78" kindref="member">build_node</ref>(m,<sp/>fc.Addr(0),<sp/>fc.Count());</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><ref refid="classStaticMeshRayTracer" kindref="compound">StaticMeshRayTracer</ref><sp/>*<ref refid="meshtrace_8cpp_1aad660c21909755ae7a48c9cd02feade4" kindref="member">create_staticmeshraytracer</ref>()</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><ref refid="classStaticMeshRTracer" kindref="compound">StaticMeshRTracer</ref><sp/>*rt<sp/>=<sp/><ref refid="meshtrace_8cpp_1a564c99bc2e76d8090db35eda91bc820b" kindref="member">nomemchk</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classStaticMeshRTracer" kindref="compound">StaticMeshRTracer</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rt;</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><ref refid="classStaticMeshRayTracer" kindref="compound">StaticMeshRayTracer</ref><sp/>*<ref refid="meshtrace_8cpp_1aad660c21909755ae7a48c9cd02feade4" kindref="member">create_staticmeshraytracer</ref>(Mesh<sp/>&amp;m)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><ref refid="classStaticMeshRTracer" kindref="compound">StaticMeshRTracer</ref><sp/>*rt<sp/>=<sp/><ref refid="meshtrace_8cpp_1a564c99bc2e76d8090db35eda91bc820b" kindref="member">nomemchk</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classStaticMeshRTracer" kindref="compound">StaticMeshRTracer</ref>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>rt-&gt;<ref refid="classStaticMeshRTracer_1a30034ef5921f81041e76eb9639f1d913" kindref="member">build</ref>(m);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rt;</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="meshtrace.cpp"/>
  </compounddef>
</doxygen>
