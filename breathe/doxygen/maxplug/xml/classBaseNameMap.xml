<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="classBaseNameMap" kind="class" language="C++" prot="public">
    <compoundname>BaseNameMap</compoundname>
    <derivedcompoundref refid="classNameMap" prot="public" virt="non-virtual">NameMap</derivedcompoundref>
    <derivedcompoundref refid="classNameMapCI" prot="public" virt="non-virtual">NameMapCI</derivedcompoundref>
    <includes refid="namemap_8h" local="no">namemap.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classBaseNameMap_1ad7e889893aef629ea322484d0638eb26" prot="protected" static="no" mutable="no">
        <type>Tab&lt; String &gt;</type>
        <definition>Tab&lt;String&gt; BaseNameMap::names</definition>
        <argsstring></argsstring>
        <name>names</name>
        <qualifiedname>BaseNameMap::names</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="namemap.h" line="49" column="7" bodyfile="namemap.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBaseNameMap_1a9f4799aa8bbfb1c2a50c7b3ab581e7fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BaseNameMap::BaseNameMap</definition>
        <argsstring>()</argsstring>
        <name>BaseNameMap</name>
        <qualifiedname>BaseNameMap::BaseNameMap</qualifiedname>
        <briefdescription>
<para>Constructor. Memory allocator can be specified (defaults to #tmpmem). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="namemap.h" line="29" column="3" bodyfile="namemap.cpp" bodystart="7" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classBaseNameMap_1a27f04775f7b188f0eba8472fc608471a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BaseNameMap::~BaseNameMap</definition>
        <argsstring>()</argsstring>
        <name>~BaseNameMap</name>
        <qualifiedname>BaseNameMap::~BaseNameMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="namemap.h" line="30" column="3" bodyfile="namemap.cpp" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classBaseNameMap_1a379dcfcd995d228fb440ba46dff71efa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BaseNameMap::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>BaseNameMap::clear</qualifiedname>
        <briefdescription>
<para>Clear name list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="namemap.h" line="33" column="8" bodyfile="namemap.cpp" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classBaseNameMap_1a09fb9cc27dc905135f38e49f5b898637" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int BaseNameMap::nameCount</definition>
        <argsstring>() const</argsstring>
        <name>nameCount</name>
        <qualifiedname>BaseNameMap::nameCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of names in list. You can get them all by iterating from 0 to <ref refid="classBaseNameMap_1a09fb9cc27dc905135f38e49f5b898637" kindref="member">nameCount()</ref>-1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="namemap.h" line="37" column="7" bodyfile="namemap.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classBaseNameMap_1ad27291165fe02dcd33077696c0df2a51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * BaseNameMap::getName</definition>
        <argsstring>(int name_id) const</argsstring>
        <name>getName</name>
        <qualifiedname>BaseNameMap::getName</qualifiedname>
        <param>
          <type>int</type>
          <declname>name_id</declname>
        </param>
        <briefdescription>
<para>Returns NULL when name_id is invalid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="namemap.h" line="40" column="14" bodyfile="namemap.cpp" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classBaseNameMap_1a1d3bd0a327df8efbf135ae5ac552f5a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BaseNameMap::save</definition>
        <argsstring>(FILE *) const</argsstring>
        <name>save</name>
        <qualifiedname>BaseNameMap::save</qualifiedname>
        <param>
          <type>FILE *</type>
          <defname>f</defname>
        </param>
        <briefdescription>
<para>Save this name map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="namemap.h" line="43" column="8" bodyfile="namemap.cpp" bodystart="26" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classBaseNameMap_1a017e5959e9c9e8c7624e34f7fdba9447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BaseNameMap::load</definition>
        <argsstring>(FILE *)</argsstring>
        <name>load</name>
        <qualifiedname>BaseNameMap::load</qualifiedname>
        <param>
          <type>FILE *</type>
          <defname>f</defname>
        </param>
        <briefdescription>
<para>Load this name map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="namemap.h" line="46" column="8" bodyfile="namemap.cpp" bodystart="44" bodyend="63"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBaseNameMap_1aa12d4ba58ab9753e5b30595c9b7e9718" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BaseNameMap::copyFrom</definition>
        <argsstring>(const BaseNameMap &amp;nm)</argsstring>
        <name>copyFrom</name>
        <qualifiedname>BaseNameMap::copyFrom</qualifiedname>
        <param>
          <type>const <ref refid="classBaseNameMap" kindref="compound">BaseNameMap</ref> &amp;</type>
          <declname>nm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="namemap.h" line="51" column="8" bodyfile="namemap.cpp" bodystart="74" bodyend="83"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBaseNameMap_1ac572408992afdaf39c39c3d096686c00" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>BaseNameMap::BaseNameMap</definition>
        <argsstring>(const BaseNameMap &amp;nm)</argsstring>
        <name>BaseNameMap</name>
        <qualifiedname>BaseNameMap::BaseNameMap</qualifiedname>
        <param>
          <type>const <ref refid="classBaseNameMap" kindref="compound">BaseNameMap</ref> &amp;</type>
          <declname>nm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="namemap.h" line="54" column="3" bodyfile="namemap.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classBaseNameMap_1a6775052a1bd32c61a93d6558e3679929" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classBaseNameMap" kindref="compound">BaseNameMap</ref> &amp;</type>
        <definition>BaseNameMap &amp; BaseNameMap::operator=</definition>
        <argsstring>(const BaseNameMap &amp;nm)</argsstring>
        <name>operator=</name>
        <qualifiedname>BaseNameMap::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classBaseNameMap" kindref="compound">BaseNameMap</ref> &amp;</type>
          <declname>nm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="namemap.h" line="55" column="15" bodyfile="namemap.h" bodystart="55" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class maps strings to integers and back. NULL is mapped to -1. All other strings are mapped to non-negative numbers (&gt;=0). NOTE: this class misses some methods that are implemented in <ref refid="classNameMap" kindref="compound">NameMap</ref> and <ref refid="classNameMapCI" kindref="compound">NameMapCI</ref>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BaseNameMap</label>
        <link refid="classBaseNameMap"/>
      </node>
      <node id="2">
        <label>NameMap</label>
        <link refid="classNameMap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>NameMapCI</label>
        <link refid="classNameMapCI"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="namemap.h" line="23" column="1" bodyfile="namemap.h" bodystart="24" bodyend="60"/>
    <listofallmembers>
      <member refid="classBaseNameMap_1a9f4799aa8bbfb1c2a50c7b3ab581e7fd" prot="public" virt="non-virtual"><scope>BaseNameMap</scope><name>BaseNameMap</name></member>
      <member refid="classBaseNameMap_1ac572408992afdaf39c39c3d096686c00" prot="private" virt="non-virtual"><scope>BaseNameMap</scope><name>BaseNameMap</name></member>
      <member refid="classBaseNameMap_1a379dcfcd995d228fb440ba46dff71efa" prot="public" virt="non-virtual"><scope>BaseNameMap</scope><name>clear</name></member>
      <member refid="classBaseNameMap_1aa12d4ba58ab9753e5b30595c9b7e9718" prot="protected" virt="non-virtual"><scope>BaseNameMap</scope><name>copyFrom</name></member>
      <member refid="classBaseNameMap_1ad27291165fe02dcd33077696c0df2a51" prot="public" virt="non-virtual"><scope>BaseNameMap</scope><name>getName</name></member>
      <member refid="classBaseNameMap_1a017e5959e9c9e8c7624e34f7fdba9447" prot="public" virt="non-virtual"><scope>BaseNameMap</scope><name>load</name></member>
      <member refid="classBaseNameMap_1a09fb9cc27dc905135f38e49f5b898637" prot="public" virt="non-virtual"><scope>BaseNameMap</scope><name>nameCount</name></member>
      <member refid="classBaseNameMap_1ad7e889893aef629ea322484d0638eb26" prot="protected" virt="non-virtual"><scope>BaseNameMap</scope><name>names</name></member>
      <member refid="classBaseNameMap_1a6775052a1bd32c61a93d6558e3679929" prot="private" virt="non-virtual"><scope>BaseNameMap</scope><name>operator=</name></member>
      <member refid="classBaseNameMap_1a1d3bd0a327df8efbf135ae5ac552f5a1" prot="public" virt="non-virtual"><scope>BaseNameMap</scope><name>save</name></member>
      <member refid="classBaseNameMap_1a27f04775f7b188f0eba8472fc608471a" prot="public" virt="non-virtual"><scope>BaseNameMap</scope><name>~BaseNameMap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
