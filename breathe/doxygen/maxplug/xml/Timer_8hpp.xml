<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="Timer_8hpp" kind="file" language="C++">
    <compoundname>Timer.hpp</compoundname>
    <includes local="no">chrono</includes>
    <incdepgraph>
      <node id="1">
        <label>Timer.hpp</label>
        <link refid="Timer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>chrono</label>
      </node>
    </incdepgraph>
    <innerclass refid="classTimer" prot="public">Timer</innerclass>
    <innerclass refid="structTime" prot="public">Time</innerclass>
    <innerclass refid="classTimerInterval" prot="public">TimerInterval</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301" prot="public" static="no" strong="yes">
        <type></type>
        <name>TimerIntervalType</name>
        <enumvalue id="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301ae927adbf288d9abd51aabe2af4acc026" prot="public">
          <name>GATHER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301ac4fd1ef4041f00039def6df0331841de" prot="public">
          <name>ACC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Timer.hpp" line="29" column="1" bodyfile="Timer.hpp" bodystart="30" bodyend="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="classTimer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classTimer" kindref="compound">Timer</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/>std::chrono::time_point&lt;std::chrono::high_resolution_clock&gt;<sp/>_current,<sp/>_prev,<sp/>_start;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="9" refid="classTimer_1a5f16e8da27d2a5a5242dead46de05d97" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classTimer_1a5f16e8da27d2a5a5242dead46de05d97" kindref="member">Timer</ref>();</highlight></codeline>
<codeline lineno="10" refid="classTimer_1af90455f3201a327ae96eb37e21a9ca31" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTimer_1af90455f3201a327ae96eb37e21a9ca31" kindref="member">Tick</ref>()</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>_prev<sp/>=<sp/>_current;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>_current<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15" refid="classTimer_1a84f3f99d23bf33ffa921591524ab4725" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classTimer_1a84f3f99d23bf33ffa921591524ab4725" kindref="member">FrameMs</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(_current<sp/>-<sp/>_prev).count()<sp/>/<sp/>1000000.;<sp/>}</highlight></codeline>
<codeline lineno="16" refid="classTimer_1a8032cdab06dff47335af9e787420ee64" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classTimer_1a8032cdab06dff47335af9e787420ee64" kindref="member">TotalMs</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(_current<sp/>-<sp/>_start).count()<sp/>/<sp/>1000000.;<sp/>}</highlight></codeline>
<codeline lineno="17" refid="classTimer_1a03000d4bf8d0dd0bdd30f4ddfa860e45" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classTimer_1a03000d4bf8d0dd0bdd30f4ddfa860e45" kindref="member">NowMs</ref>()</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(std::chrono::high_resolution_clock::now().time_since_epoch()).count()<sp/>/</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1000000.;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structTime" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structTime" kindref="compound">Time</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26" refid="structTime_1aa43f45347a457730ca7fa24f2002ef5a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structTime_1a017f1d3bc5eb10cae244a817080e403a" kindref="member">total</ref>,<sp/><ref refid="structTime_1aa43f45347a457730ca7fa24f2002ef5a" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301" kindref="member">TimerIntervalType</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301ae927adbf288d9abd51aabe2af4acc026" kindref="member">GATHER</ref>,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301ac4fd1ef4041f00039def6df0331841de" kindref="member">ACC</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34" refid="classTimerInterval" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classTimerInterval" kindref="compound">TimerInterval</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,<sp/>&amp;elapsed;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301" kindref="member">TimerIntervalType</ref><sp/>type;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41" refid="classTimerInterval_1aa7b211331a610664dd9886116dd126ad" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classTimerInterval_1aa7b211331a610664dd9886116dd126ad" kindref="member">TimerInterval</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;elapsed,<sp/><ref refid="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301" kindref="member">TimerIntervalType</ref><sp/>type<sp/>=<sp/><ref refid="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301ac4fd1ef4041f00039def6df0331841de" kindref="member">TimerIntervalType::ACC</ref>)<sp/>:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>name(name),<sp/>elapsed(elapsed),<sp/>type(type)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/><ref refid="classTimer_1a03000d4bf8d0dd0bdd30f4ddfa860e45" kindref="member">Timer::NowMs</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>!=<sp/><ref refid="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301ac4fd1ef4041f00039def6df0331841de" kindref="member">TimerIntervalType::ACC</ref>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elapsed<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48" refid="classTimerInterval_1a1b195dd2f3d08dc89522b1d2fae533e9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classTimerInterval_1a1b195dd2f3d08dc89522b1d2fae533e9" kindref="member">~TimerInterval</ref>()</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301ac4fd1ef4041f00039def6df0331841de" kindref="member">TimerIntervalType::ACC</ref>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elapsed<sp/>+=<sp/><ref refid="classTimer_1a03000d4bf8d0dd0bdd30f4ddfa860e45" kindref="member">Timer::NowMs</ref>()<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elapsed<sp/>=<sp/><ref refid="classTimer_1a03000d4bf8d0dd0bdd30f4ddfa860e45" kindref="member">Timer::NowMs</ref>()<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="Timer.hpp"/>
  </compounddef>
</doxygen>
