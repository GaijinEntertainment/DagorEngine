<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="util_8cpp" kind="file" language="C++">
    <compoundname>util.cpp</compoundname>
    <includes local="no">map</includes>
    <includes local="no">max.h</includes>
    <includes local="no">utilapi.h</includes>
    <includes local="no">bmmlib.h</includes>
    <includes local="no">stdmat.h</includes>
    <includes local="no">notetrck.h</includes>
    <includes local="no">meshadj.h</includes>
    <includes local="no">mnmath.h</includes>
    <includes local="no">splshape.h</includes>
    <includes local="no">ilayer.h</includes>
    <includes local="no">ilayerproperties.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">sstream</includes>
    <includes local="no">memory</includes>
    <includes refid="dagor_8h" local="yes">dagor.h</includes>
    <includes refid="enumnode_8h" local="yes">enumnode.h</includes>
    <includes refid="mater_8h" local="yes">mater.h</includes>
    <includes refid="texmaps_8h" local="yes">texmaps.h</includes>
    <includes refid="resource_8h" local="yes">resource.h</includes>
    <includes refid="cfg_8h" local="yes">cfg.h</includes>
    <includes refid="mathAng_8h" local="yes">mathAng.h</includes>
    <includes refid="dag__auto__ptr_8h" local="yes">dag_auto_ptr.h</includes>
    <includes refid="layout_8h" local="yes">layout.h</includes>
    <includes refid="common_8h" local="yes">common.h</includes>
    <incdepgraph>
      <node id="22">
        <label>cfg.h</label>
        <link refid="cfg_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>dag_auto_ptr.h</label>
        <link refid="dag__auto__ptr_8h"/>
      </node>
      <node id="17">
        <label>dagor.h</label>
        <link refid="dagor_8h"/>
      </node>
      <node id="18">
        <label>enumnode.h</label>
        <link refid="enumnode_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>layout.h</label>
        <link refid="layout_8h"/>
      </node>
      <node id="19">
        <label>mater.h</label>
        <link refid="mater_8h"/>
      </node>
      <node id="23">
        <label>mathAng.h</label>
        <link refid="mathAng_8h"/>
      </node>
      <node id="21">
        <label>resource.h</label>
        <link refid="resource_8h"/>
      </node>
      <node id="20">
        <label>texmaps.h</label>
        <link refid="texmaps_8h"/>
      </node>
      <node id="1">
        <label>util.cpp</label>
        <link refid="util_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>bmmlib.h</label>
      </node>
      <node id="11">
        <label>ilayer.h</label>
      </node>
      <node id="12">
        <label>ilayerproperties.h</label>
      </node>
      <node id="2">
        <label>map</label>
      </node>
      <node id="3">
        <label>max.h</label>
      </node>
      <node id="16">
        <label>memory</label>
      </node>
      <node id="8">
        <label>meshadj.h</label>
      </node>
      <node id="9">
        <label>mnmath.h</label>
      </node>
      <node id="7">
        <label>notetrck.h</label>
      </node>
      <node id="10">
        <label>splshape.h</label>
      </node>
      <node id="15">
        <label>sstream</label>
      </node>
      <node id="6">
        <label>stdmat.h</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="4">
        <label>utilapi.h</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="classDag2DagnewCB" prot="public">Dag2DagnewCB</innerclass>
    <innerclass refid="structMappingInfo" prot="public">MappingInfo</innerclass>
    <innerclass refid="classTopologyAdapter" prot="public">TopologyAdapter</innerclass>
    <innerclass refid="classDagUtil" prot="public">DagUtil</innerclass>
    <innerclass refid="classDagUtilDesc" prot="public">DagUtilDesc</innerclass>
    <innerclass refid="classShowMapsCB" prot="public">ShowMapsCB</innerclass>
    <innerclass refid="classHideMapsCB" prot="public">HideMapsCB</innerclass>
    <innerclass refid="structCnvMtl" prot="public">CnvMtl</innerclass>
    <innerclass refid="classStd2DagCB" prot="public">Std2DagCB</innerclass>
    <innerclass refid="classDag2StdCB" prot="public">Dag2StdCB</innerclass>
    <innerclass refid="classDag2EnumeratorCB" prot="public">Dag2EnumeratorCB</innerclass>
    <innerclass refid="classDag2UniqueCB" prot="public">Dag2UniqueCB</innerclass>
    <innerclass refid="classDag2DagCB" prot="public">Dag2DagCB</innerclass>
    <innerclass refid="classGeometryTopologyAdapter" prot="public">GeometryTopologyAdapter</innerclass>
    <innerclass refid="classTextureTopologyAdapter" prot="public">TextureTopologyAdapter</innerclass>
    <innerclass refid="classColorTopologyAdapter" prot="public">ColorTopologyAdapter</innerclass>
    <innerclass refid="classMultiBooleanCB" prot="public">MultiBooleanCB</innerclass>
    <innerclass refid="classSuperLight" prot="public">SuperLight</innerclass>
    <innerclass refid="classGetLightsCB" prot="public">GetLightsCB</innerclass>
    <innerclass refid="classRenderMapSC" prot="public">RenderMapSC</innerclass>
    <innerclass refid="structDivideE" prot="public">DivideE</innerclass>
    <innerclass refid="structTQuad" prot="public">TQuad</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="util_8cpp_1a398da37e411bb2d829f85232480defea" prot="public" static="no">
        <name>ERRMSG_DELAY</name>
        <initializer>3000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="33" column="9" bodyfile="util.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8cpp_1a68e8f8dd81a4d1248ed76d7508ba655e" prot="public" static="no">
        <name>MAX_CLSNAME</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="35" column="9" bodyfile="util.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8cpp_1a2eb6f9e0395b47b8d5e3eeae4fe0c116" prot="public" static="no">
        <name>INLINE</name>
        <initializer>__forceinline</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="228" column="9" bodyfile="util.cpp" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8cpp_1addbad2bc626a64a9917c2224de315b6c" prot="public" static="no">
        <name>MAX_REAL</name>
        <initializer>FLT_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="229" column="9" bodyfile="util.cpp" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8cpp_1a9eddad11c4bf0260599c228291c1443a" prot="public" static="no">
        <name>MIN_REAL</name>
        <initializer>(-FLT_MAX)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="230" column="9" bodyfile="util.cpp" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" prot="public" static="no">
        <name>reled</name>
        <param><defname>e</defname></param>
        <initializer>  <ref refid="polyBumpUtil_8cpp_1a7699f0fa17b7a8c6cc60895b6ec8bb97" kindref="member">if</ref> (e)                 \
  {                      \
    ReleaseICustEdit(e); \
    e = NULL;            \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="855" column="9"/>
      </memberdef>
      <memberdef kind="define" id="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" prot="public" static="no">
        <name>reled</name>
        <param><defname>e</defname></param>
        <initializer>  <ref refid="polyBumpUtil_8cpp_1a7699f0fa17b7a8c6cc60895b6ec8bb97" kindref="member">if</ref> (e)                 \
  {                      \
    ReleaseICustEdit(e); \
    e = NULL;            \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="940" column="9"/>
      </memberdef>
      <memberdef kind="define" id="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" prot="public" static="no">
        <name>reled</name>
        <param><defname>e</defname></param>
        <initializer>  <ref refid="polyBumpUtil_8cpp_1a7699f0fa17b7a8c6cc60895b6ec8bb97" kindref="member">if</ref> (e)                 \
  {                      \
    ReleaseICustEdit(e); \
    e = NULL;            \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="1027" column="9"/>
      </memberdef>
      <memberdef kind="define" id="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" prot="public" static="no">
        <name>reled</name>
        <param><defname>e</defname></param>
        <initializer>  <ref refid="polyBumpUtil_8cpp_1a7699f0fa17b7a8c6cc60895b6ec8bb97" kindref="member">if</ref> (e)                 \
  {                      \
    ReleaseICustEdit(e); \
    e = NULL;            \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="1149" column="9"/>
      </memberdef>
      <memberdef kind="define" id="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" prot="public" static="no">
        <name>reled</name>
        <param><defname>e</defname></param>
        <initializer>  <ref refid="polyBumpUtil_8cpp_1a7699f0fa17b7a8c6cc60895b6ec8bb97" kindref="member">if</ref> (e)                 \
  {                      \
    ReleaseICustEdit(e); \
    e = NULL;            \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="1222" column="9"/>
      </memberdef>
      <memberdef kind="define" id="util_8cpp_1a6cb069a9f45813f7f1986d434ffdc2ce" prot="public" static="no">
        <name>MESHSMOOTHMAPS_SUPPORT</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="4749" column="9" bodyfile="util.cpp" bodystart="4749" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cd" prot="public" static="no" strong="no">
        <type></type>
        <name>TCCOPY</name>
        <enumvalue id="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cdaac7f1f466c04f821a6d54d848d386582" prot="public">
          <name>CTC_COPY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cdacbf998ce2debb62087735e02300b67f7" prot="public">
          <name>CTC_MOVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cdaece51b55fdec5842d289a4e6eb5c2722" prot="public">
          <name>CTC_SWAP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda06b0b74acc368ca1ff86908646edf0cf" prot="public">
          <name>CTC_FLIPU</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cdaaf934b294ab2b0d49c2e6945b4acdda6" prot="public">
          <name>CTC_FLIPV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda1b7a0a3abf9ebc0c9ef192d425a8e815" prot="public">
          <name>CTC_XCHG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda98f89288a139bc06fcb9097becbd3079" prot="public">
          <name>CTC_MUL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda81217c149dd041a17f347472c1e1764c" prot="public">
          <name>CTC_ADD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda169579c80803cf629a8ae059d32bede4" prot="public">
          <name>CTC_KILL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda7f6bac6a01e9ec854b01112b8906f4e5" prot="public">
          <name>CTC_INFO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="201" column="1" bodyfile="util.cpp" bodystart="202" bodyend="213"/>
      </memberdef>
      <memberdef kind="enum" id="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167b" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167bad3f64ef97b6b187750688f8ccdaf8a8e" prot="public">
          <name>CH_RMAP_FNAME</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167ba8dee66101b9d373caa837e916c3d069d" prot="public">
          <name>CH_LTMAP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167bae71bf7eb77cc2f6a58c9396f0388e6d6" prot="public">
          <name>CH_RENDER_MAP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167bafa8fb52d72a03be05fb6af7d455a175e" prot="public">
          <name>CH_EPSPL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167ba9ede1553684510f1f1acf87dcb8eb9b9" prot="public">
          <name>CH_GS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167bad0954d3bacf14eec4c748d3c7cf116e5" prot="public">
          <name>CH_GS2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="428" column="1" bodyfile="util.cpp" bodystart="429" bodyend="436"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="util_8cpp_1a4be4302620be4a0cda3e678fdc4f05fb" prot="public" static="no">
        <type>int</type>
        <definition>typedef int FaceNGr[3]</definition>
        <argsstring>[3]</argsstring>
        <name>FaceNGr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="226" column="13" bodyfile="util.cpp" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="util_8cpp_1a6944b0a974ea40dabe5ae4ecaed283e6" prot="public" static="no">
        <type><ref refid="classdag__auto__ptr" kindref="compound">dag_auto_ptr</ref>&lt; Mtl &gt;</type>
        <definition>typedef dag_auto_ptr&lt;Mtl&gt; MtlPtr</definition>
        <argsstring></argsstring>
        <name>MtlPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="1901" column="22" bodyfile="util.cpp" bodystart="1901" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="util_8cpp_1a6ee17e63dcc1de0e21f035f22b7815ab" prot="public" static="no">
        <type>std::vector&lt; <ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref> &gt;</type>
        <definition>typedef std::vector&lt;M_STD_STRING&gt; StrVec</definition>
        <argsstring></argsstring>
        <name>StrVec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="1903" column="21" bodyfile="util.cpp" bodystart="1903" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="util_8cpp_1a646f865de56f8e0b93270db508c881e0" prot="public" static="no">
        <type>std::vector&lt; <ref refid="util_8cpp_1a6944b0a974ea40dabe5ae4ecaed283e6" kindref="member">MtlPtr</ref> &gt;</type>
        <definition>typedef std::vector&lt;MtlPtr&gt; MtlVec</definition>
        <argsstring></argsstring>
        <name>MtlVec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="1904" column="21" bodyfile="util.cpp" bodystart="1904" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="util_8cpp_1a0e673fb099db630ac89da5dd6a661e11" prot="public" static="no">
        <type>std::map&lt; <ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref>, <ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref> &gt;</type>
        <definition>typedef std::map&lt;M_STD_STRING, M_STD_STRING&gt; StrMap</definition>
        <argsstring></argsstring>
        <name>StrMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="1905" column="18" bodyfile="util.cpp" bodystart="1905" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="util_8cpp_1a1ac59ad7bc17e165372145bbeb526f25" prot="public" static="no">
        <type>Tab&lt; int &gt;</type>
        <definition>typedef Tab&lt;int&gt; Tabint</definition>
        <argsstring></argsstring>
        <name>Tabint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="4758" column="13" bodyfile="util.cpp" bodystart="4758" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="util_8cpp_1ae2bf8d05f4b4599b4c142d38a41b51aa" prot="public" static="yes" mutable="no">
        <type>Tab&lt; char * &gt;</type>
        <definition>Tab&lt;char *&gt; dagpath</definition>
        <argsstring></argsstring>
        <name>dagpath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="37" column="12" bodyfile="util.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8cpp_1a3929931d71c8366efa9dc4183a3b924b" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char dagor_path[256]</definition>
        <argsstring>[256]</argsstring>
        <name>dagor_path</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="39" column="6" bodyfile="util.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8cpp_1ab4dcf50292322861f2c0e7113269a6b4" prot="public" static="yes" mutable="no">
        <type><ref refid="classDagUtil" kindref="compound">DagUtil</ref></type>
        <definition>DagUtil util</definition>
        <argsstring></argsstring>
        <name>util</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="403" column="16" bodyfile="util.cpp" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8cpp_1aa29621602db65e71e9e12bfeb03ce14d" prot="public" static="yes" mutable="no">
        <type><ref refid="classDagUtilDesc" kindref="compound">DagUtilDesc</ref></type>
        <definition>DagUtilDesc utilDesc</definition>
        <argsstring></argsstring>
        <name>utilDesc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="573" column="20" bodyfile="util.cpp" bodystart="573" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8cpp_1a1450f7ddd500b592a4bda3ce278be908" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int numv</definition>
        <argsstring></argsstring>
        <name>numv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="2418" column="7" bodyfile="util.cpp" bodystart="2418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8cpp_1a8d1ef60ce08386988abaf30527cc083f" prot="public" static="yes" mutable="no">
        <type>struct </type>
        <definition>struct  tcinfo[MAX_MESHMAPS]</definition>
        <argsstring>[MAX_MESHMAPS]</argsstring>
        <name>tcinfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="2419" column="22"/>
      </memberdef>
      <memberdef kind="variable" id="util_8cpp_1a0145a1376a515de1fb5c79f2b9d65191" prot="public" static="yes" mutable="no">
        <type>SuperLight</type>
        <definition>SuperLight superlight</definition>
        <argsstring></argsstring>
        <name>superlight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="3846" column="12"/>
      </memberdef>
      <memberdef kind="variable" id="util_8cpp_1adfe393b3c5e4c7a7b8b9f94ebb8d529b" prot="public" static="yes" mutable="no">
        <type>Tab&lt; int &gt; *</type>
        <definition>Tab&lt;int&gt;* recurse_fcsquads</definition>
        <argsstring></argsstring>
        <name>recurse_fcsquads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="4613" column="12" bodyfile="util.cpp" bodystart="4613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8cpp_1aaed05f1754d6334cd7fd92325eda1160" prot="public" static="yes" mutable="no">
        <type>Tab&lt; int &gt; *</type>
        <definition>Tab&lt;int&gt;* recurse_fcs</definition>
        <argsstring></argsstring>
        <name>recurse_fcs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="4614" column="12" bodyfile="util.cpp" bodystart="4614" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8cpp_1ac5ee588666cdf829d923bdacb5921418" prot="public" static="yes" mutable="no">
        <type>Tab&lt; int &gt; *</type>
        <definition>Tab&lt;int&gt;* recurse_dvEdges</definition>
        <argsstring></argsstring>
        <name>recurse_dvEdges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="4615" column="12" bodyfile="util.cpp" bodystart="4615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8cpp_1a5b7d5a9811aa9ced9149bedb809e41df" prot="public" static="yes" mutable="no">
        <type>Mesh *</type>
        <definition>Mesh* recurse_m</definition>
        <argsstring></argsstring>
        <name>recurse_m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="4616" column="13" bodyfile="util.cpp" bodystart="4616" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8cpp_1a57c8580fca7184d8e934af173a962752" prot="public" static="yes" mutable="no">
        <type>AdjEdgeList *</type>
        <definition>AdjEdgeList* recurse_ae</definition>
        <argsstring></argsstring>
        <name>recurse_ae</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="4617" column="20" bodyfile="util.cpp" bodystart="4617" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="util_8cpp_1aedb123617f0ea7dc3703ebb7221a8350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void debug</definition>
        <argsstring>(char *s,...)</argsstring>
        <name>debug</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="40" column="6" declfile="util.cpp" declline="40" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a3d503cab83f5a2fd7a646503b0149330" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void import_milkshape_anim</definition>
        <argsstring>(Interface *ip, HWND hpanel)</argsstring>
        <name>import_milkshape_anim</name>
        <param>
          <type>Interface *</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>HWND</type>
          <declname>hpanel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="42" column="6" bodyfile="milkShapeAnimImport.cpp" bodystart="173" bodyend="444" declfile="util.cpp" declline="42" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1ad0d9f9930215478f9f60bb94f0d82ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void convertnew</definition>
        <argsstring>(Interface *ip, bool on_import)</argsstring>
        <name>convertnew</name>
        <param>
          <type>Interface *</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>on_import</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="191" column="6" bodyfile="util.cpp" bodystart="191" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a63ec9ae387acb1d5d09263198a4436c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename To</type>
          </param>
          <param>
            <type>typename From</type>
          </param>
        </templateparamlist>
        <type>To</type>
        <definition>To bitwise_cast</definition>
        <argsstring>(const From &amp;from)</argsstring>
        <name>bitwise_cast</name>
        <param>
          <type>const From &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="243" column="4" bodyfile="util.cpp" bodystart="243" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a7dadcc874af844320f0050e7c53b63a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int real2int</definition>
        <argsstring>(float x)</argsstring>
        <name>real2int</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="254" column="12" bodyfile="util.cpp" bodystart="254" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a483135bfd6c6415d747405aed4aa8e9d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void spaces_to_underscores</definition>
        <argsstring>(TCHAR *string)</argsstring>
        <name>spaces_to_underscores</name>
        <param>
          <type>TCHAR *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="262" column="13" bodyfile="util.cpp" bodystart="262" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1ab70e5b77f6b009007c2d4f6ae777d848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ComputeVertexNormals</definition>
        <argsstring>(Mesh *mesh, Tab&lt; Point3 &gt; &amp;vnrm, Tab&lt; FaceNGr &gt; &amp;fngr, Point3 *trvert=NULL)</argsstring>
        <name>ComputeVertexNormals</name>
        <param>
          <type>Mesh *</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>Tab&lt; Point3 &gt; &amp;</type>
          <declname>vnrm</declname>
        </param>
        <param>
          <type>Tab&lt; <ref refid="expUtil_8cpp_1a4be4302620be4a0cda3e678fdc4f05fb" kindref="member">FaceNGr</ref> &gt; &amp;</type>
          <declname>fngr</declname>
        </param>
        <param>
          <type>Point3 *</type>
          <declname>trvert</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="405" column="6" bodyfile="polyBumpUtil.cpp" bodystart="708" bodyend="775" declfile="util.cpp" declline="405" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a1d8210e1722943c3147a9125a79fdbf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ClassDesc *</type>
        <definition>ClassDesc * GetDagUtilCD</definition>
        <argsstring>()</argsstring>
        <name>GetDagUtilCD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="574" column="11" bodyfile="util.cpp" bodystart="574" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a14a306dd89ac4b563b5da49c18afbc29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_edint</definition>
        <argsstring>(ICustEdit *e, int &amp;a)</argsstring>
        <name>get_edint</name>
        <param>
          <type>ICustEdit *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="576" column="6" bodyfile="util.cpp" bodystart="576" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_edfloat</definition>
        <argsstring>(ICustEdit *e, float &amp;a)</argsstring>
        <name>get_edfloat</name>
        <param>
          <type>ICustEdit *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="588" column="6" bodyfile="util.cpp" bodystart="588" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1aa6fae51583ded7240363967b452f7d66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_chkbool</definition>
        <argsstring>(int id, char &amp;chk, HWND pan=NULL)</argsstring>
        <name>get_chkbool</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>char &amp;</type>
          <declname>chk</declname>
        </param>
        <param>
          <type>HWND</type>
          <declname>pan</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="599" column="6" bodyfile="util.cpp" bodystart="599" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a02ce7256012c8e266c43c2d250804b47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const TCHAR *</type>
        <definition>static const TCHAR * stripbasepath</definition>
        <argsstring>(const TCHAR *s, const TCHAR *base)</argsstring>
        <name>stripbasepath</name>
        <param>
          <type>const TCHAR *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const TCHAR *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="608" column="20" bodyfile="util.cpp" bodystart="608" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a065af833f9643b5351784d79a960e9dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const TCHAR *</type>
        <definition>const TCHAR * make_path_rel</definition>
        <argsstring>(const TCHAR *p)</argsstring>
        <name>make_path_rel</name>
        <param>
          <type>const TCHAR *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="624" column="13" bodyfile="util.cpp" bodystart="624" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1aeba5af3758b3ccfdddb05de447b97292" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void add_dagpath</definition>
        <argsstring>(char *p, bool first)</argsstring>
        <name>add_dagpath</name>
        <param>
          <type>char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>first</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="645" column="13" bodyfile="util.cpp" bodystart="645" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a8abd6f9dce8bd77064e8b64983c494c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AppendSlash</definition>
        <argsstring>(char *p)</argsstring>
        <name>AppendSlash</name>
        <param>
          <type>char *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="670" column="6" bodyfile="util.cpp" bodystart="670" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1ad2cee9802522144660fc9d0d6f6df99d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void load_dagorpath_cfg</definition>
        <argsstring>()</argsstring>
        <name>load_dagorpath_cfg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="677" column="6" bodyfile="util.cpp" bodystart="677" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a030c82e9618b053d19ace84d82225081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_dagor_path</definition>
        <argsstring>(const char *p)</argsstring>
        <name>set_dagor_path</name>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="722" column="6" bodyfile="util.cpp" bodystart="722" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a3be1fea16a42ae11aeac2515c2cf9eff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INT_PTR CALLBACK</type>
        <definition>static INT_PTR CALLBACK dagor_util_dlg_proc</definition>
        <argsstring>(HWND hw, UINT msg, WPARAM wParam, LPARAM lParam)</argsstring>
        <name>dagor_util_dlg_proc</name>
        <param>
          <type>HWND</type>
          <declname>hw</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>WPARAM</type>
          <declname>wParam</declname>
        </param>
        <param>
          <type>LPARAM</type>
          <declname>lParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="749" column="25" bodyfile="util.cpp" bodystart="749" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a7a8d368e0927512efd0be509b910f40a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INT_PTR CALLBACK</type>
        <definition>static INT_PTR CALLBACK selection_brightness_dlg_proc</definition>
        <argsstring>(HWND hw, UINT msg, WPARAM wParam, LPARAM lParam)</argsstring>
        <name>selection_brightness_dlg_proc</name>
        <param>
          <type>HWND</type>
          <declname>hw</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>WPARAM</type>
          <declname>wParam</declname>
        </param>
        <param>
          <type>LPARAM</type>
          <declname>lParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="848" column="25" bodyfile="util.cpp" bodystart="848" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a670924549ae232f7ffd670139ed713bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INT_PTR CALLBACK</type>
        <definition>static INT_PTR CALLBACK materials_dlg_proc</definition>
        <argsstring>(HWND hw, UINT msg, WPARAM wParam, LPARAM lParam)</argsstring>
        <name>materials_dlg_proc</name>
        <param>
          <type>HWND</type>
          <declname>hw</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>WPARAM</type>
          <declname>wParam</declname>
        </param>
        <param>
          <type>LPARAM</type>
          <declname>lParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="933" column="25" bodyfile="util.cpp" bodystart="933" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1ab717a514a9e620a64d7f69ba7ea9e95c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INT_PTR CALLBACK</type>
        <definition>static INT_PTR CALLBACK uv_util_dlg_proc</definition>
        <argsstring>(HWND hw, UINT msg, WPARAM wParam, LPARAM lParam)</argsstring>
        <name>uv_util_dlg_proc</name>
        <param>
          <type>HWND</type>
          <declname>hw</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>WPARAM</type>
          <declname>wParam</declname>
        </param>
        <param>
          <type>LPARAM</type>
          <declname>lParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="1020" column="25" bodyfile="util.cpp" bodystart="1020" bodyend="1023"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a0bae119674f2d82a9c08aea00f10ac31" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INT_PTR CALLBACK</type>
        <definition>static INT_PTR CALLBACK spline_and_smooth_dlg_proc</definition>
        <argsstring>(HWND hw, UINT msg, WPARAM wParam, LPARAM lParam)</argsstring>
        <name>spline_and_smooth_dlg_proc</name>
        <param>
          <type>HWND</type>
          <declname>hw</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>WPARAM</type>
          <declname>wParam</declname>
        </param>
        <param>
          <type>LPARAM</type>
          <declname>lParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="1142" column="25" bodyfile="util.cpp" bodystart="1142" bodyend="1145"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a4acd2b3afc4ba88b548f8d0a9e2c5e78" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INT_PTR CALLBACK</type>
        <definition>static INT_PTR CALLBACK scatter_dlg_proc</definition>
        <argsstring>(HWND hw, UINT msg, WPARAM wParam, LPARAM lParam)</argsstring>
        <name>scatter_dlg_proc</name>
        <param>
          <type>HWND</type>
          <declname>hw</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>WPARAM</type>
          <declname>wParam</declname>
        </param>
        <param>
          <type>LPARAM</type>
          <declname>lParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="1215" column="25" bodyfile="util.cpp" bodystart="1215" bodyend="1218"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a39c162523fb7477e6e09ff9d6ba06065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref></type>
        <definition>M_STD_STRING CfgReplace</definition>
        <argsstring>(M_STD_STRING str, M_STD_STRING dst, M_STD_STRING src)</argsstring>
        <name>CfgReplace</name>
        <param>
          <type><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref></type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref></type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref></type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="1908" column="14" bodyfile="util.cpp" bodystart="1908" bodyend="1923"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a0ddaaf012ae2076da5bc08fe5a94be52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void collapse_materials</definition>
        <argsstring>(Interface *ip)</argsstring>
        <name>collapse_materials</name>
        <param>
          <type>Interface *</type>
          <declname>ip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="2141" column="6" bodyfile="util.cpp" bodystart="2141" bodyend="2149"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1ae200e2d542308de738fcc1df0d254acd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int intersects</definition>
        <argsstring>(const Box3 &amp;a, const Box3 &amp;b)</argsstring>
        <name>intersects</name>
        <param>
          <type>const Box3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const Box3 &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="2373" column="12" bodyfile="util.cpp" bodystart="2373" bodyend="2388"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a697913e66d642159d9e7af7ab206a41e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DWORD WINAPI</type>
        <definition>static DWORD WINAPI dummyprogressfn</definition>
        <argsstring>(LPVOID arg)</argsstring>
        <name>dummyprogressfn</name>
        <param>
          <type>LPVOID</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para><itemizedlist>
<listitem></listitem></itemizedlist>
</para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="3521" column="21" bodyfile="util.cpp" bodystart="3521" bodyend="3521"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a525f91a8b815f82dc0fc2061f6d50d17" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void save_shape</definition>
        <argsstring>(Mesh &amp;m, int ch)</argsstring>
        <name>save_shape</name>
        <param>
          <type>Mesh &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="3694" column="13" bodyfile="util.cpp" bodystart="3694" bodyend="3704"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1addc1a65859276d5d5d1c982c8e8a8a7c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void restore_shape</definition>
        <argsstring>(Mesh &amp;m, int ch)</argsstring>
        <name>restore_shape</name>
        <param>
          <type>Mesh &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="3706" column="13" bodyfile="util.cpp" bodystart="3706" bodyend="3716"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1abf7368984759a94ce1f12ee77826913e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apply_ltmap</definition>
        <argsstring>(Mesh &amp;m, int mati, int mch, int w, int h, float psz, int &amp;usage_percent)</argsstring>
        <name>apply_ltmap</name>
        <param>
          <type>Mesh &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mati</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>float</type>
          <declname>psz</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>usage_percent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="3750" column="5" bodyfile="ltmap.cpp" bodystart="282" bodyend="478" declfile="util.cpp" declline="3750" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1acfe0dc23a84309ca0ab3a7f2c6ab2d82" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Point3</type>
        <definition>static Point3 pabs</definition>
        <argsstring>(const Point3 &amp;a)</argsstring>
        <name>pabs</name>
        <param>
          <type>const Point3 &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="3848" column="15" bodyfile="util.cpp" bodystart="3848" bodyend="3848"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1ab1b535f7ab061509cf6d87105bb87a85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float ComputeFaceCurvature</definition>
        <argsstring>(Point3 *n, Point3 *v)</argsstring>
        <name>ComputeFaceCurvature</name>
        <param>
          <type>Point3 *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Point3 *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="3850" column="7" bodyfile="util.cpp" bodystart="3850" bodyend="3867"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a01e9e10259bc763ea03cfa034823dac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void compute_bump_vectors</definition>
        <argsstring>(const Point3 tv[3], const Point3 v[3], Point3 bvec[3])</argsstring>
        <name>compute_bump_vectors</name>
        <param>
          <type>const Point3</type>
          <declname>tv</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>const Point3</type>
          <declname>v</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>Point3</type>
          <declname>bvec</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="3869" column="6" bodyfile="util.cpp" bodystart="3869" bodyend="3901"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1ad2cb2f80cf049bb8beee92956e07c6a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void get_lights</definition>
        <argsstring>(TimeValue time, Interface *ip, Tab&lt; ObjLightDesc * &gt; &amp;light)</argsstring>
        <name>get_lights</name>
        <param>
          <type>TimeValue</type>
          <declname>time</declname>
        </param>
        <param>
          <type>Interface *</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>Tab&lt; ObjLightDesc * &gt; &amp;</type>
          <declname>light</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="3932" column="13" bodyfile="util.cpp" bodystart="3932" bodyend="3950"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a300e270e8c168379b46b935a80c32c8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void extrude_spline</definition>
        <argsstring>(TimeValue time, INode &amp;node, BezierShape &amp;, Mesh &amp;, float ht, float tile, float grav, int segs, int steps, bool up, bool usetang)</argsstring>
        <name>extrude_spline</name>
        <param>
          <type>TimeValue</type>
          <declname>time</declname>
        </param>
        <param>
          <type>INode &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>BezierShape &amp;</type>
          <declname>bshp</declname>
        </param>
        <param>
          <type>Mesh &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>float</type>
          <declname>ht</declname>
        </param>
        <param>
          <type>float</type>
          <declname>tile</declname>
        </param>
        <param>
          <type>float</type>
          <declname>grav</declname>
        </param>
        <param>
          <type>int</type>
          <declname>segs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>steps</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>usetang</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="4382" column="6" bodyfile="util2.cpp" bodystart="9" bodyend="100" declfile="util.cpp" declline="4382" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a5e48ebaa9a07e0a55e6bc239db9a458e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void project_spline_on_scene</definition>
        <argsstring>(Interface *, INode &amp;, BezierShape &amp;shp, BezierShape &amp;proj, float maxseglen, float optang, float optseglen)</argsstring>
        <name>project_spline_on_scene</name>
        <param>
          <type>Interface *</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>INode &amp;</type>
          <declname>snode</declname>
        </param>
        <param>
          <type>BezierShape &amp;</type>
          <declname>shp</declname>
        </param>
        <param>
          <type>BezierShape &amp;</type>
          <declname>proj</declname>
        </param>
        <param>
          <type>float</type>
          <declname>maxseglen</declname>
        </param>
        <param>
          <type>float</type>
          <declname>optang</declname>
        </param>
        <param>
          <type>float</type>
          <declname>optseglen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="4439" column="6" bodyfile="util2.cpp" bodystart="219" bodyend="419" declfile="util.cpp" declline="4439" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1add93551bdf886d84bf6859bddf429e71" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Point3</type>
        <definition>static Point3 get_pt</definition>
        <argsstring>(Point3 &amp;v1, Point3 &amp;v2, Point3 &amp;nrm1, Point3 &amp;nrm2, float pow, float wh)</argsstring>
        <name>get_pt</name>
        <param>
          <type>Point3 &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>Point3 &amp;</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>Point3 &amp;</type>
          <declname>nrm1</declname>
        </param>
        <param>
          <type>Point3 &amp;</type>
          <declname>nrm2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>pow</declname>
        </param>
        <param>
          <type>float</type>
          <declname>wh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="4491" column="22" bodyfile="util.cpp" bodystart="4491" bodyend="4504"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a9b49d37c0c39a8f1bf1d16f0bceea23f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void neighbedge</definition>
        <argsstring>(Face &amp;f, DWORD a, int &amp;hh1, int &amp;hh2)</argsstring>
        <name>neighbedge</name>
        <param>
          <type>Face &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>hh1</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>hh2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="4506" column="20" bodyfile="util.cpp" bodystart="4506" bodyend="4525"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a0389058ad0fba6c4ef58dbf34f8c36b0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int whichEdge</definition>
        <argsstring>(Face &amp;f, DWORD a, DWORD b)</argsstring>
        <name>whichEdge</name>
        <param>
          <type>Face &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>a</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="4527" column="12" bodyfile="util.cpp" bodystart="4527" bodyend="4550"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a515d463cdac9a69e019f78c8a442b67e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int is_partof_selquad</definition>
        <argsstring>(Mesh &amp;m, AdjEdgeList &amp;ae, int vv1, int vv2, int fc1, int &amp;fc2, int &amp;v1, int &amp;v2, int &amp;v3, int &amp;v4, int &amp;he, int &amp;he2, int &amp;dved)</argsstring>
        <name>is_partof_selquad</name>
        <param>
          <type>Mesh &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>AdjEdgeList &amp;</type>
          <declname>ae</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vv1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vv2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fc1</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>fc2</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>v3</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>v4</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>he</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>he2</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>dved</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="4552" column="19" bodyfile="util.cpp" bodystart="4552" bodyend="4611"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1ad06143b5c2697e3d3edeb1d71ec23df7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _recurse</definition>
        <argsstring>(int eds[4], int vedb1, int vedb2)</argsstring>
        <name>_recurse</name>
        <param>
          <type>int</type>
          <declname>eds</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>int</type>
          <declname>vedb1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vedb2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="4619" column="13" bodyfile="util.cpp" bodystart="4619" bodyend="4736"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1aeab06b81cfffb9c99975b97c951d31ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void recurse</definition>
        <argsstring>(Tab&lt; int &gt; &amp;fcsquads, Tab&lt; int &gt; &amp;fcs, Tab&lt; int &gt; &amp;dvEdges, Mesh &amp;m, int eds[4], AdjEdgeList &amp;ae, int vedb1, int vedb2, char trne)</argsstring>
        <name>recurse</name>
        <param>
          <type>Tab&lt; int &gt; &amp;</type>
          <declname>fcsquads</declname>
        </param>
        <param>
          <type>Tab&lt; int &gt; &amp;</type>
          <declname>fcs</declname>
        </param>
        <param>
          <type>Tab&lt; int &gt; &amp;</type>
          <declname>dvEdges</declname>
        </param>
        <param>
          <type>Mesh &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eds</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>AdjEdgeList &amp;</type>
          <declname>ae</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vedb1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vedb2</declname>
        </param>
        <param>
          <type>char</type>
          <declname>trne</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="4738" column="13" bodyfile="util.cpp" bodystart="4738" bodyend="4747"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a7f8576a2ebf4aa01f6ed3343e118c1e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int calc_sm_normals</definition>
        <argsstring>(Tab&lt; Point3 &gt; &amp;norms, Mesh &amp;m, char use_sm, float pow)</argsstring>
        <name>calc_sm_normals</name>
        <param>
          <type>Tab&lt; Point3 &gt; &amp;</type>
          <declname>norms</declname>
        </param>
        <param>
          <type>Mesh &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>char</type>
          <declname>use_sm</declname>
        </param>
        <param>
          <type>float</type>
          <declname>pow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="4761" column="5" bodyfile="util.cpp" bodystart="4761" bodyend="4838"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a35ef24f5b27592e37e4f81504d3f0d83" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gettvrt</definition>
        <argsstring>(Mesh &amp;m, float at, int v0, int v1, AdjEdgeList &amp;ae, int &amp;ed, Point3 &amp;tvrt1, Point3 &amp;tvrt2, int mi, int ord[2])</argsstring>
        <name>gettvrt</name>
        <param>
          <type>Mesh &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>float</type>
          <declname>at</declname>
        </param>
        <param>
          <type>int</type>
          <declname>v0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>AdjEdgeList &amp;</type>
          <declname>ae</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>ed</declname>
        </param>
        <param>
          <type>Point3 &amp;</type>
          <declname>tvrt1</declname>
        </param>
        <param>
          <type>Point3 &amp;</type>
          <declname>tvrt2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ord</declname>
          <array>[2]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="4840" column="20" bodyfile="util.cpp" bodystart="4840" bodyend="4864"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a4daac0bf658437da80e4e102fbccb59f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int int_lcmp</definition>
        <argsstring>(void const *a, void const *b)</argsstring>
        <name>int_lcmp</name>
        <param>
          <type>void const *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>void const *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="4866" column="12" bodyfile="util.cpp" bodystart="4866" bodyend="4866"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a5e0b9330ac7b63f66915a7c34e1f7925" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void put_meshes_on_mesh</definition>
        <argsstring>(Interface *ip, TCHAR *selsname, Tab&lt; INode * &gt; &amp;snode, int objnum, int seed, bool set_to_norm, bool use_smgr, bool rotatez, float slope, bool selfaces, float xydiap[2], float zdiap[2], bool xys, char zs)</argsstring>
        <name>put_meshes_on_mesh</name>
        <param>
          <type>Interface *</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>TCHAR *</type>
          <declname>selsname</declname>
        </param>
        <param>
          <type>Tab&lt; INode * &gt; &amp;</type>
          <declname>snode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>objnum</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>set_to_norm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_smgr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rotatez</declname>
        </param>
        <param>
          <type>float</type>
          <declname>slope</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>selfaces</declname>
        </param>
        <param>
          <type>float</type>
          <declname>xydiap</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>float</type>
          <declname>zdiap</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>xys</declname>
        </param>
        <param>
          <type>char</type>
          <declname>zs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="5570" column="6" bodyfile="objonsrf.cpp" bodystart="164" bodyend="394" declfile="util.cpp" declline="5570" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a0ab0a5c17c8fed4cac0335e19af84ef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Matrix3</type>
        <definition>Matrix3 get_scaled_stretch_node_tm</definition>
        <argsstring>(INode *node, TimeValue time)</argsstring>
        <name>get_scaled_stretch_node_tm</name>
        <param>
          <type>INode *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>TimeValue</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="5588" column="9" bodyfile="util.cpp" bodystart="5588" bodyend="5598"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a62bd0983642b5aa1bfeb95655f4272b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Matrix3</type>
        <definition>Matrix3 get_scaled_object_tm</definition>
        <argsstring>(INode *node, TimeValue time)</argsstring>
        <name>get_scaled_object_tm</name>
        <param>
          <type>INode *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>TimeValue</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="5601" column="9" bodyfile="util.cpp" bodystart="5601" bodyend="5611"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a21ec496f2d47311f5a23a9575be288d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int enum_nodes</definition>
        <argsstring>(INode *node, ENodeCB *cb)</argsstring>
        <name>enum_nodes</name>
        <param>
          <type>INode *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classENodeCB" kindref="compound">ENodeCB</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="5613" column="5" bodyfile="util.cpp" bodystart="5613" bodyend="5630"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1abdeb1a5821e1c4a6559af37a29033c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void enum_layer_nodes</definition>
        <argsstring>(ILayer *layer, ENodeCB *cb)</argsstring>
        <name>enum_layer_nodes</name>
        <param>
          <type>ILayer *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="classENodeCB" kindref="compound">ENodeCB</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="5632" column="6" bodyfile="util.cpp" bodystart="5632" bodyend="5644"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1ae35c7235ed4f8cfd7c6d5c7530ebaea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void enum_nodes_by_node</definition>
        <argsstring>(INode *node, ENodeCB *cb)</argsstring>
        <name>enum_nodes_by_node</name>
        <param>
          <type>INode *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classENodeCB" kindref="compound">ENodeCB</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="5646" column="6" bodyfile="util.cpp" bodystart="5646" bodyend="5650"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a533d4977a8bf8ddfd90a918427945e3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_default_layer</definition>
        <argsstring>(const ILayer &amp;layer)</argsstring>
        <name>is_default_layer</name>
        <param>
          <type>const ILayer &amp;</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.cpp" line="5655" column="6" bodyfile="util.cpp" bodystart="5655" bodyend="5655"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;max.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utilapi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bmmlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdmat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;notetrck.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;meshadj.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mnmath.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;splshape.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ilayer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ilayerproperties.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dagor_8h" kindref="compound">dagor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="enumnode_8h" kindref="compound">enumnode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mater_8h" kindref="compound">mater.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="texmaps_8h" kindref="compound">texmaps.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="resource_8h" kindref="compound">resource.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cfg_8h" kindref="compound">cfg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mathAng_8h" kindref="compound">mathAng.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dag__auto__ptr_8h" kindref="compound">dag_auto_ptr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="layout_8h" kindref="compound">layout.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERRMSG_DELAY<sp/>3000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_CLSNAME<sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Tab&lt;char<sp/>*&gt;<sp/>dagpath;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a3929931d71c8366efa9dc4183a3b924b" kindref="member">dagor_path</ref>[256]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1aedb123617f0ea7dc3703ebb7221a8350" kindref="member">debug</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/>...);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a3d503cab83f5a2fd7a646503b0149330" kindref="member">import_milkshape_anim</ref>(Interface<sp/>*ip,<sp/>HWND<sp/>hpanel);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classDag2DagnewCB" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classDag2DagnewCB" kindref="compound">Dag2DagnewCB</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classENodeCB" kindref="compound">ENodeCB</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>Interface<sp/>*<ref refid="classDag2DagnewCB_1a6003836b7fe5897abc2b7a8a55952ab9" kindref="member">ip</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>TimeValue<sp/><ref refid="classDag2DagnewCB_1abb2ceeb912a1f74268455c71544fd63e" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDag2DagnewCB_1a6159b1d94831871e414fac088a607b81" kindref="member">onImport</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="classCfgShader" kindref="compound">CfgShader</ref><sp/>*<ref refid="classDag2DagnewCB_1a33c27ba8c35f15dda7172cdfd3cdd8ef" kindref="member">cfg</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>std::map&lt;Mtl<sp/>*,<sp/>Mtl<sp/>*&gt;<sp/><ref refid="classDag2DagnewCB_1aa3a293d5b5bd610f40fd3242a419f463" kindref="member">convertedMat</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="classDag2DagnewCB" kindref="compound">Dag2DagnewCB</ref>(Interface<sp/>*iptr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on_import)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDag2DagnewCB_1a6003836b7fe5897abc2b7a8a55952ab9" kindref="member">ip</ref><sp/>=<sp/>iptr;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDag2DagnewCB_1abb2ceeb912a1f74268455c71544fd63e" kindref="member">time</ref><sp/>=<sp/><ref refid="classDag2DagnewCB_1a6003836b7fe5897abc2b7a8a55952ab9" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDag2DagnewCB_1a6159b1d94831871e414fac088a607b81" kindref="member">onImport</ref><sp/>=<sp/>on_import;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDag2DagnewCB_1a6159b1d94831871e414fac088a607b81" kindref="member">onImport</ref>)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TCHAR<sp/>filename[MAX_PATH];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCfgShader_1af916040330d237b1f39f398aee636be5" kindref="member">CfgShader::GetCfgFilename</ref>(_T(</highlight><highlight class="stringliteral">&quot;DagorShaders.cfg&quot;</highlight><highlight class="normal">),<sp/>filename);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDag2DagnewCB_1a33c27ba8c35f15dda7172cdfd3cdd8ef" kindref="member">cfg</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classCfgShader" kindref="compound">CfgShader</ref>(filename);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDag2DagnewCB_1a33c27ba8c35f15dda7172cdfd3cdd8ef" kindref="member">cfg</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classDag2DagnewCB_1a353890e5f234cbd6d18058365c8b9c65" kindref="member">~Dag2DagnewCB</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>Mtl<sp/>*<ref refid="classDag2DagnewCB_1a110a7393447836cc6dc2fb2553d9b716" kindref="member">conv_mat</ref>(Mtl<sp/>*&amp;m)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>Class_ID<sp/>cid<sp/>=<sp/>m-&gt;ClassID();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid<sp/>==<sp/><ref refid="dagor_8h_1a9ead658a52f6878a9360e47eea9322e2" kindref="member">DagorMat_CID</ref>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIDagorMat" kindref="compound">IDagorMat</ref><sp/>*d<sp/>=<sp/>(<ref refid="classIDagorMat" kindref="compound">IDagorMat</ref><sp/>*)m-&gt;GetInterface(<ref refid="mater_8h_1a36dcaa0c637134b05278e83da132935e" kindref="member">I_DAGORMAT</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDag2DagnewCB_1a6159b1d94831871e414fac088a607b81" kindref="member">onImport</ref><sp/>&amp;&amp;<sp/>d-&gt;<ref refid="classIDagorMat_1a41d2a95db7399aa0a504416e5a300c65" kindref="member">get_classname</ref>()<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>d-&gt;<ref refid="classIDagorMat_1a41d2a95db7399aa0a504416e5a300c65" kindref="member">get_classname</ref>()[0]<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfg_8h_1ae5ef8cc5d6614eca03380f7efa3eaea5" kindref="member">StringVector</ref><sp/>*shaders<sp/>=<sp/><ref refid="classDag2DagnewCB_1a33c27ba8c35f15dda7172cdfd3cdd8ef" kindref="member">cfg</ref>-&gt;<ref refid="classCfgShader_1aee46d6e5791fe688ce137e41351bc9bf" kindref="member">GetShaderNames</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shaderNo<sp/>=<sp/>0;<sp/>shaderNo<sp/>&lt;<sp/>shaders-&gt;size();<sp/>shaderNo++)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_tcsicmp(d-&gt;<ref refid="classIDagorMat_1a41d2a95db7399aa0a504416e5a300c65" kindref="member">get_classname</ref>(),<sp/>shaders-&gt;at(shaderNo).c_str()))</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*nm<sp/>=<sp/>(Mtl<sp/>*)CreateInstance(MATERIAL_CLASS_ID,<sp/><ref refid="dagor_8h_1aaa6ea09f471b5e57f5b69b9996227c66" kindref="member">DagorMat2_CID</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIDagorMat" kindref="compound">IDagorMat</ref><sp/>*nd<sp/>=<sp/>(<ref refid="classIDagorMat" kindref="compound">IDagorMat</ref><sp/>*)nm-&gt;GetInterface(<ref refid="mater_8h_1a36dcaa0c637134b05278e83da132935e" kindref="member">I_DAGORMAT</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nd-&gt;<ref refid="classIDagorMat_1ab9a123a1bfa48a9c034865411fddf1e2" kindref="member">set_2sided</ref>(d-&gt;<ref refid="classIDagorMat_1a8d93be97a06dcd377a24e9fa47055d13" kindref="member">get_2sided</ref>());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nd-&gt;<ref refid="classIDagorMat_1a3d3d99ddfd74b9097aee8182d703aab5" kindref="member">set_amb</ref>(d-&gt;<ref refid="classIDagorMat_1a87ba4f21930b96625725ef197be7f358" kindref="member">get_amb</ref>());</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nd-&gt;<ref refid="classIDagorMat_1a5ecda33097873e6feb6e22326c1fd482" kindref="member">set_classname</ref>(d-&gt;<ref refid="classIDagorMat_1a41d2a95db7399aa0a504416e5a300c65" kindref="member">get_classname</ref>());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nd-&gt;<ref refid="classIDagorMat_1acd05e9a7c199e6ca8e12f8479ae733c4" kindref="member">set_diff</ref>(d-&gt;<ref refid="classIDagorMat_1a619315422c7471fc3865590e4f288d48" kindref="member">get_diff</ref>());</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nd-&gt;<ref refid="classIDagorMat_1aa80fad171c33a42412edb879d64b5528" kindref="member">set_emis</ref>(d-&gt;<ref refid="classIDagorMat_1a1b3ec43de86ca25d121b61b2ec38d7e4" kindref="member">get_emis</ref>());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nd-&gt;<ref refid="classIDagorMat_1ac2fc4570c8981f75760921925db1b6e1" kindref="member">set_power</ref>(d-&gt;<ref refid="classIDagorMat_1a915c33b5c5b998e4cb05bebb3770543f" kindref="member">get_power</ref>());</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nd-&gt;<ref refid="classIDagorMat_1a12f0adb00b6c0862ab4d004f196c54bd" kindref="member">set_spec</ref>(d-&gt;<ref refid="classIDagorMat_1a7bd1940bef3e2436cf26e447e1cbf693" kindref="member">get_spec</ref>());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nd-&gt;<ref refid="classIDagorMat_1ab727afb93e454029978bcec8bbb6f893" kindref="member">set_script</ref>(d-&gt;<ref refid="classIDagorMat_1ac93f0f9f28724d6ab4ddc83319888a88" kindref="member">get_script</ref>());</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDag2DagnewCB_1a6159b1d94831871e414fac088a607b81" kindref="member">onImport</ref><sp/>&amp;&amp;<sp/>(d-&gt;<ref refid="classIDagorMat_1a41d2a95db7399aa0a504416e5a300c65" kindref="member">get_classname</ref>()<sp/>==<sp/>NULL<sp/>||<sp/>d-&gt;<ref refid="classIDagorMat_1a41d2a95db7399aa0a504416e5a300c65" kindref="member">get_classname</ref>()[0]<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nd-&gt;<ref refid="classIDagorMat_1a5ecda33097873e6feb6e22326c1fd482" kindref="member">set_classname</ref>(_T(</highlight><highlight class="stringliteral">&quot;simple&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nd-&gt;<ref refid="classIDagorMat_1ab727afb93e454029978bcec8bbb6f893" kindref="member">set_script</ref>(_T(</highlight><highlight class="stringliteral">&quot;lighting=lightmap\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nm-&gt;SetName(m-&gt;GetName());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="texmaps_8h_1aff91cf36fd3ffe965f4d5e1155bb06f3" kindref="member">NUMTEXMAPS</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Texmap<sp/>*tex<sp/>=<sp/>m-&gt;GetSubTexmap(i);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tex)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nm-&gt;SetSubTexmap(i,<sp/>tex);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nd-&gt;set_param(i,<sp/>d-&gt;get_param(i));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nd-&gt;set_texname(i,<sp/>d-&gt;get_texname(i));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;ReleaseInterface(<ref refid="mater_8h_1a36dcaa0c637134b05278e83da132935e" kindref="member">I_DAGORMAT</ref>,<sp/>d);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nm;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDag2DagnewCB_1afa8454887a6669ccd470f94ee6f909f5" kindref="member">proc</ref>(INode<sp/>*n)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="137"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>Mtl<sp/>*m<sp/>=<sp/>n-&gt;GetMtl();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cnv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;IsMultiMtl())</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>m-&gt;NumSubMtls();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*sm<sp/>=<sp/>m-&gt;GetSubMtl(i);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sm)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Mtl<sp/>*,<sp/>Mtl<sp/>*&gt;::iterator<sp/>itr<sp/>=<sp/><ref refid="classDag2DagnewCB_1aa3a293d5b5bd610f40fd3242a419f463" kindref="member">convertedMat</ref>.find(sm);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr<sp/>!=<sp/><ref refid="classDag2DagnewCB_1aa3a293d5b5bd610f40fd3242a419f463" kindref="member">convertedMat</ref>.end())</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;SetSubMtl(i,<sp/>itr-&gt;second);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*nmtl<sp/>=<sp/><ref refid="classDag2DagnewCB_1a110a7393447836cc6dc2fb2553d9b716" kindref="member">conv_mat</ref>(sm);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nmtl)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDag2DagnewCB_1aa3a293d5b5bd610f40fd3242a419f463" kindref="member">convertedMat</ref>[sm]<sp/>=<sp/>nmtl;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;SetSubMtl(i,<sp/>nmtl);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Mtl<sp/>*,<sp/>Mtl<sp/>*&gt;::iterator<sp/>itr<sp/>=<sp/><ref refid="classDag2DagnewCB_1aa3a293d5b5bd610f40fd3242a419f463" kindref="member">convertedMat</ref>.find(m);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr<sp/>!=<sp/><ref refid="classDag2DagnewCB_1aa3a293d5b5bd610f40fd3242a419f463" kindref="member">convertedMat</ref>.end())</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;SetMtl(itr-&gt;second);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*nmtl<sp/>=<sp/><ref refid="classDag2DagnewCB_1a110a7393447836cc6dc2fb2553d9b716" kindref="member">conv_mat</ref>(m);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nmtl)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDag2DagnewCB_1aa3a293d5b5bd610f40fd3242a419f463" kindref="member">convertedMat</ref>[m]<sp/>=<sp/>nmtl;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;SetMtl(nmtl);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1ad0d9f9930215478f9f60bb94f0d82ace" kindref="member">convertnew</ref>(Interface<sp/>*ip,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on_import)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ip)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="classDag2DagnewCB" kindref="compound">Dag2DagnewCB</ref><sp/>cbv(ip,<sp/>on_import);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(ip-&gt;GetRootNode(),<sp/>&amp;cbv);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>ip-&gt;RedrawViews(ip-&gt;GetTime());</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cd" kindref="member">TCCOPY</ref></highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cdaac7f1f466c04f821a6d54d848d386582" kindref="member">CTC_COPY</ref>,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cdacbf998ce2debb62087735e02300b67f7" kindref="member">CTC_MOVE</ref>,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cdaece51b55fdec5842d289a4e6eb5c2722" kindref="member">CTC_SWAP</ref>,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda06b0b74acc368ca1ff86908646edf0cf" kindref="member">CTC_FLIPU</ref>,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cdaaf934b294ab2b0d49c2e6945b4acdda6" kindref="member">CTC_FLIPV</ref>,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda1b7a0a3abf9ebc0c9ef192d425a8e815" kindref="member">CTC_XCHG</ref>,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda98f89288a139bc06fcb9097becbd3079" kindref="member">CTC_MUL</ref>,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda81217c149dd041a17f347472c1e1764c" kindref="member">CTC_ADD</ref>,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda169579c80803cf629a8ae059d32bede4" kindref="member">CTC_KILL</ref>,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda7f6bac6a01e9ec854b01112b8906f4e5" kindref="member">CTC_INFO</ref>,</highlight></codeline>
<codeline lineno="213"><highlight class="normal">};</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="structMappingInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structMappingInfo" kindref="compound">MappingInfo</ref></highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>Tab&lt;TVFace&gt;<sp/><ref refid="structMappingInfo_1a04ab37ddc94f07eb6ffdb77a3f1df16f" kindref="member">tface</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>Tab&lt;UVVert&gt;<sp/><ref refid="structMappingInfo_1a91276dd945820969b0a36808e2bf3ed2" kindref="member">tvert</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structMappingInfo_1a8f1ee9b5a8faa1a3877f2d39d986fd08" kindref="member">clear</ref>()</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structMappingInfo_1a04ab37ddc94f07eb6ffdb77a3f1df16f" kindref="member">tface</ref>.SetCount(0);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structMappingInfo_1a91276dd945820969b0a36808e2bf3ed2" kindref="member">tvert</ref>.SetCount(0);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal">};</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a4be4302620be4a0cda3e678fdc4f05fb" kindref="member">FaceNGr</ref>[3];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>typedef<sp/>float<sp/>real;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INLINE<sp/><sp/><sp/>__forceinline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_REAL<sp/>FLT_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_REAL<sp/>(-FLT_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//__forceinline<sp/>real<sp/>rabs(real<sp/>a){return<sp/>fabsf(a);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">/*INLINE<sp/>unsigned<sp/>real2uchar(float<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/>float<sp/>_n=p+1.0f;</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/>unsigned<sp/>i=*(unsigned*)&amp;_n;</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/>if(i&gt;=0x40000000)<sp/>i=0xFF;</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/>else<sp/>if(i&lt;=0x3F800000)<sp/>i=0;</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/>else<sp/>i=(i&gt;&gt;15)&amp;0xFF;</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/>return<sp/>i;</highlight></codeline>
<codeline lineno="240"><highlight class="comment">}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>To,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>From&gt;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">To<sp/><ref refid="util_8cpp_1a63ec9ae387acb1d5d09263198a4436c0" kindref="member">bitwise_cast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>From<sp/>&amp;from)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>To<sp/>t;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>From<sp/>f;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}<sp/>x;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>x.f<sp/>=<sp/>from;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.t;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><ref refid="util_8cpp_1a2eb6f9e0395b47b8d5e3eeae4fe0c116" kindref="member">INLINE</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a7dadcc874af844320f0050e7c53b63a3" kindref="member">real2int</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>magic<sp/>=<sp/>(150<sp/>&lt;&lt;<sp/>23)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>22);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>x<sp/>+=<sp/>bitwise_cast&lt;float,<sp/>int&gt;(magic);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bitwise_cast&lt;int,<sp/>float&gt;(x)<sp/>-<sp/>magic;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>spaces_to_underscores(TCHAR<sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(TCHAR<sp/>*cur<sp/>=<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">;<sp/>*cur;<sp/>cur++)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cur<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*cur<sp/>=<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="classTopologyAdapter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classTopologyAdapter" kindref="compound">TopologyAdapter</ref></highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>Mesh<sp/>*<ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="classTopologyAdapter" kindref="compound">TopologyAdapter</ref>(Mesh<sp/>*in_mesh)<sp/>{<sp/><ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref><sp/>=<sp/>in_mesh;<sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classTopologyAdapter_1a74618dd737317e724e6a32909bf9b985" kindref="member">getNumVerts</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTopologyAdapter_1a3e89ed43fbd20e531c7d2bfba5f51724" kindref="member">setNumVerts</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_verts)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classTopologyAdapter_1ac5508a6816cfaa80da161986790dd8f2" kindref="member">getIndex</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face_no,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index_no)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTopologyAdapter_1aefd41553d07b99978cf1fcb66c684b95" kindref="member">setIndex</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face_no,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index_no,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTopologyAdapter_1a9bc1ce9635db21b7e646cc840b037911" kindref="member">copyVertex</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>from,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classTopologyAdapter_1a6e20f644fa451516aec7bc9fc0176301" kindref="member">countRemovedVertices</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal">};</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="classDagUtil" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classDagUtil" kindref="compound">DagUtil</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>UtilityObj</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>IUtil<sp/>*<ref refid="classDagUtil_1acb6db42a7a045ecd4992b9f714d0907a" kindref="member">iu</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>Interface<sp/>*<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>selection<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>HWND<sp/><ref refid="classDagUtil_1aa4f24f0f6ccc5b0ebe5b4ca95fc0f317" kindref="member">hBrightness</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dagor<sp/>util</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>HWND<sp/><ref refid="classDagUtil_1a23b6af4d2b4f8d32a5ba62a7dac07043" kindref="member">dagorUtilRoll</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>NoteKeyTab<sp/><ref refid="classDagUtil_1adb6399351056b5b51ae4a166e3ac6c82" kindref="member">ntrk_buf</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>uv<sp/>utils</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>HWND<sp/><ref refid="classDagUtil_1a9dbda3977a56beafd8edaa4ea4a8f44d" kindref="member">uvUtilsRoll</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a25955b2e7ac9536d2446174b46e68a60" kindref="member">tc_srcch</ref>,<sp/><ref refid="classDagUtil_1a55a9dea68ff6337ddc5b93d8a106b654" kindref="member">tc_dstch</ref>,<sp/><ref refid="classDagUtil_1a36a91243a298d6ab5d2615afe9098987" kindref="member">tc_mapach</ref>,<sp/><ref refid="classDagUtil_1a58eabd9b0ba02e0c475c6a6f88afa64f" kindref="member">sel_fid</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1abb7193a60436f63f0c5c89e5226647d0" kindref="member">tc_uk</ref>,<sp/><ref refid="classDagUtil_1adfd6c936cbf48d15b9471457570ff962" kindref="member">tc_vk</ref>,<sp/><ref refid="classDagUtil_1a6896c284484107b020a2a12745bec6d3" kindref="member">tc_uo</ref>,<sp/><ref refid="classDagUtil_1a4ed6af55d1d0bb024e9307213deeaf1e" kindref="member">tc_vo</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>ICustEdit<sp/>*<ref refid="classDagUtil_1a56b8b7d0170265aed791d47d1aa75d2a" kindref="member">edsrctc</ref>,<sp/>*<ref refid="classDagUtil_1a205d4cae3f9cdb77fcb514d62bbead4c" kindref="member">edmapatc</ref>,<sp/>*<ref refid="classDagUtil_1a4b972935093b513a268982143e84ba03" kindref="member">eddsttc</ref>,<sp/>*<ref refid="classDagUtil_1af01ccea0bfe5a212f024061e7c676628" kindref="member">etc_uk</ref>,<sp/>*<ref refid="classDagUtil_1ab04c38b78cc6eaf5e57f8218f7a30404" kindref="member">etc_vk</ref>,<sp/>*<ref refid="classDagUtil_1a50080ae1d73d49684b02e1036ea040d8" kindref="member">etc_uo</ref>,<sp/>*<ref refid="classDagUtil_1aac6fbd62dc3698409967b58b99ffed73" kindref="member">etc_vo</ref>,<sp/>*<ref refid="classDagUtil_1acae8846a48ef8d595120ac728e697327" kindref="member">edfid</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a19aea3e937d48fb37fedabb9b9ca7175" kindref="member">tc_facesel</ref>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><ref refid="structMappingInfo" kindref="compound">MappingInfo</ref><sp/><ref refid="classDagUtil_1a975c3e349c83b530a3a7b7be6c50bbbd" kindref="member">chanelbuf</ref>[MAX_MESHMAPS];</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scatter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>HWND<sp/><ref refid="classDagUtil_1aef4c84d5c2df000608fe72490eba3345" kindref="member">scatterRoll</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>ICustEdit<sp/>*<ref refid="classDagUtil_1ad75be9cfb3d2602de86c814a0f2b1727" kindref="member">egs_seed</ref>,<sp/>*<ref refid="classDagUtil_1aa8bc019ab7ed0d615b05521223a06290" kindref="member">egs_objnum</ref>,<sp/>*<ref refid="classDagUtil_1a3640dc8526b088f76b31b5515a029b0d" kindref="member">egs_sname</ref>,<sp/>*<ref refid="classDagUtil_1a3b7926d65ffc6ec28194641f615ea829" kindref="member">egs_slope</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>ICustEdit<sp/>*<ref refid="classDagUtil_1aaf5336a6218eeb88d2c5483d50d907c5" kindref="member">egs_xydiap</ref>[2],<sp/>*<ref refid="classDagUtil_1a6bc88f9301cf785fae92994d67f743b1" kindref="member">egs_zdiap</ref>[2];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a7370d674d3c422081571e24f3779f81d" kindref="member">gs_set2norm</ref>,<sp/><ref refid="classDagUtil_1af258629a2dfe69531d056994219f0f8f" kindref="member">gs_usesmgr</ref>,<sp/><ref refid="classDagUtil_1a9ac8514c70fa8e65aac6b149c6d27911" kindref="member">gs_rotatez</ref>,<sp/><ref refid="classDagUtil_1a5fca6231de82bfbb82587c5ad20f6e51" kindref="member">gs_selfaces</ref>,<sp/><ref refid="classDagUtil_1ad468043dcd63b0c05f636077d3a8f7ae" kindref="member">gs_scalexy</ref>,<sp/><ref refid="classDagUtil_1a1395f9914d1118e2651e7be2d50c9cb1" kindref="member">gs_scalez</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a8303f93b240dd10b07a4fce8834cd483" kindref="member">gs_xydiap</ref>[2],<sp/><ref refid="classDagUtil_1a5c59932a40b407fe51384a41ea614dc7" kindref="member">gs_zdiap</ref>[2];</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a48b928410b1ad4594f765f9cdf00e0ef" kindref="member">gs_slope</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a991f68e95088983d917ba87ee9afaff5" kindref="member">gs_seed</ref>,<sp/><ref refid="classDagUtil_1a997d9bceb4dd3634df78aee587c52ddc" kindref="member">gs_objnum</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>TCHAR<sp/><ref refid="classDagUtil_1ac184605103009d29a258d552ebedf365" kindref="member">gs_sname</ref>[512];</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>splines<sp/>&amp;<sp/>smooth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>HWND<sp/><ref refid="classDagUtil_1ae10cb6fe69717782759a594e13a45a46" kindref="member">splinesAndSmoothRoll</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a4ee0097f03be2ea7374d28e3f553e31e" kindref="member">mesh_smoothtu</ref>,<sp/><ref refid="classDagUtil_1ad5779d754ce442890e728271a6f1c562" kindref="member">use_smooth_grps</ref>,<sp/><ref refid="classDagUtil_1a40c94bc93a753c9550d87f625666e742" kindref="member">turn_edge</ref>,<sp/><ref refid="classDagUtil_1a53308b258e8510dd2b8966e913c68413" kindref="member">smooth_selected</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>ICustEdit<sp/>*<ref refid="classDagUtil_1aa83b7ab53967617e351caeeab52307e9" kindref="member">egrassht</ref>,<sp/>*<ref refid="classDagUtil_1a97678d56e41e3e779d26b6f59832dcf0" kindref="member">egrasstile</ref>,<sp/>*<ref refid="classDagUtil_1a08596f76eeb74eeb07a2ab53e00f7393" kindref="member">egrassg</ref>,<sp/>*<ref refid="classDagUtil_1a5f1ce60f48928a4b13c682edf709708a" kindref="member">egrasssegs</ref>,<sp/>*<ref refid="classDagUtil_1acce27f1ac1608bcb23ae10e528b78ec8" kindref="member">egrasssteps</ref>,<sp/>*<ref refid="classDagUtil_1a0bdcc7d7bf0cc401f2517e8c029e5e16" kindref="member">epjs_maxseglen</ref>,<sp/>*<ref refid="classDagUtil_1a95411d618f35980bf9a4ab958aa1bbcf" kindref="member">epjs_optseglen</ref>,<sp/>*<ref refid="classDagUtil_1aa06567671a0f76a4bc105d4d24e27d51" kindref="member">epjs_optang</ref>,<sp/>*<ref refid="classDagUtil_1a55d0b13a876c704ae94da574a4d8e9b4" kindref="member">edaround</ref>,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="classDagUtil_1aca7ca90fcddc70e2d3f139f363e4822e" kindref="member">edsharp</ref>,<sp/>*<ref refid="classDagUtil_1a4dc3b8a64f38936b26f7d1e0cff5c19b" kindref="member">edsmthiterations</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ac5c585bd63f38d02e10d332a2dd704db" kindref="member">grass_ht</ref>,<sp/><ref refid="classDagUtil_1aea321e22da279e7c7caaaec85e8b4719" kindref="member">grass_tile</ref>,<sp/><ref refid="classDagUtil_1a7c445ed4470f7ab7e99c3e7f61fbf32b" kindref="member">grass_g</ref>,<sp/><ref refid="classDagUtil_1a5ca58d935c1191eeb79a0640ceac06f1" kindref="member">pjspl_maxseglen</ref>,<sp/><ref refid="classDagUtil_1adbd30a8376e7e899396ea9141861f27b" kindref="member">pjspl_optseglen</ref>,<sp/><ref refid="classDagUtil_1adcdfa16bced9c2fe0b5cdd87dc032a97" kindref="member">pjspl_optang</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1afeaa53771243f92e746aae34e781ae95" kindref="member">grass_segs</ref>,<sp/><ref refid="classDagUtil_1a6cb60175f29e2ed5ded018ee7b514a5d" kindref="member">grass_steps</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a09ca1c80b75e7beae5796d8472c8f810" kindref="member">grass_up</ref>,<sp/><ref refid="classDagUtil_1a01f2f910a844dc6f5f614b347b185a0c" kindref="member">grass_usetang</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a4a0b66b85c0d8427109dfcbc764562d7" kindref="member">merge_around</ref>,<sp/><ref refid="classDagUtil_1a3ff42da8777dcca7e9be388d02546de6" kindref="member">sharpness</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a31cfeccd1645583aec40d6944b8510bd" kindref="member">iterations</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>materials</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>HWND<sp/><ref refid="classDagUtil_1aa87e60f0f09984759c3c26b7b942f225" kindref="member">materialsRoll</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>TCHAR<sp/><ref refid="classDagUtil_1aeae5a2e250a013c98f01e43796b79983" kindref="member">clsname</ref>[<ref refid="util_8cpp_1a68e8f8dd81a4d1248ed76d7508ba655e" kindref="member">MAX_CLSNAME</ref>];</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>ICustEdit<sp/>*<ref refid="classDagUtil_1a8c5a867f28e8179425bd4ba526a15bcb" kindref="member">eclsname</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ac8df8719fcdc99003a40487f66555504" kindref="member">editableMeshFound</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a92ecfdfc480caa154bfacf94114070fb" kindref="member">degenerateFacesRemovedNum</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a39f151ad749579b5d5f3e063282bc10d" kindref="member">isolatedVerticesRemovedNum</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1ac99bde3f5748539379f679c32cbc0a10" kindref="member">DagUtil</ref>();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a11d0ce28140d93a9638acab65ffaf49a" kindref="member">BeginEditParams</ref>(Interface<sp/>*<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>,<sp/>IUtil<sp/>*<ref refid="classDagUtil_1acb6db42a7a045ecd4992b9f714d0907a" kindref="member">iu</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ae0578af7a6c2d033aaa7f31d7a8bbb11" kindref="member">EndEditParams</ref>(Interface<sp/>*<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>,<sp/>IUtil<sp/>*<ref refid="classDagUtil_1acb6db42a7a045ecd4992b9f714d0907a" kindref="member">iu</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a75cfbf79ca6fee53cae6dbc5d032b2e1" kindref="member">DeleteThis</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a2428411e04cb7623fc8e917378e2ea1f" kindref="member">update_ui</ref>();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a520e07ac1ad2cb452fe1276be795b0ea" kindref="member">update_vars</ref>();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>BOOL<sp/><ref refid="classDagUtil_1a2c26a42d57c29687b141f372bb86581a" kindref="member">dagor_util_dlg_proc</ref>(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>BOOL<sp/><ref refid="classDagUtil_1a27bfd3c96bfa808b5bb1eded9695c559" kindref="member">materials_dlg_proc</ref>(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>BOOL<sp/><ref refid="classDagUtil_1a9fe5252cce41bf78a0d21b3e7ef177fc" kindref="member">uv_util_dlg_proc</ref>(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>BOOL<sp/><ref refid="classDagUtil_1ab8748157f9bfdc48ec3031460ca6734d" kindref="member">spline_and_smooth_dlg_proc</ref>(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>BOOL<sp/><ref refid="classDagUtil_1a12c1255e8ec749fea8199cdfdb837f64" kindref="member">scatter_dlg_proc</ref>(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>BOOL<sp/><ref refid="classDagUtil_1afae79b2a50dffdb082826b33a6a1e5cc" kindref="member">selection_brightness_dlg_proc</ref>(HWND<sp/>hWnd,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dagor<sp/>util</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a5f15cf07c7694087d5e2699aefae0894" kindref="member">get_ntrk</ref>();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a050dcdee8a256e457226e87757830011" kindref="member">put_ntrk</ref>();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a6b7ade4b35638758ecb7da00d4b80df5" kindref="member">convertSpaces</ref>();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1aafec27c74203e7f48565c96e4fc43d4c" kindref="member">convertSpacesRecursive</ref>(INode<sp/>*node);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ac7ec51c38cacb1f0df8dc054c990a1ae" kindref="member">selectFloorFaces</ref>();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a7b4066d556ffb30fca33eea6fc85e463" kindref="member">removeDegenerates</ref>();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a710196096ea17f8b5e1e93e14d8af1ee" kindref="member">removeDegeneratesRecursive</ref>(INode<sp/>*node);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ac20013552f8140a7c83f3ec2b616a704" kindref="member">removeIsolatedVertices</ref>(<ref refid="classTopologyAdapter" kindref="compound">TopologyAdapter</ref><sp/>&amp;adapter);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1acc7a46a4e547cc7a75f86793aec71e33" kindref="member">isDegenerate</ref>(Mesh<sp/>*mesh,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face_no,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Matrix3<sp/>&amp;otm);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>uv<sp/>utils</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a2c7206a130ff6b0b24aeffcfdce3c187" kindref="member">copy_tch</ref>();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a95fb419b334f3f4dbc7558c9b2182a90" kindref="member">copy_tch1</ref>(Mesh<sp/>&amp;m,<sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cd" kindref="member">TCCOPY</ref><sp/>tc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mapa,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sel_faces);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1aa98691e62c937d288d0a0f025bb9b063" kindref="member">copy_tch_buf</ref>(Mesh<sp/>&amp;m,<sp/><ref refid="structMappingInfo" kindref="compound">MappingInfo</ref><sp/>&amp;mi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ada57766efcb08d8d336fc68f08d7a0be" kindref="member">paste_tch</ref>();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a72cbeb7dcfde7d9c0dbf47716833e9a0" kindref="member">paste_tch_buf</ref>(Mesh<sp/>&amp;m,<sp/><ref refid="structMappingInfo" kindref="compound">MappingInfo</ref><sp/>&amp;mi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a2c7206a130ff6b0b24aeffcfdce3c187" kindref="member">copy_tch</ref>(<ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cd" kindref="member">TCCOPY</ref><sp/>tc);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a49610e902d1af6ae3c9bff2100286682" kindref="member">select_face</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vert);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scatter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1af40ea5afd2851fcdd1206af51ba33f96" kindref="member">genobjonsurf</ref>();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>splines<sp/>&amp;<sp/>smooth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1adbe3deec7ed466cb46b9848816e8228d" kindref="member">mesh_smooth</ref>();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1aabf25cf563fe0a4b62f4b0c2b97078e8" kindref="member">smooth_mesh</ref>(INode<sp/>*node,<sp/>Mesh<sp/>&amp;msh);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a9e7de6616d42c28bb14268d24d0fc30b" kindref="member">make_grass</ref>();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ab3845c84fc206ffd7fae59d248dc3ea6" kindref="member">project_spline</ref>();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>materials</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a0943eb5ccc1cbe295e77dd71cc619944" kindref="member">show_all_maps</ref>();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1adef9053cd45ae0f4a1fa043159a79e79" kindref="member">hide_all_maps</ref>();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1af3a9a1a01c38b807ef4f41a2834caee0" kindref="member">stdmat_to_dagmat</ref>();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a4591d66df3ae6e9bf2465f2c637effcc" kindref="member">dagmat_to_stdmat</ref>();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ae3e82a75be89aa593f96d51aeabeaf81" kindref="member">maxtures2materials</ref>();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ae3e82a75be89aa593f96d51aeabeaf81" kindref="member">maxtures2materials</ref>(Mesh<sp/>&amp;m,<sp/>INode<sp/>*node);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ab47a850787899931c916b42155dcc660" kindref="member">collapse</ref>();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a7bd0b9844df8b3729e510c444ad4d5a0" kindref="member">convert</ref>();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a79164828f4ad9f8021c35b4d3102980d" kindref="member">enumerate</ref>();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1acc8645323c88fd7ecf8d1bbd867cb3ed" kindref="member">dagor_util_update_ui</ref>(HWND<sp/>hw);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1aff945e20e766e3d3fd3537e50d9fa1e9" kindref="member">materials_update_ui</ref>(HWND<sp/>hw);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ade42a375b786928dc9341404048561cb" kindref="member">uv_utils_update_ui</ref>(HWND<sp/>hw);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1aea3814c1e47ac9ce358c090cd85eb987" kindref="member">splines_and_smooth_update_ui</ref>(HWND<sp/>hw);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1afa12270ab4991d2e8b45d81b4c0a693d" kindref="member">scatter_update_ui</ref>(HWND<sp/>hw);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a11511eb167f8d2f26bb40494fc44201a" kindref="member">materials_update_vars</ref>(HWND<sp/>hw);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a7b053134aa2c1cf1728c702c786a5f21" kindref="member">uv_utils_update_vars</ref>(HWND<sp/>hw);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a939aa1b8c4e940964b2ef98bc6c788d4" kindref="member">splines_and_smooth_update_vars</ref>(HWND<sp/>hw);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1afcd0e770d2adfae633beaea31dd5bacb" kindref="member">scatter_update_vars</ref>(HWND<sp/>hw);</highlight></codeline>
<codeline lineno="401"><highlight class="normal">};</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classDagUtil" kindref="compound">DagUtil</ref><sp/>util;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>per-vertex<sp/>normal<sp/>in<sp/>3dsMax<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1ab70e5b77f6b009007c2d4f6ae777d848" kindref="member">ComputeVertexNormals</ref>(Mesh<sp/>*mesh,<sp/>Tab&lt;Point3&gt;<sp/>&amp;vnrm,<sp/>Tab&lt;FaceNGr&gt;<sp/>&amp;fngr,<sp/>Point3<sp/>*trvert<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="classDagUtilDesc" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classDagUtilDesc" kindref="compound">DagUtilDesc</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ClassDesc</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDagUtilDesc_1afe713b9e92bbcc7b88e2cf2c3edca95e" kindref="member">IsPublic</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="classDagUtilDesc_1ad7a466803b863b6515f789bfc84e59df" kindref="member">Create</ref>(BOOL<sp/>loading<sp/>=<sp/>FALSE)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;util;<sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*<ref refid="classDagUtilDesc_1ad044e5d3e30a13c8196a28a1fc10b07e" kindref="member">ClassName</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a813514382162265eea42f66aaad9e779" kindref="member">IDS_DAGUTIL_NAME</ref>);<sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R24)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="max__cpt_8h_1ac2ec3340fbe0c6ea0663fd3923d13fe5" kindref="member">MCHAR</ref><sp/>*<ref refid="classDagUtilDesc_1a56c96f8e04f0a93678a7864a410947ce" kindref="member">NonLocalizedClassName</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDagUtilDesc_1ad044e5d3e30a13c8196a28a1fc10b07e" kindref="member">ClassName</ref>();<sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="max__cpt_8h_1ac2ec3340fbe0c6ea0663fd3923d13fe5" kindref="member">MCHAR</ref><sp/>*<ref refid="classDagUtilDesc_1a56c96f8e04f0a93678a7864a410947ce" kindref="member">NonLocalizedClassName</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDagUtilDesc_1ad044e5d3e30a13c8196a28a1fc10b07e" kindref="member">ClassName</ref>();<sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>SClass_ID<sp/><ref refid="classDagUtilDesc_1a76030af638ba20d0c33bb0631171388d" kindref="member">SuperClassID</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UTILITY_CLASS_ID;<sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>Class_ID<sp/><ref refid="classDagUtilDesc_1aa161d6a4e12c64a1cbabed66b55b7e8e" kindref="member">ClassID</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dagor_8h_1a8ba8dc161676cc43f6c1c87292e5aa52" kindref="member">DagUtil_CID</ref>;<sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*<ref refid="classDagUtilDesc_1a935bc4e06a0c4d59905374e04e3c2417" kindref="member">Category</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a197942343099f043d210a555ea7e026f" kindref="member">IDS_UTIL_CAT</ref>);<sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>BOOL<sp/><ref refid="classDagUtilDesc_1a2ddf5859857de2254bdcfd7b7703a4df" kindref="member">NeedsToSave</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;<sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>IOResult<sp/><ref refid="classDagUtilDesc_1a1c04d3f55119b5c3619be6c7c7ffba09" kindref="member">Save</ref>(ISave<sp/>*)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>IOResult<sp/><ref refid="classDagUtilDesc_1adbf253ea1e4e3ccbbd76b9e230add655" kindref="member">Load</ref>(ILoad<sp/>*)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal">};</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">//==<sp/>save<sp/>grass<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167bad3f64ef97b6b187750688f8ccdaf8a8e" kindref="member">CH_RMAP_FNAME</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167ba8dee66101b9d373caa837e916c3d069d" kindref="member">CH_LTMAP</ref>,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167bae71bf7eb77cc2f6a58c9396f0388e6d6" kindref="member">CH_RENDER_MAP</ref>,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167bafa8fb52d72a03be05fb6af7d455a175e" kindref="member">CH_EPSPL</ref>,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167ba9ede1553684510f1f1acf87dcb8eb9b9" kindref="member">CH_GS</ref>,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167bad0954d3bacf14eec4c748d3c7cf116e5" kindref="member">CH_GS2</ref></highlight></codeline>
<codeline lineno="436"><highlight class="normal">};</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal">IOResult<sp/><ref refid="classDagUtilDesc_1a1c04d3f55119b5c3619be6c7c7ffba09" kindref="member">DagUtilDesc::Save</ref>(ISave<sp/>*io)</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>util.<ref refid="classDagUtil_1a520e07ac1ad2cb452fe1276be795b0ea" kindref="member">update_vars</ref>();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>ULONG<sp/>nw;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>io-&gt;BeginChunk(<ref refid="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167bafa8fb52d72a03be05fb6af7d455a175e" kindref="member">CH_EPSPL</ref>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classDagUtil_1ac5c585bd63f38d02e10d332a2dd704db" kindref="member">grass_ht</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classDagUtil_1aea321e22da279e7c7caaaec85e8b4719" kindref="member">grass_tile</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classDagUtil_1a7c445ed4470f7ab7e99c3e7f61fbf32b" kindref="member">grass_g</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classDagUtil_1afeaa53771243f92e746aae34e781ae95" kindref="member">grass_segs</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classDagUtil_1a6cb60175f29e2ed5ded018ee7b514a5d" kindref="member">grass_steps</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write((BYTE<sp/>*)&amp;util.<ref refid="classDagUtil_1a09ca1c80b75e7beae5796d8472c8f810" kindref="member">grass_up</ref>,<sp/>1,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write((BYTE<sp/>*)&amp;util.<ref refid="classDagUtil_1a01f2f910a844dc6f5f614b347b185a0c" kindref="member">grass_usetang</ref>,<sp/>1,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classDagUtil_1a5ca58d935c1191eeb79a0640ceac06f1" kindref="member">pjspl_maxseglen</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classDagUtil_1adbd30a8376e7e899396ea9141861f27b" kindref="member">pjspl_optseglen</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classDagUtil_1adcdfa16bced9c2fe0b5cdd87dc032a97" kindref="member">pjspl_optang</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>io-&gt;EndChunk();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>io-&gt;BeginChunk(<ref refid="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167ba9ede1553684510f1f1acf87dcb8eb9b9" kindref="member">CH_GS</ref>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write((BYTE<sp/>*)&amp;util.<ref refid="classDagUtil_1a7370d674d3c422081571e24f3779f81d" kindref="member">gs_set2norm</ref>,<sp/>1,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write((BYTE<sp/>*)&amp;util.<ref refid="classDagUtil_1af258629a2dfe69531d056994219f0f8f" kindref="member">gs_usesmgr</ref>,<sp/>1,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write((BYTE<sp/>*)&amp;util.<ref refid="classDagUtil_1a9ac8514c70fa8e65aac6b149c6d27911" kindref="member">gs_rotatez</ref>,<sp/>1,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classDagUtil_1a48b928410b1ad4594f765f9cdf00e0ef" kindref="member">gs_slope</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classDagUtil_1a991f68e95088983d917ba87ee9afaff5" kindref="member">gs_seed</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classDagUtil_1a997d9bceb4dd3634df78aee587c52ddc" kindref="member">gs_objnum</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(util.<ref refid="classDagUtil_1ac184605103009d29a258d552ebedf365" kindref="member">gs_sname</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)_tcslen(util.<ref refid="classDagUtil_1ac184605103009d29a258d552ebedf365" kindref="member">gs_sname</ref>),<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>io-&gt;EndChunk();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>io-&gt;BeginChunk(<ref refid="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167bad0954d3bacf14eec4c748d3c7cf116e5" kindref="member">CH_GS2</ref>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write((BYTE<sp/>*)&amp;util.<ref refid="classDagUtil_1a5fca6231de82bfbb82587c5ad20f6e51" kindref="member">gs_selfaces</ref>,<sp/>1,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classDagUtil_1a8303f93b240dd10b07a4fce8834cd483" kindref="member">gs_xydiap</ref>[0],<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classDagUtil_1a8303f93b240dd10b07a4fce8834cd483" kindref="member">gs_xydiap</ref>[1],<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classDagUtil_1a5c59932a40b407fe51384a41ea614dc7" kindref="member">gs_zdiap</ref>[0],<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classDagUtil_1a5c59932a40b407fe51384a41ea614dc7" kindref="member">gs_zdiap</ref>[1],<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write((BYTE<sp/>*)&amp;util.<ref refid="classDagUtil_1ad468043dcd63b0c05f636077d3a8f7ae" kindref="member">gs_scalexy</ref>,<sp/>1,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write((BYTE<sp/>*)&amp;util.<ref refid="classDagUtil_1a1395f9914d1118e2651e7be2d50c9cb1" kindref="member">gs_scalez</ref>,<sp/>1,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>io-&gt;EndChunk();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_OK;</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal">IOResult<sp/><ref refid="classDagUtilDesc_1adbf253ea1e4e3ccbbd76b9e230add655" kindref="member">DagUtilDesc::Load</ref>(ILoad<sp/>*io)</highlight></codeline>
<codeline lineno="500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>ULONG<sp/>nr;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(io-&gt;OpenChunk()<sp/>==<sp/>IO_OK)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(io-&gt;CurChunkID())</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167bafa8fb52d72a03be05fb6af7d455a175e" kindref="member">CH_EPSPL</ref>:</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classDagUtil_1ac5c585bd63f38d02e10d332a2dd704db" kindref="member">grass_ht</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classDagUtil_1aea321e22da279e7c7caaaec85e8b4719" kindref="member">grass_tile</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classDagUtil_1a7c445ed4470f7ab7e99c3e7f61fbf32b" kindref="member">grass_g</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classDagUtil_1afeaa53771243f92e746aae34e781ae95" kindref="member">grass_segs</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classDagUtil_1a6cb60175f29e2ed5ded018ee7b514a5d" kindref="member">grass_steps</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read((BYTE<sp/>*)&amp;util.<ref refid="classDagUtil_1a09ca1c80b75e7beae5796d8472c8f810" kindref="member">grass_up</ref>,<sp/>1,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read((BYTE<sp/>*)&amp;util.<ref refid="classDagUtil_1a01f2f910a844dc6f5f614b347b185a0c" kindref="member">grass_usetang</ref>,<sp/>1,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classDagUtil_1a5ca58d935c1191eeb79a0640ceac06f1" kindref="member">pjspl_maxseglen</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classDagUtil_1adbd30a8376e7e899396ea9141861f27b" kindref="member">pjspl_optseglen</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classDagUtil_1adcdfa16bced9c2fe0b5cdd87dc032a97" kindref="member">pjspl_optang</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167ba9ede1553684510f1f1acf87dcb8eb9b9" kindref="member">CH_GS</ref>:</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read((BYTE<sp/>*)&amp;util.<ref refid="classDagUtil_1a7370d674d3c422081571e24f3779f81d" kindref="member">gs_set2norm</ref>,<sp/>1,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read((BYTE<sp/>*)&amp;util.<ref refid="classDagUtil_1af258629a2dfe69531d056994219f0f8f" kindref="member">gs_usesmgr</ref>,<sp/>1,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read((BYTE<sp/>*)&amp;util.<ref refid="classDagUtil_1a9ac8514c70fa8e65aac6b149c6d27911" kindref="member">gs_rotatez</ref>,<sp/>1,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classDagUtil_1a48b928410b1ad4594f765f9cdf00e0ef" kindref="member">gs_slope</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classDagUtil_1a991f68e95088983d917ba87ee9afaff5" kindref="member">gs_seed</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classDagUtil_1a997d9bceb4dd3634df78aee587c52ddc" kindref="member">gs_objnum</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(util.<ref refid="classDagUtil_1ac184605103009d29a258d552ebedf365" kindref="member">gs_sname</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(util.<ref refid="classDagUtil_1ac184605103009d29a258d552ebedf365" kindref="member">gs_sname</ref>),<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a7ff5f2dff38e7639981794c43dc9167bad0954d3bacf14eec4c748d3c7cf116e5" kindref="member">CH_GS2</ref>:</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read((BYTE<sp/>*)&amp;util.<ref refid="classDagUtil_1a5fca6231de82bfbb82587c5ad20f6e51" kindref="member">gs_selfaces</ref>,<sp/>1,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classDagUtil_1a8303f93b240dd10b07a4fce8834cd483" kindref="member">gs_xydiap</ref>[0],<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classDagUtil_1a8303f93b240dd10b07a4fce8834cd483" kindref="member">gs_xydiap</ref>[1],<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classDagUtil_1a5c59932a40b407fe51384a41ea614dc7" kindref="member">gs_zdiap</ref>[0],<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classDagUtil_1a5c59932a40b407fe51384a41ea614dc7" kindref="member">gs_zdiap</ref>[1],<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read((BYTE<sp/>*)&amp;util.<ref refid="classDagUtil_1ad468043dcd63b0c05f636077d3a8f7ae" kindref="member">gs_scalexy</ref>,<sp/>1,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read((BYTE<sp/>*)&amp;util.<ref refid="classDagUtil_1a1395f9914d1118e2651e7be2d50c9cb1" kindref="member">gs_scalez</ref>,<sp/>1,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>io-&gt;CloseChunk();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>util.<ref refid="classDagUtil_1a2428411e04cb7623fc8e917378e2ea1f" kindref="member">update_ui</ref>();</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_OK;</highlight></codeline>
<codeline lineno="571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classDagUtilDesc" kindref="compound">DagUtilDesc</ref><sp/>utilDesc;</highlight></codeline>
<codeline lineno="574"><highlight class="normal">ClassDesc<sp/>*<ref refid="util_8cpp_1a1d8210e1722943c3147a9125a79fdbf5" kindref="member">GetDagUtilCD</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;utilDesc;<sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a14a306dd89ac4b563b5da49c18afbc29" kindref="member">get_edint</ref>(ICustEdit<sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;a)</highlight></codeline>
<codeline lineno="577"><highlight class="normal">{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!e)</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>BOOL<sp/>ok<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>e-&gt;GetInt(&amp;ok);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>a<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(ICustEdit<sp/>*e,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;a)</highlight></codeline>
<codeline lineno="589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!e)</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>BOOL<sp/>ok<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>e-&gt;GetFloat(&amp;ok);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>a<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1aa6fae51583ded7240363967b452f7d66" kindref="member">get_chkbool</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>&amp;chk,<sp/>HWND<sp/>pan<sp/>=<sp/>NULL)</highlight></codeline>
<codeline lineno="600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pan)</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>chk<sp/>=<sp/>IsDlgButtonChecked(pan,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*stripbasepath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*base)</highlight></codeline>
<codeline lineno="609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*dp<sp/>=<sp/>base;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>*dp<sp/>&amp;&amp;<sp/>*s;<sp/>++dp,<sp/>++s)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*dp<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>||<sp/>*dp<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*s<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>||<sp/>*s<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_totupper(*dp)<sp/>!=<sp/>_totupper(*s))</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*dp)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*<ref refid="util_8cpp_1a065af833f9643b5351784d79a960e9dc" kindref="member">make_path_rel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dagpath.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*s<sp/>=<sp/>stripbasepath(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/><ref refid="common_8cpp_1ac9fb07f5e9a035c1eca78f6428d9a590" kindref="member">strToWide</ref>(dagpath[i]).c_str());</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s)</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if(p[1]==&apos;:&apos;)<sp/>p+=2;</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>for(;*p==&apos;\\&apos;<sp/>||<sp/>*p==&apos;/&apos;;++p);</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add_dagpath(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first)</highlight></codeline>
<codeline lineno="646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dagpath.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/>dagpath[i])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>dagpath.Count())</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dp<sp/>=<sp/>dagpath[i];</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dagpath.Delete(i,<sp/>1);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dagpath.Insert(0,<sp/>1,<sp/>&amp;dp);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>=<sp/>strdup(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>assert(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>dagpath.Insert(0,<sp/>1,<sp/>&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>dagpath.Append(1,<sp/>&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a8abd6f9dce8bd77064e8b64983c494c4" kindref="member">AppendSlash</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="671"><highlight class="normal">{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>last<sp/>=<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[strlen(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>)<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>last<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>strcat(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1ad2cee9802522144660fc9d0d6f6df99d" kindref="member">load_dagorpath_cfg</ref>()</highlight></codeline>
<codeline lineno="678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>TCHAR<sp/>fname[256];</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><ref refid="classCfgShader_1af916040330d237b1f39f398aee636be5" kindref="member">CfgShader::GetCfgFilename</ref>(_T(</highlight><highlight class="stringliteral">&quot;DagorPath.cfg&quot;</highlight><highlight class="normal">),<sp/>fname);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>FILE<sp/>*<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref><sp/>=<sp/>_tfopen(fname,<sp/>_T(</highlight><highlight class="stringliteral">&quot;rt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dagpath.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(dagpath[i]);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>dagpath.ZeroCount();</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fn[256];</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(fn,<sp/>256,<sp/><ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>))</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)strlen(fn)<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fn[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fn[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fn[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fn[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fn[i<sp/>+<sp/>1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>=<sp/>fn;<sp/>*<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>;<sp/>++<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BMMAppendSlash(p);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a8abd6f9dce8bd77064e8b64983c494c4" kindref="member">AppendSlash</ref>(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_dagpath(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aed5a458133572985ccc7fc10a3159f6b" kindref="member">fclose</ref>(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dagpath.Count())</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<ref refid="util_8cpp_1a3929931d71c8366efa9dc4183a3b924b" kindref="member">dagor_path</ref>,<sp/>dagpath[0]);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<ref refid="util_8cpp_1a3929931d71c8366efa9dc4183a3b924b" kindref="member">dagor_path</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a030c82e9618b053d19ace84d82225081" kindref="member">set_dagor_path</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ad2cee9802522144660fc9d0d6f6df99d" kindref="member">load_dagorpath_cfg</ref>();</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>strcpy(<ref refid="util_8cpp_1a3929931d71c8366efa9dc4183a3b924b" kindref="member">dagor_path</ref>,<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>BMMAppendSlash(dagor_path);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a8abd6f9dce8bd77064e8b64983c494c4" kindref="member">AppendSlash</ref>(<ref refid="util_8cpp_1a3929931d71c8366efa9dc4183a3b924b" kindref="member">dagor_path</ref>);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>add_dagpath(<ref refid="util_8cpp_1a3929931d71c8366efa9dc4183a3b924b" kindref="member">dagor_path</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>TCHAR<sp/>fn[256];</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><ref refid="classCfgShader_1af916040330d237b1f39f398aee636be5" kindref="member">CfgShader::GetCfgFilename</ref>(_T(</highlight><highlight class="stringliteral">&quot;DagorPath.cfg&quot;</highlight><highlight class="normal">),<sp/>fn);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>FILE<sp/>*<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref><sp/>=<sp/>_tfopen(fn,<sp/>_T(</highlight><highlight class="stringliteral">&quot;wt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dagpath.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fputs(dagpath[i],<sp/><ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fputs(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aed5a458133572985ccc7fc10a3159f6b" kindref="member">fclose</ref>(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INT_PTR<sp/>CALLBACK<sp/>dagor_util_dlg_proc(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>util.<ref refid="classDagUtil_1a2c26a42d57c29687b141f372bb86581a" kindref="member">dagor_util_dlg_proc</ref>(hw,<sp/>msg,<sp/>wParam,<sp/>lParam);</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal">BOOL<sp/><ref refid="classDagUtil_1afae79b2a50dffdb082826b33a6a1e5cc" kindref="member">DagUtil::selection_brightness_dlg_proc</ref>(HWND<sp/>hWnd,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil" kindref="compound">DagUtil</ref><sp/>*pThis<sp/>=<sp/>(<ref refid="classDagUtil" kindref="compound">DagUtil</ref><sp/>*)GetWindowLongPtr(hWnd,<sp/>GWLP_USERDATA);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!pThis<sp/>||<sp/>!pThis-&gt;<ref refid="classDagUtil_1aa4f24f0f6ccc5b0ebe5b4ca95fc0f317" kindref="member">hBrightness</ref>)<sp/>&amp;&amp;<sp/>msg<sp/>!=<sp/>WM_INITDIALOG)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_INITDIALOG:</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil" kindref="compound">DagUtil</ref><sp/>*pThis<sp/>=<sp/>(<ref refid="classDagUtil" kindref="compound">DagUtil</ref><sp/>*)lParam;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetWindowLongPtr(hWnd,<sp/>GWLP_USERDATA,<sp/>(LONG_PTR)pThis);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pThis-&gt;<ref refid="classDagUtil_1aa4f24f0f6ccc5b0ebe5b4ca95fc0f317" kindref="member">hBrightness</ref><sp/>=<sp/>hWnd;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CenterWindow(hWnd,<sp/>GetParent(hWnd));</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ICustEdit<sp/>*iEdit<sp/>=<sp/>GetICustEdit(GetDlgItem(hWnd,<sp/><ref refid="resource_8h_1abf440d69e32f57b21ec1388488c42e9e" kindref="member">IDC_CUSTOM</ref>));</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iEdit-&gt;SetText(30);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseICustEdit(iEdit);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_DESTROY:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_COMMAND:</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(LOWORD(wParam))</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1afed8cecd9143882be1cde946973e27c9" kindref="member">IDC_CALC</ref>:</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InvalidateRect(hWnd,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateWindow(hWnd);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_PAINT:</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PAINTSTRUCT<sp/>ps;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HDC<sp/>hdc;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hdc<sp/>=<sp/>BeginPaint(hWnd,<sp/>&amp;ps);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ICustEdit<sp/>*iEdit<sp/>=<sp/>GetICustEdit(GetDlgItem(hWnd,<sp/><ref refid="resource_8h_1abf440d69e32f57b21ec1388488c42e9e" kindref="member">IDC_CUSTOM</ref>));</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>alfa<sp/>=<sp/>iEdit-&gt;GetInt()<sp/>*<sp/>DEG_TO_RAD;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alfa<sp/>&gt;<sp/>0.01<sp/>&amp;&amp;<sp/>alfa<sp/>&lt;<sp/>HALFPI)</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ltmap_8cpp_1a031f8951175b43076c2084a6c2173410" kindref="member">real</ref><sp/>part<sp/>=<sp/>0.9f,<sp/>br;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/><ref refid="mathAng_8cpp_1ac91ac97db53de63426e55c47ea6ea6f6" kindref="member">get_cos_power_from_ang</ref>(alfa,<sp/>part,<sp/>br);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>steps<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>400;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;Point2&gt;<sp/>fp;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>move<sp/>=<sp/>PI<sp/>/<sp/>2<sp/>/<sp/>(float)steps;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>steps;<sp/>i++)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point2<sp/>xy((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)i<sp/>*<sp/>move,<sp/>1.f);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>d;<sp/>j++)</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xy.y<sp/>*=<sp/>cos(xy.x);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fp.Append(1,<sp/>&amp;xy);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>POINT<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>[steps];</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>steps;<sp/>i++)</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>[i].x<sp/>=<sp/>fp[i].x<sp/>*<sp/>w<sp/>*<sp/>2.f<sp/>/<sp/>PI;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>[i].y<sp/>=<sp/>w<sp/>-<sp/>(fp[i].y<sp/>*<sp/>w);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Polyline(hdc,<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>,<sp/>steps);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoveToEx(hdc,<sp/>alfa<sp/>*<sp/>w<sp/>*<sp/>2.f<sp/>/<sp/>PI,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LineTo(hdc,<sp/>alfa<sp/>*<sp/>w<sp/>*<sp/>2.f<sp/>/<sp/>PI,<sp/>400);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectObject(hdc,<sp/>GetStockObject(SYSTEM_FIXED_FONT));</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCHAR<sp/>buf[32];</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;alfa=%.3frad<sp/>-&gt;<sp/>d=%i&quot;</highlight><highlight class="normal">),<sp/>alfa,<sp/>d);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(buf);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextOut(hdc,<sp/>150,<sp/>200<sp/>+<sp/>40,<sp/>buf,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)_tcslen(buf));</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;%.6f&gt;%.6f&quot;</highlight><highlight class="normal">),<sp/>br,<sp/>part);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextOut(hdc,<sp/>150,<sp/>220<sp/>+<sp/>40,<sp/>buf,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)_tcslen(buf));</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(buf);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseICustEdit(iEdit);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EndPaint(hWnd,<sp/>&amp;ps);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseDC(hWnd,<sp/>hdc);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_CLOSE:</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EndDialog(pThis-&gt;<ref refid="classDagUtil_1aa4f24f0f6ccc5b0ebe5b4ca95fc0f317" kindref="member">hBrightness</ref>,<sp/>FALSE);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pThis-&gt;<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;UnRegisterDlgWnd(pThis-&gt;<ref refid="classDagUtil_1aa4f24f0f6ccc5b0ebe5b4ca95fc0f317" kindref="member">hBrightness</ref>);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pThis-&gt;<ref refid="classDagUtil_1aa4f24f0f6ccc5b0ebe5b4ca95fc0f317" kindref="member">hBrightness</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INT_PTR<sp/>CALLBACK<sp/>selection_brightness_dlg_proc(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="849"><highlight class="normal">{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>util.<ref refid="classDagUtil_1afae79b2a50dffdb082826b33a6a1e5cc" kindref="member">selection_brightness_dlg_proc</ref>(hw,<sp/>msg,<sp/>wParam,<sp/>lParam);</highlight></codeline>
<codeline lineno="851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal">BOOL<sp/><ref refid="classDagUtil_1a2c26a42d57c29687b141f372bb86581a" kindref="member">DagUtil::dagor_util_dlg_proc</ref>(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>reled(e)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="856"><highlight class="preprocessor"><sp/><sp/>if<sp/>(e)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="857"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="858"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ReleaseICustEdit(e);<sp/>\</highlight></codeline>
<codeline lineno="859"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="860"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_INITDIALOG:<sp/><ref refid="classDagUtil_1acc8645323c88fd7ecf8d1bbd867cb3ed" kindref="member">dagor_util_update_ui</ref>(hw);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_DESTROY:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_COMMAND:</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(LOWORD(wParam))</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a6b45b452e35c6c2dcd1e0919c9d46892" kindref="member">IDC_EDIT_BRIGHTNESS</ref>:</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1aa4f24f0f6ccc5b0ebe5b4ca95fc0f317" kindref="member">hBrightness</ref>)</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveWindow(<ref refid="classDagUtil_1aa4f24f0f6ccc5b0ebe5b4ca95fc0f317" kindref="member">hBrightness</ref>);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aa4f24f0f6ccc5b0ebe5b4ca95fc0f317" kindref="member">hBrightness</ref><sp/>=<sp/>CreateDialogParam(<ref refid="dagor_8h_1a74029128723095e7bf00a71d46af8b24" kindref="member">hInstance</ref>,<sp/>MAKEINTRESOURCE(<ref refid="resource_8h_1a8db8136ccc6e7fd7c8da232c7f871321" kindref="member">IDD_DAGOR_BRIGHTNESS</ref>),<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetMAXHWnd(),</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1afae79b2a50dffdb082826b33a6a1e5cc" kindref="member">::selection_brightness_dlg_proc</ref>,<sp/>(LPARAM)</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RegisterDlgWnd(<ref refid="classDagUtil_1aa4f24f0f6ccc5b0ebe5b4ca95fc0f317" kindref="member">hBrightness</ref>);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1ad49c39e12f6e4caa439e711a97ae1ea3" kindref="member">IDC_GET_NTRK</ref>:</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a5f15cf07c7694087d5e2699aefae0894" kindref="member">get_ntrk</ref>();</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a6152a56c6583c0a738b3f44b9409c5aa" kindref="member">IDC_PUT_NTRK</ref>:</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a050dcdee8a256e457226e87757830011" kindref="member">put_ntrk</ref>();</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a75948262d055a5438a02fd0ec1d3d3ae" kindref="member">IDC_CONVERT_SPACES</ref>:</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6b7ade4b35638758ecb7da00d4b80df5" kindref="member">convertSpaces</ref>();</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1ae60db4b8b4ac4580c2d1e72d23df56a6" kindref="member">IDC_IMPORT_MS_ANIM</ref>:</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a3d503cab83f5a2fd7a646503b0149330" kindref="member">import_milkshape_anim</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>,<sp/>hw);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a232c3a9c8a71f0c8974e7fe70b8078d8" kindref="member">IDC_REMOVE_DEGENERATES</ref>:</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a7b4066d556ffb30fca33eea6fc85e463" kindref="member">removeDegenerates</ref>();</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1ab2f9e22b19cdd9b7bc47fbda401be9dd" kindref="member">IDC_SELECT_FLOOR</ref>:<sp/><ref refid="classDagUtil_1ac7ec51c38cacb1f0df8dc054c990a1ae" kindref="member">selectFloorFaces</ref>();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a5c9b41442acf5f01b8296c64cb5ed95f" kindref="member">IDC_SET_DAGORPATH</ref>:</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCHAR<sp/>dir[256];</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_tcscpy(dir,<sp/><ref refid="common_8cpp_1ac9fb07f5e9a035c1eca78f6428d9a590" kindref="member">strToWide</ref>(<ref refid="util_8cpp_1a3929931d71c8366efa9dc4183a3b924b" kindref="member">dagor_path</ref>).c_str());</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;ChooseDirectory(hw,<sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a2a9440cde92d53a50678d9fbed4d8fc8" kindref="member">IDS_CHOOSE_DAGOR_PATH</ref>),<sp/>dir);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir[0])</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a030c82e9618b053d19ace84d82225081" kindref="member">set_dagor_path</ref>(<ref refid="common_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(dir).c_str());</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetDlgItemText(hw,<sp/><ref refid="resource_8h_1abb5cc701f25306ac5f24f59d96471e8c" kindref="member">IDC_DAGORPATH</ref>,<sp/><ref refid="common_8cpp_1ac9fb07f5e9a035c1eca78f6428d9a590" kindref="member">strToWide</ref>(<ref refid="util_8cpp_1a3929931d71c8366efa9dc4183a3b924b" kindref="member">dagor_path</ref>).c_str());</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>reled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal">}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INT_PTR<sp/>CALLBACK<sp/>materials_dlg_proc(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="934"><highlight class="normal">{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>util.<ref refid="classDagUtil_1a27bfd3c96bfa808b5bb1eded9695c559" kindref="member">materials_dlg_proc</ref>(hw,<sp/>msg,<sp/>wParam,<sp/>lParam);</highlight></codeline>
<codeline lineno="936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal">BOOL<sp/><ref refid="classDagUtil_1a27bfd3c96bfa808b5bb1eded9695c559" kindref="member">DagUtil::materials_dlg_proc</ref>(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="939"><highlight class="normal">{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>reled(e)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="941"><highlight class="preprocessor"><sp/><sp/>if<sp/>(e)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="942"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="943"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ReleaseICustEdit(e);<sp/>\</highlight></codeline>
<codeline lineno="944"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="945"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_INITDIALOG:</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a8c5a867f28e8179425bd4ba526a15bcb" kindref="member">eclsname</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a67322b6e97356efcdf301d9514681ef0" kindref="member">IDC_CLSNAME</ref>));</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aff945e20e766e3d3fd3537e50d9fa1e9" kindref="member">materials_update_ui</ref>(hw);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_DESTROY:</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a11511eb167f8d2f26bb40494fc44201a" kindref="member">materials_update_vars</ref>(hw);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1a8c5a867f28e8179425bd4ba526a15bcb" kindref="member">eclsname</ref>);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_COMMAND:</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(LOWORD(wParam))</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a36da93dfc292dd55a95921c0bb89a329" kindref="member">IDC_MAX2MAT</ref>:</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1ae3e82a75be89aa593f96d51aeabeaf81" kindref="member">maxtures2materials</ref>();</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a8912460aebd7b5f00e29f755d82022dd" kindref="member">IDC_SHOWALLMAPS</ref>:</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a0943eb5ccc1cbe295e77dd71cc619944" kindref="member">show_all_maps</ref>();</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a6c88f4183f9dd9672f9c6ea6158d1086" kindref="member">IDC_HIDEMAPS</ref>:</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1adef9053cd45ae0f4a1fa043159a79e79" kindref="member">hide_all_maps</ref>();</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a25bed98a8591aad3d738740341c6dcb2" kindref="member">IDC_STD2DAGMAT</ref>:</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1af3a9a1a01c38b807ef4f41a2834caee0" kindref="member">stdmat_to_dagmat</ref>();</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a8afc14631158a3fe411e603140fd7976" kindref="member">IDC_DAGMAT2STDMAT</ref>:</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a4591d66df3ae6e9bf2465f2c637effcc" kindref="member">dagmat_to_stdmat</ref>();</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1aa01e46898c07718e7cbf9d302065777b" kindref="member">IDC_ENUMERATE</ref>:</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a79164828f4ad9f8021c35b4d3102980d" kindref="member">enumerate</ref>();</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a2fb4864fd1f5737dcf565f15ca620aa0" kindref="member">IDC_COLLAPSE</ref>:</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1ab47a850787899931c916b42155dcc660" kindref="member">collapse</ref>();</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a76131030c0060236c42a07ae40819a80" kindref="member">IDC_CONVERT</ref>:</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a7bd0b9844df8b3729e510c444ad4d5a0" kindref="member">convert</ref>();</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1af82f76224b602b90cc401eebfbba63b5" kindref="member">IDC_CONVERT_NEW</ref>:</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1ad0d9f9930215478f9f60bb94f0d82ace" kindref="member">convertnew</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a67322b6e97356efcdf301d9514681ef0" kindref="member">IDC_CLSNAME</ref>:</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a8c5a867f28e8179425bd4ba526a15bcb" kindref="member">eclsname</ref>-&gt;GetText(<ref refid="classDagUtil_1aeae5a2e250a013c98f01e43796b79983" kindref="member">clsname</ref>,<sp/><ref refid="util_8cpp_1a68e8f8dd81a4d1248ed76d7508ba655e" kindref="member">MAX_CLSNAME</ref>);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>reled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INT_PTR<sp/>CALLBACK<sp/>uv_util_dlg_proc(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>util.<ref refid="classDagUtil_1a9fe5252cce41bf78a0d21b3e7ef177fc" kindref="member">uv_util_dlg_proc</ref>(hw,<sp/>msg,<sp/>wParam,<sp/>lParam);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal">BOOL<sp/><ref refid="classDagUtil_1a9fe5252cce41bf78a0d21b3e7ef177fc" kindref="member">DagUtil::uv_util_dlg_proc</ref>(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="1026"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>reled(e)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1028"><highlight class="preprocessor"><sp/><sp/>if<sp/>(e)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1029"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1030"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ReleaseICustEdit(e);<sp/>\</highlight></codeline>
<codeline lineno="1031"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1032"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_INITDIALOG:</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1acae8846a48ef8d595120ac728e697327" kindref="member">edfid</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a95ef9477a6e5bffe3677400081ad74ed" kindref="member">IDC_FID</ref>));</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a205d4cae3f9cdb77fcb514d62bbead4c" kindref="member">edmapatc</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1ae0f3bd7df13cfa05eb1602fe4bcb7f23" kindref="member">IDC_TCMAPA</ref>));</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a56b8b7d0170265aed791d47d1aa75d2a" kindref="member">edsrctc</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a9a821cde99d3d88c86916bae6721b143" kindref="member">IDC_TCSRC</ref>));</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a4b972935093b513a268982143e84ba03" kindref="member">eddsttc</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a5454c1cfe710f596f63e6d36c4245b15" kindref="member">IDC_TCDST</ref>));</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1af01ccea0bfe5a212f024061e7c676628" kindref="member">etc_uk</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1aefe87746f5dbfa7cb4a41c33caaa7257" kindref="member">IDC_TCUK</ref>));</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1ab04c38b78cc6eaf5e57f8218f7a30404" kindref="member">etc_vk</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a6e079989bf93dd6ff92a9e2e1ad07b49" kindref="member">IDC_TCVK</ref>));</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a50080ae1d73d49684b02e1036ea040d8" kindref="member">etc_uo</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1aa847919c0723c576093caaeb8a096497" kindref="member">IDC_TCUO</ref>));</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aac6fbd62dc3698409967b58b99ffed73" kindref="member">etc_vo</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a8f38fa1b733efee05241f088018c57d5" kindref="member">IDC_TCVO</ref>));</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1ade42a375b786928dc9341404048561cb" kindref="member">uv_utils_update_ui</ref>(hw);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_DESTROY:</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a7b053134aa2c1cf1728c702c786a5f21" kindref="member">uv_utils_update_vars</ref>(hw);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1acae8846a48ef8d595120ac728e697327" kindref="member">edfid</ref>);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1a205d4cae3f9cdb77fcb514d62bbead4c" kindref="member">edmapatc</ref>);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1a56b8b7d0170265aed791d47d1aa75d2a" kindref="member">edsrctc</ref>);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1a4b972935093b513a268982143e84ba03" kindref="member">eddsttc</ref>);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1af01ccea0bfe5a212f024061e7c676628" kindref="member">etc_uk</ref>);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1ab04c38b78cc6eaf5e57f8218f7a30404" kindref="member">etc_vk</ref>);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1a50080ae1d73d49684b02e1036ea040d8" kindref="member">etc_uo</ref>);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1aac6fbd62dc3698409967b58b99ffed73" kindref="member">etc_vo</ref>);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_COMMAND:</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(LOWORD(wParam))</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a9d8b66f7250e309fdb947090e61eb4a6" kindref="member">IDC_TCCOPYBUF</ref>:</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a2c7206a130ff6b0b24aeffcfdce3c187" kindref="member">copy_tch</ref>();</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a2eb23ec0aff3691771adc0e20d3a8787" kindref="member">IDC_TCPASTEBUF</ref>:</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1ada57766efcb08d8d336fc68f08d7a0be" kindref="member">paste_tch</ref>();</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1ac5374195156dbcd2baaacd12f6f79e7c" kindref="member">IDC_TCSWAP</ref>:</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a2c7206a130ff6b0b24aeffcfdce3c187" kindref="member">copy_tch</ref>(<ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cdaece51b55fdec5842d289a4e6eb5c2722" kindref="member">CTC_SWAP</ref>);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a92e4b31ab1373637d5274bfdb3959456" kindref="member">IDC_TCCOPY</ref>:</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a2c7206a130ff6b0b24aeffcfdce3c187" kindref="member">copy_tch</ref>(<ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cdaac7f1f466c04f821a6d54d848d386582" kindref="member">CTC_COPY</ref>);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1aca73f2eb7c80ff9ec8ed35bb7e15b0c2" kindref="member">IDC_TCMOVE</ref>:</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a2c7206a130ff6b0b24aeffcfdce3c187" kindref="member">copy_tch</ref>(<ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cdacbf998ce2debb62087735e02300b67f7" kindref="member">CTC_MOVE</ref>);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a83ed54b7969f4d647f607ec9b60acc7a" kindref="member">IDC_TCKILL</ref>:</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a2c7206a130ff6b0b24aeffcfdce3c187" kindref="member">copy_tch</ref>(<ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda169579c80803cf629a8ae059d32bede4" kindref="member">CTC_KILL</ref>);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a91be9d795a543546e54c0417f923f355" kindref="member">IDC_TCINFO</ref>:</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a2c7206a130ff6b0b24aeffcfdce3c187" kindref="member">copy_tch</ref>(<ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda7f6bac6a01e9ec854b01112b8906f4e5" kindref="member">CTC_INFO</ref>);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a621fd570b5fe9d9e5ff0afbde6a11331" kindref="member">IDC_TCXCHG</ref>:</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a2c7206a130ff6b0b24aeffcfdce3c187" kindref="member">copy_tch</ref>(<ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda1b7a0a3abf9ebc0c9ef192d425a8e815" kindref="member">CTC_XCHG</ref>);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1aa714af909dc5db8b413b69f7dfbc3107" kindref="member">IDC_TCFLIPU</ref>:</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a2c7206a130ff6b0b24aeffcfdce3c187" kindref="member">copy_tch</ref>(<ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda06b0b74acc368ca1ff86908646edf0cf" kindref="member">CTC_FLIPU</ref>);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a80aa6cbf1c47de6b709fbc408b3db544" kindref="member">IDC_TCFLIPV</ref>:</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a2c7206a130ff6b0b24aeffcfdce3c187" kindref="member">copy_tch</ref>(<ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cdaaf934b294ab2b0d49c2e6945b4acdda6" kindref="member">CTC_FLIPV</ref>);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1aeacd3b3369d77d151f60c338b568fe82" kindref="member">IDC_TCMUL</ref>:</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a2c7206a130ff6b0b24aeffcfdce3c187" kindref="member">copy_tch</ref>(<ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda98f89288a139bc06fcb9097becbd3079" kindref="member">CTC_MUL</ref>);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a0c345801db1450a2ba1ffb2c108559e6" kindref="member">IDC_TCADD</ref>:</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a2c7206a130ff6b0b24aeffcfdce3c187" kindref="member">copy_tch</ref>(<ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda81217c149dd041a17f347472c1e1764c" kindref="member">CTC_ADD</ref>);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a988858280dacb1e3e70aab124efda96c" kindref="member">IDC_SELFACE</ref>:</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a49610e902d1af6ae3c9bff2100286682" kindref="member">select_face</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1ad2ff4e294e3405584857f951f8abb68e" kindref="member">IDC_SELVERT</ref>:</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a49610e902d1af6ae3c9bff2100286682" kindref="member">select_face</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>reled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INT_PTR<sp/>CALLBACK<sp/>spline_and_smooth_dlg_proc(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="1143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>util.<ref refid="classDagUtil_1ab8748157f9bfdc48ec3031460ca6734d" kindref="member">spline_and_smooth_dlg_proc</ref>(hw,<sp/>msg,<sp/>wParam,<sp/>lParam);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal">BOOL<sp/><ref refid="classDagUtil_1ab8748157f9bfdc48ec3031460ca6734d" kindref="member">DagUtil::spline_and_smooth_dlg_proc</ref>(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>reled(e)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1150"><highlight class="preprocessor"><sp/><sp/>if<sp/>(e)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1151"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1152"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ReleaseICustEdit(e);<sp/>\</highlight></codeline>
<codeline lineno="1153"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1154"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_INITDIALOG:</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aa83b7ab53967617e351caeeab52307e9" kindref="member">egrassht</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a83ed3a4623bb398fb3233a6141a41c34" kindref="member">IDC_GRASSHT</ref>));</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a97678d56e41e3e779d26b6f59832dcf0" kindref="member">egrasstile</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1ae80629f7af8e5fba9b0e90264610e2df" kindref="member">IDC_GRASSTILE</ref>));</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a08596f76eeb74eeb07a2ab53e00f7393" kindref="member">egrassg</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a3cd59b48a490cdd1ecac0e5362d2ee9e" kindref="member">IDC_GRASSGRAVITY</ref>));</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a5f1ce60f48928a4b13c682edf709708a" kindref="member">egrasssegs</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a7aeaf2dc85fb4caaed011ed67b43b6ca" kindref="member">IDC_GRASSSEGS</ref>));</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aa06567671a0f76a4bc105d4d24e27d51" kindref="member">epjs_optang</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1ac039cc0be7eb752017b9b245d2d411f0" kindref="member">IDC_PJS_OPTANGLE</ref>));</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a95411d618f35980bf9a4ab958aa1bbcf" kindref="member">epjs_optseglen</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a3f3ea5bca6bd79d63c3528338798fb54" kindref="member">IDC_PJS_OPTSEGLEN</ref>));</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a0bdcc7d7bf0cc401f2517e8c029e5e16" kindref="member">epjs_maxseglen</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1adad554107e08874049cfb36009f4497a" kindref="member">IDC_PJS_MAXSEGLEN</ref>));</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1acce27f1ac1608bcb23ae10e528b78ec8" kindref="member">egrasssteps</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1ae768f5a30aa02682288d51cc5090bc93" kindref="member">IDC_GRASSSTEPS</ref>));</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aca7ca90fcddc70e2d3f139f363e4822e" kindref="member">edsharp</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a2b439b0a3011feeb921f8bc34d1a9a1e" kindref="member">IDC_SHARPNESS</ref>));</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a4dc3b8a64f38936b26f7d1e0cff5c19b" kindref="member">edsmthiterations</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a2c8fba54cc5eceee92e7fe52afd683e1" kindref="member">IDC_SMTHITERATIONS</ref>));</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a55d0b13a876c704ae94da574a4d8e9b4" kindref="member">edaround</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a0e46b06e3b82a6256533de553ccf0bdd" kindref="member">IDC_AROUND</ref>));</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aea3814c1e47ac9ce358c090cd85eb987" kindref="member">splines_and_smooth_update_ui</ref>(hw);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_DESTROY:</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a939aa1b8c4e940964b2ef98bc6c788d4" kindref="member">splines_and_smooth_update_vars</ref>(hw);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1a55d0b13a876c704ae94da574a4d8e9b4" kindref="member">edaround</ref>);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1a4dc3b8a64f38936b26f7d1e0cff5c19b" kindref="member">edsmthiterations</ref>);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1aca7ca90fcddc70e2d3f139f363e4822e" kindref="member">edsharp</ref>);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1aa83b7ab53967617e351caeeab52307e9" kindref="member">egrassht</ref>);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1a97678d56e41e3e779d26b6f59832dcf0" kindref="member">egrasstile</ref>);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1a08596f76eeb74eeb07a2ab53e00f7393" kindref="member">egrassg</ref>);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1a5f1ce60f48928a4b13c682edf709708a" kindref="member">egrasssegs</ref>);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1acce27f1ac1608bcb23ae10e528b78ec8" kindref="member">egrasssteps</ref>);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1a0bdcc7d7bf0cc401f2517e8c029e5e16" kindref="member">epjs_maxseglen</ref>);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1a95411d618f35980bf9a4ab958aa1bbcf" kindref="member">epjs_optseglen</ref>);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1aa06567671a0f76a4bc105d4d24e27d51" kindref="member">epjs_optang</ref>);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_COMMAND:</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(LOWORD(wParam))</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a7de4d2ef8d9f57c562e15fa9403addc2" kindref="member">IDC_MESHSMOOTH</ref>:</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1adbe3deec7ed466cb46b9848816e8228d" kindref="member">mesh_smooth</ref>();</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1acf7c51614e1af27650c2884e260f6583" kindref="member">IDC_MAKEGRASS</ref>:</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a9e7de6616d42c28bb14268d24d0fc30b" kindref="member">make_grass</ref>();</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1aed068cc290700c5a548caf2a4561a13f" kindref="member">IDC_PROJSPL</ref>:</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1ab3845c84fc206ffd7fae59d248dc3ea6" kindref="member">project_spline</ref>();</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>reled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INT_PTR<sp/>CALLBACK<sp/>scatter_dlg_proc(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="1216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>util.<ref refid="classDagUtil_1a12c1255e8ec749fea8199cdfdb837f64" kindref="member">scatter_dlg_proc</ref>(hw,<sp/>msg,<sp/>wParam,<sp/>lParam);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal">BOOL<sp/><ref refid="classDagUtil_1a12c1255e8ec749fea8199cdfdb837f64" kindref="member">DagUtil::scatter_dlg_proc</ref>(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="1221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>reled(e)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1223"><highlight class="preprocessor"><sp/><sp/>if<sp/>(e)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1224"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ReleaseICustEdit(e);<sp/>\</highlight></codeline>
<codeline lineno="1226"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1227"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_INITDIALOG:</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aa8bc019ab7ed0d615b05521223a06290" kindref="member">egs_objnum</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a02d744700784084d19aa3ab55f22711c" kindref="member">IDC_OBJNUM</ref>));</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1ad75be9cfb3d2602de86c814a0f2b1727" kindref="member">egs_seed</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1af6015a37545610ebdc75726c4501f0e5" kindref="member">IDC_OBJGENSEED</ref>));</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a3640dc8526b088f76b31b5515a029b0d" kindref="member">egs_sname</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a0de74eed341beff5be6c78b4a14f6de4" kindref="member">IDC_SELSET</ref>));</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a3b7926d65ffc6ec28194641f615ea829" kindref="member">egs_slope</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1aef216b878527dd65ec2a9fa8a2a9e8f7" kindref="member">IDC_GS_SLOPE</ref>));</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aaf5336a6218eeb88d2c5483d50d907c5" kindref="member">egs_xydiap</ref>[0]<sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1aca876c4d3949bbf0503c2a3f01662393" kindref="member">IDC_GS_SCALEXYS</ref>));</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aaf5336a6218eeb88d2c5483d50d907c5" kindref="member">egs_xydiap</ref>[1]<sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a694abb313cfab17475a096962070f231" kindref="member">IDC_GS_SCALEXYE</ref>));</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6bc88f9301cf785fae92994d67f743b1" kindref="member">egs_zdiap</ref>[0]<sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a0a977fc8dc347d48a54d4bb5544f92ff" kindref="member">IDC_GS_SCALEZS</ref>));</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6bc88f9301cf785fae92994d67f743b1" kindref="member">egs_zdiap</ref>[1]<sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a2242cf5cc09378165b8432d02b1ecf08" kindref="member">IDC_GS_SCALEZE</ref>));</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1afa12270ab4991d2e8b45d81b4c0a693d" kindref="member">scatter_update_ui</ref>(hw);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_DESTROY:</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1afcd0e770d2adfae633beaea31dd5bacb" kindref="member">scatter_update_vars</ref>(hw);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1aa8bc019ab7ed0d615b05521223a06290" kindref="member">egs_objnum</ref>);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1ad75be9cfb3d2602de86c814a0f2b1727" kindref="member">egs_seed</ref>);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1a3640dc8526b088f76b31b5515a029b0d" kindref="member">egs_sname</ref>);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1a3b7926d65ffc6ec28194641f615ea829" kindref="member">egs_slope</ref>);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1aaf5336a6218eeb88d2c5483d50d907c5" kindref="member">egs_xydiap</ref>[0]);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1aaf5336a6218eeb88d2c5483d50d907c5" kindref="member">egs_xydiap</ref>[1]);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1a6bc88f9301cf785fae92994d67f743b1" kindref="member">egs_zdiap</ref>[0]);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a815ecf3470ebc2096dd717c502d8e98b" kindref="member">reled</ref>(<ref refid="classDagUtil_1a6bc88f9301cf785fae92994d67f743b1" kindref="member">egs_zdiap</ref>[1]);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_COMMAND:</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(LOWORD(wParam))</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a644c5c61b4750ae10be4cbadf1a0db34" kindref="member">IDC_GENOBJSURF</ref>:</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1af40ea5afd2851fcdd1206af51ba33f96" kindref="member">genobjonsurf</ref>();</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>reled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><ref refid="classDagUtil_1ac99bde3f5748539379f679c32cbc0a10" kindref="member">DagUtil::DagUtil</ref>()</highlight></codeline>
<codeline lineno="1273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1acb6db42a7a045ecd4992b9f714d0907a" kindref="member">iu</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dagor<sp/>utils</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a23b6af4d2b4f8d32a5ba62a7dac07043" kindref="member">dagorUtilRoll</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1ac8df8719fcdc99003a40487f66555504" kindref="member">editableMeshFound</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a92ecfdfc480caa154bfacf94114070fb" kindref="member">degenerateFacesRemovedNum</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a39f151ad749579b5d5f3e063282bc10d" kindref="member">isolatedVerticesRemovedNum</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>uv<sp/>utils</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a9dbda3977a56beafd8edaa4ea4a8f44d" kindref="member">uvUtilsRoll</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a56b8b7d0170265aed791d47d1aa75d2a" kindref="member">edsrctc</ref><sp/>=<sp/><ref refid="classDagUtil_1a205d4cae3f9cdb77fcb514d62bbead4c" kindref="member">edmapatc</ref><sp/>=<sp/><ref refid="classDagUtil_1a4b972935093b513a268982143e84ba03" kindref="member">eddsttc</ref><sp/>=<sp/><ref refid="classDagUtil_1af01ccea0bfe5a212f024061e7c676628" kindref="member">etc_uk</ref><sp/>=<sp/><ref refid="classDagUtil_1ab04c38b78cc6eaf5e57f8218f7a30404" kindref="member">etc_vk</ref><sp/>=<sp/><ref refid="classDagUtil_1a50080ae1d73d49684b02e1036ea040d8" kindref="member">etc_uo</ref><sp/>=<sp/><ref refid="classDagUtil_1aac6fbd62dc3698409967b58b99ffed73" kindref="member">etc_vo</ref><sp/>=<sp/><ref refid="classDagUtil_1acae8846a48ef8d595120ac728e697327" kindref="member">edfid</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a36a91243a298d6ab5d2615afe9098987" kindref="member">tc_mapach</ref><sp/>=<sp/><ref refid="classDagUtil_1a25955b2e7ac9536d2446174b46e68a60" kindref="member">tc_srcch</ref><sp/>=<sp/><ref refid="classDagUtil_1a55a9dea68ff6337ddc5b93d8a106b654" kindref="member">tc_dstch</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1abb7193a60436f63f0c5c89e5226647d0" kindref="member">tc_uk</ref><sp/>=<sp/><ref refid="classDagUtil_1adfd6c936cbf48d15b9471457570ff962" kindref="member">tc_vk</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6896c284484107b020a2a12745bec6d3" kindref="member">tc_uo</ref><sp/>=<sp/><ref refid="classDagUtil_1a4ed6af55d1d0bb024e9307213deeaf1e" kindref="member">tc_vo</ref><sp/>=<sp/>.5f;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a19aea3e937d48fb37fedabb9b9ca7175" kindref="member">tc_facesel</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a58eabd9b0ba02e0c475c6a6f88afa64f" kindref="member">sel_fid</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scatter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1aef4c84d5c2df000608fe72490eba3345" kindref="member">scatterRoll</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1ad75be9cfb3d2602de86c814a0f2b1727" kindref="member">egs_seed</ref><sp/>=<sp/><ref refid="classDagUtil_1aa8bc019ab7ed0d615b05521223a06290" kindref="member">egs_objnum</ref><sp/>=<sp/><ref refid="classDagUtil_1a3640dc8526b088f76b31b5515a029b0d" kindref="member">egs_sname</ref><sp/>=<sp/><ref refid="classDagUtil_1a3b7926d65ffc6ec28194641f615ea829" kindref="member">egs_slope</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1aaf5336a6218eeb88d2c5483d50d907c5" kindref="member">egs_xydiap</ref>[0]<sp/>=<sp/><ref refid="classDagUtil_1aaf5336a6218eeb88d2c5483d50d907c5" kindref="member">egs_xydiap</ref>[1]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6bc88f9301cf785fae92994d67f743b1" kindref="member">egs_zdiap</ref>[0]<sp/>=<sp/><ref refid="classDagUtil_1a6bc88f9301cf785fae92994d67f743b1" kindref="member">egs_zdiap</ref>[1]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a7370d674d3c422081571e24f3779f81d" kindref="member">gs_set2norm</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1af258629a2dfe69531d056994219f0f8f" kindref="member">gs_usesmgr</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a5fca6231de82bfbb82587c5ad20f6e51" kindref="member">gs_selfaces</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a9ac8514c70fa8e65aac6b149c6d27911" kindref="member">gs_rotatez</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a48b928410b1ad4594f765f9cdf00e0ef" kindref="member">gs_slope</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a991f68e95088983d917ba87ee9afaff5" kindref="member">gs_seed</ref><sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a8303f93b240dd10b07a4fce8834cd483" kindref="member">gs_xydiap</ref>[0]<sp/>=<sp/><ref refid="classDagUtil_1a8303f93b240dd10b07a4fce8834cd483" kindref="member">gs_xydiap</ref>[1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a5c59932a40b407fe51384a41ea614dc7" kindref="member">gs_zdiap</ref>[0]<sp/>=<sp/><ref refid="classDagUtil_1a5c59932a40b407fe51384a41ea614dc7" kindref="member">gs_zdiap</ref>[1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1ad468043dcd63b0c05f636077d3a8f7ae" kindref="member">gs_scalexy</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a1395f9914d1118e2651e7be2d50c9cb1" kindref="member">gs_scalez</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a997d9bceb4dd3634df78aee587c52ddc" kindref="member">gs_objnum</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>splines<sp/>&amp;<sp/>smooth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1ae10cb6fe69717782759a594e13a45a46" kindref="member">splinesAndSmoothRoll</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1aa83b7ab53967617e351caeeab52307e9" kindref="member">egrassht</ref><sp/>=<sp/><ref refid="classDagUtil_1a97678d56e41e3e779d26b6f59832dcf0" kindref="member">egrasstile</ref><sp/>=<sp/><ref refid="classDagUtil_1a08596f76eeb74eeb07a2ab53e00f7393" kindref="member">egrassg</ref><sp/>=<sp/><ref refid="classDagUtil_1a5f1ce60f48928a4b13c682edf709708a" kindref="member">egrasssegs</ref><sp/>=<sp/><ref refid="classDagUtil_1acce27f1ac1608bcb23ae10e528b78ec8" kindref="member">egrasssteps</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a0bdcc7d7bf0cc401f2517e8c029e5e16" kindref="member">epjs_maxseglen</ref><sp/>=<sp/><ref refid="classDagUtil_1aa06567671a0f76a4bc105d4d24e27d51" kindref="member">epjs_optang</ref><sp/>=<sp/><ref refid="classDagUtil_1a95411d618f35980bf9a4ab958aa1bbcf" kindref="member">epjs_optseglen</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1ac5c585bd63f38d02e10d332a2dd704db" kindref="member">grass_ht</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1aea321e22da279e7c7caaaec85e8b4719" kindref="member">grass_tile</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a7c445ed4470f7ab7e99c3e7f61fbf32b" kindref="member">grass_g</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1afeaa53771243f92e746aae34e781ae95" kindref="member">grass_segs</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6cb60175f29e2ed5ded018ee7b514a5d" kindref="member">grass_steps</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a09ca1c80b75e7beae5796d8472c8f810" kindref="member">grass_up</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a01f2f910a844dc6f5f614b347b185a0c" kindref="member">grass_usetang</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a5ca58d935c1191eeb79a0640ceac06f1" kindref="member">pjspl_maxseglen</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1adcdfa16bced9c2fe0b5cdd87dc032a97" kindref="member">pjspl_optang</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1adbd30a8376e7e899396ea9141861f27b" kindref="member">pjspl_optseglen</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a40c94bc93a753c9550d87f625666e742" kindref="member">turn_edge</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a53308b258e8510dd2b8966e913c68413" kindref="member">smooth_selected</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a31cfeccd1645583aec40d6944b8510bd" kindref="member">iterations</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a3ff42da8777dcca7e9be388d02546de6" kindref="member">sharpness</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1ad5779d754ce442890e728271a6f1c562" kindref="member">use_smooth_grps</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a4ee0097f03be2ea7374d28e3f553e31e" kindref="member">mesh_smoothtu</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a4a0b66b85c0d8427109dfcbc764562d7" kindref="member">merge_around</ref><sp/>=<sp/>0.000001f;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a55d0b13a876c704ae94da574a4d8e9b4" kindref="member">edaround</ref><sp/>=<sp/><ref refid="classDagUtil_1aca7ca90fcddc70e2d3f139f363e4822e" kindref="member">edsharp</ref><sp/>=<sp/><ref refid="classDagUtil_1a4dc3b8a64f38936b26f7d1e0cff5c19b" kindref="member">edsmthiterations</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>materials</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1aa87e60f0f09984759c3c26b7b942f225" kindref="member">materialsRoll</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/>_tcscpy(<ref refid="classDagUtil_1aeae5a2e250a013c98f01e43796b79983" kindref="member">clsname</ref>,<sp/>_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a8c5a867f28e8179425bd4ba526a15bcb" kindref="member">eclsname</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a11d0ce28140d93a9638acab65ffaf49a" kindref="member">DagUtil::BeginEditParams</ref>(Interface<sp/>*ip,<sp/>IUtil<sp/>*iu)</highlight></codeline>
<codeline lineno="1339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/>this-&gt;ip<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/>this-&gt;iu<sp/>=<sp/><ref refid="classDagUtil_1acb6db42a7a045ecd4992b9f714d0907a" kindref="member">iu</ref>;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a23b6af4d2b4f8d32a5ba62a7dac07043" kindref="member">dagorUtilRoll</ref><sp/>=<sp/><ref refid="common_8cpp_1ab84324e6a3ef91427b0e8a5b101a4b98" kindref="member">add_rollup_page</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>,<sp/><ref refid="resource_8h_1a7f8d454c27bb59a2d96612dad70f3baa" kindref="member">IDD_DAGUTIL</ref>,<sp/><ref refid="classDagUtil_1a2c26a42d57c29687b141f372bb86581a" kindref="member">::dagor_util_dlg_proc</ref>,<sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a5fbc4d11f93b7c4dc56389c6023f8517" kindref="member">IDS_DAGUTIL_ROLL</ref>));</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1aa87e60f0f09984759c3c26b7b942f225" kindref="member">materialsRoll</ref><sp/>=<sp/><ref refid="common_8cpp_1ab84324e6a3ef91427b0e8a5b101a4b98" kindref="member">add_rollup_page</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>,<sp/><ref refid="resource_8h_1aa15e58d916a4570482b755e3e9a3a77b" kindref="member">IDD_MATERIALS</ref>,<sp/><ref refid="classDagUtil_1a27bfd3c96bfa808b5bb1eded9695c559" kindref="member">::materials_dlg_proc</ref>,<sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a2523c3873777491d4a0cf9a16d51f901" kindref="member">IDS_MATERIALS_ROLL</ref>),<sp/>0,<sp/>APPENDROLL_CLOSED);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a9dbda3977a56beafd8edaa4ea4a8f44d" kindref="member">uvUtilsRoll</ref><sp/>=<sp/><ref refid="common_8cpp_1ab84324e6a3ef91427b0e8a5b101a4b98" kindref="member">add_rollup_page</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>,<sp/><ref refid="resource_8h_1ae9a4ec08feec6917621de7a3f7e49427" kindref="member">IDD_UV_UTILS</ref>,<sp/><ref refid="classDagUtil_1a9fe5252cce41bf78a0d21b3e7ef177fc" kindref="member">::uv_util_dlg_proc</ref>,<sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1ab5a485668100fe51b6a571a6dafcd8bb" kindref="member">IDS_UV_UTILS_ROLL</ref>),<sp/>0,<sp/>APPENDROLL_CLOSED);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1ae10cb6fe69717782759a594e13a45a46" kindref="member">splinesAndSmoothRoll</ref><sp/>=<sp/><ref refid="common_8cpp_1ab84324e6a3ef91427b0e8a5b101a4b98" kindref="member">add_rollup_page</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>,<sp/><ref refid="resource_8h_1a52652a0a2f530c733f12bdea089f2dd7" kindref="member">IDD_SPLINES_AND_SMOOTH</ref>,<sp/><ref refid="classDagUtil_1ab8748157f9bfdc48ec3031460ca6734d" kindref="member">::spline_and_smooth_dlg_proc</ref>,</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1ad2bcd4c7501802f360a17657beaebb6c" kindref="member">IDS_SPLINES_AND_SMOOTH_ROLL</ref>),<sp/>0,<sp/>APPENDROLL_CLOSED);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1aef4c84d5c2df000608fe72490eba3345" kindref="member">scatterRoll</ref><sp/>=<sp/><ref refid="common_8cpp_1ab84324e6a3ef91427b0e8a5b101a4b98" kindref="member">add_rollup_page</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>,<sp/><ref refid="resource_8h_1a119ac52b3728df8e1996bb469033ac3a" kindref="member">IDD_SCATTER</ref>,<sp/><ref refid="classDagUtil_1a12c1255e8ec749fea8199cdfdb837f64" kindref="member">::scatter_dlg_proc</ref>,<sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a6d103411f9bd773d98058e6df2bf9494" kindref="member">IDS_SCATTER_ROLL</ref>),<sp/>0,<sp/>APPENDROLL_CLOSED);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ae0578af7a6c2d033aaa7f31d7a8bbb11" kindref="member">DagUtil::EndEditParams</ref>(Interface<sp/>*ip,<sp/>IUtil<sp/>*iu)</highlight></codeline>
<codeline lineno="1352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/>this-&gt;iu<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/>this-&gt;ip<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><ref refid="common_8cpp_1ac9901f1c91ba6fca4d76e222820f8b52" kindref="member">delete_rollup_page</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>,<sp/>&amp;<ref refid="classDagUtil_1a23b6af4d2b4f8d32a5ba62a7dac07043" kindref="member">dagorUtilRoll</ref>);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><ref refid="common_8cpp_1ac9901f1c91ba6fca4d76e222820f8b52" kindref="member">delete_rollup_page</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>,<sp/>&amp;<ref refid="classDagUtil_1aa87e60f0f09984759c3c26b7b942f225" kindref="member">materialsRoll</ref>);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><ref refid="common_8cpp_1ac9901f1c91ba6fca4d76e222820f8b52" kindref="member">delete_rollup_page</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>,<sp/>&amp;<ref refid="classDagUtil_1a9dbda3977a56beafd8edaa4ea4a8f44d" kindref="member">uvUtilsRoll</ref>);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><ref refid="common_8cpp_1ac9901f1c91ba6fca4d76e222820f8b52" kindref="member">delete_rollup_page</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>,<sp/>&amp;<ref refid="classDagUtil_1ae10cb6fe69717782759a594e13a45a46" kindref="member">splinesAndSmoothRoll</ref>);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><ref refid="common_8cpp_1ac9901f1c91ba6fca4d76e222820f8b52" kindref="member">delete_rollup_page</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>,<sp/>&amp;<ref refid="classDagUtil_1aef4c84d5c2df000608fe72490eba3345" kindref="member">scatterRoll</ref>);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1aa4f24f0f6ccc5b0ebe5b4ca95fc0f317" kindref="member">hBrightness</ref>)</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>EndDialog(<ref refid="classDagUtil_1aa4f24f0f6ccc5b0ebe5b4ca95fc0f317" kindref="member">hBrightness</ref>,<sp/>FALSE);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;UnRegisterDlgWnd(<ref refid="classDagUtil_1aa4f24f0f6ccc5b0ebe5b4ca95fc0f317" kindref="member">hBrightness</ref>);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aa4f24f0f6ccc5b0ebe5b4ca95fc0f317" kindref="member">hBrightness</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1acc8645323c88fd7ecf8d1bbd867cb3ed" kindref="member">DagUtil::dagor_util_update_ui</ref>(HWND<sp/>hw)</highlight></codeline>
<codeline lineno="1371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hw)</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>SetDlgItemText(hw,<sp/><ref refid="resource_8h_1abb5cc701f25306ac5f24f59d96471e8c" kindref="member">IDC_DAGORPATH</ref>,<sp/><ref refid="common_8cpp_1ac9fb07f5e9a035c1eca78f6428d9a590" kindref="member">strToWide</ref>(<ref refid="util_8cpp_1a3929931d71c8366efa9dc4183a3b924b" kindref="member">dagor_path</ref>).c_str());</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1aff945e20e766e3d3fd3537e50d9fa1e9" kindref="member">DagUtil::materials_update_ui</ref>(HWND<sp/>hw)</highlight></codeline>
<codeline lineno="1380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a8c5a867f28e8179425bd4ba526a15bcb" kindref="member">eclsname</ref>)</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a8c5a867f28e8179425bd4ba526a15bcb" kindref="member">eclsname</ref>-&gt;SetText(<ref refid="classDagUtil_1aeae5a2e250a013c98f01e43796b79983" kindref="member">clsname</ref>);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a11511eb167f8d2f26bb40494fc44201a" kindref="member">DagUtil::materials_update_vars</ref>(HWND<sp/>hw)</highlight></codeline>
<codeline lineno="1386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a8c5a867f28e8179425bd4ba526a15bcb" kindref="member">eclsname</ref>)</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a8c5a867f28e8179425bd4ba526a15bcb" kindref="member">eclsname</ref>-&gt;GetText(<ref refid="classDagUtil_1aeae5a2e250a013c98f01e43796b79983" kindref="member">clsname</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classDagUtil_1aeae5a2e250a013c98f01e43796b79983" kindref="member">clsname</ref>));</highlight></codeline>
<codeline lineno="1389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ade42a375b786928dc9341404048561cb" kindref="member">DagUtil::uv_utils_update_ui</ref>(HWND<sp/>hw)</highlight></codeline>
<codeline lineno="1393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1acae8846a48ef8d595120ac728e697327" kindref="member">edfid</ref>)</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1acae8846a48ef8d595120ac728e697327" kindref="member">edfid</ref>-&gt;SetText(<ref refid="classDagUtil_1a58eabd9b0ba02e0c475c6a6f88afa64f" kindref="member">sel_fid</ref>);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a205d4cae3f9cdb77fcb514d62bbead4c" kindref="member">edmapatc</ref>)</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a205d4cae3f9cdb77fcb514d62bbead4c" kindref="member">edmapatc</ref>-&gt;SetText(<ref refid="classDagUtil_1a36a91243a298d6ab5d2615afe9098987" kindref="member">tc_mapach</ref>);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a56b8b7d0170265aed791d47d1aa75d2a" kindref="member">edsrctc</ref>)</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a56b8b7d0170265aed791d47d1aa75d2a" kindref="member">edsrctc</ref>-&gt;SetText(<ref refid="classDagUtil_1a25955b2e7ac9536d2446174b46e68a60" kindref="member">tc_srcch</ref>);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a4b972935093b513a268982143e84ba03" kindref="member">eddsttc</ref>)</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a4b972935093b513a268982143e84ba03" kindref="member">eddsttc</ref>-&gt;SetText(<ref refid="classDagUtil_1a55a9dea68ff6337ddc5b93d8a106b654" kindref="member">tc_dstch</ref>);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1af01ccea0bfe5a212f024061e7c676628" kindref="member">etc_uk</ref>)</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1af01ccea0bfe5a212f024061e7c676628" kindref="member">etc_uk</ref>-&gt;SetText(<ref refid="classDagUtil_1abb7193a60436f63f0c5c89e5226647d0" kindref="member">tc_uk</ref>);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1ab04c38b78cc6eaf5e57f8218f7a30404" kindref="member">etc_vk</ref>)</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1ab04c38b78cc6eaf5e57f8218f7a30404" kindref="member">etc_vk</ref>-&gt;SetText(<ref refid="classDagUtil_1adfd6c936cbf48d15b9471457570ff962" kindref="member">tc_vk</ref>);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a50080ae1d73d49684b02e1036ea040d8" kindref="member">etc_uo</ref>)</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a50080ae1d73d49684b02e1036ea040d8" kindref="member">etc_uo</ref>-&gt;SetText(<ref refid="classDagUtil_1a6896c284484107b020a2a12745bec6d3" kindref="member">tc_uo</ref>);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1aac6fbd62dc3698409967b58b99ffed73" kindref="member">etc_vo</ref>)</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aac6fbd62dc3698409967b58b99ffed73" kindref="member">etc_vo</ref>-&gt;SetText(<ref refid="classDagUtil_1a4ed6af55d1d0bb024e9307213deeaf1e" kindref="member">tc_vo</ref>);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hw)</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a7fd00633c7207d20f08aa7af90b6f106" kindref="member">IDC_APPLYSELECTEDFACES</ref>,<sp/><ref refid="classDagUtil_1a19aea3e937d48fb37fedabb9b9ca7175" kindref="member">tc_facesel</ref>);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a7b053134aa2c1cf1728c702c786a5f21" kindref="member">DagUtil::uv_utils_update_vars</ref>(HWND<sp/>hw)</highlight></codeline>
<codeline lineno="1416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a14a306dd89ac4b563b5da49c18afbc29" kindref="member">get_edint</ref>(<ref refid="classDagUtil_1acae8846a48ef8d595120ac728e697327" kindref="member">edfid</ref>,<sp/><ref refid="classDagUtil_1a58eabd9b0ba02e0c475c6a6f88afa64f" kindref="member">sel_fid</ref>);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a14a306dd89ac4b563b5da49c18afbc29" kindref="member">get_edint</ref>(<ref refid="classDagUtil_1a205d4cae3f9cdb77fcb514d62bbead4c" kindref="member">edmapatc</ref>,<sp/><ref refid="classDagUtil_1a36a91243a298d6ab5d2615afe9098987" kindref="member">tc_mapach</ref>);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a14a306dd89ac4b563b5da49c18afbc29" kindref="member">get_edint</ref>(<ref refid="classDagUtil_1a56b8b7d0170265aed791d47d1aa75d2a" kindref="member">edsrctc</ref>,<sp/><ref refid="classDagUtil_1a25955b2e7ac9536d2446174b46e68a60" kindref="member">tc_srcch</ref>);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a14a306dd89ac4b563b5da49c18afbc29" kindref="member">get_edint</ref>(<ref refid="classDagUtil_1a4b972935093b513a268982143e84ba03" kindref="member">eddsttc</ref>,<sp/><ref refid="classDagUtil_1a55a9dea68ff6337ddc5b93d8a106b654" kindref="member">tc_dstch</ref>);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1af01ccea0bfe5a212f024061e7c676628" kindref="member">etc_uk</ref>,<sp/><ref refid="classDagUtil_1abb7193a60436f63f0c5c89e5226647d0" kindref="member">tc_uk</ref>);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1ab04c38b78cc6eaf5e57f8218f7a30404" kindref="member">etc_vk</ref>,<sp/><ref refid="classDagUtil_1adfd6c936cbf48d15b9471457570ff962" kindref="member">tc_vk</ref>);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1a50080ae1d73d49684b02e1036ea040d8" kindref="member">etc_uo</ref>,<sp/><ref refid="classDagUtil_1a6896c284484107b020a2a12745bec6d3" kindref="member">tc_uo</ref>);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1aac6fbd62dc3698409967b58b99ffed73" kindref="member">etc_vo</ref>,<sp/><ref refid="classDagUtil_1a4ed6af55d1d0bb024e9307213deeaf1e" kindref="member">tc_vo</ref>);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hw)</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aa6fae51583ded7240363967b452f7d66" kindref="member">get_chkbool</ref>(<ref refid="resource_8h_1a7fd00633c7207d20f08aa7af90b6f106" kindref="member">IDC_APPLYSELECTEDFACES</ref>,<sp/><ref refid="classDagUtil_1a19aea3e937d48fb37fedabb9b9ca7175" kindref="member">tc_facesel</ref>,<sp/>hw);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1aea3814c1e47ac9ce358c090cd85eb987" kindref="member">DagUtil::splines_and_smooth_update_ui</ref>(HWND<sp/>hw)</highlight></codeline>
<codeline lineno="1432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a55d0b13a876c704ae94da574a4d8e9b4" kindref="member">edaround</ref>)</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a55d0b13a876c704ae94da574a4d8e9b4" kindref="member">edaround</ref>-&gt;SetText(<ref refid="classDagUtil_1a4a0b66b85c0d8427109dfcbc764562d7" kindref="member">merge_around</ref>,<sp/>9);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1aca7ca90fcddc70e2d3f139f363e4822e" kindref="member">edsharp</ref>)</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aca7ca90fcddc70e2d3f139f363e4822e" kindref="member">edsharp</ref>-&gt;SetText(<ref refid="classDagUtil_1a3ff42da8777dcca7e9be388d02546de6" kindref="member">sharpness</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a4dc3b8a64f38936b26f7d1e0cff5c19b" kindref="member">edsmthiterations</ref>)</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a4dc3b8a64f38936b26f7d1e0cff5c19b" kindref="member">edsmthiterations</ref>-&gt;SetText(<ref refid="classDagUtil_1a31cfeccd1645583aec40d6944b8510bd" kindref="member">iterations</ref>);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1aa83b7ab53967617e351caeeab52307e9" kindref="member">egrassht</ref>)</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aa83b7ab53967617e351caeeab52307e9" kindref="member">egrassht</ref>-&gt;SetText(<ref refid="classDagUtil_1ac5c585bd63f38d02e10d332a2dd704db" kindref="member">grass_ht</ref>);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a97678d56e41e3e779d26b6f59832dcf0" kindref="member">egrasstile</ref>)</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a97678d56e41e3e779d26b6f59832dcf0" kindref="member">egrasstile</ref>-&gt;SetText(<ref refid="classDagUtil_1aea321e22da279e7c7caaaec85e8b4719" kindref="member">grass_tile</ref>);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a08596f76eeb74eeb07a2ab53e00f7393" kindref="member">egrassg</ref>)</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a08596f76eeb74eeb07a2ab53e00f7393" kindref="member">egrassg</ref>-&gt;SetText(<ref refid="classDagUtil_1a7c445ed4470f7ab7e99c3e7f61fbf32b" kindref="member">grass_g</ref>);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a5f1ce60f48928a4b13c682edf709708a" kindref="member">egrasssegs</ref>)</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a5f1ce60f48928a4b13c682edf709708a" kindref="member">egrasssegs</ref>-&gt;SetText(<ref refid="classDagUtil_1afeaa53771243f92e746aae34e781ae95" kindref="member">grass_segs</ref>);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1acce27f1ac1608bcb23ae10e528b78ec8" kindref="member">egrasssteps</ref>)</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1acce27f1ac1608bcb23ae10e528b78ec8" kindref="member">egrasssteps</ref>-&gt;SetText(<ref refid="classDagUtil_1a6cb60175f29e2ed5ded018ee7b514a5d" kindref="member">grass_steps</ref>);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a0bdcc7d7bf0cc401f2517e8c029e5e16" kindref="member">epjs_maxseglen</ref>)</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a0bdcc7d7bf0cc401f2517e8c029e5e16" kindref="member">epjs_maxseglen</ref>-&gt;SetText(<ref refid="classDagUtil_1a5ca58d935c1191eeb79a0640ceac06f1" kindref="member">pjspl_maxseglen</ref>);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a95411d618f35980bf9a4ab958aa1bbcf" kindref="member">epjs_optseglen</ref>)</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a95411d618f35980bf9a4ab958aa1bbcf" kindref="member">epjs_optseglen</ref>-&gt;SetText(<ref refid="classDagUtil_1adbd30a8376e7e899396ea9141861f27b" kindref="member">pjspl_optseglen</ref>);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1aa06567671a0f76a4bc105d4d24e27d51" kindref="member">epjs_optang</ref>)</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aa06567671a0f76a4bc105d4d24e27d51" kindref="member">epjs_optang</ref>-&gt;SetText(<ref refid="classDagUtil_1adcdfa16bced9c2fe0b5cdd87dc032a97" kindref="member">pjspl_optang</ref>);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hw)</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a721069e44bdc902889c85953cc4692e2" kindref="member">IDC_GRASSUP</ref>,<sp/><ref refid="classDagUtil_1a09ca1c80b75e7beae5796d8472c8f810" kindref="member">grass_up</ref>);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a29420ad4731f701f7d9af22088202af4" kindref="member">IDC_GRASSUSETANG</ref>,<sp/><ref refid="classDagUtil_1a01f2f910a844dc6f5f614b347b185a0c" kindref="member">grass_usetang</ref>);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1abb2c539059dfe93ed423d14dc2958438" kindref="member">IDC_SMOOTHSEL</ref>,<sp/><ref refid="classDagUtil_1a53308b258e8510dd2b8966e913c68413" kindref="member">smooth_selected</ref>);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1adcc4bd9c1bb0c0b4b39190726be32f0e" kindref="member">IDC_TM_DIVIDEDIR</ref>,<sp/><ref refid="classDagUtil_1a4ee0097f03be2ea7374d28e3f553e31e" kindref="member">mesh_smoothtu</ref>);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1aa2a4c381bacd0c753fb9b507c7d8bee3" kindref="member">IDC_USE_SMOOTH</ref>,<sp/><ref refid="classDagUtil_1ad5779d754ce442890e728271a6f1c562" kindref="member">use_smooth_grps</ref>);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a939aa1b8c4e940964b2ef98bc6c788d4" kindref="member">DagUtil::splines_and_smooth_update_vars</ref>(HWND<sp/>hw)</highlight></codeline>
<codeline lineno="1467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a55d0b13a876c704ae94da574a4d8e9b4" kindref="member">edaround</ref>)</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a4a0b66b85c0d8427109dfcbc764562d7" kindref="member">merge_around</ref><sp/>=<sp/><ref refid="classDagUtil_1a55d0b13a876c704ae94da574a4d8e9b4" kindref="member">edaround</ref>-&gt;GetFloat();</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1aca7ca90fcddc70e2d3f139f363e4822e" kindref="member">edsharp</ref>)</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a3ff42da8777dcca7e9be388d02546de6" kindref="member">sharpness</ref><sp/>=<sp/><ref refid="classDagUtil_1aca7ca90fcddc70e2d3f139f363e4822e" kindref="member">edsharp</ref>-&gt;GetFloat();</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a4dc3b8a64f38936b26f7d1e0cff5c19b" kindref="member">edsmthiterations</ref>)</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a31cfeccd1645583aec40d6944b8510bd" kindref="member">iterations</ref><sp/>=<sp/><ref refid="classDagUtil_1a4dc3b8a64f38936b26f7d1e0cff5c19b" kindref="member">edsmthiterations</ref>-&gt;GetInt();</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a31cfeccd1645583aec40d6944b8510bd" kindref="member">iterations</ref><sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a31cfeccd1645583aec40d6944b8510bd" kindref="member">iterations</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a4dc3b8a64f38936b26f7d1e0cff5c19b" kindref="member">edsmthiterations</ref>)</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a4dc3b8a64f38936b26f7d1e0cff5c19b" kindref="member">edsmthiterations</ref>-&gt;SetText(<ref refid="classDagUtil_1a31cfeccd1645583aec40d6944b8510bd" kindref="member">iterations</ref>);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1aa83b7ab53967617e351caeeab52307e9" kindref="member">egrassht</ref>,<sp/><ref refid="classDagUtil_1ac5c585bd63f38d02e10d332a2dd704db" kindref="member">grass_ht</ref>);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1a97678d56e41e3e779d26b6f59832dcf0" kindref="member">egrasstile</ref>,<sp/><ref refid="classDagUtil_1aea321e22da279e7c7caaaec85e8b4719" kindref="member">grass_tile</ref>);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1a08596f76eeb74eeb07a2ab53e00f7393" kindref="member">egrassg</ref>,<sp/><ref refid="classDagUtil_1a7c445ed4470f7ab7e99c3e7f61fbf32b" kindref="member">grass_g</ref>);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a14a306dd89ac4b563b5da49c18afbc29" kindref="member">get_edint</ref>(<ref refid="classDagUtil_1a5f1ce60f48928a4b13c682edf709708a" kindref="member">egrasssegs</ref>,<sp/><ref refid="classDagUtil_1afeaa53771243f92e746aae34e781ae95" kindref="member">grass_segs</ref>);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a14a306dd89ac4b563b5da49c18afbc29" kindref="member">get_edint</ref>(<ref refid="classDagUtil_1acce27f1ac1608bcb23ae10e528b78ec8" kindref="member">egrasssteps</ref>,<sp/><ref refid="classDagUtil_1a6cb60175f29e2ed5ded018ee7b514a5d" kindref="member">grass_steps</ref>);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1a0bdcc7d7bf0cc401f2517e8c029e5e16" kindref="member">epjs_maxseglen</ref>,<sp/><ref refid="classDagUtil_1a5ca58d935c1191eeb79a0640ceac06f1" kindref="member">pjspl_maxseglen</ref>);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1a95411d618f35980bf9a4ab958aa1bbcf" kindref="member">epjs_optseglen</ref>,<sp/><ref refid="classDagUtil_1adbd30a8376e7e899396ea9141861f27b" kindref="member">pjspl_optseglen</ref>);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1aa06567671a0f76a4bc105d4d24e27d51" kindref="member">epjs_optang</ref>,<sp/><ref refid="classDagUtil_1adcdfa16bced9c2fe0b5cdd87dc032a97" kindref="member">pjspl_optang</ref>);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hw)</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aa6fae51583ded7240363967b452f7d66" kindref="member">get_chkbool</ref>(<ref refid="resource_8h_1a721069e44bdc902889c85953cc4692e2" kindref="member">IDC_GRASSUP</ref>,<sp/><ref refid="classDagUtil_1a09ca1c80b75e7beae5796d8472c8f810" kindref="member">grass_up</ref>,<sp/>hw);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aa6fae51583ded7240363967b452f7d66" kindref="member">get_chkbool</ref>(<ref refid="resource_8h_1a29420ad4731f701f7d9af22088202af4" kindref="member">IDC_GRASSUSETANG</ref>,<sp/><ref refid="classDagUtil_1a01f2f910a844dc6f5f614b347b185a0c" kindref="member">grass_usetang</ref>,<sp/>hw);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aa6fae51583ded7240363967b452f7d66" kindref="member">get_chkbool</ref>(<ref refid="resource_8h_1adcc4bd9c1bb0c0b4b39190726be32f0e" kindref="member">IDC_TM_DIVIDEDIR</ref>,<sp/><ref refid="classDagUtil_1a4ee0097f03be2ea7374d28e3f553e31e" kindref="member">mesh_smoothtu</ref>,<sp/>hw);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aa6fae51583ded7240363967b452f7d66" kindref="member">get_chkbool</ref>(<ref refid="resource_8h_1aa2a4c381bacd0c753fb9b507c7d8bee3" kindref="member">IDC_USE_SMOOTH</ref>,<sp/><ref refid="classDagUtil_1ad5779d754ce442890e728271a6f1c562" kindref="member">use_smooth_grps</ref>,<sp/>hw);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aa6fae51583ded7240363967b452f7d66" kindref="member">get_chkbool</ref>(<ref refid="resource_8h_1abb2c539059dfe93ed423d14dc2958438" kindref="member">IDC_SMOOTHSEL</ref>,<sp/><ref refid="classDagUtil_1a53308b258e8510dd2b8966e913c68413" kindref="member">smooth_selected</ref>,<sp/>hw);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1afa12270ab4991d2e8b45d81b4c0a693d" kindref="member">DagUtil::scatter_update_ui</ref>(HWND<sp/>hw)</highlight></codeline>
<codeline lineno="1499"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a3640dc8526b088f76b31b5515a029b0d" kindref="member">egs_sname</ref>)</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a3640dc8526b088f76b31b5515a029b0d" kindref="member">egs_sname</ref>-&gt;SetText(<ref refid="classDagUtil_1ac184605103009d29a258d552ebedf365" kindref="member">gs_sname</ref>);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1aa8bc019ab7ed0d615b05521223a06290" kindref="member">egs_objnum</ref>)</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aa8bc019ab7ed0d615b05521223a06290" kindref="member">egs_objnum</ref>-&gt;SetText(<ref refid="classDagUtil_1a997d9bceb4dd3634df78aee587c52ddc" kindref="member">gs_objnum</ref>);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a3b7926d65ffc6ec28194641f615ea829" kindref="member">egs_slope</ref>)</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a3b7926d65ffc6ec28194641f615ea829" kindref="member">egs_slope</ref>-&gt;SetText(<ref refid="classDagUtil_1a48b928410b1ad4594f765f9cdf00e0ef" kindref="member">gs_slope</ref>);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1ad75be9cfb3d2602de86c814a0f2b1727" kindref="member">egs_seed</ref>)</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1ad75be9cfb3d2602de86c814a0f2b1727" kindref="member">egs_seed</ref>-&gt;SetText(<ref refid="classDagUtil_1a991f68e95088983d917ba87ee9afaff5" kindref="member">gs_seed</ref>);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1aaf5336a6218eeb88d2c5483d50d907c5" kindref="member">egs_xydiap</ref>[0])</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aaf5336a6218eeb88d2c5483d50d907c5" kindref="member">egs_xydiap</ref>[0]-&gt;SetText(<ref refid="classDagUtil_1a8303f93b240dd10b07a4fce8834cd483" kindref="member">gs_xydiap</ref>[0]);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1aaf5336a6218eeb88d2c5483d50d907c5" kindref="member">egs_xydiap</ref>[1])</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aaf5336a6218eeb88d2c5483d50d907c5" kindref="member">egs_xydiap</ref>[1]-&gt;SetText(<ref refid="classDagUtil_1a8303f93b240dd10b07a4fce8834cd483" kindref="member">gs_xydiap</ref>[1]);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a6bc88f9301cf785fae92994d67f743b1" kindref="member">egs_zdiap</ref>[0])</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6bc88f9301cf785fae92994d67f743b1" kindref="member">egs_zdiap</ref>[0]-&gt;SetText(<ref refid="classDagUtil_1a5c59932a40b407fe51384a41ea614dc7" kindref="member">gs_zdiap</ref>[0]);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a6bc88f9301cf785fae92994d67f743b1" kindref="member">egs_zdiap</ref>[1])</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6bc88f9301cf785fae92994d67f743b1" kindref="member">egs_zdiap</ref>[1]-&gt;SetText(<ref refid="classDagUtil_1a5c59932a40b407fe51384a41ea614dc7" kindref="member">gs_zdiap</ref>[1]);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hw)</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1ab4f95dd3846a5369ca9396e1c219cd32" kindref="member">IDC_GS_SCALEXY</ref>,<sp/><ref refid="classDagUtil_1ad468043dcd63b0c05f636077d3a8f7ae" kindref="member">gs_scalexy</ref>);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1ad14c097541167514f0e546df4cc9a9ba" kindref="member">IDC_GS_SCALEZ</ref>,<sp/><ref refid="classDagUtil_1a1395f9914d1118e2651e7be2d50c9cb1" kindref="member">gs_scalez</ref>);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1ad5aa5d5f2e83b01720dac99e7c445ab4" kindref="member">IDC_GS_SET2NORM</ref>,<sp/><ref refid="classDagUtil_1a7370d674d3c422081571e24f3779f81d" kindref="member">gs_set2norm</ref>);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a0832976b34334a9709f6eaad5856c542" kindref="member">IDC_GS_USESMGR</ref>,<sp/><ref refid="classDagUtil_1af258629a2dfe69531d056994219f0f8f" kindref="member">gs_usesmgr</ref>);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a2aec5ff164d092dc3255fead40d2ada1" kindref="member">IDC_GS_ROTATEZ</ref>,<sp/><ref refid="classDagUtil_1a9ac8514c70fa8e65aac6b149c6d27911" kindref="member">gs_rotatez</ref>);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a14985f6483c86378bf65eb6fe353ae97" kindref="member">IDC_GS_SELFACES</ref>,<sp/><ref refid="classDagUtil_1a5fca6231de82bfbb82587c5ad20f6e51" kindref="member">gs_selfaces</ref>);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1afcd0e770d2adfae633beaea31dd5bacb" kindref="member">DagUtil::scatter_update_vars</ref>(HWND<sp/>hw)</highlight></codeline>
<codeline lineno="1529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a3640dc8526b088f76b31b5515a029b0d" kindref="member">egs_sname</ref>)</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a3640dc8526b088f76b31b5515a029b0d" kindref="member">egs_sname</ref>-&gt;GetText(<ref refid="classDagUtil_1ac184605103009d29a258d552ebedf365" kindref="member">gs_sname</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classDagUtil_1ac184605103009d29a258d552ebedf365" kindref="member">gs_sname</ref>));</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1aaf5336a6218eeb88d2c5483d50d907c5" kindref="member">egs_xydiap</ref>[0],<sp/><ref refid="classDagUtil_1a8303f93b240dd10b07a4fce8834cd483" kindref="member">gs_xydiap</ref>[0]);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1aaf5336a6218eeb88d2c5483d50d907c5" kindref="member">egs_xydiap</ref>[1],<sp/><ref refid="classDagUtil_1a8303f93b240dd10b07a4fce8834cd483" kindref="member">gs_xydiap</ref>[1]);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1a6bc88f9301cf785fae92994d67f743b1" kindref="member">egs_zdiap</ref>[0],<sp/><ref refid="classDagUtil_1a5c59932a40b407fe51384a41ea614dc7" kindref="member">gs_zdiap</ref>[0]);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1a6bc88f9301cf785fae92994d67f743b1" kindref="member">egs_zdiap</ref>[1],<sp/><ref refid="classDagUtil_1a5c59932a40b407fe51384a41ea614dc7" kindref="member">gs_zdiap</ref>[1]);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1a3b7926d65ffc6ec28194641f615ea829" kindref="member">egs_slope</ref>,<sp/><ref refid="classDagUtil_1a48b928410b1ad4594f765f9cdf00e0ef" kindref="member">gs_slope</ref>);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a14a306dd89ac4b563b5da49c18afbc29" kindref="member">get_edint</ref>(<ref refid="classDagUtil_1ad75be9cfb3d2602de86c814a0f2b1727" kindref="member">egs_seed</ref>,<sp/><ref refid="classDagUtil_1a991f68e95088983d917ba87ee9afaff5" kindref="member">gs_seed</ref>);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a14a306dd89ac4b563b5da49c18afbc29" kindref="member">get_edint</ref>(<ref refid="classDagUtil_1aa8bc019ab7ed0d615b05521223a06290" kindref="member">egs_objnum</ref>,<sp/><ref refid="classDagUtil_1a997d9bceb4dd3634df78aee587c52ddc" kindref="member">gs_objnum</ref>);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hw)</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aa6fae51583ded7240363967b452f7d66" kindref="member">get_chkbool</ref>(<ref refid="resource_8h_1ad5aa5d5f2e83b01720dac99e7c445ab4" kindref="member">IDC_GS_SET2NORM</ref>,<sp/><ref refid="classDagUtil_1a7370d674d3c422081571e24f3779f81d" kindref="member">gs_set2norm</ref>,<sp/>hw);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aa6fae51583ded7240363967b452f7d66" kindref="member">get_chkbool</ref>(<ref refid="resource_8h_1a0832976b34334a9709f6eaad5856c542" kindref="member">IDC_GS_USESMGR</ref>,<sp/><ref refid="classDagUtil_1af258629a2dfe69531d056994219f0f8f" kindref="member">gs_usesmgr</ref>,<sp/>hw);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aa6fae51583ded7240363967b452f7d66" kindref="member">get_chkbool</ref>(<ref refid="resource_8h_1a2aec5ff164d092dc3255fead40d2ada1" kindref="member">IDC_GS_ROTATEZ</ref>,<sp/><ref refid="classDagUtil_1a9ac8514c70fa8e65aac6b149c6d27911" kindref="member">gs_rotatez</ref>,<sp/>hw);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aa6fae51583ded7240363967b452f7d66" kindref="member">get_chkbool</ref>(<ref refid="resource_8h_1a14985f6483c86378bf65eb6fe353ae97" kindref="member">IDC_GS_SELFACES</ref>,<sp/><ref refid="classDagUtil_1a5fca6231de82bfbb82587c5ad20f6e51" kindref="member">gs_selfaces</ref>,<sp/>hw);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aa6fae51583ded7240363967b452f7d66" kindref="member">get_chkbool</ref>(<ref refid="resource_8h_1ab4f95dd3846a5369ca9396e1c219cd32" kindref="member">IDC_GS_SCALEXY</ref>,<sp/><ref refid="classDagUtil_1ad468043dcd63b0c05f636077d3a8f7ae" kindref="member">gs_scalexy</ref>,<sp/>hw);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aa6fae51583ded7240363967b452f7d66" kindref="member">get_chkbool</ref>(<ref refid="resource_8h_1ad14c097541167514f0e546df4cc9a9ba" kindref="member">IDC_GS_SCALEZ</ref>,<sp/><ref refid="classDagUtil_1a1395f9914d1118e2651e7be2d50c9cb1" kindref="member">gs_scalez</ref>,<sp/>hw);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a2428411e04cb7623fc8e917378e2ea1f" kindref="member">DagUtil::update_ui</ref>()</highlight></codeline>
<codeline lineno="1553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1acc8645323c88fd7ecf8d1bbd867cb3ed" kindref="member">dagor_util_update_ui</ref>(<ref refid="classDagUtil_1a23b6af4d2b4f8d32a5ba62a7dac07043" kindref="member">dagorUtilRoll</ref>);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1aff945e20e766e3d3fd3537e50d9fa1e9" kindref="member">materials_update_ui</ref>(<ref refid="classDagUtil_1aa87e60f0f09984759c3c26b7b942f225" kindref="member">materialsRoll</ref>);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1ade42a375b786928dc9341404048561cb" kindref="member">uv_utils_update_ui</ref>(<ref refid="classDagUtil_1a9dbda3977a56beafd8edaa4ea4a8f44d" kindref="member">uvUtilsRoll</ref>);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1aea3814c1e47ac9ce358c090cd85eb987" kindref="member">splines_and_smooth_update_ui</ref>(<ref refid="classDagUtil_1ae10cb6fe69717782759a594e13a45a46" kindref="member">splinesAndSmoothRoll</ref>);</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1afa12270ab4991d2e8b45d81b4c0a693d" kindref="member">scatter_update_ui</ref>(<ref refid="classDagUtil_1aef4c84d5c2df000608fe72490eba3345" kindref="member">scatterRoll</ref>);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a520e07ac1ad2cb452fe1276be795b0ea" kindref="member">DagUtil::update_vars</ref>()</highlight></codeline>
<codeline lineno="1563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a11511eb167f8d2f26bb40494fc44201a" kindref="member">materials_update_vars</ref>(<ref refid="classDagUtil_1aa87e60f0f09984759c3c26b7b942f225" kindref="member">materialsRoll</ref>);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a7b053134aa2c1cf1728c702c786a5f21" kindref="member">uv_utils_update_vars</ref>(<ref refid="classDagUtil_1a9dbda3977a56beafd8edaa4ea4a8f44d" kindref="member">uvUtilsRoll</ref>);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a939aa1b8c4e940964b2ef98bc6c788d4" kindref="member">splines_and_smooth_update_vars</ref>(<ref refid="classDagUtil_1ae10cb6fe69717782759a594e13a45a46" kindref="member">splinesAndSmoothRoll</ref>);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1afcd0e770d2adfae633beaea31dd5bacb" kindref="member">scatter_update_vars</ref>(<ref refid="classDagUtil_1aef4c84d5c2df000608fe72490eba3345" kindref="member">scatterRoll</ref>);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571" refid="classShowMapsCB" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classShowMapsCB" kindref="compound">ShowMapsCB</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classENodeCB" kindref="compound">ENodeCB</ref></highlight></codeline>
<codeline lineno="1572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/>Interface<sp/>*<ref refid="classShowMapsCB_1a8a42ba23a7979d5c7dd908242d34523a" kindref="member">ip</ref>;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><ref refid="classShowMapsCB" kindref="compound">ShowMapsCB</ref>(Interface<sp/>*iptr)<sp/>{<sp/><ref refid="classShowMapsCB_1a8a42ba23a7979d5c7dd908242d34523a" kindref="member">ip</ref><sp/>=<sp/>iptr;<sp/>}</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classShowMapsCB_1a344c4b7adb206f0109060a51ca888046" kindref="member">show_map</ref>(Mtl<sp/>*m,<sp/>Mtl<sp/>*topm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sub)</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/>Texmap<sp/>*tex<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/>Class_ID<sp/>cid<sp/>=<sp/>m-&gt;ClassID();</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid<sp/>==<sp/>Class_ID(DMTL_CLASS_ID,<sp/>0))</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tex<sp/>=<sp/>m-&gt;GetSubTexmap(ID_DI);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tex<sp/>=<sp/>m-&gt;GetSubTexmap(0);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tex)</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classShowMapsCB_1a8a42ba23a7979d5c7dd908242d34523a" kindref="member">ip</ref>-&gt;ActivateTexture(tex,<sp/>topm,<sp/>sub);</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classShowMapsCB_1af60f5a7309994f0501808b7d452aff1b" kindref="member">proc</ref>(INode<sp/>*n)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1588"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n-&gt;Selected())</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/>Mtl<sp/>*m<sp/>=<sp/>n-&gt;GetMtl();</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m)</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;IsMultiMtl())</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>m-&gt;NumSubMtls();</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*sm<sp/>=<sp/>m-&gt;GetSubMtl(i);</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sm)</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classShowMapsCB_1a344c4b7adb206f0109060a51ca888046" kindref="member">show_map</ref>(sm,<sp/>m,<sp/>i);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classShowMapsCB_1a344c4b7adb206f0109060a51ca888046" kindref="member">show_map</ref>(m,<sp/>m,<sp/>-1);</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;InvalidateWS();</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1612"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a0943eb5ccc1cbe295e77dd71cc619944" kindref="member">DagUtil::show_all_maps</ref>()</highlight></codeline>
<codeline lineno="1615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>)</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><ref refid="classShowMapsCB" kindref="compound">ShowMapsCB</ref><sp/>cb(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetRootNode(),<sp/>&amp;cb);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime());</highlight></codeline>
<codeline lineno="1621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623" refid="classHideMapsCB" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classHideMapsCB" kindref="compound">HideMapsCB</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classENodeCB" kindref="compound">ENodeCB</ref></highlight></codeline>
<codeline lineno="1624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/>Interface<sp/>*<ref refid="classHideMapsCB_1aa5c7468b8b7eca00287d544421a510dc" kindref="member">ip</ref>;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><ref refid="classHideMapsCB" kindref="compound">HideMapsCB</ref>(Interface<sp/>*iptr)<sp/>{<sp/><ref refid="classHideMapsCB_1aa5c7468b8b7eca00287d544421a510dc" kindref="member">ip</ref><sp/>=<sp/>iptr;<sp/>}</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHideMapsCB_1a388a0c39442681d8d33a78b3d65897c0" kindref="member">hide_map</ref>(Mtl<sp/>*m,<sp/>Mtl<sp/>*topm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sub)</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/>Texmap<sp/>*tex<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>Class_ID<sp/>cid<sp/>=<sp/>m-&gt;ClassID();</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid<sp/>==<sp/>Class_ID(DMTL_CLASS_ID,<sp/>0))</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tex<sp/>=<sp/>m-&gt;GetSubTexmap(ID_DI);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tex<sp/>=<sp/>m-&gt;GetSubTexmap(0);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tex)</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHideMapsCB_1aa5c7468b8b7eca00287d544421a510dc" kindref="member">ip</ref>-&gt;DeActivateTexture(tex,<sp/>topm,<sp/>sub);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classHideMapsCB_1ab6e07cfd1a05648a4ba8360443668d1f" kindref="member">proc</ref>(INode<sp/>*n)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1640"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n-&gt;Selected())</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/>Mtl<sp/>*m<sp/>=<sp/>n-&gt;GetMtl();</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m)</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;IsMultiMtl())</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>m-&gt;NumSubMtls();</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*sm<sp/>=<sp/>m-&gt;GetSubMtl(i);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sm)</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHideMapsCB_1a388a0c39442681d8d33a78b3d65897c0" kindref="member">hide_map</ref>(sm,<sp/>m,<sp/>i);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHideMapsCB_1a388a0c39442681d8d33a78b3d65897c0" kindref="member">hide_map</ref>(m,<sp/>m,<sp/>-1);</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;InvalidateWS();</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1664"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1adef9053cd45ae0f4a1fa043159a79e79" kindref="member">DagUtil::hide_all_maps</ref>()</highlight></codeline>
<codeline lineno="1667"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>)</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><ref refid="classHideMapsCB" kindref="compound">HideMapsCB</ref><sp/>cb(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetRootNode(),<sp/>&amp;cb);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime());</highlight></codeline>
<codeline lineno="1673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676" refid="structCnvMtl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structCnvMtl" kindref="compound">CnvMtl</ref></highlight></codeline>
<codeline lineno="1677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/>Mtl<sp/>*<ref refid="structCnvMtl_1ae6624c8a0dc736b639a9c60798c070ff" kindref="member">om</ref>;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/>Mtl<sp/>*<ref refid="structCnvMtl_1a8a6a360283dd7988c2e3a4d3ba675166" kindref="member">nm</ref>;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682" refid="classStd2DagCB" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classStd2DagCB" kindref="compound">Std2DagCB</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classENodeCB" kindref="compound">ENodeCB</ref></highlight></codeline>
<codeline lineno="1683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/>Tab&lt;CnvMtl&gt;<sp/><ref refid="classStd2DagCB_1a3ef939aad89aec25575b192f50762eeb" kindref="member">mat</ref>;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/>Interface<sp/>*<ref refid="classStd2DagCB_1af8eaa35fd92d55192d4fc2a639b01a43" kindref="member">ip</ref>;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/>TimeValue<sp/><ref refid="classStd2DagCB_1a3041d92db02e833ca36524a1be2ef2b8" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><ref refid="classStd2DagCB" kindref="compound">Std2DagCB</ref>(Interface<sp/>*iptr)</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classStd2DagCB_1af8eaa35fd92d55192d4fc2a639b01a43" kindref="member">ip</ref><sp/>=<sp/>iptr;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classStd2DagCB_1a3041d92db02e833ca36524a1be2ef2b8" kindref="member">time</ref><sp/>=<sp/><ref refid="classStd2DagCB_1af8eaa35fd92d55192d4fc2a639b01a43" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classStd2DagCB_1a216ad0d8455b2b852663837760ab3503" kindref="member">conv_mat</ref>(Mtl<sp/>*&amp;m)</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classStd2DagCB_1a3ef939aad89aec25575b192f50762eeb" kindref="member">mat</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classStd2DagCB_1a3ef939aad89aec25575b192f50762eeb" kindref="member">mat</ref>[i].om<sp/>==<sp/>m)</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/><ref refid="classStd2DagCB_1a3ef939aad89aec25575b192f50762eeb" kindref="member">mat</ref>[i].nm;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/>Class_ID<sp/>cid<sp/>=<sp/>m-&gt;ClassID();</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid<sp/>==<sp/>Class_ID(DMTL_CLASS_ID,<sp/>0))</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCnvMtl" kindref="compound">CnvMtl</ref><sp/>cm;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cm.<ref refid="structCnvMtl_1ae6624c8a0dc736b639a9c60798c070ff" kindref="member">om</ref><sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StdMat<sp/>*sm<sp/>=<sp/>(StdMat<sp/>*)m;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*dm<sp/>=<sp/>(Mtl<sp/>*)<ref refid="classStd2DagCB_1af8eaa35fd92d55192d4fc2a639b01a43" kindref="member">ip</ref>-&gt;CreateInstance(MATERIAL_CLASS_ID,<sp/><ref refid="dagor_8h_1a9ead658a52f6878a9360e47eea9322e2" kindref="member">DagorMat_CID</ref>);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(dm);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIDagorMat" kindref="compound">IDagorMat</ref><sp/>*d<sp/>=<sp/>(<ref refid="classIDagorMat" kindref="compound">IDagorMat</ref><sp/>*)dm-&gt;GetInterface(<ref refid="mater_8h_1a36dcaa0c637134b05278e83da132935e" kindref="member">I_DAGORMAT</ref>);</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(d);</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dm-&gt;SetName(sm-&gt;GetName());</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="classIDagorMat_1ab9a123a1bfa48a9c034865411fddf1e2" kindref="member">set_2sided</ref>(sm-&gt;GetTwoSided()<sp/>?<sp/><ref refid="classIDagorMat_1aa9e1f9b3ca95a6715f15fe27fbfa732aa54c65daef485e12e23c450d276053134" kindref="member">IDagorMat::Sides::DoubleSided</ref><sp/>:<sp/><ref refid="classIDagorMat_1aa9e1f9b3ca95a6715f15fe27fbfa732aa81797e9c6fc44586202026bb6aaefe8c" kindref="member">IDagorMat::Sides::OneSided</ref>);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>si<sp/>=<sp/>sm-&gt;GetSelfIllum(<ref refid="classStd2DagCB_1a3041d92db02e833ca36524a1be2ef2b8" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="classIDagorMat_1a3d3d99ddfd74b9097aee8182d703aab5" kindref="member">set_amb</ref>(sm-&gt;GetAmbient(<ref refid="classStd2DagCB_1a3041d92db02e833ca36524a1be2ef2b8" kindref="member">time</ref>)<sp/>*<sp/>(1<sp/>-<sp/>si));</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Color<sp/>diff<sp/>=<sp/>sm-&gt;GetDiffuse(<ref refid="classStd2DagCB_1a3041d92db02e833ca36524a1be2ef2b8" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="classIDagorMat_1acd05e9a7c199e6ca8e12f8479ae733c4" kindref="member">set_diff</ref>(diff<sp/>*<sp/>(1<sp/>-<sp/>si));</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="classIDagorMat_1a12f0adb00b6c0862ab4d004f196c54bd" kindref="member">set_spec</ref>(sm-&gt;GetSpecular(<ref refid="classStd2DagCB_1a3041d92db02e833ca36524a1be2ef2b8" kindref="member">time</ref>)<sp/>*<sp/>sm-&gt;GetShinStr(<ref refid="classStd2DagCB_1a3041d92db02e833ca36524a1be2ef2b8" kindref="member">time</ref>));</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="classIDagorMat_1aa80fad171c33a42412edb879d64b5528" kindref="member">set_emis</ref>(diff<sp/>*<sp/>si);</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="classIDagorMat_1ac2fc4570c8981f75760921925db1b6e1" kindref="member">set_power</ref>(powf(2.0f,<sp/>sm-&gt;GetShininess(<ref refid="classStd2DagCB_1a3041d92db02e833ca36524a1be2ef2b8" kindref="member">time</ref>)<sp/>*<sp/>10.0f)<sp/>*<sp/>4.0f);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Texmap<sp/>*tex<sp/>=<sp/>sm-&gt;GetSubTexmap(ID_DI);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tex)</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color<sp/>c<sp/>=<sp/>Color(1,<sp/>1,<sp/>1)<sp/>*<sp/>(1<sp/>-<sp/>si);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="classIDagorMat_1a3d3d99ddfd74b9097aee8182d703aab5" kindref="member">set_amb</ref>(c);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="classIDagorMat_1acd05e9a7c199e6ca8e12f8479ae733c4" kindref="member">set_diff</ref>(c);</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="classIDagorMat_1aa80fad171c33a42412edb879d64b5528" kindref="member">set_emis</ref>(Color(1,<sp/>1,<sp/>1)<sp/>*<sp/>si);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm-&gt;SetSubTexmap(0,<sp/>tex);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="classIDagorMat_1a5ecda33097873e6feb6e22326c1fd482" kindref="member">set_classname</ref>(util.<ref refid="classDagUtil_1aeae5a2e250a013c98f01e43796b79983" kindref="member">clsname</ref>);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dm-&gt;ReleaseInterface(<ref refid="mater_8h_1a36dcaa0c637134b05278e83da132935e" kindref="member">I_DAGORMAT</ref>,<sp/>d);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cm.<ref refid="structCnvMtl_1a8a6a360283dd7988c2e3a4d3ba675166" kindref="member">nm</ref><sp/>=<sp/>dm;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classStd2DagCB_1a3ef939aad89aec25575b192f50762eeb" kindref="member">mat</ref>.Append(1,<sp/>&amp;cm);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>dm;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classStd2DagCB_1ad14f95141788091acf7e600bf6e5f442" kindref="member">proc</ref>(INode<sp/>*n)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1740"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/>Mtl<sp/>*m<sp/>=<sp/>n-&gt;GetMtl();</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cnv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m)</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;IsMultiMtl())</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>m-&gt;NumSubMtls();</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*sm<sp/>=<sp/>m-&gt;GetSubMtl(i);</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sm)</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classStd2DagCB_1a216ad0d8455b2b852663837760ab3503" kindref="member">conv_mat</ref>(sm))</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;SetSubMtl(i,<sp/>sm);</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnv<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classStd2DagCB_1a216ad0d8455b2b852663837760ab3503" kindref="member">conv_mat</ref>(m))</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;SetMtl(m);</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnv<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnv)</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;InvalidateWS();</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1774"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1af3a9a1a01c38b807ef4f41a2834caee0" kindref="member">DagUtil::stdmat_to_dagmat</ref>()</highlight></codeline>
<codeline lineno="1777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>)</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><ref refid="classStd2DagCB" kindref="compound">Std2DagCB</ref><sp/>cb(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetRootNode(),<sp/>&amp;cb);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime());</highlight></codeline>
<codeline lineno="1783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight></codeline>
<codeline lineno="1785" refid="classDag2StdCB" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classDag2StdCB" kindref="compound">Dag2StdCB</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classENodeCB" kindref="compound">ENodeCB</ref></highlight></codeline>
<codeline lineno="1786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/>Tab&lt;CnvMtl&gt;<sp/><ref refid="classDag2StdCB_1aea94eb1397848c5ce43fef405f848001" kindref="member">mat</ref>;</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/>Interface<sp/>*<ref refid="classDag2StdCB_1a3dd9403eedf643b498a7b2daf516e134" kindref="member">ip</ref>;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/>TimeValue<sp/><ref refid="classDag2StdCB_1a3da56e56803e1b3338599a2b5023b0eb" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><ref refid="classDag2StdCB" kindref="compound">Dag2StdCB</ref>(Interface<sp/>*iptr)</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDag2StdCB_1a3dd9403eedf643b498a7b2daf516e134" kindref="member">ip</ref><sp/>=<sp/>iptr;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDag2StdCB_1a3da56e56803e1b3338599a2b5023b0eb" kindref="member">time</ref><sp/>=<sp/><ref refid="classDag2StdCB_1a3dd9403eedf643b498a7b2daf516e134" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDag2StdCB_1a3e38f5f0453fb22a6936ac04ad4d3f20" kindref="member">conv_mat</ref>(Mtl<sp/>*&amp;m)</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classDag2StdCB_1aea94eb1397848c5ce43fef405f848001" kindref="member">mat</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDag2StdCB_1aea94eb1397848c5ce43fef405f848001" kindref="member">mat</ref>[i].om<sp/>==<sp/>m)</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/><ref refid="classDag2StdCB_1aea94eb1397848c5ce43fef405f848001" kindref="member">mat</ref>[i].nm;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/>Class_ID<sp/>cid<sp/>=<sp/>m-&gt;ClassID();</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid<sp/>==<sp/><ref refid="dagor_8h_1a9ead658a52f6878a9360e47eea9322e2" kindref="member">DagorMat_CID</ref><sp/>||<sp/>cid<sp/>==<sp/><ref refid="dagor_8h_1aaa6ea09f471b5e57f5b69b9996227c66" kindref="member">DagorMat2_CID</ref>)</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCnvMtl" kindref="compound">CnvMtl</ref><sp/>cm;</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cm.<ref refid="structCnvMtl_1ae6624c8a0dc736b639a9c60798c070ff" kindref="member">om</ref><sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*newm<sp/>=<sp/>(Mtl<sp/>*)<ref refid="classDag2StdCB_1a3dd9403eedf643b498a7b2daf516e134" kindref="member">ip</ref>-&gt;CreateInstance(MATERIAL_CLASS_ID,<sp/>Class_ID(DMTL_CLASS_ID,<sp/>0));</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(newm);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StdMat<sp/>*sm<sp/>=<sp/>(StdMat<sp/>*)newm;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIDagorMat" kindref="compound">IDagorMat</ref><sp/>*d<sp/>=<sp/>(<ref refid="classIDagorMat" kindref="compound">IDagorMat</ref><sp/>*)m-&gt;GetInterface(<ref refid="mater_8h_1a36dcaa0c637134b05278e83da132935e" kindref="member">I_DAGORMAT</ref>);</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(d);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sm-&gt;SetName(m-&gt;GetName());</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sm-&gt;SetTwoSided(d-&gt;<ref refid="classIDagorMat_1a8d93be97a06dcd377a24e9fa47055d13" kindref="member">get_2sided</ref>()<sp/>==<sp/><ref refid="classIDagorMat_1aa9e1f9b3ca95a6715f15fe27fbfa732aa54c65daef485e12e23c450d276053134" kindref="member">IDagorMat::Sides::DoubleSided</ref>);</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Color<sp/>c<sp/>=<sp/>d-&gt;<ref refid="classIDagorMat_1a1b3ec43de86ca25d121b61b2ec38d7e4" kindref="member">get_emis</ref>();</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>si<sp/>=<sp/>(c.r<sp/>+<sp/>c.g<sp/>+<sp/>c.b)<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sm-&gt;SetSelfIllum(si,<sp/><ref refid="classDag2StdCB_1a3da56e56803e1b3338599a2b5023b0eb" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>d-&gt;<ref refid="classIDagorMat_1a87ba4f21930b96625725ef197be7f358" kindref="member">get_amb</ref>();</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(si<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>/=<sp/>1<sp/>-<sp/>si;</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sm-&gt;SetAmbient(c,<sp/><ref refid="classDag2StdCB_1a3da56e56803e1b3338599a2b5023b0eb" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>d-&gt;<ref refid="classIDagorMat_1a619315422c7471fc3865590e4f288d48" kindref="member">get_diff</ref>();</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(si<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>/=<sp/>1<sp/>-<sp/>si;</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sm-&gt;SetDiffuse(c,<sp/><ref refid="classDag2StdCB_1a3da56e56803e1b3338599a2b5023b0eb" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sm-&gt;SetSpecular(d-&gt;<ref refid="classIDagorMat_1a7bd1940bef3e2436cf26e447e1cbf693" kindref="member">get_spec</ref>(),<sp/><ref refid="classDag2StdCB_1a3da56e56803e1b3338599a2b5023b0eb" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sm-&gt;SetShinStr(1,<sp/><ref refid="classDag2StdCB_1a3da56e56803e1b3338599a2b5023b0eb" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>d-&gt;set_power(<sp/>powf(2.0f,sm-&gt;GetShininess(time)*10.0f)<sp/>*4.0f<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pw<sp/>=<sp/>d-&gt;<ref refid="classIDagorMat_1a915c33b5c5b998e4cb05bebb3770543f" kindref="member">get_power</ref>();</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pw<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pw<sp/>=<sp/>log((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)pw<sp/>/<sp/>4)<sp/>/<sp/>log((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)2)<sp/>/<sp/>10;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sm-&gt;SetShinStr(0,<sp/><ref refid="classDag2StdCB_1a3da56e56803e1b3338599a2b5023b0eb" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sm-&gt;SetShininess(pw,<sp/><ref refid="classDag2StdCB_1a3da56e56803e1b3338599a2b5023b0eb" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Texmap<sp/>*tex<sp/>=<sp/>m-&gt;GetSubTexmap(0);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tex)</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sm-&gt;SetSubTexmap(ID_DI,<sp/>tex);</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;ReleaseInterface(<ref refid="mater_8h_1a36dcaa0c637134b05278e83da132935e" kindref="member">I_DAGORMAT</ref>,<sp/>d);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cm.<ref refid="structCnvMtl_1a8a6a360283dd7988c2e3a4d3ba675166" kindref="member">nm</ref><sp/>=<sp/>newm;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDag2StdCB_1aea94eb1397848c5ce43fef405f848001" kindref="member">mat</ref>.Append(1,<sp/>&amp;cm);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>newm;</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDag2StdCB_1a0986d977895c309dbb655c234b88688a" kindref="member">proc</ref>(INode<sp/>*n)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1854"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/>Mtl<sp/>*m<sp/>=<sp/>n-&gt;GetMtl();</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cnv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m)</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;IsMultiMtl())</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>m-&gt;NumSubMtls();</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*sm<sp/>=<sp/>m-&gt;GetSubMtl(i);</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sm)</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDag2StdCB_1a3e38f5f0453fb22a6936ac04ad4d3f20" kindref="member">conv_mat</ref>(sm))</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;SetSubMtl(i,<sp/>sm);</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnv<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDag2StdCB_1a3e38f5f0453fb22a6936ac04ad4d3f20" kindref="member">conv_mat</ref>(m))</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;SetMtl(m);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnv<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnv)</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;InvalidateWS();</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1888"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a4591d66df3ae6e9bf2465f2c637effcc" kindref="member">DagUtil::dagmat_to_stdmat</ref>()</highlight></codeline>
<codeline lineno="1891"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>)</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><ref refid="classDag2StdCB" kindref="compound">Dag2StdCB</ref><sp/>cb(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>);</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetRootNode(),<sp/>&amp;cb);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime());</highlight></codeline>
<codeline lineno="1897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classdag__auto__ptr" kindref="compound">dag_auto_ptr&lt;Mtl&gt;</ref><sp/><ref refid="util_8cpp_1a6944b0a974ea40dabe5ae4ecaed283e6" kindref="member">MtlPtr</ref>;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;M_STD_STRING&gt;<sp/><ref refid="util_8cpp_1a6ee17e63dcc1de0e21f035f22b7815ab" kindref="member">StrVec</ref>;</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;MtlPtr&gt;<sp/><ref refid="util_8cpp_1a646f865de56f8e0b93270db508c881e0" kindref="member">MtlVec</ref>;</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;M_STD_STRING,<sp/>M_STD_STRING&gt;<sp/><ref refid="util_8cpp_1a0e673fb099db630ac89da5dd6a661e11" kindref="member">StrMap</ref>;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/><ref refid="util_8cpp_1a39c162523fb7477e6e09ff9d6ba06065" kindref="member">CfgReplace</ref>(<ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>str,<sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>dst,<sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>src)</highlight></codeline>
<codeline lineno="1909"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>res;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((pos<sp/>=<sp/>res.find(dst,<sp/>pos))<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/>res.replace(pos,<sp/>dst.length(),<sp/>src);</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/>src.length();</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925" refid="classDag2EnumeratorCB" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classDag2EnumeratorCB" kindref="compound">Dag2EnumeratorCB</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classENodeCB" kindref="compound">ENodeCB</ref></highlight></codeline>
<codeline lineno="1926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a6ee17e63dcc1de0e21f035f22b7815ab" kindref="member">StrVec</ref><sp/><ref refid="classDag2EnumeratorCB_1a59a24513e615463be08622cb6902d660" kindref="member">materials</ref>;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a6ee17e63dcc1de0e21f035f22b7815ab" kindref="member">StrVec</ref><sp/><ref refid="classDag2EnumeratorCB_1ab6a9b19ef674bcf5e6dadaec11d8f2ef" kindref="member">scripts</ref>;</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a0e673fb099db630ac89da5dd6a661e11" kindref="member">StrMap</ref><sp/><ref refid="classDag2EnumeratorCB_1a58d7b92d8f0b4b441868b445801d96a3" kindref="member">mats</ref>;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/>Interface<sp/>*<ref refid="classDag2EnumeratorCB_1a05e4bf22bdf3305300c71969e05c0b09" kindref="member">ip</ref>;</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/>TimeValue<sp/><ref refid="classDag2EnumeratorCB_1a091a74400830c225109bc7251a5bc825" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><ref refid="classDag2EnumeratorCB" kindref="compound">Dag2EnumeratorCB</ref>(Interface<sp/>*iptr)</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDag2EnumeratorCB_1a05e4bf22bdf3305300c71969e05c0b09" kindref="member">ip</ref><sp/>=<sp/>iptr;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDag2EnumeratorCB_1a091a74400830c225109bc7251a5bc825" kindref="member">time</ref><sp/>=<sp/><ref refid="classDag2EnumeratorCB_1a05e4bf22bdf3305300c71969e05c0b09" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><ref refid="classDag2EnumeratorCB_1a361f53a29cba2ec7dfd08abae6bc8708" kindref="member">~Dag2EnumeratorCB</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDag2EnumeratorCB_1aabc11b8b73f6309f6d2f3aa823d638ba" kindref="member">enumerate</ref>(Mtl<sp/>*&amp;m)</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/>Class_ID<sp/>cid<sp/>=<sp/>m-&gt;ClassID();</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid<sp/>==<sp/><ref refid="dagor_8h_1a9ead658a52f6878a9360e47eea9322e2" kindref="member">DagorMat_CID</ref>)</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIDagorMat" kindref="compound">IDagorMat</ref><sp/>*d<sp/>=<sp/>(<ref refid="classIDagorMat" kindref="compound">IDagorMat</ref><sp/>*)m-&gt;GetInterface(<ref refid="mater_8h_1a36dcaa0c637134b05278e83da132935e" kindref="member">I_DAGORMAT</ref>);</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>name<sp/>=<sp/>d-&gt;<ref refid="classIDagorMat_1a41d2a95db7399aa0a504416e5a300c65" kindref="member">get_classname</ref>();</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>script<sp/>=<sp/>d-&gt;<ref refid="classIDagorMat_1ac93f0f9f28724d6ab4ddc83319888a88" kindref="member">get_script</ref>();</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>script<sp/>=<sp/><ref refid="classCfgReader_1a4e8db9c514a510167a0d87959b824748" kindref="member">CfgReader::Replace</ref>(script,<sp/>_T(</highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">),<sp/>_T(</highlight><highlight class="stringliteral">&quot;\\r&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>script<sp/>=<sp/><ref refid="classCfgReader_1a4e8db9c514a510167a0d87959b824748" kindref="member">CfgReader::Replace</ref>(script,<sp/>_T(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">),<sp/>_T(</highlight><highlight class="stringliteral">&quot;\\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDag2EnumeratorCB_1a59a24513e615463be08622cb6902d660" kindref="member">materials</ref>.push_back(name);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDag2EnumeratorCB_1ab6a9b19ef674bcf5e6dadaec11d8f2ef" kindref="member">scripts</ref>.push_back(script);</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>mat;</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>_T(</highlight><highlight class="stringliteral">&quot;cn=\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>name;</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>_T(</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>_T(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>_T(</highlight><highlight class="stringliteral">&quot;sc=\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>script;</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>_T(</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>_T(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDag2EnumeratorCB_1a58d7b92d8f0b4b441868b445801d96a3" kindref="member">mats</ref>.find(mat)<sp/>==<sp/><ref refid="classDag2EnumeratorCB_1a58d7b92d8f0b4b441868b445801d96a3" kindref="member">mats</ref>.end())</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDag2EnumeratorCB_1a58d7b92d8f0b4b441868b445801d96a3" kindref="member">mats</ref>[mat]<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;ok&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1977"><highlight class="comment"></highlight></codeline>
<codeline lineno="1978"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDagorMat<sp/>*d<sp/>=<sp/>(IDagorMat<sp/>*)<sp/>m-&gt;GetInterface(I_DAGORMAT);</highlight></codeline>
<codeline lineno="1979"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>d-&gt;get_classname();</highlight></codeline>
<codeline lineno="1980"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>script<sp/>=<sp/>d-&gt;get_script();</highlight></codeline>
<codeline lineno="1981"><highlight class="comment"></highlight></codeline>
<codeline lineno="1982"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>script<sp/>=<sp/>CfgReader::Replace(script,<sp/>&quot;\r&quot;,<sp/>&quot;\\r&quot;);</highlight></codeline>
<codeline lineno="1983"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>script<sp/>=<sp/>CfgReader::Replace(script,<sp/>&quot;\n&quot;,<sp/>&quot;\\n&quot;);</highlight></codeline>
<codeline lineno="1984"><highlight class="comment"></highlight></codeline>
<codeline lineno="1985"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>materials.push_back(name);</highlight></codeline>
<codeline lineno="1986"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>scripts.push_back(script);</highlight></codeline>
<codeline lineno="1987"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>mat;</highlight></codeline>
<codeline lineno="1988"><highlight class="comment"></highlight></codeline>
<codeline lineno="1989"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>&quot;cn=\&quot;&quot;;</highlight></codeline>
<codeline lineno="1990"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>name;</highlight></codeline>
<codeline lineno="1991"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>&quot;\&quot;&quot;;</highlight></codeline>
<codeline lineno="1992"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>&quot;\n&quot;;</highlight></codeline>
<codeline lineno="1993"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>&quot;sc=\&quot;&quot;;</highlight></codeline>
<codeline lineno="1994"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>script;</highlight></codeline>
<codeline lineno="1995"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>&quot;\&quot;&quot;;</highlight></codeline>
<codeline lineno="1996"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>&quot;\n&quot;;</highlight></codeline>
<codeline lineno="1997"><highlight class="comment"></highlight></codeline>
<codeline lineno="1998"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>mats.find(mat)<sp/>==<sp/>mats.end()<sp/>)</highlight></codeline>
<codeline lineno="1999"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2000"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mats[mat]<sp/>=<sp/>&quot;ok&quot;;</highlight></codeline>
<codeline lineno="2001"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDag2EnumeratorCB_1ab0dd63e3747e4aa77978092e2ce1403f" kindref="member">proc</ref>(INode<sp/>*n)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2007"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/>Mtl<sp/>*m<sp/>=<sp/>n-&gt;GetMtl();</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m)</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;IsMultiMtl())</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>m-&gt;NumSubMtls();</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*sm<sp/>=<sp/>m-&gt;GetSubMtl(i);</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sm)</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDag2EnumeratorCB_1aabc11b8b73f6309f6d2f3aa823d638ba" kindref="member">enumerate</ref>(sm);</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDag2EnumeratorCB_1aabc11b8b73f6309f6d2f3aa823d638ba" kindref="member">enumerate</ref>(m);</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2032"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight></codeline>
<codeline lineno="2034" refid="classDag2UniqueCB" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classDag2UniqueCB" kindref="compound">Dag2UniqueCB</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classENodeCB" kindref="compound">ENodeCB</ref></highlight></codeline>
<codeline lineno="2035"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><ref refid="classCfgShader" kindref="compound">CfgShader</ref><sp/>*<ref refid="classDag2UniqueCB_1ae3e8003cd19383dc8fc77ec2f128f837" kindref="member">cfg</ref>;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/>Tab&lt;Mtl<sp/>*&gt;<sp/><ref refid="classDag2UniqueCB_1a1ec0bd04cd136a2e6fda7bbc21a721f8" kindref="member">mats</ref>;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/>Interface<sp/>*<ref refid="classDag2UniqueCB_1a18f9974ef43d7b252ee36f97d34e55fe" kindref="member">ip</ref>;</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/>TimeValue<sp/><ref refid="classDag2UniqueCB_1a004ed2de623aac001f7db83610a90603" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><ref refid="classDag2UniqueCB" kindref="compound">Dag2UniqueCB</ref>(Interface<sp/>*iptr)</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDag2UniqueCB_1a18f9974ef43d7b252ee36f97d34e55fe" kindref="member">ip</ref><sp/>=<sp/>iptr;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDag2UniqueCB_1a004ed2de623aac001f7db83610a90603" kindref="member">time</ref><sp/>=<sp/><ref refid="classDag2UniqueCB_1a18f9974ef43d7b252ee36f97d34e55fe" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><ref refid="classDag2UniqueCB_1a7115fa4d5af5166ca42487c27bd895c0" kindref="member">~Dag2UniqueCB</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/>Mtl<sp/>*<ref refid="classDag2UniqueCB_1a8aeb84f2437c355d39d5bb5836477eff" kindref="member">unique_mat</ref>(Mtl<sp/>*mf)</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>same<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIDagorMat" kindref="compound">IDagorMat</ref><sp/>*d<sp/>=<sp/>(<ref refid="classIDagorMat" kindref="compound">IDagorMat</ref><sp/>*)mf-&gt;GetInterface(<ref refid="mater_8h_1a36dcaa0c637134b05278e83da132935e" kindref="member">I_DAGORMAT</ref>);</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0;<sp/>pos<sp/>&lt;<sp/><ref refid="classDag2UniqueCB_1a1ec0bd04cd136a2e6fda7bbc21a721f8" kindref="member">mats</ref>.Count();<sp/>pos++)</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIDagorMat" kindref="compound">IDagorMat</ref><sp/>*c<sp/>=<sp/>(<ref refid="classIDagorMat" kindref="compound">IDagorMat</ref><sp/>*)(<ref refid="classDag2UniqueCB_1a1ec0bd04cd136a2e6fda7bbc21a721f8" kindref="member">mats</ref>[pos])-&gt;GetInterface(<ref refid="mater_8h_1a36dcaa0c637134b05278e83da132935e" kindref="member">I_DAGORMAT</ref>);</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="texmaps_8h_1aff91cf36fd3ffe965f4d5e1155bb06f3" kindref="member">NUMTEXMAPS</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>texd<sp/>=<sp/>d-&gt;<ref refid="classIDagorMat_1a26c96873fd833ac5cee96482b6f99383" kindref="member">get_texname</ref>(i)<sp/>?<sp/>d-&gt;<ref refid="classIDagorMat_1a26c96873fd833ac5cee96482b6f99383" kindref="member">get_texname</ref>(i)<sp/>:<sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref>();</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>texc<sp/>=<sp/>c-&gt;<ref refid="classIDagorMat_1a26c96873fd833ac5cee96482b6f99383" kindref="member">get_texname</ref>(i)<sp/>?<sp/>c-&gt;<ref refid="classIDagorMat_1a26c96873fd833ac5cee96482b6f99383" kindref="member">get_texname</ref>(i)<sp/>:<sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref>();</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(texd.compare(texc)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>d-&gt;<ref refid="classIDagorMat_1a527d73c3c814c58c7edb159889577f1d" kindref="member">get_param</ref>(i)<sp/>==<sp/>c-&gt;<ref refid="classIDagorMat_1a527d73c3c814c58c7edb159889577f1d" kindref="member">get_param</ref>(i))</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>same<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>same<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>named<sp/>=<sp/>d-&gt;<ref refid="classIDagorMat_1a41d2a95db7399aa0a504416e5a300c65" kindref="member">get_classname</ref>()<sp/>?<sp/>d-&gt;<ref refid="classIDagorMat_1a41d2a95db7399aa0a504416e5a300c65" kindref="member">get_classname</ref>()<sp/>:<sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref>();</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>namec<sp/>=<sp/>c-&gt;<ref refid="classIDagorMat_1a41d2a95db7399aa0a504416e5a300c65" kindref="member">get_classname</ref>()<sp/>?<sp/>c-&gt;<ref refid="classIDagorMat_1a41d2a95db7399aa0a504416e5a300c65" kindref="member">get_classname</ref>()<sp/>:<sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref>();</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>scriptd<sp/>=<sp/>d-&gt;<ref refid="classIDagorMat_1ac93f0f9f28724d6ab4ddc83319888a88" kindref="member">get_script</ref>()<sp/>?<sp/>d-&gt;<ref refid="classIDagorMat_1ac93f0f9f28724d6ab4ddc83319888a88" kindref="member">get_script</ref>()<sp/>:<sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref>();</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>scriptc<sp/>=<sp/>c-&gt;<ref refid="classIDagorMat_1ac93f0f9f28724d6ab4ddc83319888a88" kindref="member">get_script</ref>()<sp/>?<sp/>c-&gt;<ref refid="classIDagorMat_1ac93f0f9f28724d6ab4ddc83319888a88" kindref="member">get_script</ref>()<sp/>:<sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref>();</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!same)</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="classIDagorMat_1a8d93be97a06dcd377a24e9fa47055d13" kindref="member">get_2sided</ref>()<sp/>==<sp/>c-&gt;<ref refid="classIDagorMat_1a8d93be97a06dcd377a24e9fa47055d13" kindref="member">get_2sided</ref>()<sp/>&amp;&amp;<sp/>d-&gt;<ref refid="classIDagorMat_1a87ba4f21930b96625725ef197be7f358" kindref="member">get_amb</ref>()<sp/>==<sp/>c-&gt;<ref refid="classIDagorMat_1a87ba4f21930b96625725ef197be7f358" kindref="member">get_amb</ref>()<sp/>&amp;&amp;<sp/>named.compare(namec)<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="classIDagorMat_1a619315422c7471fc3865590e4f288d48" kindref="member">get_diff</ref>()<sp/>==<sp/>c-&gt;<ref refid="classIDagorMat_1a619315422c7471fc3865590e4f288d48" kindref="member">get_diff</ref>()<sp/>&amp;&amp;<sp/>d-&gt;<ref refid="classIDagorMat_1a1b3ec43de86ca25d121b61b2ec38d7e4" kindref="member">get_emis</ref>()<sp/>==<sp/>c-&gt;<ref refid="classIDagorMat_1a1b3ec43de86ca25d121b61b2ec38d7e4" kindref="member">get_emis</ref>()<sp/>&amp;&amp;<sp/>scriptd.compare(scriptc)<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="classIDagorMat_1a7bd1940bef3e2436cf26e447e1cbf693" kindref="member">get_spec</ref>()<sp/>==<sp/>d-&gt;<ref refid="classIDagorMat_1a7bd1940bef3e2436cf26e447e1cbf693" kindref="member">get_spec</ref>()<sp/>&amp;&amp;<sp/>(fabs(d-&gt;<ref refid="classIDagorMat_1a915c33b5c5b998e4cb05bebb3770543f" kindref="member">get_power</ref>())<sp/>-<sp/>fabs(c-&gt;<ref refid="classIDagorMat_1a915c33b5c5b998e4cb05bebb3770543f" kindref="member">get_power</ref>()))<sp/>&lt;<sp/>0.000001f)</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDag2UniqueCB_1a1ec0bd04cd136a2e6fda7bbc21a721f8" kindref="member">mats</ref>[pos];</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>same<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDag2UniqueCB_1a1ec0bd04cd136a2e6fda7bbc21a721f8" kindref="member">mats</ref>.Append(1,<sp/>&amp;mf);</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDag2UniqueCB_1a6fffc0a8528ecd25ae1b86a683e0867d" kindref="member">proc</ref>(INode<sp/>*n)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2105"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/>Mtl<sp/>*m<sp/>=<sp/>n-&gt;GetMtl();</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cnv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m)</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;IsMultiMtl())</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>m-&gt;NumSubMtls();</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*sm<sp/>=<sp/>m-&gt;GetSubMtl(i);</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sm)</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*umtl<sp/>=<sp/><ref refid="classDag2UniqueCB_1a8aeb84f2437c355d39d5bb5836477eff" kindref="member">unique_mat</ref>(sm);</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(umtl)</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;SetSubMtl(i,<sp/>umtl);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*umtl<sp/>=<sp/><ref refid="classDag2UniqueCB_1a8aeb84f2437c355d39d5bb5836477eff" kindref="member">unique_mat</ref>(m);</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(umtl)</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;SetMtl(umtl);</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2139"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a0ddaaf012ae2076da5bc08fe5a94be52" kindref="member">collapse_materials</ref>(Interface<sp/>*ip)</highlight></codeline>
<codeline lineno="2142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ip)</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><ref refid="classDag2UniqueCB" kindref="compound">Dag2UniqueCB</ref><sp/>cbv(ip);</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(ip-&gt;GetRootNode(),<sp/>&amp;cbv);</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/>ip-&gt;RedrawViews(ip-&gt;GetTime());</highlight></codeline>
<codeline lineno="2149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight></codeline>
<codeline lineno="2152" refid="classDag2DagCB" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classDag2DagCB" kindref="compound">Dag2DagCB</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classENodeCB" kindref="compound">ENodeCB</ref></highlight></codeline>
<codeline lineno="2153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><ref refid="classCfgShader" kindref="compound">CfgShader</ref><sp/>*<ref refid="classDag2DagCB_1a6f020826cb385e5d12105eef8cb1ffc9" kindref="member">cfg</ref>;</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a0e673fb099db630ac89da5dd6a661e11" kindref="member">StrMap</ref><sp/><ref refid="classDag2DagCB_1aee7078d0a17b101fbabd0bc23fb4c0ce" kindref="member">mats_name</ref>;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a0e673fb099db630ac89da5dd6a661e11" kindref="member">StrMap</ref><sp/><ref refid="classDag2DagCB_1aa4f71a65ac985d79ddc7e258e5f5c346" kindref="member">mats_script</ref>;</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/>Interface<sp/>*<ref refid="classDag2DagCB_1ad6c96bfdccb7cab9764950a90f56183c" kindref="member">ip</ref>;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/>TimeValue<sp/><ref refid="classDag2DagCB_1ad24fb422647ff0bc653e0b5414cf576b" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><ref refid="classDag2DagCB" kindref="compound">Dag2DagCB</ref>(Interface<sp/>*iptr)</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDag2DagCB_1ad6c96bfdccb7cab9764950a90f56183c" kindref="member">ip</ref><sp/>=<sp/>iptr;</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDag2DagCB_1ad24fb422647ff0bc653e0b5414cf576b" kindref="member">time</ref><sp/>=<sp/><ref refid="classDag2DagCB_1ad6c96bfdccb7cab9764950a90f56183c" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/>filename[MAX_PATH];</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCfgShader_1af916040330d237b1f39f398aee636be5" kindref="member">CfgShader::GetCfgFilename</ref>(_T(</highlight><highlight class="stringliteral">&quot;DagorConvert.cfg&quot;</highlight><highlight class="normal">),<sp/>filename);</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDag2DagCB_1a6f020826cb385e5d12105eef8cb1ffc9" kindref="member">cfg</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classCfgShader" kindref="compound">CfgShader</ref>(filename);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDag2DagCB_1a6f020826cb385e5d12105eef8cb1ffc9" kindref="member">cfg</ref>-&gt;<ref refid="classCfgShader_1aee46d6e5791fe688ce137e41351bc9bf" kindref="member">GetShaderNames</ref>();</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0;<sp/>pos<sp/>&lt;<sp/><ref refid="classDag2DagCB_1a6f020826cb385e5d12105eef8cb1ffc9" kindref="member">cfg</ref>-&gt;<ref refid="classCfgShader_1a79f7b001f80f47e919a742c0d5c5737b" kindref="member">shader_names</ref>.size();<sp/>++pos)</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>cn<sp/>=<sp/><ref refid="classDag2DagCB_1a6f020826cb385e5d12105eef8cb1ffc9" kindref="member">cfg</ref>-&gt;<ref refid="classCfgReader_1a50748b567edd53f77e1c7b1ad841fcf9" kindref="member">GetKeyValue</ref>(_T(</highlight><highlight class="stringliteral">&quot;cn&quot;</highlight><highlight class="normal">),<sp/><ref refid="classDag2DagCB_1a6f020826cb385e5d12105eef8cb1ffc9" kindref="member">cfg</ref>-&gt;<ref refid="classCfgShader_1a79f7b001f80f47e919a742c0d5c5737b" kindref="member">shader_names</ref>.at(pos));</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>sc<sp/>=<sp/><ref refid="classDag2DagCB_1a6f020826cb385e5d12105eef8cb1ffc9" kindref="member">cfg</ref>-&gt;<ref refid="classCfgReader_1a50748b567edd53f77e1c7b1ad841fcf9" kindref="member">GetKeyValue</ref>(_T(</highlight><highlight class="stringliteral">&quot;sc&quot;</highlight><highlight class="normal">),<sp/><ref refid="classDag2DagCB_1a6f020826cb385e5d12105eef8cb1ffc9" kindref="member">cfg</ref>-&gt;<ref refid="classCfgShader_1a79f7b001f80f47e919a742c0d5c5737b" kindref="member">shader_names</ref>.at(pos));</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>sh<sp/>=<sp/><ref refid="classDag2DagCB_1a6f020826cb385e5d12105eef8cb1ffc9" kindref="member">cfg</ref>-&gt;<ref refid="classCfgReader_1a50748b567edd53f77e1c7b1ad841fcf9" kindref="member">GetKeyValue</ref>(_T(</highlight><highlight class="stringliteral">&quot;sh&quot;</highlight><highlight class="normal">),<sp/><ref refid="classDag2DagCB_1a6f020826cb385e5d12105eef8cb1ffc9" kindref="member">cfg</ref>-&gt;<ref refid="classCfgShader_1a79f7b001f80f47e919a742c0d5c5737b" kindref="member">shader_names</ref>.at(pos));</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>pm<sp/>=<sp/><ref refid="classDag2DagCB_1a6f020826cb385e5d12105eef8cb1ffc9" kindref="member">cfg</ref>-&gt;<ref refid="classCfgReader_1a50748b567edd53f77e1c7b1ad841fcf9" kindref="member">GetKeyValue</ref>(_T(</highlight><highlight class="stringliteral">&quot;pm&quot;</highlight><highlight class="normal">),<sp/><ref refid="classDag2DagCB_1a6f020826cb385e5d12105eef8cb1ffc9" kindref="member">cfg</ref>-&gt;<ref refid="classCfgShader_1a79f7b001f80f47e919a742c0d5c5737b" kindref="member">shader_names</ref>.at(pos));</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pm<sp/>=<sp/><ref refid="classCfgReader_1a4e8db9c514a510167a0d87959b824748" kindref="member">CfgReader::Replace</ref>(pm,<sp/>_T(</highlight><highlight class="stringliteral">&quot;\\r&quot;</highlight><highlight class="normal">),<sp/>_T(</highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pm<sp/>=<sp/><ref refid="classCfgReader_1a4e8db9c514a510167a0d87959b824748" kindref="member">CfgReader::Replace</ref>(pm,<sp/>_T(</highlight><highlight class="stringliteral">&quot;\\n&quot;</highlight><highlight class="normal">),<sp/>_T(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>mat;</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>cn;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>_T(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>sc;</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDag2DagCB_1aee7078d0a17b101fbabd0bc23fb4c0ce" kindref="member">mats_name</ref>[mat]<sp/>=<sp/>sh;</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDag2DagCB_1aa4f71a65ac985d79ddc7e258e5f5c346" kindref="member">mats_script</ref>[mat]<sp/>=<sp/>pm;</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><ref refid="classDag2DagCB_1a4d92a4947f1b5ae69646baaff0421bc4" kindref="member">~Dag2DagCB</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classDag2DagCB_1a6f020826cb385e5d12105eef8cb1ffc9" kindref="member">cfg</ref>;<sp/>}</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDag2DagCB_1a8b5805a3b79e2b324884c4aac02c86f0" kindref="member">conv_mat</ref>(Mtl<sp/>*&amp;m)</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/>Class_ID<sp/>cid<sp/>=<sp/>m-&gt;ClassID();</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid<sp/>==<sp/><ref refid="dagor_8h_1a9ead658a52f6878a9360e47eea9322e2" kindref="member">DagorMat_CID</ref>)</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIDagorMat" kindref="compound">IDagorMat</ref><sp/>*d<sp/>=<sp/>(<ref refid="classIDagorMat" kindref="compound">IDagorMat</ref><sp/>*)m-&gt;GetInterface(<ref refid="mater_8h_1a36dcaa0c637134b05278e83da132935e" kindref="member">I_DAGORMAT</ref>);</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>cn<sp/>=<sp/>d-&gt;<ref refid="classIDagorMat_1a41d2a95db7399aa0a504416e5a300c65" kindref="member">get_classname</ref>();</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cn<sp/>=<sp/><ref refid="classCfgReader_1aaab34e760450150e8b1a2bd4a3d7b0d4" kindref="member">CfgReader::Remove</ref>(cn,<sp/>_T(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>sc<sp/>=<sp/>d-&gt;<ref refid="classIDagorMat_1ac93f0f9f28724d6ab4ddc83319888a88" kindref="member">get_script</ref>();</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sc<sp/>=<sp/><ref refid="classCfgReader_1a4e8db9c514a510167a0d87959b824748" kindref="member">CfgReader::Replace</ref>(sc,<sp/>_T(</highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">),<sp/>_T(</highlight><highlight class="stringliteral">&quot;\\r&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sc<sp/>=<sp/><ref refid="classCfgReader_1a4e8db9c514a510167a0d87959b824748" kindref="member">CfgReader::Replace</ref>(sc,<sp/>_T(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">),<sp/>_T(</highlight><highlight class="stringliteral">&quot;\\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc<sp/>=<sp/>CfgReader::Remove(sc,<sp/>&quot;<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>mat;</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>cn;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>_T(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>sc;</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDag2DagCB_1aee7078d0a17b101fbabd0bc23fb4c0ce" kindref="member">mats_name</ref>.find(mat)<sp/>!=<sp/><ref refid="classDag2DagCB_1aee7078d0a17b101fbabd0bc23fb4c0ce" kindref="member">mats_name</ref>.end()<sp/>&amp;&amp;<sp/><ref refid="classDag2DagCB_1aa4f71a65ac985d79ddc7e258e5f5c346" kindref="member">mats_script</ref>.find(mat)<sp/>!=<sp/><ref refid="classDag2DagCB_1aa4f71a65ac985d79ddc7e258e5f5c346" kindref="member">mats_script</ref>.end())</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>sh<sp/>=<sp/><ref refid="classDag2DagCB_1aee7078d0a17b101fbabd0bc23fb4c0ce" kindref="member">mats_name</ref>[mat];</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>pm<sp/>=<sp/><ref refid="classDag2DagCB_1aa4f71a65ac985d79ddc7e258e5f5c346" kindref="member">mats_script</ref>[mat];</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="classIDagorMat_1a5ecda33097873e6feb6e22326c1fd482" kindref="member">set_classname</ref>(sh.c_str());</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="classIDagorMat_1ab727afb93e454029978bcec8bbb6f893" kindref="member">set_script</ref>(pm.c_str());</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>else<sp/>debug(&quot;&lt;%s&gt;&quot;,(LPSTR)mat.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDag2DagCB_1a5df50369583ae29cba6d0af8da67b1fe" kindref="member">proc</ref>(INode<sp/>*n)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2230"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/>Mtl<sp/>*m<sp/>=<sp/>n-&gt;GetMtl();</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cnv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m)</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;IsMultiMtl())</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>m-&gt;NumSubMtls();</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*sm<sp/>=<sp/>m-&gt;GetSubMtl(i);</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sm)</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDag2DagCB_1a8b5805a3b79e2b324884c4aac02c86f0" kindref="member">conv_mat</ref>(sm);</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDag2DagCB_1a8b5805a3b79e2b324884c4aac02c86f0" kindref="member">conv_mat</ref>(m);</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2256"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a79164828f4ad9f8021c35b4d3102980d" kindref="member">DagUtil::enumerate</ref>()</highlight></codeline>
<codeline lineno="2259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>)</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><ref refid="classDag2EnumeratorCB" kindref="compound">Dag2EnumeratorCB</ref><sp/>cb(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>);</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetRootNode(),<sp/>&amp;cb);</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime());</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pos<sp/>=<sp/>0;<sp/>pos<sp/>&lt;<sp/>cb.materials.size();<sp/>++pos)</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>str1<sp/>=<sp/>cb.materials.at(pos);</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>str2<sp/>=<sp/>cb.scripts.at(pos);</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/>StrMap::iterator<sp/>itr<sp/>=<sp/>cb.mats.begin();</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/>std::string<sp/>buffer;</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(itr<sp/>!=<sp/>cb.mats.end())</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>index;</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>&lt;&lt;<sp/>pos;</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>index.str();</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/><ref refid="common_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(itr-&gt;first.c_str());</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;sh=\&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;pm=\&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/>itr++;</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/>++pos;</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;d:/materials.txt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;w+t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(buffer.c_str(),<sp/>1,<sp/>buffer.length(),<sp/>f);</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aed5a458133572985ccc7fc10a3159f6b" kindref="member">fclose</ref>(f);</highlight></codeline>
<codeline lineno="2304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ab47a850787899931c916b42155dcc660" kindref="member">DagUtil::collapse</ref>()</highlight></codeline>
<codeline lineno="2307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>)</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><ref refid="classDag2UniqueCB" kindref="compound">Dag2UniqueCB</ref><sp/>cbv(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>);</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetRootNode(),<sp/>&amp;cbv);</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime());</highlight></codeline>
<codeline lineno="2314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a7bd0b9844df8b3729e510c444ad4d5a0" kindref="member">DagUtil::convert</ref>()</highlight></codeline>
<codeline lineno="2317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>)</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><ref refid="classDag2DagCB" kindref="compound">Dag2DagCB</ref><sp/>cbv(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>);</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetRootNode(),<sp/>&amp;cbv);</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime());</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><ref refid="classDag2EnumeratorCB" kindref="compound">Dag2EnumeratorCB</ref><sp/>cb(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>);</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetRootNode(),<sp/>&amp;cb);</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime());</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pos<sp/>=<sp/>0;<sp/>pos<sp/>&lt;<sp/>cb.materials.size();<sp/>++pos)</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>str1<sp/>=<sp/>cb.materials.at(pos);</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/>str2<sp/>=<sp/>cb.scripts.at(pos);</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/>StrMap::iterator<sp/>itr<sp/>=<sp/>cb.mats.begin();</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/>std::string<sp/>buffer;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(itr<sp/>!=<sp/>cb.mats.end())</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>index;</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>&lt;&lt;<sp/>pos;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>index.str();</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/><ref refid="common_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(itr-&gt;first.c_str());</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>+=<sp/>itr-&gt;first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;sh=\&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;pm=\&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/>itr++;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/>++pos;</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;d:/materials_conv.txt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;w+t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(buffer.c_str(),<sp/>1,<sp/>buffer.length(),<sp/>f);</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aed5a458133572985ccc7fc10a3159f6b" kindref="member">fclose</ref>(f);</highlight></codeline>
<codeline lineno="2369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intersects(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box3<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box3<sp/>&amp;b)</highlight></codeline>
<codeline lineno="2374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a.Max().x<sp/>&lt;<sp/>b.Min().x)</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a.Max().y<sp/>&lt;<sp/>b.Min().y)</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a.Max().z<sp/>&lt;<sp/>b.Min().z)</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a.Min().x<sp/>&gt;<sp/>b.Max().x)</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a.Min().y<sp/>&gt;<sp/>b.Max().y)</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a.Min().z<sp/>&gt;<sp/>b.Max().z)</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1aa98691e62c937d288d0a0f025bb9b063" kindref="member">DagUtil::copy_tch_buf</ref>(Mesh<sp/>&amp;m,<sp/><ref refid="structMappingInfo" kindref="compound">MappingInfo</ref><sp/>&amp;mi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="2391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/>mi.<ref refid="structMappingInfo_1a8f1ee9b5a8faa1a3877f2d39d986fd08" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m.mapSupport(c))</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/>mi.<ref refid="structMappingInfo_1a04ab37ddc94f07eb6ffdb77a3f1df16f" kindref="member">tface</ref>.Append(m.getNumFaces(),<sp/>m.mapFaces(c));</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/>mi.<ref refid="structMappingInfo_1a91276dd945820969b0a36808e2bf3ed2" kindref="member">tvert</ref>.Append(m.getNumMapVerts(c),<sp/>m.mapVerts(c));</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a72cbeb7dcfde7d9c0dbf47716833e9a0" kindref="member">DagUtil::paste_tch_buf</ref>(Mesh<sp/>&amp;m,<sp/><ref refid="structMappingInfo" kindref="compound">MappingInfo</ref><sp/>&amp;mi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="2403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi.<ref refid="structMappingInfo_1a04ab37ddc94f07eb6ffdb77a3f1df16f" kindref="member">tface</ref>.Count()<sp/>!=<sp/>m.getNumFaces())</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/>m.setMapSupport(c);</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/>m.setNumMapVerts(c,<sp/>mi.<ref refid="structMappingInfo_1a91276dd945820969b0a36808e2bf3ed2" kindref="member">tvert</ref>.Count());</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/>m.setNumMapFaces(c,<sp/>mi.<ref refid="structMappingInfo_1a04ab37ddc94f07eb6ffdb77a3f1df16f" kindref="member">tface</ref>.Count());</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/>memcpy(m.mapVerts(c),<sp/>&amp;mi.<ref refid="structMappingInfo_1a91276dd945820969b0a36808e2bf3ed2" kindref="member">tvert</ref>[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(UVVert)<sp/>*<sp/>mi.<ref refid="structMappingInfo_1a91276dd945820969b0a36808e2bf3ed2" kindref="member">tvert</ref>.Count());</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/>memcpy(m.mapFaces(c),<sp/>&amp;mi.<ref refid="structMappingInfo_1a04ab37ddc94f07eb6ffdb77a3f1df16f" kindref="member">tface</ref>[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TVFace)<sp/>*<sp/>mi.<ref refid="structMappingInfo_1a04ab37ddc94f07eb6ffdb77a3f1df16f" kindref="member">tface</ref>.Count());</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a1450f7ddd500b592a4bda3ce278be908" kindref="member">numv</ref>;</highlight></codeline>
<codeline lineno="2419"><highlight class="normal">}<sp/>tcinfo[MAX_MESHMAPS];</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a95fb419b334f3f4dbc7558c9b2182a90" kindref="member">DagUtil::copy_tch1</ref>(Mesh<sp/>&amp;m,<sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cd" kindref="member">TCCOPY</ref><sp/>tc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mapa,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sel_faces)</highlight></codeline>
<codeline lineno="2422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if(src&lt;0)<sp/>src=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if(dst&lt;0)<sp/>dst=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if(mapa&lt;0)<sp/>mapa=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tc<sp/>==<sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cdaac7f1f466c04f821a6d54d848d386582" kindref="member">CTC_COPY</ref><sp/>||<sp/>tc<sp/>==<sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cdacbf998ce2debb62087735e02300b67f7" kindref="member">CTC_MOVE</ref>)</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m.mapSupport(src))</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/>m.setMapSupport(dst);</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/>m.setNumMapVerts(dst,<sp/>m.getNumMapVerts(src));</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/>m.setNumMapFaces(dst,<sp/>m.getNumFaces());</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(m.mapVerts(dst),<sp/>m.mapVerts(src),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Point3)<sp/>*<sp/>m.getNumMapVerts(src));</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(m.mapFaces(dst),<sp/>m.mapFaces(src),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TVFace)<sp/>*<sp/>m.getNumFaces());</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tc<sp/>==<sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cdacbf998ce2debb62087735e02300b67f7" kindref="member">CTC_MOVE</ref>)</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.setMapSupport(src,<sp/>FALSE);</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tc<sp/>==<sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda7f6bac6a01e9ec854b01112b8906f4e5" kindref="member">CTC_INFO</ref>)</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_MESHMAPS;<sp/>++i)</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(i))</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tcinfo[i].<ref refid="util_8cpp_1a1450f7ddd500b592a4bda3ce278be908" kindref="member">numv</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tcinfo[i].numv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tcinfo[i].numv<sp/>+=<sp/>m.getNumMapVerts(i);</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tc<sp/>==<sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda169579c80803cf629a8ae059d32bede4" kindref="member">CTC_KILL</ref>)</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/>m.setMapSupport(src,<sp/>FALSE);</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tc<sp/>==<sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cdaece51b55fdec5842d289a4e6eb5c2722" kindref="member">CTC_SWAP</ref>)</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m.mapSupport(src))</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m.mapSupport(dst))</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;TVFace&gt;<sp/>dstfcs;</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/>dstfcs.Append(m.getNumFaces(),<sp/>m.mapFaces(dst));</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;UVVert&gt;<sp/>dstvrts;</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/>dstvrts.Append(m.getNumMapVerts(dst),<sp/>m.mapVerts(dst));</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/>TVFace<sp/>*srctf<sp/>=<sp/>m.mapFaces(src);</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/>m.setNumMapVerts(dst,<sp/>m.getNumMapVerts(src));</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/>m.setNumMapFaces(dst,<sp/>m.getNumFaces());</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(m.mapVerts(dst),<sp/>m.mapVerts(src),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Point3)<sp/>*<sp/>m.getNumMapVerts(src));</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(m.mapFaces(dst),<sp/>m.mapFaces(src),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TVFace)<sp/>*<sp/>m.getNumFaces());</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"></highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/>m.setNumMapVerts(src,<sp/>dstvrts.Count());</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/>m.setNumMapFaces(src,<sp/>dstfcs.Count());</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(m.mapFaces(src),<sp/>&amp;dstfcs[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TVFace)<sp/>*<sp/>m.getNumFaces());</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(m.mapVerts(src),<sp/>&amp;dstvrts[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Point3)<sp/>*<sp/>dstvrts.Count());</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/>src<sp/>=<sp/>mapa;</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m.mapSupport(src))</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;char&gt;<sp/>sv;</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nv<sp/>=<sp/>m.getNumMapVerts(src);</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/>sv.SetCount(nv);</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;sv[0],<sp/>0,<sp/>nv);</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nf<sp/>=<sp/>m.numFaces;</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/>TVFace<sp/>*tf<sp/>=<sp/>m.mapFaces(src);</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nf;<sp/>++i)</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sel_faces<sp/>||<sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m)[i])</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>++j)</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sv[tf[i].t[j]]<sp/>|=<sp/>1;</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>++j)</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sv[tf[i].t[j]]<sp/>|=<sp/>2;</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nv;<sp/>++i)</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sv[i]<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ncv;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;int&gt;<sp/>vmap;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/>vmap.SetCount(nv);</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ncv)</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.setNumMapVerts(src,<sp/>nv<sp/>+<sp/>ncv,<sp/>TRUE);</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>*tv<sp/>=<sp/>m.mapVerts(src);</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>nv;</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nv;<sp/>++i)</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sv[i]<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv[j]<sp/>=<sp/>tv[i];</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vmap[i]<sp/>=<sp/>j++;</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vmap[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nf;<sp/>++i)</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sel_faces<sp/>||<sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m)[i])</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>++j)</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sv[tf[i].t[j]]<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf[i].t[j]<sp/>=<sp/>vmap[tf[i].t[j]];</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;char&gt;<sp/>sv2;</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/>sv2.SetCount(nv<sp/>+<sp/>ncv);</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nv;<sp/>++i)</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sv2[i]<sp/>=<sp/>sv[i];</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ncv;<sp/>++i)</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sv2[nv<sp/>+<sp/>i]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>*tv<sp/>=<sp/>m.mapVerts(src);</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nv<sp/>+<sp/>ncv;<sp/>++i,<sp/>++tv)</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sv2[i]<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tc<sp/>==<sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda98f89288a139bc06fcb9097becbd3079" kindref="member">CTC_MUL</ref>)</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv-&gt;x<sp/>*=<sp/><ref refid="classDagUtil_1abb7193a60436f63f0c5c89e5226647d0" kindref="member">tc_uk</ref>;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv-&gt;y<sp/>*=<sp/><ref refid="classDagUtil_1adfd6c936cbf48d15b9471457570ff962" kindref="member">tc_vk</ref>;</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tc<sp/>==<sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda81217c149dd041a17f347472c1e1764c" kindref="member">CTC_ADD</ref>)</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv-&gt;x<sp/>+=<sp/><ref refid="classDagUtil_1a6896c284484107b020a2a12745bec6d3" kindref="member">tc_uo</ref>;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv-&gt;y<sp/>+=<sp/><ref refid="classDagUtil_1a4ed6af55d1d0bb024e9307213deeaf1e" kindref="member">tc_vo</ref>;</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tc<sp/>==<sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda1b7a0a3abf9ebc0c9ef192d425a8e815" kindref="member">CTC_XCHG</ref>)</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>tv-&gt;x;</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv-&gt;x<sp/>=<sp/>tv-&gt;y;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv-&gt;y<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tc<sp/>==<sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda06b0b74acc368ca1ff86908646edf0cf" kindref="member">CTC_FLIPU</ref>)</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv-&gt;x<sp/>=<sp/>1<sp/>-<sp/>tv-&gt;x;</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tc<sp/>==<sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cdaaf934b294ab2b0d49c2e6945b4acdda6" kindref="member">CTC_FLIPV</ref>)</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv-&gt;y<sp/>=<sp/>1<sp/>-<sp/>tv-&gt;y;</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/>m.InvalidateTopologyCache();</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/>m.InvalidateGeomCache();</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>DagUtil::fix_edgevis(){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update_vars();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TimeValue<sp/>time=ip-&gt;GetTime();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>n=ip-&gt;GetSelNodeCount();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;i&lt;n;++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INode<sp/>*node=ip-&gt;GetSelNode(i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!node)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Object<sp/>*o=node-&gt;GetObjectRef();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!o)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!o-&gt;IsSubClassOf(Class_ID(TRIOBJ_CLASS_ID,0)))<sp/>{continue;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mesh<sp/>&amp;m=((TriObject*)o)-&gt;mesh;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;i&lt;m.numFaces;++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Face<sp/>&amp;f=m.faces[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.flags=(f.flags&amp;~(EDGE_A|EDGE_C))|(f.flags&amp;EDGE_A?EDGE_C:0)|(f.flags&amp;EDGE_C?EDGE_A:0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;RedrawViews(time);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2588"><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"></highlight></codeline>
<codeline lineno="2590"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1aafec27c74203e7f48565c96e4fc43d4c" kindref="member">DagUtil::convertSpacesRecursive</ref>(INode<sp/>*node)</highlight></codeline>
<codeline lineno="2591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetRootNode())<sp/></highlight><highlight class="comment">//<sp/>&apos;Scene<sp/>Root&apos;<sp/>shouldn&apos;t<sp/>be<sp/>exported<sp/>anyway.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TCHAR<sp/>newName[10000];</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/>_tcscpy(newName,<sp/>node-&gt;GetName());</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/>spaces_to_underscores(newName);</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_tcscmp(node-&gt;GetName(),<sp/>newName))</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;SetName(newName);</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childNo<sp/>=<sp/>0;<sp/>childNo<sp/>&lt;<sp/>node-&gt;NumberOfChildren();<sp/>childNo++)</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aafec27c74203e7f48565c96e4fc43d4c" kindref="member">convertSpacesRecursive</ref>(node-&gt;GetChildNode(childNo));</highlight></codeline>
<codeline lineno="2606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"></highlight></codeline>
<codeline lineno="2609"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a6b7ade4b35638758ecb7da00d4b80df5" kindref="member">DagUtil::convertSpaces</ref>()</highlight></codeline>
<codeline lineno="2610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a520e07ac1ad2cb452fe1276be795b0ea" kindref="member">update_vars</ref>();</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1aafec27c74203e7f48565c96e4fc43d4c" kindref="member">convertSpacesRecursive</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetRootNode());</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/>TimeValue<sp/>time<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(time);</highlight></codeline>
<codeline lineno="2615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"></highlight></codeline>
<codeline lineno="2617"><highlight class="normal"></highlight></codeline>
<codeline lineno="2618"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ac20013552f8140a7c83f3ec2b616a704" kindref="member">DagUtil::removeIsolatedVertices</ref>(<ref refid="classTopologyAdapter" kindref="compound">TopologyAdapter</ref><sp/>&amp;adapter)</highlight></codeline>
<codeline lineno="2619"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*isReferencedArray<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">[adapter.<ref refid="classTopologyAdapter_1a74618dd737317e724e6a32909bf9b985" kindref="member">getNumVerts</ref>()];</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*newIndicesArray<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[adapter.<ref refid="classTopologyAdapter_1a74618dd737317e724e6a32909bf9b985" kindref="member">getNumVerts</ref>()];</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/>ZeroMemory(isReferencedArray,<sp/>adapter.<ref refid="classTopologyAdapter_1a74618dd737317e724e6a32909bf9b985" kindref="member">getNumVerts</ref>()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>faceNo<sp/>=<sp/>0;<sp/>faceNo<sp/>&lt;<sp/>adapter.<ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;getNumFaces();<sp/>faceNo++)</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/>isReferencedArray[adapter.<ref refid="classTopologyAdapter_1ac5508a6816cfaa80da161986790dd8f2" kindref="member">getIndex</ref>(faceNo,<sp/>0)]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/>isReferencedArray[adapter.<ref refid="classTopologyAdapter_1ac5508a6816cfaa80da161986790dd8f2" kindref="member">getIndex</ref>(faceNo,<sp/>1)]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/>isReferencedArray[adapter.<ref refid="classTopologyAdapter_1ac5508a6816cfaa80da161986790dd8f2" kindref="member">getIndex</ref>(faceNo,<sp/>2)]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentVertex<sp/>=<sp/>0,<sp/>vertexNo;</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vertexNo<sp/>=<sp/>0;<sp/>vertexNo<sp/>&lt;<sp/>adapter.<ref refid="classTopologyAdapter_1a74618dd737317e724e6a32909bf9b985" kindref="member">getNumVerts</ref>();<sp/>vertexNo++)</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/>adapter.<ref refid="classTopologyAdapter_1a9bc1ce9635db21b7e646cc840b037911" kindref="member">copyVertex</ref>(vertexNo,<sp/>currentVertex);</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/>newIndicesArray[vertexNo]<sp/>=<sp/>currentVertex;</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isReferencedArray[vertexNo])</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentVertex++;</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/>adapter.<ref refid="classTopologyAdapter_1a3e89ed43fbd20e531c7d2bfba5f51724" kindref="member">setNumVerts</ref>(currentVertex);</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adapter.<ref refid="classTopologyAdapter_1a6e20f644fa451516aec7bc9fc0176301" kindref="member">countRemovedVertices</ref>())</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a39f151ad749579b5d5f3e063282bc10d" kindref="member">isolatedVerticesRemovedNum</ref><sp/>+=<sp/>vertexNo<sp/>-<sp/>currentVertex;</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"></highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>faceNo<sp/>=<sp/>0;<sp/>faceNo<sp/>&lt;<sp/>adapter.<ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;getNumFaces();<sp/>faceNo++)</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/>adapter.<ref refid="classTopologyAdapter_1aefd41553d07b99978cf1fcb66c684b95" kindref="member">setIndex</ref>(faceNo,<sp/>0,<sp/>newIndicesArray[adapter.<ref refid="classTopologyAdapter_1ac5508a6816cfaa80da161986790dd8f2" kindref="member">getIndex</ref>(faceNo,<sp/>0)]);</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/>adapter.<ref refid="classTopologyAdapter_1aefd41553d07b99978cf1fcb66c684b95" kindref="member">setIndex</ref>(faceNo,<sp/>1,<sp/>newIndicesArray[adapter.<ref refid="classTopologyAdapter_1ac5508a6816cfaa80da161986790dd8f2" kindref="member">getIndex</ref>(faceNo,<sp/>1)]);</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/>adapter.<ref refid="classTopologyAdapter_1aefd41553d07b99978cf1fcb66c684b95" kindref="member">setIndex</ref>(faceNo,<sp/>2,<sp/>newIndicesArray[adapter.<ref refid="classTopologyAdapter_1ac5508a6816cfaa80da161986790dd8f2" kindref="member">getIndex</ref>(faceNo,<sp/>2)]);</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"></highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>isReferencedArray;</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>newIndicesArray;</highlight></codeline>
<codeline lineno="2650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"></highlight></codeline>
<codeline lineno="2653" refid="classGeometryTopologyAdapter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGeometryTopologyAdapter" kindref="compound">GeometryTopologyAdapter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classTopologyAdapter" kindref="compound">TopologyAdapter</ref></highlight></codeline>
<codeline lineno="2654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><ref refid="classGeometryTopologyAdapter" kindref="compound">GeometryTopologyAdapter</ref>(Mesh<sp/>*in_mesh)<sp/>:<sp/><ref refid="classTopologyAdapter" kindref="compound">TopologyAdapter</ref>(in_mesh)<sp/>{}</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGeometryTopologyAdapter_1a06d15a4cbe4a2aa17b8f03f2bd080485" kindref="member">getNumVerts</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;getNumVerts();<sp/>}</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"></highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGeometryTopologyAdapter_1a26d8f367f13c2370b5e56da03d88fc09" kindref="member">setNumVerts</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_verts)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/><ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;setNumVerts(num_verts,<sp/>TRUE,<sp/>TRUE);<sp/>}</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"></highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGeometryTopologyAdapter_1aa257ab5e1d026608e8192338f71ff47b" kindref="member">getIndex</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face_no,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index_no)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;faces[face_no].v[index_no];<sp/>}</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"></highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGeometryTopologyAdapter_1ab161bd2a64c673b3a192ec0aa5fd5ece" kindref="member">setIndex</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face_no,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index_no,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/><ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;faces[face_no].v[index_no]<sp/>=<sp/>index;<sp/>}</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGeometryTopologyAdapter_1a84310f693f4704b08ad4db6c07df258e" kindref="member">copyVertex</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>from,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/><ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;verts[to]<sp/>=<sp/><ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;verts[from];<sp/>}</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGeometryTopologyAdapter_1adaa71c4dd913c0af27503d1580b4bdc1" kindref="member">countRemovedVertices</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2669"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"></highlight></codeline>
<codeline lineno="2672" refid="classTextureTopologyAdapter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classTextureTopologyAdapter" kindref="compound">TextureTopologyAdapter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classTopologyAdapter" kindref="compound">TopologyAdapter</ref></highlight></codeline>
<codeline lineno="2673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel;</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><ref refid="classTextureTopologyAdapter" kindref="compound">TextureTopologyAdapter</ref>(Mesh<sp/>*in_mesh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch)<sp/>:<sp/><ref refid="classTopologyAdapter" kindref="compound">TopologyAdapter</ref>(in_mesh),<sp/>channel(ch)<sp/>{}</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classTextureTopologyAdapter_1af0b50f9f32c3ab350fdb6255fea5128b" kindref="member">getNumVerts</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;getNumMapVerts(channel);<sp/>}</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTextureTopologyAdapter_1a7cb4931967fbb07d9b4869062a43950e" kindref="member">setNumVerts</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_verts)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/><ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;setNumMapVerts(channel,<sp/>num_verts,<sp/>TRUE);<sp/>}</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"></highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classTextureTopologyAdapter_1af90b025ddaab3caac4cbeb9a5d244b02" kindref="member">getIndex</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face_no,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index_no)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2684"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/>TVFace<sp/>*tvFace<sp/>=<sp/><ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;mapFaces(channel);</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(tvFace);</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tvFace[face_no].t[index_no];</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTextureTopologyAdapter_1a6736109d2f7b55cb3cc3f6d53025e586" kindref="member">setIndex</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face_no,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index_no,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2691"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/>TVFace<sp/>*tvFace<sp/>=<sp/><ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;mapFaces(channel);</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(tvFace);</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/>tvFace[face_no].t[index_no]<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTextureTopologyAdapter_1acf8a5d72e6e1d327ed08cd60bf9d162d" kindref="member">copyVertex</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>from,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2698"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/>TVFace<sp/>*tvFace<sp/>=<sp/><ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;mapFaces(channel);</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(tvFace);</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/>tvFace[to]<sp/>=<sp/>tvFace[from];</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2703"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"></highlight></codeline>
<codeline lineno="2705"><highlight class="normal"></highlight></codeline>
<codeline lineno="2706" refid="classColorTopologyAdapter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classColorTopologyAdapter" kindref="compound">ColorTopologyAdapter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classTopologyAdapter" kindref="compound">TopologyAdapter</ref></highlight></codeline>
<codeline lineno="2707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><ref refid="classColorTopologyAdapter" kindref="compound">ColorTopologyAdapter</ref>(Mesh<sp/>*in_mesh)<sp/>:<sp/><ref refid="classTopologyAdapter" kindref="compound">TopologyAdapter</ref>(in_mesh)<sp/>{}</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classColorTopologyAdapter_1ae43a935c133c2da81d1ed609649fea3d" kindref="member">getNumVerts</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;getNumVertCol();<sp/>}</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classColorTopologyAdapter_1a30b218695434af72c2e68ca0eb039cd9" kindref="member">setNumVerts</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_verts)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/><ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;setNumVertCol(num_verts,<sp/>TRUE);<sp/>}</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"></highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classColorTopologyAdapter_1a36930688d92f9697c820453a156067e8" kindref="member">getIndex</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face_no,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index_no)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;vcFace[face_no].t[index_no];<sp/>}</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classColorTopologyAdapter_1ae9c548e9855d6ee610d9ade553fc83da" kindref="member">setIndex</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face_no,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index_no,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2718"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;vcFace[face_no].t[index_no]<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"></highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classColorTopologyAdapter_1a10b6148fa8691f77f2329f87d7acf933" kindref="member">copyVertex</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>from,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/><ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;vertCol[to]<sp/>=<sp/><ref refid="classTopologyAdapter_1a4b911200f72e8750549aeed13616caaa" kindref="member">mesh</ref>-&gt;vertCol[from];<sp/>}</highlight></codeline>
<codeline lineno="2723"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"></highlight></codeline>
<codeline lineno="2725"><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1acc7a46a4e547cc7a75f86793aec71e33" kindref="member">DagUtil::isDegenerate</ref>(Mesh<sp/>*mesh,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face_no,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Matrix3<sp/>&amp;otm)</highlight></codeline>
<codeline lineno="2727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/>Point3<sp/>vertex1<sp/>=<sp/>mesh-&gt;verts[mesh-&gt;faces[face_no].v[0]]<sp/>*<sp/>otm;</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/>Point3<sp/>vertex2<sp/>=<sp/>mesh-&gt;verts[mesh-&gt;faces[face_no].v[1]]<sp/>*<sp/>otm;</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/>Point3<sp/>vertex3<sp/>=<sp/>mesh-&gt;verts[mesh-&gt;faces[face_no].v[2]]<sp/>*<sp/>otm;</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"></highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dagor_8h_1aa0d2949c6948162a2012fad86d181f69" kindref="member">is_equal_point</ref>(vertex1,<sp/>vertex2,<sp/><ref refid="dagor_8h_1acd02686cc7a7382c7c98ac719753ba8e" kindref="member">DEGENERATE_VERTEX_DELTA</ref>))</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"></highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dagor_8h_1aa0d2949c6948162a2012fad86d181f69" kindref="member">is_equal_point</ref>(vertex1,<sp/>vertex3,<sp/><ref refid="dagor_8h_1acd02686cc7a7382c7c98ac719753ba8e" kindref="member">DEGENERATE_VERTEX_DELTA</ref>))</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"></highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dagor_8h_1aa0d2949c6948162a2012fad86d181f69" kindref="member">is_equal_point</ref>(vertex2,<sp/>vertex3,<sp/><ref refid="dagor_8h_1acd02686cc7a7382c7c98ac719753ba8e" kindref="member">DEGENERATE_VERTEX_DELTA</ref>))</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"></highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/>Point3<sp/>diff<sp/>=<sp/>vertex3<sp/>-<sp/>vertex1;</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/>Point3<sp/>dir<sp/>=<sp/>vertex2<sp/>-<sp/>vertex1;</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sqrlen<sp/>=<sp/>dir.LengthSquared();</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>DotProd(diff,<sp/>dir)<sp/>/<sp/>sqrlen;</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/>diff<sp/>-=<sp/>t<sp/>*<sp/>dir;</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>linedist<sp/>=<sp/>diff.Length();</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linedist<sp/>&lt;<sp/><ref refid="dagor_8h_1acd02686cc7a7382c7c98ac719753ba8e" kindref="member">DEGENERATE_VERTEX_DELTA</ref>)</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"></highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"></highlight></codeline>
<codeline lineno="2754"><highlight class="normal"></highlight></codeline>
<codeline lineno="2755"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a710196096ea17f8b5e1e93e14d8af1ee" kindref="member">DagUtil::removeDegeneratesRecursive</ref>(INode<sp/>*node)</highlight></codeline>
<codeline lineno="2756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"></highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/>ObjectState<sp/>state<sp/>=<sp/>node-&gt;EvalWorldState(0);</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.obj<sp/>&amp;&amp;<sp/>!node-&gt;IsNodeHidden())</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/>TriObject<sp/>*triObject<sp/>=<sp/>(TriObject<sp/>*)state.obj-&gt;ConvertToType(0,<sp/>Class_ID(TRIOBJ_CLASS_ID,<sp/>0));</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(triObject<sp/>&amp;&amp;<sp/>triObject<sp/>==<sp/>state.obj)</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1ac8df8719fcdc99003a40487f66555504" kindref="member">editableMeshFound</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Mesh<sp/>*mesh<sp/>=<sp/>&amp;triObject-&gt;GetMesh();</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TimeValue<sp/>time<sp/>=<sp/>GetCOREInterface()-&gt;GetTime();</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"></highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Matrix3<sp/>otm;</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>otm<sp/>=<sp/><ref refid="util_8cpp_1a62bd0983642b5aa1bfeb95655f4272b3" kindref="member">get_scaled_object_tm</ref>(node,<sp/>time);</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>otm<sp/>=<sp/>otm<sp/>*<sp/>Inverse(<ref refid="util_8cpp_1a0ab0a5c17c8fed4cac0335e19af84ef7" kindref="member">get_scaled_stretch_node_tm</ref>(node,<sp/>time));</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R24)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>otm<sp/>*=<sp/>(float)GetSystemUnitScale(UNITS_METERS);</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>otm<sp/>*=<sp/>(float)GetMasterScale(UNITS_METERS);</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2780"><highlight class="normal"></highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>degenerate<sp/>faces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>faceNo<sp/>=<sp/>0;<sp/>faceNo<sp/>&lt;<sp/>mesh-&gt;getNumFaces();<sp/>faceNo++)</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1acc7a46a4e547cc7a75f86793aec71e33" kindref="member">isDegenerate</ref>(mesh,<sp/>faceNo,<sp/>otm))</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a92ecfdfc480caa154bfacf94114070fb" kindref="member">degenerateFacesRemovedNum</ref>++;</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>faceToCopyNo<sp/>=<sp/>faceNo<sp/>+<sp/>1;<sp/>faceToCopyNo<sp/>&lt;<sp/>mesh-&gt;getNumFaces();<sp/>faceToCopyNo++)</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh-&gt;faces[faceToCopyNo<sp/>-<sp/>1]<sp/>=<sp/>mesh-&gt;faces[faceToCopyNo];</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh-&gt;vcFace)</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh-&gt;vcFace[faceToCopyNo<sp/>-<sp/>1]<sp/>=<sp/>mesh-&gt;vcFace[faceToCopyNo];</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"></highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>MAX_MESHMAPS;<sp/>++ch)</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mesh-&gt;mapSupport(ch))</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVFace<sp/>*tf<sp/>=<sp/>mesh-&gt;mapFaces(ch);</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tf)</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf[faceToCopyNo<sp/>-<sp/>1]<sp/>=<sp/>tf[faceToCopyNo];</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh-&gt;setNumFaces(mesh-&gt;getNumFaces()<sp/>-<sp/>1,<sp/>TRUE,<sp/>TRUE);</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>faceNo--;</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"></highlight></codeline>
<codeline lineno="2809"><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>isolated<sp/>vertices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2811"><highlight class="normal"></highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometryTopologyAdapter" kindref="compound">GeometryTopologyAdapter</ref><sp/>gta(mesh);</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1ac20013552f8140a7c83f3ec2b616a704" kindref="member">removeIsolatedVertices</ref>(gta);</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>for<sp/>(<sp/>int<sp/>ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>MAX_MESHMAPS;<sp/>++ch<sp/>)</highlight></codeline>
<codeline lineno="2818"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2819"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>!<sp/>mesh-&gt;mapSupport<sp/>(ch)<sp/>||<sp/>!<sp/><sp/>mesh-&gt;mapFaces<sp/>(ch)<sp/>)</highlight></codeline>
<codeline lineno="2820"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;</highlight></codeline>
<codeline lineno="2821"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>removeIsolatedVertices(TextureTopologyAdapter(mesh,<sp/>ch));</highlight></codeline>
<codeline lineno="2822"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2823"><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh-&gt;vertCol)</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classColorTopologyAdapter" kindref="compound">ColorTopologyAdapter</ref><sp/>cta(mesh);</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1ac20013552f8140a7c83f3ec2b616a704" kindref="member">removeIsolatedVertices</ref>(cta);</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"></highlight></codeline>
<codeline lineno="2830"><highlight class="normal"></highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Updates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"></highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh-&gt;InvalidateGeomCache();</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh-&gt;InvalidateTopologyCache();</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triObject-&gt;NotifyDependents(FOREVER,<sp/>PART_ALL,<sp/>REFMSG_CHANGE);</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triObject-&gt;NotifyDependents(FOREVER,<sp/>0,<sp/>REFMSG_SUBANIM_STRUCTURE_CHANGED);</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"></highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;NotifyDependents(FOREVER,<sp/>PART_ALL,<sp/>REFMSG_CHANGE);</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;NotifyDependents(FOREVER,<sp/>0,<sp/>REFMSG_SUBANIM_STRUCTURE_CHANGED);</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"></highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(triObject<sp/>&amp;&amp;<sp/>triObject<sp/>!=<sp/>state.obj)</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>triObject;</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"></highlight></codeline>
<codeline lineno="2847"><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childNo<sp/>=<sp/>0;<sp/>childNo<sp/>&lt;<sp/>node-&gt;NumberOfChildren();<sp/>childNo++)</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a710196096ea17f8b5e1e93e14d8af1ee" kindref="member">removeDegeneratesRecursive</ref>(node-&gt;GetChildNode(childNo));</highlight></codeline>
<codeline lineno="2850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"></highlight></codeline>
<codeline lineno="2852"><highlight class="normal"></highlight></codeline>
<codeline lineno="2853"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a7b4066d556ffb30fca33eea6fc85e463" kindref="member">DagUtil::removeDegenerates</ref>()</highlight></codeline>
<codeline lineno="2854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a520e07ac1ad2cb452fe1276be795b0ea" kindref="member">update_vars</ref>();</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1ac8df8719fcdc99003a40487f66555504" kindref="member">editableMeshFound</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a92ecfdfc480caa154bfacf94114070fb" kindref="member">degenerateFacesRemovedNum</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a39f151ad749579b5d5f3e063282bc10d" kindref="member">isolatedVerticesRemovedNum</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a710196096ea17f8b5e1e93e14d8af1ee" kindref="member">removeDegeneratesRecursive</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetRootNode());</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/>TimeValue<sp/>time<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(time);</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classDagUtil_1ac8df8719fcdc99003a40487f66555504" kindref="member">editableMeshFound</ref>)</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/>MessageBox(<ref refid="classDagUtil_1a23b6af4d2b4f8d32a5ba62a7dac07043" kindref="member">dagorUtilRoll</ref>,<sp/>_T(</highlight><highlight class="stringliteral">&quot;No<sp/>editable<sp/>mesh<sp/>found.&quot;</highlight><highlight class="normal">),<sp/>_T(</highlight><highlight class="stringliteral">&quot;Remove<sp/>degenerates&quot;</highlight><highlight class="normal">),<sp/>MB_ICONWARNING);</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/>str[1000];</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/>_stprintf(str,<sp/>_T(</highlight><highlight class="stringliteral">&quot;%d<sp/>faces<sp/>and<sp/>%d<sp/>vertices<sp/>removed.&quot;</highlight><highlight class="normal">),<sp/><ref refid="classDagUtil_1a92ecfdfc480caa154bfacf94114070fb" kindref="member">degenerateFacesRemovedNum</ref>,<sp/><ref refid="classDagUtil_1a39f151ad749579b5d5f3e063282bc10d" kindref="member">isolatedVerticesRemovedNum</ref>);</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/>MessageBox(<ref refid="classDagUtil_1a23b6af4d2b4f8d32a5ba62a7dac07043" kindref="member">dagorUtilRoll</ref>,<sp/>str,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Remove<sp/>degenerates&quot;</highlight><highlight class="normal">),<sp/>MB_OK);</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"></highlight></codeline>
<codeline lineno="2874"><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ac7ec51c38cacb1f0df8dc054c990a1ae" kindref="member">DagUtil::selectFloorFaces</ref>()</highlight></codeline>
<codeline lineno="2876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/>TimeValue<sp/>time<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"></highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNodeCount();</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/>INode<sp/>*node<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNode(i);</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/>Object<sp/>*o<sp/>=<sp/>node-&gt;GetObjectRef();</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o)</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o-&gt;IsSubClassOf(Class_ID(TRIOBJ_CLASS_ID,<sp/>0)))</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"></highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix3<sp/>wtm<sp/>=<sp/>node-&gt;GetObjectTM(time);</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>flip<sp/>=<sp/>wtm.Parity();</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"></highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/>Mesh<sp/>&amp;m<sp/>=<sp/>((TriObject<sp/>*)o)-&gt;mesh;</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).SetSize(m.numFaces);</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fi<sp/>=<sp/>0;<sp/>fi<sp/>&lt;<sp/>m.numFaces;<sp/>++fi)</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Face<sp/>&amp;f<sp/>=<sp/>m.faces[fi];</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>v0<sp/>=<sp/>m.verts[f.v[0]]<sp/>*<sp/>wtm;</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>v1<sp/>=<sp/>m.verts[f.v[1]]<sp/>*<sp/>wtm;</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>v2<sp/>=<sp/>m.verts[f.v[2]]<sp/>*<sp/>wtm;</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>normal<sp/>=<sp/>Normalize(CrossProd(v1<sp/>-<sp/>v0,<sp/>v2<sp/>-<sp/>v0));</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flip)</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normal<sp/>=<sp/>-normal;</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).Set(fi,<sp/>((normal.z<sp/>&gt;=<sp/>0.02f)<sp/>?<sp/>1<sp/>:<sp/>0));</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"></highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(time);</highlight></codeline>
<codeline lineno="2911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"></highlight></codeline>
<codeline lineno="2913"><highlight class="normal"></highlight></codeline>
<codeline lineno="2914"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a2c7206a130ff6b0b24aeffcfdce3c187" kindref="member">DagUtil::copy_tch</ref>()</highlight></codeline>
<codeline lineno="2915"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a520e07ac1ad2cb452fe1276be795b0ea" kindref="member">update_vars</ref>();</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/>TimeValue<sp/>time<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNodeCount();</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/>INode<sp/>*node<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNode(i);</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/>Object<sp/>*o<sp/>=<sp/>node-&gt;GetObjectRef();</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o)</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o-&gt;IsSubClassOf(Class_ID(TRIOBJ_CLASS_ID,<sp/>0)))</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a25955b2e7ac9536d2446174b46e68a60" kindref="member">tc_srcch</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classDagUtil_1aa98691e62c937d288d0a0f025bb9b063" kindref="member">copy_tch_buf</ref>(((TriObject<sp/>*)o)-&gt;mesh,<sp/><ref refid="classDagUtil_1a975c3e349c83b530a3a7b7be6c50bbbd" kindref="member">chanelbuf</ref>[<ref refid="classDagUtil_1a25955b2e7ac9536d2446174b46e68a60" kindref="member">tc_srcch</ref>],<sp/><ref refid="classDagUtil_1a25955b2e7ac9536d2446174b46e68a60" kindref="member">tc_srcch</ref>))</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>s;</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.printf(_T(</highlight><highlight class="stringliteral">&quot;Map<sp/>not<sp/>support&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(s);</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>s;</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.printf(_T(</highlight><highlight class="stringliteral">&quot;Map<sp/>chanel<sp/>%d<sp/>was<sp/>copied&quot;</highlight><highlight class="normal">),<sp/><ref refid="classDagUtil_1a25955b2e7ac9536d2446174b46e68a60" kindref="member">tc_srcch</ref>);</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(s);</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>MAX_MESHMAPS;<sp/>++mi)</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aa98691e62c937d288d0a0f025bb9b063" kindref="member">copy_tch_buf</ref>(((TriObject<sp/>*)o)-&gt;mesh,<sp/><ref refid="classDagUtil_1a975c3e349c83b530a3a7b7be6c50bbbd" kindref="member">chanelbuf</ref>[mi],<sp/>mi);</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>s;</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.printf(_T(</highlight><highlight class="stringliteral">&quot;Map<sp/>chanels<sp/>were<sp/>copied&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(s);</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(time);</highlight></codeline>
<codeline lineno="2962"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ada57766efcb08d8d336fc68f08d7a0be" kindref="member">DagUtil::paste_tch</ref>()</highlight></codeline>
<codeline lineno="2965"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a520e07ac1ad2cb452fe1276be795b0ea" kindref="member">update_vars</ref>();</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/>TimeValue<sp/>time<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNodeCount();</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/>INode<sp/>*node<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNode(i);</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/>Object<sp/>*o<sp/>=<sp/>node-&gt;GetObjectRef();</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o)</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o-&gt;IsSubClassOf(Class_ID(TRIOBJ_CLASS_ID,<sp/>0)))</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a55a9dea68ff6337ddc5b93d8a106b654" kindref="member">tc_dstch</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classDagUtil_1a72cbeb7dcfde7d9c0dbf47716833e9a0" kindref="member">paste_tch_buf</ref>(((TriObject<sp/>*)o)-&gt;mesh,<sp/><ref refid="classDagUtil_1a975c3e349c83b530a3a7b7be6c50bbbd" kindref="member">chanelbuf</ref>[<ref refid="classDagUtil_1a25955b2e7ac9536d2446174b46e68a60" kindref="member">tc_srcch</ref>],<sp/><ref refid="classDagUtil_1a55a9dea68ff6337ddc5b93d8a106b654" kindref="member">tc_dstch</ref>))</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>s;</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.printf(_T(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>face<sp/>count&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(s);</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>s;</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.printf(_T(</highlight><highlight class="stringliteral">&quot;Map<sp/>chanel<sp/>%d<sp/>was<sp/>pasted<sp/>into<sp/>map<sp/>chanel<sp/>%d&quot;</highlight><highlight class="normal">),<sp/><ref refid="classDagUtil_1a25955b2e7ac9536d2446174b46e68a60" kindref="member">tc_srcch</ref>,<sp/><ref refid="classDagUtil_1a55a9dea68ff6337ddc5b93d8a106b654" kindref="member">tc_dstch</ref>);</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(s);</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>MAX_MESHMAPS;<sp/>++mi)</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>res<sp/>|<sp/><ref refid="classDagUtil_1a72cbeb7dcfde7d9c0dbf47716833e9a0" kindref="member">paste_tch_buf</ref>(((TriObject<sp/>*)o)-&gt;mesh,<sp/><ref refid="classDagUtil_1a975c3e349c83b530a3a7b7be6c50bbbd" kindref="member">chanelbuf</ref>[mi],<sp/>mi);</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!res)</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>s;</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.printf(_T(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>face<sp/>count&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(s);</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>s;</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.printf(_T(</highlight><highlight class="stringliteral">&quot;Some<sp/>map<sp/>chanels<sp/>were<sp/>pasted&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(s);</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(time);</highlight></codeline>
<codeline lineno="3019"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"></highlight></codeline>
<codeline lineno="3021"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a2c7206a130ff6b0b24aeffcfdce3c187" kindref="member">DagUtil::copy_tch</ref>(<ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cd" kindref="member">TCCOPY</ref><sp/>tc)</highlight></codeline>
<codeline lineno="3022"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a520e07ac1ad2cb452fe1276be795b0ea" kindref="member">update_vars</ref>();</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/>TimeValue<sp/>time<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNodeCount();</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>n<sp/>?<sp/>true<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tc<sp/>==<sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda7f6bac6a01e9ec854b01112b8906f4e5" kindref="member">CTC_INFO</ref>)</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_MESHMAPS;<sp/>++i)</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tcinfo[i].<ref refid="util_8cpp_1a1450f7ddd500b592a4bda3ce278be908" kindref="member">numv</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/>INode<sp/>*node<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNode(i);</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/>Object<sp/>*o<sp/>=<sp/>node-&gt;GetObjectRef();</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o)</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o-&gt;IsSubClassOf(Class_ID(TRIOBJ_CLASS_ID,<sp/>0)))</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(<ref refid="classDagUtil_1a95fb419b334f3f4dbc7558c9b2182a90" kindref="member">copy_tch1</ref>(((TriObject<sp/>*)o)-&gt;mesh,<sp/>tc,<sp/><ref refid="classDagUtil_1a25955b2e7ac9536d2446174b46e68a60" kindref="member">tc_srcch</ref>,<sp/><ref refid="classDagUtil_1a55a9dea68ff6337ddc5b93d8a106b654" kindref="member">tc_dstch</ref>,<sp/><ref refid="classDagUtil_1a36a91243a298d6ab5d2615afe9098987" kindref="member">tc_mapach</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(<ref refid="classDagUtil_1a19aea3e937d48fb37fedabb9b9ca7175" kindref="member">tc_facesel</ref><sp/>!=<sp/>0))<sp/>&amp;&amp;<sp/>result);</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(time);</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result)</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nr<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/>TSTR<sp/>s;</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/>s.printf(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a5fe0879c44e5a26cfe6b7788b1f6f1e6" kindref="member">IDS_MAPOP_PERFORMED</ref>),<sp/>nr);</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(s);</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"></highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tc<sp/>==<sp/><ref refid="util_8cpp_1ad88c295d5fb3ee45822ada5de1c4b5cda7f6bac6a01e9ec854b01112b8906f4e5" kindref="member">CTC_INFO</ref>)</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>buf<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_MESHMAPS;<sp/>++i)</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tcinfo[i].<ref refid="util_8cpp_1a1450f7ddd500b592a4bda3ce278be908" kindref="member">numv</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>s;</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.printf(_T(</highlight><highlight class="stringliteral">&quot;#%d:<sp/>%d<sp/>verts\r\n&quot;</highlight><highlight class="normal">),<sp/>i,<sp/>tcinfo[i].<ref refid="util_8cpp_1a1450f7ddd500b592a4bda3ce278be908" kindref="member">numv</ref>);</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>+=<sp/>s;</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MessageBox(<ref refid="classDagUtil_1a9dbda3977a56beafd8edaa4ea4a8f44d" kindref="member">uvUtilsRoll</ref>,<sp/>buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;TC<sp/>Info&quot;</highlight><highlight class="normal">),<sp/>MB_OK);</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nr<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/>TSTR<sp/>s;</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/>s.printf(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1afabdfa871384a884d5ed32544075773a" kindref="member">IDS_MAPOP_NOTPERFORMED</ref>),<sp/>nr);</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(s);</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3077"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"></highlight></codeline>
<codeline lineno="3079"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a49610e902d1af6ae3c9bff2100286682" kindref="member">DagUtil::select_face</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vert)</highlight></codeline>
<codeline lineno="3080"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a520e07ac1ad2cb452fe1276be795b0ea" kindref="member">update_vars</ref>();</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/>TimeValue<sp/>time<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNodeCount()<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1aeb25f666ad209c4102ae5e84880444b0" kindref="member">IDS_SEL_1_OBJ</ref>));</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/>INode<sp/>*node<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNode(0);</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/>Object<sp/>*o<sp/>=<sp/>node-&gt;GetObjectRef();</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o)</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o-&gt;IsSubClassOf(Class_ID(TRIOBJ_CLASS_ID,<sp/>0)))</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1ade87a2f7b65b0f3f90bddd34e725aa6b" kindref="member">IDS_MUST_BE_EDMESH</ref>));</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/>Mesh<sp/>&amp;m<sp/>=<sp/>((TriObject<sp/>*)o)-&gt;mesh;</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vert)</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1a6c961322e67a5db9a7b732efae8e0c0d" kindref="member">mesh_vert_sel</ref>(m).ClearAll();</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a58eabd9b0ba02e0c475c6a6f88afa64f" kindref="member">sel_fid</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="classDagUtil_1a58eabd9b0ba02e0c475c6a6f88afa64f" kindref="member">sel_fid</ref><sp/>&lt;<sp/>m.numVerts)</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1a6c961322e67a5db9a7b732efae8e0c0d" kindref="member">mesh_vert_sel</ref>(m).Set(<ref refid="classDagUtil_1a58eabd9b0ba02e0c475c6a6f88afa64f" kindref="member">sel_fid</ref>);</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).ClearAll();</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a58eabd9b0ba02e0c475c6a6f88afa64f" kindref="member">sel_fid</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="classDagUtil_1a58eabd9b0ba02e0c475c6a6f88afa64f" kindref="member">sel_fid</ref><sp/>&lt;<sp/>m.numFaces)</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).Set(<ref refid="classDagUtil_1a58eabd9b0ba02e0c475c6a6f88afa64f" kindref="member">sel_fid</ref>);</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/>node-&gt;InvalidateWS();</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(time);</highlight></codeline>
<codeline lineno="3114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"></highlight></codeline>
<codeline lineno="3116" refid="classMultiBooleanCB" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMultiBooleanCB" kindref="compound">MultiBooleanCB</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classENodeCB" kindref="compound">ENodeCB</ref></highlight></codeline>
<codeline lineno="3117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/>Interface<sp/>*<ref refid="classMultiBooleanCB_1aed2f9d269042589eef40023ccab53cc1" kindref="member">ip</ref>;</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/>Tab&lt;INode<sp/>*&gt;<sp/><ref refid="classMultiBooleanCB_1a54901634640e4321f851438ebb994bc0" kindref="member">nodes</ref>;</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><ref refid="classMultiBooleanCB" kindref="compound">MultiBooleanCB</ref>(Interface<sp/>*iptr)<sp/>{<sp/><ref refid="classMultiBooleanCB_1aed2f9d269042589eef40023ccab53cc1" kindref="member">ip</ref><sp/>=<sp/>iptr;<sp/>}</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classMultiBooleanCB_1a5824cdb28f712607af837ea8d45e50da" kindref="member">add</ref>(MNMesh<sp/>&amp;to,<sp/>MNMesh<sp/>&amp;from,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inst)</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(tm1)<sp/>to.Transform(*tm1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(tm2)<sp/>from.Transform(*tm2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/>to.PrepForBoolean();</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/>from.PrepForBoolean();</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/>MNMesh<sp/>m3;</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m3.MakeBoolean(to,<sp/>from,<sp/>MESHBOOL_UNION,<sp/>NULL))</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(inst){to=m3;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/>m3.selLevel<sp/>=<sp/>MNM_SL_FACE;</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/>BitArray<sp/>selected(m3.numf);</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/>selected.ClearAll();</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/>m3.ElementFromFace(0,<sp/>selected);</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm<sp/>=<sp/>selected.NumberSet();</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;%d<sp/>%d&quot;,nm,m3.numf);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nm<sp/>!=<sp/>m3.numf)</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inst)</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>=<sp/>m3;</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/>to<sp/>=<sp/>m3;</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMultiBooleanCB_1ab5e63d3bd32d877058b5a1ca4fe2c000" kindref="member">adjust_matrix</ref>(Matrix3<sp/>&amp;m,<sp/>Mesh<sp/>&amp;me)</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.Parity())</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>me.getNumFaces();<sp/>++i)</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>me.faces[i].v[2];</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me.faces[i].v[2]<sp/>=<sp/>me.faces[i].v[1];</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me.faces[i].v[1]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*bool<sp/>intersects(MNMesh<sp/>&amp;from,MNMesh<sp/>&amp;to){</highlight></codeline>
<codeline lineno="3162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to.PrepForBoolean();</highlight></codeline>
<codeline lineno="3163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from.PrepForBoolean();</highlight></codeline>
<codeline lineno="3164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MNMesh<sp/>m3;</highlight></codeline>
<codeline lineno="3165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!m3.MakeBoolean(to,<sp/>from,<sp/>MESHBOOL_UNION,<sp/>NULL))<sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="3166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m3.selLevel=MNM_SL_FACE;</highlight></codeline>
<codeline lineno="3167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BitArray<sp/>selected(m3.numf);</highlight></codeline>
<codeline lineno="3168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected.ClearAll();</highlight></codeline>
<codeline lineno="3169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m3.ElementFromFace(0,selected);</highlight></codeline>
<codeline lineno="3170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>nm=selected.NumberSet();</highlight></codeline>
<codeline lineno="3171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug(&quot;%d<sp/>%d&quot;,nm,m3.numf);</highlight></codeline>
<codeline lineno="3172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(nm!=m3.numf)<sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="3173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="3174"><highlight class="comment"><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMultiBooleanCB_1a80356856afa936f9de002c7f14686306" kindref="member">boolean</ref>()</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classMultiBooleanCB_1a54901634640e4321f851438ebb994bc0" kindref="member">nodes</ref>.Count()<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sort_ip=ip;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"></highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/>Object<sp/>*obj<sp/>=<sp/><ref refid="classMultiBooleanCB_1a54901634640e4321f851438ebb994bc0" kindref="member">nodes</ref>[0]-&gt;EvalWorldState(<ref refid="classMultiBooleanCB_1aed2f9d269042589eef40023ccab53cc1" kindref="member">ip</ref>-&gt;GetTime()).obj;</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(obj);</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/>TriObject<sp/>*tri<sp/>=<sp/>(TriObject<sp/>*)obj-&gt;ConvertToType(<ref refid="classMultiBooleanCB_1aed2f9d269042589eef40023ccab53cc1" kindref="member">ip</ref>-&gt;GetTime(),<sp/>Class_ID(TRIOBJ_CLASS_ID,<sp/>0));</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(tri);</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/>Mesh<sp/>m1<sp/>=<sp/>tri-&gt;GetMesh();</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/>MNMesh<sp/>result(m1);</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix3<sp/>tm<sp/>=<sp/><ref refid="classMultiBooleanCB_1a54901634640e4321f851438ebb994bc0" kindref="member">nodes</ref>[0]-&gt;GetObjTMAfterWSM(<ref refid="classMultiBooleanCB_1aed2f9d269042589eef40023ccab53cc1" kindref="member">ip</ref>-&gt;GetTime());</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMultiBooleanCB_1ab5e63d3bd32d877058b5a1ca4fe2c000" kindref="member">adjust_matrix</ref>(tm,<sp/>m1);</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sort_pos=tm.GetTrans();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>base_sort=nodes[0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nodes.Sort(CompTable);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Matrix3<sp/>tm=nodes[0]-&gt;GetObjectTM(ip-&gt;GetTime());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/>result.Transform(tm);</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/>BitArray<sp/>aligned(<ref refid="classMultiBooleanCB_1a54901634640e4321f851438ebb994bc0" kindref="member">nodes</ref>.Count());</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/>aligned.ClearAll();</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/>aligned.Set(0);</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>crtm<sp/>=<sp/><ref refid="classMultiBooleanCB_1aed2f9d269042589eef40023ccab53cc1" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flg<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flg<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="classMultiBooleanCB_1a54901634640e4321f851438ebb994bc0" kindref="member">nodes</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aligned[i])</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Object<sp/>*obj1<sp/>=<sp/><ref refid="classMultiBooleanCB_1a54901634640e4321f851438ebb994bc0" kindref="member">nodes</ref>[i]-&gt;EvalWorldState(crtm).obj;</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(obj1);</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TriObject<sp/>*tri1<sp/>=<sp/>(TriObject<sp/>*)obj1-&gt;ConvertToType(crtm,<sp/>Class_ID(TRIOBJ_CLASS_ID,<sp/>0));</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(tri1);</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mesh<sp/>m2<sp/>=<sp/>tri1-&gt;GetMesh();</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix3<sp/>tm1<sp/>=<sp/><ref refid="classMultiBooleanCB_1a54901634640e4321f851438ebb994bc0" kindref="member">nodes</ref>[i]-&gt;GetObjTMAfterWSM(crtm);</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMultiBooleanCB_1ab5e63d3bd32d877058b5a1ca4fe2c000" kindref="member">adjust_matrix</ref>(tm1,<sp/>m2);</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Matrix3<sp/>tm1=nodes[i]-&gt;GetObjectTM(ip-&gt;GetTime());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MNMesh<sp/>ad(m2);</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ad.Transform(tm1);</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(!intersects(ad,result))<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classMultiBooleanCB_1a5824cdb28f712607af837ea8d45e50da" kindref="member">add</ref>(result,<sp/>ad,<sp/>0))</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tri1<sp/>!=<sp/>obj1)</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tri1;</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aligned.Set(i);</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(flg);</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classMultiBooleanCB_1a54901634640e4321f851438ebb994bc0" kindref="member">nodes</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!aligned[i])</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMultiBooleanCB_1aed2f9d269042589eef40023ccab53cc1" kindref="member">ip</ref>-&gt;DeSelectNode(<ref refid="classMultiBooleanCB_1a54901634640e4321f851438ebb994bc0" kindref="member">nodes</ref>[i]);</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"></highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tri<sp/>!=<sp/>obj)</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tri;</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/>Object<sp/>*resobj<sp/>=<sp/>(Object<sp/>*)<ref refid="classMultiBooleanCB_1aed2f9d269042589eef40023ccab53cc1" kindref="member">ip</ref>-&gt;CreateInstance(GEOMOBJECT_CLASS_ID,<sp/>triObjectClassID);</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(resobj);</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/>TSTR<sp/>ss;</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/>resobj-&gt;GetClassName(ss);</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/>result.OutToTri(((TriObject<sp/>*)resobj)-&gt;mesh);</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"></highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/>INode<sp/>*resn<sp/>=<sp/><ref refid="classMultiBooleanCB_1aed2f9d269042589eef40023ccab53cc1" kindref="member">ip</ref>-&gt;CreateObjectNode(resobj);</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(resn);</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/>TSTR<sp/>name(_T(</highlight><highlight class="stringliteral">&quot;MultiBoolResult&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMultiBooleanCB_1aed2f9d269042589eef40023ccab53cc1" kindref="member">ip</ref>-&gt;MakeNameUnique(name);</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/>resn-&gt;SetName(name);</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix3<sp/>idm;</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/>idm.IdentityMatrix();</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/>resn-&gt;SetNodeTM(0,<sp/>idm);</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classMultiBooleanCB_1ab971b0d038490233599f27c194f99b5c" kindref="member">proc</ref>(INode<sp/>*n)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3249"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n-&gt;Selected())</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/>Object<sp/>*obj<sp/>=<sp/>n-&gt;EvalWorldState(<ref refid="classMultiBooleanCB_1aed2f9d269042589eef40023ccab53cc1" kindref="member">ip</ref>-&gt;GetTime()).obj;</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"></highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!obj-&gt;CanConvertToType(Class_ID(TRIOBJ_CLASS_ID,<sp/>0)))</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"></highlight></codeline>
<codeline lineno="3259"><highlight class="normal"></highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMultiBooleanCB_1a54901634640e4321f851438ebb994bc0" kindref="member">nodes</ref>.Append(1,<sp/>&amp;n);</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3263"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"></highlight></codeline>
<codeline lineno="3265"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>DagUtil::perform_multiboolean(){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3266"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!ip)<sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3267"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiBooleanCB<sp/>cb(ip);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3268"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enum_nodes(ip-&gt;GetRootNode(),&amp;cb);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3269"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb.boolean();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3270"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;RedrawViews(ip-&gt;GetTime());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3272"><highlight class="normal"></highlight></codeline>
<codeline lineno="3273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a5f15cf07c7694087d5e2699aefae0894" kindref="member">DagUtil::get_ntrk</ref>()</highlight></codeline>
<codeline lineno="3274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNodeCount()<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a0d40f7797ba6818a4e263854a6356728" kindref="member">IDS_GET_NT_ERR</ref>));</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/>INode<sp/>*node<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNode(0);</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;HasNoteTracks())</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a0d40f7797ba6818a4e263854a6356728" kindref="member">IDS_GET_NT_ERR</ref>));</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;NumNoteTracks()<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a0d40f7797ba6818a4e263854a6356728" kindref="member">IDS_GET_NT_ERR</ref>));</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/>NoteTrack<sp/>*ntrack<sp/>=<sp/>node-&gt;GetNoteTrack(0);</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ntrack)</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ntrack-&gt;ClassID()<sp/>==<sp/>Class_ID(NOTETRACK_CLASS_ID,<sp/>0))</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DefNoteTrack<sp/>&amp;nt<sp/>=<sp/>*(DefNoteTrack<sp/>*)ntrack;</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1adb6399351056b5b51ae4a166e3ac6c82" kindref="member">ntrk_buf</ref><sp/>=<sp/>nt.keys;</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a0d40f7797ba6818a4e263854a6356728" kindref="member">IDS_GET_NT_ERR</ref>));</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"></highlight></codeline>
<codeline lineno="3305"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a050dcdee8a256e457226e87757830011" kindref="member">DagUtil::put_ntrk</ref>()</highlight></codeline>
<codeline lineno="3306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classDagUtil_1adb6399351056b5b51ae4a166e3ac6c82" kindref="member">ntrk_buf</ref>.Count())</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a585bdaf0bed0f777c49a3f06635c079e" kindref="member">IDS_NO_NTRK</ref>));</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNodeCount()<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a63b0b53a9622864d2e727e5a604aae95" kindref="member">IDS_PUT_NT_ERR</ref>));</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/>INode<sp/>*node<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNode(0);</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;HasNoteTracks())</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>node-&gt;NumNoteTracks();<sp/>++i)</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NoteTrack<sp/>*nt<sp/>=<sp/>node-&gt;GetNoteTrack(i);</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nt)</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;DeleteNoteTrack(nt);</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/>DefNoteTrack<sp/>*nt<sp/>=<sp/>(DefNoteTrack<sp/>*)NewDefaultNoteTrack();</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nt)</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a63b0b53a9622864d2e727e5a604aae95" kindref="member">IDS_PUT_NT_ERR</ref>));</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/>nt-&gt;keys<sp/>=<sp/><ref refid="classDagUtil_1adb6399351056b5b51ae4a166e3ac6c82" kindref="member">ntrk_buf</ref>;</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/>node-&gt;AddNoteTrack(nt);</highlight></codeline>
<codeline lineno="3338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"></highlight></codeline>
<codeline lineno="3341"><highlight class="comment">//<sp/>void<sp/>DagUtil::flatten_mesh(Mesh<sp/>&amp;m,Matrix3<sp/>wtm,INode<sp/>*node)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3342"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>tnorm=Normalize(VectorTransform(Inverse(wtm),Point3(0,0,1)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3343"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;Point3&gt;<sp/>dv;<sp/>dv.SetCount(m.numVerts);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3344"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;int&gt;<sp/>dvn;<sp/>dvn.SetCount(m.numVerts);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3345"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>float<sp/>FaceEL[3];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3346"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;FaceEL&gt;<sp/>fel;<sp/>fel.SetCount(m.numFaces);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3347"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;i&lt;m.numFaces;++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3348"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>v0=m.verts[m.faces[i].v[0]];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3349"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>v1=m.verts[m.faces[i].v[1]];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3350"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>v2=m.verts[m.faces[i].v[2]];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3351"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fel[i][0]=Length(v1-v0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3352"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fel[i][1]=Length(v2-v1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3353"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fel[i][2]=Length(v0-v2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3354"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3355"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>ek=.1f;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3356"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>da=DegToRad(3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>cosda=cosf(da);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3358"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>iter=0;;++iter)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3359"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;i&lt;dv.Count();++i)<sp/>{dv[i]=Point3(0,0,0);dvn[i]=0;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3360"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;m.numFaces;++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3361"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>v0=m.verts[m.faces[i].v[0]];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3362"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>v1=m.verts[m.faces[i].v[1]];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3363"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>v2=m.verts[m.faces[i].v[2]];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3364"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>n=Normalize(CrossProd(v1-v0,v2-v0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3365"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>dc=DotProd(n,tnorm);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3366"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>a;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3367"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(dc&gt;cosda)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3368"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(dc&gt;=1)<sp/>a=0;<sp/>else<sp/>a=acosf(dc);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3369"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else<sp/>a=da;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3370"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>w=Normalize(CrossProd(n,tnorm))*a;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>c=(v0+v1+v2)/3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3372"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dv[m.faces[i].v[0]]+=CrossProd(w,v0-c);<sp/>dvn[m.faces[i].v[0]]++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3373"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dv[m.faces[i].v[1]]+=CrossProd(w,v1-c);<sp/>dvn[m.faces[i].v[1]]++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3374"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dv[m.faces[i].v[2]]+=CrossProd(w,v2-c);<sp/>dvn[m.faces[i].v[2]]++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3375"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3376"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;dv.Count();++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3377"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(dvn[i])<sp/>m.verts[i]+=dv[i]/dvn[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3378"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dv[i]=Point3(0,0,0);<sp/>dvn[i]=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3379"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3380"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;m.numFaces;++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>v0=m.verts[m.faces[i].v[0]];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3382"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>v1=m.verts[m.faces[i].v[1]];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3383"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>v2=m.verts[m.faces[i].v[2]];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3384"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>l,dl,el;<sp/>Point3<sp/>e;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3385"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e=v1-v0;<sp/>l=Length(e);<sp/>el=fel[i][0];<sp/>dl=el-l;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3386"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e*=dl*ek/l;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3387"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dv[m.faces[i].v[1]]+=e;<sp/>dv[m.faces[i].v[0]]-=e;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3388"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dvn[m.faces[i].v[1]]++;<sp/>dvn[m.faces[i].v[0]]++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3389"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e=v2-v1;<sp/>l=Length(e);<sp/>el=fel[i][1];<sp/>dl=el-l;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3390"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e*=dl*ek/l;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3391"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dv[m.faces[i].v[2]]+=e;<sp/>dv[m.faces[i].v[1]]-=e;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3392"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dvn[m.faces[i].v[2]]++;<sp/>dvn[m.faces[i].v[1]]++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3393"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e=v0-v2;<sp/>l=Length(e);<sp/>el=fel[i][2];<sp/>dl=el-l;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3394"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e*=dl*ek/l;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3395"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dv[m.faces[i].v[0]]+=e;<sp/>dv[m.faces[i].v[2]]-=e;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3396"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dvn[m.faces[i].v[0]]++;<sp/>dvn[m.faces[i].v[2]]++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3397"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3398"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;dv.Count();++i)<sp/>if(dvn[i])<sp/>m.verts[i]+=dv[i]/dvn[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3399"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if((iter&amp;31)==0)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.InvalidateGeomCache();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3401"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3402"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;RedrawViews(ip-&gt;GetTime());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3403"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;ProgressUpdate(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(ip-&gt;GetCancel())<sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3406"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3407"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.InvalidateGeomCache();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3408"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3409"><highlight class="normal"></highlight><highlight class="comment">//*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3410"><highlight class="normal"></highlight></codeline>
<codeline lineno="3411"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3412"><highlight class="comment">void<sp/>DagUtil::flatten_mesh(Mesh<sp/>&amp;m,Matrix3<sp/>wtm,INode<sp/>*node)<sp/>{</highlight></codeline>
<codeline lineno="3413"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>tnorm=Normalize(VectorTransform(Inverse(wtm),Point3(0,0,1)));</highlight></codeline>
<codeline lineno="3414"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdjEdgeList<sp/>ael(m);</highlight></codeline>
<codeline lineno="3415"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;Point3&gt;<sp/>dv;<sp/>dv.SetCount(m.numVerts);</highlight></codeline>
<codeline lineno="3416"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;int&gt;<sp/>dvn;<sp/>dvn.SetCount(m.numVerts);</highlight></codeline>
<codeline lineno="3417"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;Point3&gt;<sp/>fn;<sp/>fn.SetCount(m.numFaces);</highlight></codeline>
<codeline lineno="3418"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>int<sp/>AdjVert[2];</highlight></codeline>
<codeline lineno="3419"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;AdjVert&gt;<sp/>av;<sp/>av.SetCount(ael.edges.Count());</highlight></codeline>
<codeline lineno="3420"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;float&gt;<sp/>el;<sp/>el.SetCount(ael.edges.Count());</highlight></codeline>
<codeline lineno="3421"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>ak=.1f,ek=.1f;</highlight></codeline>
<codeline lineno="3422"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>da=DegToRad(3);</highlight></codeline>
<codeline lineno="3423"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>cosda=cosf(da);</highlight></codeline>
<codeline lineno="3424"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>maxel=0;</highlight></codeline>
<codeline lineno="3425"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;i&lt;ael.edges.Count();++i)<sp/>{</highlight></codeline>
<codeline lineno="3426"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>v0=ael.edges[i].v[0],v1=ael.edges[i].v[1];</highlight></codeline>
<codeline lineno="3427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>el[i]=Length(m.verts[v0]-m.verts[v1]);</highlight></codeline>
<codeline lineno="3428"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(el[i]&gt;maxel)<sp/>maxel=el[i];</highlight></codeline>
<codeline lineno="3429"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>f=ael.edges[i].f[0],j;</highlight></codeline>
<codeline lineno="3430"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(f!=UNDEFINED)<sp/>{</highlight></codeline>
<codeline lineno="3431"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(j=0;j&lt;2;++j)<sp/>if(m.faces[f].v[j]!=v0<sp/>&amp;&amp;<sp/>m.faces[f].v[j]!=v1)<sp/>break;</highlight></codeline>
<codeline lineno="3432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>av[i][0]=m.faces[f].v[j];</highlight></codeline>
<codeline lineno="3433"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else<sp/>av[i][0]=UNDEFINED;</highlight></codeline>
<codeline lineno="3434"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f=ael.edges[i].f[1];</highlight></codeline>
<codeline lineno="3435"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(f!=UNDEFINED)<sp/>{</highlight></codeline>
<codeline lineno="3436"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(j=0;j&lt;2;++j)<sp/>if(m.faces[f].v[j]!=v0<sp/>&amp;&amp;<sp/>m.faces[f].v[j]!=v1)<sp/>break;</highlight></codeline>
<codeline lineno="3437"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>av[i][1]=m.faces[f].v[j];</highlight></codeline>
<codeline lineno="3438"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else<sp/>av[i][1]=UNDEFINED;</highlight></codeline>
<codeline lineno="3439"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3440"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>center;</highlight></codeline>
<codeline lineno="3441"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3442"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box3<sp/>box;</highlight></codeline>
<codeline lineno="3443"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;i&lt;m.numVerts;++i)<sp/>box+=m.verts[i];</highlight></codeline>
<codeline lineno="3444"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>center=box.Center();</highlight></codeline>
<codeline lineno="3445"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3446"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>da=DegToRad(3);</highlight></codeline>
<codeline lineno="3447"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>sinda=sinf(da);</highlight></codeline>
<codeline lineno="3448"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>iter=0;;++iter)<sp/>{</highlight></codeline>
<codeline lineno="3449"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;i&lt;dv.Count();++i)<sp/>{dv[i]=Point3(0,0,0);dvn[i]=0;}</highlight></codeline>
<codeline lineno="3450"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;m.numFaces;++i)<sp/>{</highlight></codeline>
<codeline lineno="3451"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>v0=m.verts[m.faces[i].v[0]];</highlight></codeline>
<codeline lineno="3452"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>v1=m.verts[m.faces[i].v[1]];</highlight></codeline>
<codeline lineno="3453"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>v2=m.verts[m.faces[i].v[2]];</highlight></codeline>
<codeline lineno="3454"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>n=Normalize(CrossProd(v1-v0,v2-v0));</highlight></codeline>
<codeline lineno="3455"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>dc=DotProd(n,tnorm);</highlight></codeline>
<codeline lineno="3456"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>a;</highlight></codeline>
<codeline lineno="3457"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(dc&gt;cosda)<sp/>{</highlight></codeline>
<codeline lineno="3458"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(dc&gt;=1)<sp/>a=0;<sp/>else<sp/>a=acosf(dc);</highlight></codeline>
<codeline lineno="3459"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else<sp/>a=da;</highlight></codeline>
<codeline lineno="3460"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>w=Normalize(CrossProd(n,tnorm))*a;</highlight></codeline>
<codeline lineno="3461"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>c=(v0+v1+v2)/3;</highlight></codeline>
<codeline lineno="3462"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dv[m.faces[i].v[0]]+=CrossProd(w,v0-c);<sp/>dvn[m.faces[i].v[0]]++;</highlight></codeline>
<codeline lineno="3463"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dv[m.faces[i].v[1]]+=CrossProd(w,v1-c);<sp/>dvn[m.faces[i].v[1]]++;</highlight></codeline>
<codeline lineno="3464"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dv[m.faces[i].v[2]]+=CrossProd(w,v2-c);<sp/>dvn[m.faces[i].v[2]]++;</highlight></codeline>
<codeline lineno="3465"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3466"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;dv.Count();++i)<sp/>if(dvn[i])<sp/>m.verts[i]+=dv[i]/dvn[i];</highlight></codeline>
<codeline lineno="3467"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;dv.Count();++i)<sp/>{dv[i]=Point3(0,0,0);dvn[i]=0;}</highlight></codeline>
<codeline lineno="3468"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;fn.Count();++i)<sp/>{</highlight></codeline>
<codeline lineno="3469"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>v0=m.verts[m.faces[i].v[0]];</highlight></codeline>
<codeline lineno="3470"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>v1=m.verts[m.faces[i].v[1]];</highlight></codeline>
<codeline lineno="3471"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>v2=m.verts[m.faces[i].v[2]];</highlight></codeline>
<codeline lineno="3472"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn[i]=Normalize(CrossProd(v1-v0,v2-v0));</highlight></codeline>
<codeline lineno="3473"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3474"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;ael.edges.Count();++i)<sp/>{</highlight></codeline>
<codeline lineno="3475"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>p0=m.verts[ael.edges[i].v[0]];</highlight></codeline>
<codeline lineno="3476"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>e=Normalize(m.verts[ael.edges[i].v[1]]-p0);</highlight></codeline>
<codeline lineno="3477"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>ds=DotProd(e,CrossProd(fn[ael.edges[i].f[0]],fn[ael.edges[i].f[1]]));</highlight></codeline>
<codeline lineno="3478"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>a;</highlight></codeline>
<codeline lineno="3479"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(-sinda&lt;ds<sp/>&amp;&amp;<sp/>ds&lt;sinda)<sp/>a=asinf(ds);</highlight></codeline>
<codeline lineno="3480"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if(ds&gt;0)<sp/>a=da;<sp/>else<sp/>a=-da;</highlight></codeline>
<codeline lineno="3481"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(ds&gt;=1)<sp/>a=HALFPI;<sp/>else<sp/>if(ds&lt;=-1)<sp/>a=-HALFPI;<sp/>else<sp/>a=asinf(ds);</highlight></codeline>
<codeline lineno="3482"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>w=e*(a*ak);</highlight></codeline>
<codeline lineno="3483"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(av[i][0]!=UNDEFINED)</highlight></codeline>
<codeline lineno="3484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{dv[av[i][0]]+=CrossProd(w,m.verts[av[i][0]]-p0);<sp/>dvn[av[i][0]]++;}</highlight></codeline>
<codeline lineno="3485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(av[i][1]!=UNDEFINED)</highlight></codeline>
<codeline lineno="3486"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{dv[av[i][1]]-=CrossProd(w,m.verts[av[i][1]]-p0);<sp/>dvn[av[i][1]]++;}</highlight></codeline>
<codeline lineno="3487"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3488"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;3;++i)<sp/>dvn[m.faces[0].v[i]]=0;</highlight></codeline>
<codeline lineno="3489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;dv.Count();++i)<sp/>if(dvn[i])<sp/>m.verts[i]+=dv[i]/dvn[i];</highlight></codeline>
<codeline lineno="3490"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;dv.Count();++i)<sp/>{dv[i]=Point3(0,0,0);dvn[i]=0;}</highlight></codeline>
<codeline lineno="3491"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;ael.edges.Count();++i)<sp/>{</highlight></codeline>
<codeline lineno="3492"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>p0=m.verts[ael.edges[i].v[0]];</highlight></codeline>
<codeline lineno="3493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>e=m.verts[ael.edges[i].v[1]]-p0;</highlight></codeline>
<codeline lineno="3494"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>l=Length(e),dl=el[i]-l;</highlight></codeline>
<codeline lineno="3495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>l=Length(e),dl=maxel-l;</highlight></codeline>
<codeline lineno="3496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(dl&lt;0)<sp/>{</highlight></codeline>
<codeline lineno="3497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e*=dl*ek/l;</highlight></codeline>
<codeline lineno="3498"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dv[ael.edges[i].v[1]]+=e;<sp/>dv[ael.edges[i].v[0]]-=e;</highlight></codeline>
<codeline lineno="3499"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dvn[ael.edges[i].v[1]]++;<sp/>dvn[ael.edges[i].v[0]]++;</highlight></codeline>
<codeline lineno="3500"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3501"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3502"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;3;++i)<sp/>dvn[m.faces[0].v[i]]=0;</highlight></codeline>
<codeline lineno="3503"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;dv.Count();++i)<sp/>if(dvn[i])<sp/>m.verts[i]+=dv[i];///dvn[i];</highlight></codeline>
<codeline lineno="3504"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box3<sp/>box;</highlight></codeline>
<codeline lineno="3505"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;m.numVerts;++i)<sp/>box+=m.verts[i];</highlight></codeline>
<codeline lineno="3506"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>d=center-box.Center();</highlight></codeline>
<codeline lineno="3507"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;m.numVerts;++i)<sp/>m.verts[i]+=d;</highlight></codeline>
<codeline lineno="3508"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if((iter&amp;31)==0)<sp/>{</highlight></codeline>
<codeline lineno="3509"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.InvalidateGeomCache();</highlight></codeline>
<codeline lineno="3510"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight></codeline>
<codeline lineno="3511"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;RedrawViews(ip-&gt;GetTime());</highlight></codeline>
<codeline lineno="3512"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;ProgressUpdate(0);</highlight></codeline>
<codeline lineno="3513"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3514"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(ip-&gt;GetCancel())<sp/>break;</highlight></codeline>
<codeline lineno="3515"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//break;</highlight></codeline>
<codeline lineno="3516"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3517"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.InvalidateGeomCache();</highlight></codeline>
<codeline lineno="3518"><highlight class="comment">}</highlight></codeline>
<codeline lineno="3519"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3520"><highlight class="normal"></highlight></codeline>
<codeline lineno="3521"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>DWORD<sp/>WINAPI<sp/>dummyprogressfn(LPVOID<sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"></highlight></codeline>
<codeline lineno="3523"><highlight class="normal"></highlight></codeline>
<codeline lineno="3524"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ae3e82a75be89aa593f96d51aeabeaf81" kindref="member">DagUtil::maxtures2materials</ref>(Mesh<sp/>&amp;m,<sp/>INode<sp/>*node)</highlight></codeline>
<codeline lineno="3525"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m.mapSupport(7)<sp/>||<sp/>!m.mapSupport(8))</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/>m.setMapSupport(1);</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/>Tab&lt;UVVert&gt;<sp/>tverts;</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numFaces;<sp/>++i)</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mats[9]<sp/>=<sp/>{-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1};</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maps[9]<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>weights[9]<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastmat<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>0;<sp/>v<sp/>&lt;<sp/>3;<sp/>++v)</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>ta<sp/>=<sp/>m.mapVerts(7)[m.mapFaces(7)[i].t[v]];</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>tb<sp/>=<sp/>m.mapVerts(8)[m.mapFaces(8)[i].t[v]];</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ta.y<sp/>=<sp/>1<sp/>-<sp/>ta.y;</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tb.y<sp/>=<sp/>1<sp/>-<sp/>tb.y;</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cw<sp/>=<sp/><ref refid="util_8cpp_1a7dadcc874af844320f0050e7c53b63a3" kindref="member">real2int</ref>(tb.y);</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w[3],<sp/>mat[3],<sp/>map[3];</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w[0]<sp/>=<sp/>(cw<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w[1]<sp/>=<sp/>cw<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w[2]<sp/>=<sp/>255<sp/>-<sp/>w[0]<sp/>-<sp/>w[1];</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"></highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat[0]<sp/>=<sp/><ref refid="util_8cpp_1a7dadcc874af844320f0050e7c53b63a3" kindref="member">real2int</ref>(ta.x)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat[1]<sp/>=<sp/><ref refid="util_8cpp_1a7dadcc874af844320f0050e7c53b63a3" kindref="member">real2int</ref>(ta.y)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat[2]<sp/>=<sp/><ref refid="util_8cpp_1a7dadcc874af844320f0050e7c53b63a3" kindref="member">real2int</ref>(tb.x)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map[0]<sp/>=<sp/>(<ref refid="util_8cpp_1a7dadcc874af844320f0050e7c53b63a3" kindref="member">real2int</ref>(ta.x)<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map[1]<sp/>=<sp/>(<ref refid="util_8cpp_1a7dadcc874af844320f0050e7c53b63a3" kindref="member">real2int</ref>(ta.y)<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map[2]<sp/>=<sp/>(<ref refid="util_8cpp_1a7dadcc874af844320f0050e7c53b63a3" kindref="member">real2int</ref>(tb.x)<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wi<sp/>=<sp/>0;<sp/>wi<sp/>&lt;<sp/>3;<sp/>++wi)</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w[wi])</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi;</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>lastmat;<sp/>++mi)</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mats[mi]<sp/>==<sp/>mat[wi])</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi<sp/>==<sp/>lastmat)</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastmat<sp/>=<sp/>mi<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mats[mi]<sp/>=<sp/>mat[wi];</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maps[mi]<sp/>=<sp/>map[wi];</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(weights[mi]&lt;w[wi])<sp/>weights[mi]=w[wi];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weights[mi]<sp/>+=<sp/>w[wi];</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bw<sp/>=<sp/>0,<sp/>bm<sp/>=<sp/>0,<sp/>bt<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>lastmat;<sp/>++mi)</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weights[mi]<sp/>&gt;<sp/>bw)</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bw<sp/>=<sp/>weights[mi];</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bm<sp/>=<sp/>mats[mi];</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bt<sp/>=<sp/>maps[mi]<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/>m.faces[i].setMatID(bm);</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(bt))</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UVVert<sp/>tv[3];</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tv[0]<sp/>=<sp/>m.mapVerts(bt)[m.mapFaces(bt)[i].t[0]];</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tv[1]<sp/>=<sp/>m.mapVerts(bt)[m.mapFaces(bt)[i].t[1]];</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tv[2]<sp/>=<sp/>m.mapVerts(bt)[m.mapFaces(bt)[i].t[2]];</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>tverts.Append(3,<sp/>tv);</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.mapFaces(1)[i].t[0]<sp/>=<sp/>m.getNumMapVerts(1)<sp/>+<sp/>t;</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.mapFaces(1)[i].t[1]<sp/>=<sp/>m.getNumMapVerts(1)<sp/>+<sp/>t<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.mapFaces(1)[i].t[2]<sp/>=<sp/>m.getNumMapVerts(1)<sp/>+<sp/>t<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldsize<sp/>=<sp/>m.getNumMapVerts(1);</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/>m.setNumMapVerts(1,<sp/>oldsize<sp/>+<sp/>tverts.Count(),<sp/>1);</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/>memcpy(m.mapVerts(1)<sp/>+<sp/>oldsize,<sp/>&amp;tverts[0],<sp/>tverts.Count()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(UVVert));</highlight></codeline>
<codeline lineno="3595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"></highlight></codeline>
<codeline lineno="3597"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ae3e82a75be89aa593f96d51aeabeaf81" kindref="member">DagUtil::maxtures2materials</ref>()</highlight></codeline>
<codeline lineno="3598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/>HCURSOR<sp/>hCur<sp/>=<sp/>SetCursor(LoadCursor(NULL,<sp/>IDC_WAIT));</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;ProgressStart(_T(</highlight><highlight class="stringliteral">&quot;Wait...&quot;</highlight><highlight class="normal">),<sp/>FALSE,<sp/>dummyprogressfn,<sp/>NULL);</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/>TimeValue<sp/>time<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNodeCount();</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/>INode<sp/>*node<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNode(i);</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/>Object<sp/>*o<sp/>=<sp/>node-&gt;GetObjectRef();</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o)</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o-&gt;IsSubClassOf(Class_ID(TRIOBJ_CLASS_ID,<sp/>0)))</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1ae3e82a75be89aa593f96d51aeabeaf81" kindref="member">maxtures2materials</ref>(((TriObject<sp/>*)o)-&gt;mesh,<sp/>node);</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetCancel())</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;ProgressEnd();</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(time);</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/>SetCursor(hCur);</highlight></codeline>
<codeline lineno="3622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"></highlight></codeline>
<codeline lineno="3624"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>DagUtil::flatten()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3625"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HCURSOR<sp/>hCur=SetCursor(LoadCursor(NULL,IDC_WAIT));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3626"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;ProgressStart(_T(&quot;Wait...&quot;),FALSE,dummyprogressfn,NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3627"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TimeValue<sp/>time=ip-&gt;GetTime();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3628"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>n=ip-&gt;GetSelNodeCount();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3629"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;i&lt;n;++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3630"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INode<sp/>*node=ip-&gt;GetSelNode(i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3631"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!node)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3632"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Object<sp/>*o=node-&gt;GetObjectRef();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3633"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!o)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3634"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!o-&gt;IsSubClassOf(Class_ID(TRIOBJ_CLASS_ID,0)))<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3635"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3636"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flatten_mesh(((TriObject*)o)-&gt;mesh,node-&gt;GetObjectTM(time),node);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3637"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3638"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(ip-&gt;GetCancel())<sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3639"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3640"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;ProgressEnd();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3641"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;RedrawViews(time);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3642"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCursor(hCur);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3643"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3644"><highlight class="normal"></highlight></codeline>
<codeline lineno="3645"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3646"><highlight class="comment">static<sp/>void<sp/>break_sel_edges(Mesh<sp/>&amp;m)<sp/>{</highlight></codeline>
<codeline lineno="3647"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdjEdgeList<sp/>ael(m);</highlight></codeline>
<codeline lineno="3648"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;int&gt;<sp/>bv;</highlight></codeline>
<codeline lineno="3649"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BitArray<sp/>em(ael.edges.Count());</highlight></codeline>
<codeline lineno="3650"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>em.ClearAll();</highlight></codeline>
<codeline lineno="3651"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;i&lt;ael.edges.Count();++i)<sp/>if(ael.edges[i].Selected(m.faces,m.edgeSel))<sp/>{</highlight></codeline>
<codeline lineno="3652"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>vi=0;vi&lt;2;++vi)<sp/>{</highlight></codeline>
<codeline lineno="3653"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>v=ael.edges[i].v[vi];</highlight></codeline>
<codeline lineno="3654"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>j=0;j&lt;bv.Count();++j)<sp/>if(bv[j]==v)<sp/>break;</highlight></codeline>
<codeline lineno="3655"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(j&gt;=bv.Count())<sp/>bv.Append(1,&amp;v);</highlight></codeline>
<codeline lineno="3656"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3657"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3658"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;bv.Count();++i)<sp/>if(ael.list[bv[i]].Count()!=2)<sp/>break;</highlight></codeline>
<codeline lineno="3659"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>e;</highlight></codeline>
<codeline lineno="3660"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>v1=bv[i],v2=ael.edges[e=ael.list[v1][0]].OtherVert(v1);</highlight></codeline>
<codeline lineno="3661"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(;;)<sp/>{</highlight></codeline>
<codeline lineno="3662"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>em.Set(e);</highlight></codeline>
<codeline lineno="3663"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Face<sp/>&amp;f=m.faces[ael.edges[e].f[0]];</highlight></codeline>
<codeline lineno="3664"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>fi;</highlight></codeline>
<codeline lineno="3665"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if((f.v[0]==v1<sp/>&amp;&amp;<sp/>f.v[1]==v2)</highlight></codeline>
<codeline lineno="3666"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(f.v[1]==v1<sp/>&amp;&amp;<sp/>f.v[2]==v2)</highlight></codeline>
<codeline lineno="3667"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(f.v[2]==v1<sp/>&amp;&amp;<sp/>f.v[0]==v2)<sp/>fi=ael.edges[e].f[1];</highlight></codeline>
<codeline lineno="3668"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>fi=ael.edges[e].f[0];</highlight></codeline>
<codeline lineno="3669"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>j=0;j&lt;3;++j)</highlight></codeline>
<codeline lineno="3670"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(m.faces[fi].v[j]==v1)<sp/>m.faces[fi].v[j]=nv1;</highlight></codeline>
<codeline lineno="3671"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(ael.list[v2].Count()!=2)<sp/>break;</highlight></codeline>
<codeline lineno="3672"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3673"><highlight class="comment">}</highlight></codeline>
<codeline lineno="3674"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3675"><highlight class="normal"></highlight></codeline>
<codeline lineno="3676"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3677"><highlight class="comment">void<sp/>DagUtil::break_edges()<sp/>{</highlight></codeline>
<codeline lineno="3678"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TimeValue<sp/>time=ip-&gt;GetTime();</highlight></codeline>
<codeline lineno="3679"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>n=ip-&gt;GetSelNodeCount();</highlight></codeline>
<codeline lineno="3680"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;i&lt;n;++i)<sp/>{</highlight></codeline>
<codeline lineno="3681"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INode<sp/>*node=ip-&gt;GetSelNode(i);</highlight></codeline>
<codeline lineno="3682"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!node)<sp/>continue;</highlight></codeline>
<codeline lineno="3683"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Object<sp/>*o=node-&gt;GetObjectRef();</highlight></codeline>
<codeline lineno="3684"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!o)<sp/>continue;</highlight></codeline>
<codeline lineno="3685"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!o-&gt;IsSubClassOf(Class_ID(TRIOBJ_CLASS_ID,0)))<sp/>continue;</highlight></codeline>
<codeline lineno="3686"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight></codeline>
<codeline lineno="3687"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break_sel_edges(((TriObject*)o)-&gt;mesh);</highlight></codeline>
<codeline lineno="3688"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight></codeline>
<codeline lineno="3689"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3690"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;RedrawViews(time);</highlight></codeline>
<codeline lineno="3691"><highlight class="comment">}</highlight></codeline>
<codeline lineno="3692"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3693"><highlight class="normal"></highlight></codeline>
<codeline lineno="3694"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>save_shape(Mesh<sp/>&amp;m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch)</highlight></codeline>
<codeline lineno="3695"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/>m.setMapSupport(ch);</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/>m.setNumMapVerts(ch,<sp/>m.numVerts);</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/>m.setNumMapFaces(ch,<sp/>m.numFaces);</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/>TVFace<sp/>*tf<sp/>=<sp/>m.mapFaces(ch);</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numFaces;<sp/>++i)</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>++j)</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tf[i].t[j]<sp/>=<sp/>m.faces[i].v[j];</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/>memcpy(m.mapVerts(ch),<sp/>m.verts,<sp/>m.numVerts<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Point3));</highlight></codeline>
<codeline lineno="3704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"></highlight></codeline>
<codeline lineno="3706"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>restore_shape(Mesh<sp/>&amp;m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch)</highlight></codeline>
<codeline lineno="3707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m.mapSupport(ch))</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/>TVFace<sp/>*tf<sp/>=<sp/>m.mapFaces(ch);</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/>Point3<sp/>*tv<sp/>=<sp/>m.mapVerts(ch);</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numFaces;<sp/>++i)</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>++j)</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.verts[m.faces[i].v[j]]<sp/>=<sp/>tv[tf[i].t[j]];</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/>m.InvalidateGeomCache();</highlight></codeline>
<codeline lineno="3716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"></highlight></codeline>
<codeline lineno="3718"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>DagUtil::save_shp()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3719"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TimeValue<sp/>time=ip-&gt;GetTime();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3720"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>n=ip-&gt;GetSelNodeCount();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3721"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;i&lt;n;++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3722"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INode<sp/>*node=ip-&gt;GetSelNode(i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3723"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!node)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3724"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Object<sp/>*o=node-&gt;GetObjectRef();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3725"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!o)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3726"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!o-&gt;IsSubClassOf(Class_ID(TRIOBJ_CLASS_ID,0)))<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3727"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3728"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>save_shape(((TriObject*)o)-&gt;mesh,2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3729"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3730"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3731"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;RedrawViews(time);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"></highlight></codeline>
<codeline lineno="3734"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>DagUtil::restore_shp()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TimeValue<sp/>time=ip-&gt;GetTime();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>n=ip-&gt;GetSelNodeCount();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3737"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;i&lt;n;++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INode<sp/>*node=ip-&gt;GetSelNode(i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3739"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!node)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3740"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Object<sp/>*o=node-&gt;GetObjectRef();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!o)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3742"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!o-&gt;IsSubClassOf(Class_ID(TRIOBJ_CLASS_ID,0)))<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3743"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3744"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restore_shape(((TriObject*)o)-&gt;mesh,2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3745"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3746"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3747"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;RedrawViews(time);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3748"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3749"><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1abf7368984759a94ce1f12ee77826913e" kindref="member">apply_ltmap</ref>(Mesh<sp/>&amp;m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mati,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mch,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>psz,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;usage_percent);</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"></highlight></codeline>
<codeline lineno="3752"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>DagUtil::map_ltmap(bool<sp/>autostep)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3753"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_edint(elm_matid,lm_matid);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3754"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_edint(elm_wd,lm_wd);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3755"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_edint(elm_ht,lm_ht);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3756"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_edfloat(elm_step,lm_step);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3757"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_edint(elm_mapch,lm_mapch);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3758"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TimeValue<sp/>time=ip-&gt;GetTime();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(ip-&gt;GetSelNodeCount()!=1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3760"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{ip-&gt;DisplayTempPrompt(GetString(IDS_SEL_1_OBJ));return;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3761"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INode<sp/>*node=ip-&gt;GetSelNode(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3762"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!node)<sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3763"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Object<sp/>*o=node-&gt;GetObjectRef();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3764"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!o)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3765"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{ip-&gt;DisplayTempPrompt(GetString(IDS_MUST_BE_EDMESH));return;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3766"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!o-&gt;IsSubClassOf(Class_ID(TRIOBJ_CLASS_ID,0)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3767"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{ip-&gt;DisplayTempPrompt(GetString(IDS_MUST_BE_EDMESH));return;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3768"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>bstep=-1,astep;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3769"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>bperc=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3770"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(autostep)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3771"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;ProgressStart(_T(&quot;Wait...<sp/>or<sp/>press<sp/>ESC<sp/>to<sp/>stop&quot;),FALSE,dummyprogressfn,NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3772"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;ProgressUpdate(0,FALSE,_T(&quot;&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3773"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else<sp/>ip-&gt;DisplayTempPrompt(_T(&quot;Wait...&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3774"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>iter=0;;)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3775"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(bstep&gt;0)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3776"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lm_step=(bstep+astep)*.5f;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3777"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3778"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>perc;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3779"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!apply_ltmap(((TriObject*)o)-&gt;mesh,lm_matid-1,lm_mapch,lm_wd,lm_ht,lm_step,perc))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3780"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(autostep)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3781"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>s;<sp/>s.printf(_T(&quot;%d:<sp/>error<sp/>(best<sp/>%d%%)&quot;),iter+1,bperc);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3782"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;ProgressUpdate(0,FALSE,s);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3783"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(bstep&lt;0)<sp/>lm_step*=2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3784"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3785"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>astep=lm_step;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3786"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3787"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3788"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;DisplayTempPrompt(GetString(IDS_LTMAP_ERR));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3789"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3790"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3791"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(autostep)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3792"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>s;<sp/>s.printf(_T(&quot;%d:<sp/>%d%%<sp/>used&quot;),iter+1,perc);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3793"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;ProgressUpdate(0,FALSE,s);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3794"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bperc=perc;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3795"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(bstep&lt;0)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3796"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bstep=lm_step;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3797"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>astep=lm_step*.5f;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3798"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3799"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bstep=lm_step;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3800"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3801"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3802"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>s;<sp/>s.printf(GetString(IDS_LTMAP_OK),perc);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3803"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;DisplayTempPrompt(s);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3804"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3805"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3806"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!autostep)<sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3807"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(++iter&gt;=50<sp/>||<sp/>ip-&gt;GetCancel())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3808"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(lm_step!=bstep<sp/>&amp;&amp;<sp/>bstep&gt;0)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3809"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lm_step=bstep;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3810"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!apply_ltmap(((TriObject*)o)-&gt;mesh,lm_matid-1,lm_mapch,lm_wd,lm_ht,lm_step,perc))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3811"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;DisplayTempPrompt(GetString(IDS_LTMAP_ERR));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3812"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3813"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>s;<sp/>s.printf(GetString(IDS_LTMAP_OK),perc);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3814"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;DisplayTempPrompt(s);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3815"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3816"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3818"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3819"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3820"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(autostep)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3821"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;ProgressEnd();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3822"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update_ui();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3823"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3825"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;RedrawViews(time);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3826"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3827"><highlight class="normal"></highlight></codeline>
<codeline lineno="3828"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SuperLight<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ObjLightDesc</highlight></codeline>
<codeline lineno="3829"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/>SuperLight()<sp/>:<sp/>ObjLightDesc(NULL)</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/>affectDiffuse<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/>affectSpecular<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/>ambientOnly<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DeleteThis()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/>BOOL<sp/>Illuminate(ShadeContext<sp/>&amp;sc,<sp/>Point3<sp/>&amp;normal,<sp/>Color<sp/>&amp;color,<sp/>Point3<sp/>&amp;dir,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;dot_nl,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;diffuseCoef)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3839"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/>color.White();</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>normal;</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/>dot_nl<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/>diffuseCoef<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3846"><highlight class="normal">}<sp/>superlight;</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"></highlight></codeline>
<codeline lineno="3848"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Point3<sp/>pabs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Point3(fabs(a.x),<sp/>fabs(a.y),<sp/>fabs(a.z));<sp/>}</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"></highlight></codeline>
<codeline lineno="3850"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1ab1b535f7ab061509cf6d87105bb87a85" kindref="member">ComputeFaceCurvature</ref>(Point3<sp/>*n,<sp/>Point3<sp/>*v)</highlight></codeline>
<codeline lineno="3851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/>Point3<sp/>nc<sp/>=<sp/>(n[0]<sp/>+<sp/>n[1]<sp/>+<sp/>n[2])<sp/>/<sp/>3.0f;</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/>Point3<sp/>dn0<sp/>=<sp/>n[0]<sp/>-<sp/>nc;</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/>Point3<sp/>dn1<sp/>=<sp/>n[1]<sp/>-<sp/>nc;</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/>Point3<sp/>dn2<sp/>=<sp/>n[2]<sp/>-<sp/>nc;</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/>Point3<sp/>c<sp/>=<sp/>(v[0]<sp/>+<sp/>v[1]<sp/>+<sp/>v[2])<sp/>/<sp/>3.0f;</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/>Point3<sp/>v0<sp/>=<sp/>v[0]<sp/>-<sp/>c;</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/>Point3<sp/>v1<sp/>=<sp/>v[1]<sp/>-<sp/>c;</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/>Point3<sp/>v2<sp/>=<sp/>v[2]<sp/>-<sp/>c;</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d0<sp/>=<sp/>DotProd(dn0,<sp/>v0)<sp/>/<sp/>LengthSquared(v0);</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d1<sp/>=<sp/>DotProd(dn1,<sp/>v1)<sp/>/<sp/>LengthSquared(v1);</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d2<sp/>=<sp/>DotProd(dn2,<sp/>v2)<sp/>/<sp/>LengthSquared(v2);</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ad0<sp/>=<sp/>(float)fabs(d0);</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ad1<sp/>=<sp/>(float)fabs(d1);</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ad2<sp/>=<sp/>(float)fabs(d2);</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ad0<sp/>&gt;<sp/>ad1)<sp/>?<sp/>(ad0<sp/>&gt;<sp/>ad2<sp/>?<sp/>d0<sp/>:<sp/>d2)<sp/>:<sp/>ad1<sp/>&gt;<sp/>ad2<sp/>?<sp/>d1<sp/>:<sp/>d2;</highlight></codeline>
<codeline lineno="3867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"></highlight></codeline>
<codeline lineno="3869"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a01e9e10259bc763ea03cfa034823dac3" kindref="member">compute_bump_vectors</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>tv[3],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>v[3],<sp/>Point3<sp/>bvec[3])</highlight></codeline>
<codeline lineno="3870"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>uva,<sp/>uvb,<sp/>uvc,<sp/>uvd,<sp/>uvk;</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/>Point3<sp/>v1,<sp/>v2;</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/>uva<sp/>=<sp/>tv[1].x<sp/>-<sp/>tv[0].x;</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/>uvb<sp/>=<sp/>tv[2].x<sp/>-<sp/>tv[0].x;</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/>uvc<sp/>=<sp/>tv[1].y<sp/>-<sp/>tv[0].y;</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/>uvd<sp/>=<sp/>tv[2].y<sp/>-<sp/>tv[0].y;</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/>uvk<sp/>=<sp/>uvb<sp/>*<sp/>uvc<sp/>-<sp/>uva<sp/>*<sp/>uvd;</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/>v1<sp/>=<sp/>v[1]<sp/>-<sp/>v[0];</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/>v2<sp/>=<sp/>v[2]<sp/>-<sp/>v[0];</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uvk<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/>bvec[0]<sp/>=<sp/>(uvc<sp/>*<sp/>v2<sp/>-<sp/>uvd<sp/>*<sp/>v1)<sp/>/<sp/>uvk;</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/>bvec[1]<sp/>=<sp/>-(uva<sp/>*<sp/>v2<sp/>-<sp/>uvb<sp/>*<sp/>v1)<sp/>/<sp/>uvk;</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uva<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bvec[0]<sp/>=<sp/>v1<sp/>/<sp/>uva;</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uvb<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bvec[0]<sp/>=<sp/>v2<sp/>/<sp/>uvb;</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bvec[0]<sp/>=<sp/>Point3(0.0f,<sp/>0.0f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uvc<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bvec[1]<sp/>=<sp/>v1<sp/>/<sp/>uvc;</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uvd<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bvec[1]<sp/>=<sp/>v2<sp/>/<sp/>uvd;</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bvec[1]<sp/>=<sp/>Point3(0.0f,<sp/>0.0f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/>bvec[2]<sp/>=<sp/>Point3(0,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="3901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"></highlight></codeline>
<codeline lineno="3903" refid="classGetLightsCB" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGetLightsCB" kindref="compound">GetLightsCB</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classENodeCB" kindref="compound">ENodeCB</ref></highlight></codeline>
<codeline lineno="3904"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/>TimeValue<sp/><ref refid="classGetLightsCB_1a58095fc0d3a51c2318ffe1bc537a8e19" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/>Tab&lt;ObjLightDesc<sp/>*&gt;<sp/>&amp;<ref refid="classGetLightsCB_1a9286e5222ce949eabac4a4ade6c16d1a" kindref="member">light</ref>;</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"></highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><ref refid="classGetLightsCB" kindref="compound">GetLightsCB</ref>(TimeValue<sp/>t,<sp/>Tab&lt;ObjLightDesc<sp/>*&gt;<sp/>&amp;lt)<sp/>:<sp/><ref refid="classGetLightsCB_1a9286e5222ce949eabac4a4ade6c16d1a" kindref="member">light</ref>(lt)<sp/>{<sp/><ref refid="classGetLightsCB_1a58095fc0d3a51c2318ffe1bc537a8e19" kindref="member">time</ref><sp/>=<sp/>t;<sp/>}</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGetLightsCB_1a7cf4c5e1a7681c37f3d1df8959b46b41" kindref="member">proc</ref>(INode<sp/>*n)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3911"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;IsNodeHidden())</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/>Object<sp/>*o<sp/>=<sp/>n-&gt;EvalWorldState(<ref refid="classGetLightsCB_1a58095fc0d3a51c2318ffe1bc537a8e19" kindref="member">time</ref>).obj;</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o-&gt;SuperClassID()<sp/>!=<sp/>LIGHT_CLASS_ID)</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/>LightObject<sp/>*lo<sp/>=<sp/>((LightObject<sp/>*)o);</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/>LightState<sp/>lst;</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/>Interval<sp/>lv_FOREVER<sp/>=<sp/>FOREVER;</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/>lo-&gt;EvalLightState(<ref refid="classGetLightsCB_1a58095fc0d3a51c2318ffe1bc537a8e19" kindref="member">time</ref>,<sp/>lv_FOREVER,<sp/>&amp;lst);</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/>ObjLightDesc<sp/>*l<sp/>=<sp/>lo-&gt;CreateLightDesc(n);</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!l)</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;SetRenderData(l);</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGetLightsCB_1a9286e5222ce949eabac4a4ade6c16d1a" kindref="member">light</ref>.Append(1,<sp/>&amp;l);</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3930"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"></highlight></codeline>
<codeline lineno="3932"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_lights(TimeValue<sp/>time,<sp/>Interface<sp/>*ip,<sp/>Tab&lt;ObjLightDesc<sp/>*&gt;<sp/>&amp;light)</highlight></codeline>
<codeline lineno="3933"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/>Interval<sp/>lv_FOREVER<sp/>=<sp/>FOREVER;</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><ref refid="classGetLightsCB" kindref="compound">GetLightsCB</ref><sp/>cb(time,<sp/>light);</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(ip-&gt;GetRootNode(),<sp/>&amp;cb);</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MyRC<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>RendContext</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/>Color<sp/>gll;</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/>Color<sp/>GlobalLightLevel()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gll;<sp/>}</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/>}<sp/>rc;</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/>rc.gll<sp/>=<sp/>ip-&gt;GetLightTint(time,<sp/>lv_FOREVER)<sp/>*<sp/>ip-&gt;GetLightLevel(time,<sp/>lv_FOREVER);</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>light.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/>light[i]-&gt;Update(time,<sp/>rc,<sp/>NULL,<sp/>TRUE,<sp/>TRUE);</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/>light[i]-&gt;UpdateGlobalLightLevel(rc.gll);</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/>light[i]-&gt;UpdateViewDepParams(Matrix3(1));</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"></highlight></codeline>
<codeline lineno="3952" refid="classRenderMapSC" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classRenderMapSC" kindref="compound">RenderMapSC</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ShadeContext</highlight></codeline>
<codeline lineno="3953"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/>TimeValue<sp/><ref refid="classRenderMapSC_1aa096feae82a54412fba08010bae85316" kindref="member">curtime</ref>;</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/>INode<sp/>*<ref refid="classRenderMapSC_1ad1ba24144f3301418ac3f4af70389aa3" kindref="member">node</ref>;</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/>Mesh<sp/>*<ref refid="classRenderMapSC_1ae92d56d9484d27260c84455ce4b511c5" kindref="member">mesh</ref>;</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a3f87e466679d4f709a04d8b4401a1abb" kindref="member">face</ref>;</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/>Matrix3<sp/><ref refid="classRenderMapSC_1a08c73cc8594ec2f60f557f5cd89cb799" kindref="member">cam2obj</ref>,<sp/><ref refid="classRenderMapSC_1ac614b87bf9774ec85a46ff0b97b9d28e" kindref="member">obj2cam</ref>;</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/>Box3<sp/><ref refid="classRenderMapSC_1abe6bbcc43421e86a5f76631d8aa9147a" kindref="member">objbox</ref>;</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1a3b1bd636b7d8fcf4213b5e63e4d0134d" kindref="member">bary</ref>,<sp/><ref refid="classRenderMapSC_1ae6bcf7be08b5f1f1ecd1c85cdcbe2a95" kindref="member">norm</ref>,<sp/><ref refid="classRenderMapSC_1a2f2d48e7e6344a50203d7e1b6e5b4560" kindref="member">normal</ref>,<sp/><ref refid="classRenderMapSC_1a31917ec5b0d38da7851b01d9d27f7235" kindref="member">facenorm</ref>,<sp/><ref refid="classRenderMapSC_1a819339af8e7ab1dcab878328b34c42a3" kindref="member">view</ref>,<sp/><ref refid="classRenderMapSC_1a76789b6a8ffbbfb213e6dffc1bc5f476" kindref="member">orgview</ref>,<sp/><ref refid="classRenderMapSC_1a6950d68f79e2e251c19726459c384c31" kindref="member">pt</ref>,<sp/><ref refid="classRenderMapSC_1a0292a054b21cf51563aa0efd60f07699" kindref="member">dpt</ref>,<sp/><ref refid="classRenderMapSC_1a1f7d5f9902b42ceaf1d66b73a39a9a19" kindref="member">dpt_dx</ref>,<sp/><ref refid="classRenderMapSC_1abea445424fb55f2033b721c2231dc5eb" kindref="member">dpt_dy</ref>,<sp/><ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>[3],<sp/><ref refid="classRenderMapSC_1a26a92cf5794b55b216bb90a041e2843a" kindref="member">bv</ref>[3],<sp/><ref refid="classRenderMapSC_1a487f9207ea973dbcf934824cd75f271c" kindref="member">bo</ref>;</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1a4d70eca225917a6ed3b582ee60678483" kindref="member">tv</ref>[MAX_MESHMAPS][3];</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/>Color<sp/><ref refid="classRenderMapSC_1a2cbedeef8f3dac0a18a08f8099373115" kindref="member">back_color</ref>;</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a12db1739023242c18451a91fc5f912a1" kindref="member">curve</ref>,<sp/><ref refid="classRenderMapSC_1ac52d57740d5b2d4527fe424e626abead" kindref="member">face_sz</ref>,<sp/><ref refid="classRenderMapSC_1afedbdaccd0062df64a296948c542450c" kindref="member">sz_ratio</ref>,<sp/><ref refid="classRenderMapSC_1ae7c3ced4b9ea471a81a7749148fa5617" kindref="member">facecurve</ref>;</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/>Tab&lt;Point3&gt;<sp/><ref refid="classRenderMapSC_1ab81f5ccf05753ac5f11c22a9d49f169e" kindref="member">fnorm</ref>;</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/>Tab&lt;Point3[3]&gt;<sp/><ref refid="classRenderMapSC_1a350a0b624b36d86e77857446e1a4940b" kindref="member">vnorm</ref>;</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/>Tab&lt;ObjLightDesc<sp/>*&gt;<sp/><ref refid="classRenderMapSC_1a7d1792b80536cf282521a136ef014544" kindref="member">light</ref>;</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1acb2e7367e59c74bb654d8bac1a3483f0" kindref="member">hastv</ref>[MAX_MESHMAPS];</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a028473d1a1604eacf92cb3d4bf1720b6" kindref="member">lighting</ref>;</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"></highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><ref refid="classRenderMapSC" kindref="compound">RenderMapSC</ref>(TimeValue<sp/>t,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>lt,<sp/>Interface<sp/>*ip)</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/>Interval<sp/>lv_FOREVER<sp/>=<sp/>FOREVER;</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1aa096feae82a54412fba08010bae85316" kindref="member">curtime</ref><sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/>doMaps<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/>filterMaps<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/>backFace<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1ad1ba24144f3301418ac3f4af70389aa3" kindref="member">node</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1ae92d56d9484d27260c84455ce4b511c5" kindref="member">mesh</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a3f87e466679d4f709a04d8b4401a1abb" kindref="member">face</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a028473d1a1604eacf92cb3d4bf1720b6" kindref="member">lighting</ref><sp/>=<sp/>lt;</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRenderMapSC_1a028473d1a1604eacf92cb3d4bf1720b6" kindref="member">lighting</ref>)</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ambientLight<sp/>=<sp/>ip-&gt;GetAmbient(t,<sp/>lv_FOREVER);</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>get_lights(t,<sp/>ip,<sp/><ref refid="classRenderMapSC_1a7d1792b80536cf282521a136ef014544" kindref="member">light</ref>);</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nLights<sp/>=<sp/><ref refid="classRenderMapSC_1a7d1792b80536cf282521a136ef014544" kindref="member">light</ref>.Count();</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ambientLight<sp/>=<sp/>Color(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a7d1792b80536cf282521a136ef014544" kindref="member">light</ref>.SetCount(1);</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a7d1792b80536cf282521a136ef014544" kindref="member">light</ref>[0]<sp/>=<sp/>&amp;superlight;</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nLights<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a2cbedeef8f3dac0a18a08f8099373115" kindref="member">back_color</ref><sp/>=<sp/>ip-&gt;GetBackGround(t,<sp/>lv_FOREVER);</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a168e70286e5f67482e609927b911e479" kindref="member">setnode</ref>(INode<sp/>*n)</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1ad1ba24144f3301418ac3f4af70389aa3" kindref="member">node</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1ac614b87bf9774ec85a46ff0b97b9d28e" kindref="member">obj2cam</ref><sp/>=<sp/>n-&gt;GetObjectTM(<ref refid="classRenderMapSC_1aa096feae82a54412fba08010bae85316" kindref="member">curtime</ref>);</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a08c73cc8594ec2f60f557f5cd89cb799" kindref="member">cam2obj</ref><sp/>=<sp/>Inverse(<ref refid="classRenderMapSC_1ac614b87bf9774ec85a46ff0b97b9d28e" kindref="member">obj2cam</ref>);</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a853d17fc3129714778590b3b8d9dcf9b" kindref="member">setmesh</ref>(Mesh<sp/>&amp;m)</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1ae92d56d9484d27260c84455ce4b511c5" kindref="member">mesh</ref><sp/>=<sp/>&amp;m;</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1abe6bbcc43421e86a5f76631d8aa9147a" kindref="member">objbox</ref><sp/>=<sp/>m.getBoundingBox();</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1ab81f5ccf05753ac5f11c22a9d49f169e" kindref="member">fnorm</ref>.SetCount(m.numFaces);</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numFaces;<sp/>++i)</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1ab81f5ccf05753ac5f11c22a9d49f169e" kindref="member">fnorm</ref>[i]<sp/>=<sp/>Normalize(VectorTransform(</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CrossProd(m.verts[m.faces[i].v[1]]<sp/>-<sp/>m.verts[m.faces[i].v[0]],<sp/>m.verts[m.faces[i].v[2]]<sp/>-<sp/>m.verts[m.faces[i].v[0]]),<sp/><ref refid="classRenderMapSC_1ac614b87bf9774ec85a46ff0b97b9d28e" kindref="member">obj2cam</ref>));</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;int&gt;<sp/>*vfc<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Tab&lt;int&gt;[m.numVerts];</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(vfc);</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numFaces;<sp/>++i)</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>++j)</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>m.faces[i].v[j];</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assert(v&gt;=0<sp/>&amp;&amp;<sp/>v&lt;m.numVerts);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vfc[v].Append(1,<sp/>&amp;i,<sp/>8);</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a350a0b624b36d86e77857446e1a4940b" kindref="member">vnorm</ref>.SetCount(m.numFaces);</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numFaces;<sp/>++i)</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>sgr<sp/>=<sp/>m.faces[i].smGroup;</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>++j)</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>n<sp/>=<sp/><ref refid="classRenderMapSC_1ab81f5ccf05753ac5f11c22a9d49f169e" kindref="member">fnorm</ref>[i];</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>m.faces[i].v[j];</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assert(v&gt;=0<sp/>&amp;&amp;<sp/>v&lt;m.numVerts);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>vfc[v].Count();<sp/>++k)</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vfc[v][k]<sp/>!=<sp/>i)</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.faces[vfc[v][k]].smGroup<sp/>&amp;<sp/>sgr)</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/><ref refid="classRenderMapSC_1ab81f5ccf05753ac5f11c22a9d49f169e" kindref="member">fnorm</ref>[vfc[v][k]];</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a350a0b624b36d86e77857446e1a4940b" kindref="member">vnorm</ref>[i][j]<sp/>=<sp/>Normalize(n);</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>vfc;</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a4e01aca88a143357f17bdb5310c14e86" kindref="member">gettv</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch)</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRenderMapSC_1acb2e7367e59c74bb654d8bac1a3483f0" kindref="member">hastv</ref>[ch])</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRenderMapSC_1ae92d56d9484d27260c84455ce4b511c5" kindref="member">mesh</ref>-&gt;mapSupport(ch))</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>*t<sp/>=<sp/><ref refid="classRenderMapSC_1ae92d56d9484d27260c84455ce4b511c5" kindref="member">mesh</ref>-&gt;mapVerts(ch);</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TVFace<sp/>&amp;f<sp/>=<sp/>*(<ref refid="classRenderMapSC_1ae92d56d9484d27260c84455ce4b511c5" kindref="member">mesh</ref>-&gt;mapFaces(ch)<sp/>+<sp/><ref refid="classRenderMapSC_1a3f87e466679d4f709a04d8b4401a1abb" kindref="member">face</ref>);</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a4d70eca225917a6ed3b582ee60678483" kindref="member">tv</ref>[ch][i]<sp/>=<sp/>t[f.t[i]];</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a4d70eca225917a6ed3b582ee60678483" kindref="member">tv</ref>[ch][0]<sp/>=<sp/>Point3(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a4d70eca225917a6ed3b582ee60678483" kindref="member">tv</ref>[ch][1]<sp/>=<sp/>Point3(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a4d70eca225917a6ed3b582ee60678483" kindref="member">tv</ref>[ch][2]<sp/>=<sp/>Point3(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1acb2e7367e59c74bb654d8bac1a3483f0" kindref="member">hastv</ref>[ch]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a8cae242d8fd51457bddaf2681c7a9e0a" kindref="member">setface</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch)</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a3f87e466679d4f709a04d8b4401a1abb" kindref="member">face</ref><sp/>=<sp/>fi;</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/>Face<sp/>&amp;f<sp/>=<sp/><ref refid="classRenderMapSC_1ae92d56d9484d27260c84455ce4b511c5" kindref="member">mesh</ref>-&gt;faces[fi];</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/>mtlNum<sp/>=<sp/>f.getMatID();</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>[i]<sp/>=<sp/><ref refid="classRenderMapSC_1ae92d56d9484d27260c84455ce4b511c5" kindref="member">mesh</ref>-&gt;verts[f.v[i]]<sp/>*<sp/><ref refid="classRenderMapSC_1ac614b87bf9774ec85a46ff0b97b9d28e" kindref="member">obj2cam</ref>;</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_MESHMAPS;<sp/>++i)</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1acb2e7367e59c74bb654d8bac1a3483f0" kindref="member">hastv</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1ac52d57740d5b2d4527fe424e626abead" kindref="member">face_sz</ref><sp/>=<sp/>fabsf(<ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>[1].x<sp/>-<sp/><ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>[0].x);</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1ac52d57740d5b2d4527fe424e626abead" kindref="member">face_sz</ref><sp/>+=<sp/>fabsf(<ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>[1].y<sp/>-<sp/><ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>[0].y);</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1ac52d57740d5b2d4527fe424e626abead" kindref="member">face_sz</ref><sp/>+=<sp/>fabsf(<ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>[1].z<sp/>-<sp/><ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>[0].z);</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1ac52d57740d5b2d4527fe424e626abead" kindref="member">face_sz</ref><sp/>+=<sp/>fabsf(<ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>[2].x<sp/>-<sp/><ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>[0].x);</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1ac52d57740d5b2d4527fe424e626abead" kindref="member">face_sz</ref><sp/>+=<sp/>fabsf(<ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>[2].y<sp/>-<sp/><ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>[0].y);</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1ac52d57740d5b2d4527fe424e626abead" kindref="member">face_sz</ref><sp/>+=<sp/>fabsf(<ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>[2].z<sp/>-<sp/><ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>[0].z);</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1ac52d57740d5b2d4527fe424e626abead" kindref="member">face_sz</ref><sp/>/=<sp/>6;</highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a31917ec5b0d38da7851b01d9d27f7235" kindref="member">facenorm</ref><sp/>=<sp/><ref refid="classRenderMapSC_1ab81f5ccf05753ac5f11c22a9d49f169e" kindref="member">fnorm</ref>[fi];</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1ae7c3ced4b9ea471a81a7749148fa5617" kindref="member">facecurve</ref><sp/>=<sp/><ref refid="util_8cpp_1ab1b535f7ab061509cf6d87105bb87a85" kindref="member">ComputeFaceCurvature</ref>(<ref refid="classRenderMapSC_1a350a0b624b36d86e77857446e1a4940b" kindref="member">vnorm</ref>[fi],<sp/><ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>);</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a4e01aca88a143357f17bdb5310c14e86" kindref="member">gettv</ref>(ch);</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a01e9e10259bc763ea03cfa034823dac3" kindref="member">compute_bump_vectors</ref>(<ref refid="classRenderMapSC_1a4d70eca225917a6ed3b582ee60678483" kindref="member">tv</ref>[ch],<sp/><ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>,<sp/><ref refid="classRenderMapSC_1a26a92cf5794b55b216bb90a041e2843a" kindref="member">bv</ref>);</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a487f9207ea973dbcf934824cd75f271c" kindref="member">bo</ref><sp/>=<sp/><ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>[0]<sp/>-<sp/>(<ref refid="classRenderMapSC_1a26a92cf5794b55b216bb90a041e2843a" kindref="member">bv</ref>[0]<sp/>*<sp/><ref refid="classRenderMapSC_1a4d70eca225917a6ed3b582ee60678483" kindref="member">tv</ref>[ch][0].x<sp/>+<sp/><ref refid="classRenderMapSC_1a26a92cf5794b55b216bb90a041e2843a" kindref="member">bv</ref>[1]<sp/>*<sp/><ref refid="classRenderMapSC_1a4d70eca225917a6ed3b582ee60678483" kindref="member">tv</ref>[ch][0].y);</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a93da7a1c6c52b06cf3303ba66eee49bd" kindref="member">setpt</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>u,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>du,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dv)</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a6950d68f79e2e251c19726459c384c31" kindref="member">pt</ref><sp/>=<sp/><ref refid="classRenderMapSC_1a26a92cf5794b55b216bb90a041e2843a" kindref="member">bv</ref>[0]<sp/>*<sp/>u<sp/>+<sp/><ref refid="classRenderMapSC_1a26a92cf5794b55b216bb90a041e2843a" kindref="member">bv</ref>[1]<sp/>*<sp/>v<sp/>+<sp/><ref refid="classRenderMapSC_1a487f9207ea973dbcf934824cd75f271c" kindref="member">bo</ref>;</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a1f7d5f9902b42ceaf1d66b73a39a9a19" kindref="member">dpt_dx</ref><sp/>=<sp/><ref refid="classRenderMapSC_1a26a92cf5794b55b216bb90a041e2843a" kindref="member">bv</ref>[0]<sp/>*<sp/>du;</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1abea445424fb55f2033b721c2231dc5eb" kindref="member">dpt_dy</ref><sp/>=<sp/><ref refid="classRenderMapSC_1a26a92cf5794b55b216bb90a041e2843a" kindref="member">bv</ref>[1]<sp/>*<sp/>dv;</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a0292a054b21cf51563aa0efd60f07699" kindref="member">dpt</ref><sp/>=<sp/>(pabs(<ref refid="classRenderMapSC_1a1f7d5f9902b42ceaf1d66b73a39a9a19" kindref="member">dpt_dx</ref>)<sp/>+<sp/>pabs(<ref refid="classRenderMapSC_1abea445424fb55f2033b721c2231dc5eb" kindref="member">dpt_dy</ref>))<sp/>*<sp/>.5f;</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1afedbdaccd0062df64a296948c542450c" kindref="member">sz_ratio</ref><sp/>=<sp/>(fabsf(<ref refid="classRenderMapSC_1a0292a054b21cf51563aa0efd60f07699" kindref="member">dpt</ref>.x)<sp/>+<sp/>fabsf(<ref refid="classRenderMapSC_1a0292a054b21cf51563aa0efd60f07699" kindref="member">dpt</ref>.y)<sp/>+<sp/>fabsf(<ref refid="classRenderMapSC_1a0292a054b21cf51563aa0efd60f07699" kindref="member">dpt</ref>.z))<sp/>/<sp/>(<ref refid="classRenderMapSC_1ac52d57740d5b2d4527fe424e626abead" kindref="member">face_sz</ref><sp/>*<sp/>3);</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a12db1739023242c18451a91fc5f912a1" kindref="member">curve</ref><sp/>=<sp/><ref refid="classRenderMapSC_1ae7c3ced4b9ea471a81a7749148fa5617" kindref="member">facecurve</ref><sp/>*<sp/>(fabsf(du)<sp/>+<sp/>fabsf(dv))<sp/>*<sp/>.5f;</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a3b1bd636b7d8fcf4213b5e63e4d0134d" kindref="member">bary</ref><sp/>=<sp/>BaryCoords(<ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>[0],<sp/><ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>[1],<sp/><ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>[2],<sp/><ref refid="classRenderMapSC_1a6950d68f79e2e251c19726459c384c31" kindref="member">pt</ref>);</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a2f2d48e7e6344a50203d7e1b6e5b4560" kindref="member">normal</ref><sp/>=<sp/>Normalize(<ref refid="classRenderMapSC_1a350a0b624b36d86e77857446e1a4940b" kindref="member">vnorm</ref>[<ref refid="classRenderMapSC_1a3f87e466679d4f709a04d8b4401a1abb" kindref="member">face</ref>][0]<sp/>*<sp/><ref refid="classRenderMapSC_1a3b1bd636b7d8fcf4213b5e63e4d0134d" kindref="member">bary</ref>[0]<sp/>+<sp/><ref refid="classRenderMapSC_1a350a0b624b36d86e77857446e1a4940b" kindref="member">vnorm</ref>[<ref refid="classRenderMapSC_1a3f87e466679d4f709a04d8b4401a1abb" kindref="member">face</ref>][1]<sp/>*<sp/><ref refid="classRenderMapSC_1a3b1bd636b7d8fcf4213b5e63e4d0134d" kindref="member">bary</ref>[1]<sp/>+<sp/><ref refid="classRenderMapSC_1a350a0b624b36d86e77857446e1a4940b" kindref="member">vnorm</ref>[<ref refid="classRenderMapSC_1a3f87e466679d4f709a04d8b4401a1abb" kindref="member">face</ref>][2]<sp/>*<sp/><ref refid="classRenderMapSC_1a3b1bd636b7d8fcf4213b5e63e4d0134d" kindref="member">bary</ref>[2]);</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a76789b6a8ffbbfb213e6dffc1bc5f476" kindref="member">orgview</ref><sp/>=<sp/>-<ref refid="classRenderMapSC_1a2f2d48e7e6344a50203d7e1b6e5b4560" kindref="member">normal</ref>;</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1ae6bcf7be08b5f1f1ecd1c85cdcbe2a95" kindref="member">norm</ref><sp/>=<sp/><ref refid="classRenderMapSC_1a2f2d48e7e6344a50203d7e1b6e5b4560" kindref="member">normal</ref>;</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a819339af8e7ab1dcab878328b34c42a3" kindref="member">view</ref><sp/>=<sp/><ref refid="classRenderMapSC_1a76789b6a8ffbbfb213e6dffc1bc5f476" kindref="member">orgview</ref>;</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/>BOOL<sp/><ref refid="classRenderMapSC_1a02730738d474566752249e8887550c56" kindref="member">InMtlEditor</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;<sp/>}</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a59241f8f332347f6caee53b19eaa8733" kindref="member">Antialias</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;<sp/>}</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a5d1dd7326c02925250065b4047bb3937" kindref="member">ProjType</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/>LightDesc<sp/>*<ref refid="classRenderMapSC_1aa60dff568a009be99db3fdfbb01285f2" kindref="member">Light</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a7d1792b80536cf282521a136ef014544" kindref="member">light</ref>[n];<sp/>}</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/>TimeValue<sp/><ref refid="classRenderMapSC_1ae9ccaa034ded6acab458c996c90b8e93" kindref="member">CurTime</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1aa096feae82a54412fba08010bae85316" kindref="member">curtime</ref>;<sp/>}</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/>INode<sp/>*<ref refid="classRenderMapSC_1a2d9adea40912fccaea972c1416e2f911" kindref="member">Node</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1ad1ba24144f3301418ac3f4af70389aa3" kindref="member">node</ref>;<sp/>}</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/>Object<sp/>*<ref refid="classRenderMapSC_1a1b4f8f8fa6d0f0bbe9315e2f3be2b14b" kindref="member">GetEvalObject</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="4105"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classRenderMapSC_1ad1ba24144f3301418ac3f4af70389aa3" kindref="member">node</ref>)</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1ad1ba24144f3301418ac3f4af70389aa3" kindref="member">node</ref>-&gt;EvalWorldState(<ref refid="classRenderMapSC_1aa096feae82a54412fba08010bae85316" kindref="member">curtime</ref>).obj;</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1a8b9570fd8bbadaa29d50c9ba5dcaaae9" kindref="member">BarycentricCoords</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a3b1bd636b7d8fcf4213b5e63e4d0134d" kindref="member">bary</ref>;<sp/>}</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a23d046cd1a1537cb0f6e59dffdb3de19" kindref="member">FaceNumber</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a3f87e466679d4f709a04d8b4401a1abb" kindref="member">face</ref>;<sp/>}</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1aa962b1a7a95dffd00df83fbeec6b6ba9" kindref="member">Normal</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1ae6bcf7be08b5f1f1ecd1c85cdcbe2a95" kindref="member">norm</ref>;<sp/>}</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a8d2335c381bd79f1991773a66f953133" kindref="member">SetNormal</ref>(Point3<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/><ref refid="classRenderMapSC_1ae6bcf7be08b5f1f1ecd1c85cdcbe2a95" kindref="member">norm</ref><sp/>=<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>;<sp/>}</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1a1e2bb29d23e55428043188d12083e1c7" kindref="member">OrigNormal</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a2f2d48e7e6344a50203d7e1b6e5b4560" kindref="member">normal</ref>;<sp/>}</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a73c443ad5d622d8f99e4a733be605356" kindref="member">Curve</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a12db1739023242c18451a91fc5f912a1" kindref="member">curve</ref>;<sp/>}</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1a6279b187f2b69f1a233206ea08677ad3" kindref="member">GNormal</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a31917ec5b0d38da7851b01d9d27f7235" kindref="member">facenorm</ref>;<sp/>}</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1a32a8bcf429cd69a36685f141df2867b2" kindref="member">CamPos</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Point3(0,<sp/>0,<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1a0cb2d2616d3ecf7b29ab565c8f99e48a" kindref="member">V</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a819339af8e7ab1dcab878328b34c42a3" kindref="member">view</ref>;<sp/>}</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a3e7a1fa93f763cc1d89fe9f32d219eee" kindref="member">SetView</ref>(Point3<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/><ref refid="classRenderMapSC_1a819339af8e7ab1dcab878328b34c42a3" kindref="member">view</ref><sp/>=<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>;<sp/>}</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1aeedf2f7b95ecdb519caddf066d1b6e96" kindref="member">OrigView</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a76789b6a8ffbbfb213e6dffc1bc5f476" kindref="member">orgview</ref>;<sp/>}</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1aa5d24d4e879a707f677b779436aac374" kindref="member">ReflectVector</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="4122"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>VN<sp/>=<sp/>-DotProd(<ref refid="classRenderMapSC_1a819339af8e7ab1dcab878328b34c42a3" kindref="member">view</ref>,<sp/><ref refid="classRenderMapSC_1ae6bcf7be08b5f1f1ecd1c85cdcbe2a95" kindref="member">norm</ref>);</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Normalize(2.0f<sp/>*<sp/>VN<sp/>*<sp/><ref refid="classRenderMapSC_1ae6bcf7be08b5f1f1ecd1c85cdcbe2a95" kindref="member">norm</ref><sp/>+<sp/><ref refid="classRenderMapSC_1a819339af8e7ab1dcab878328b34c42a3" kindref="member">view</ref>);</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1af4c3eab0f178c189e96a304a4699f0af" kindref="member">RefractVector</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ior)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="4127"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>N<sp/>=<sp/><ref refid="classRenderMapSC_1aa962b1a7a95dffd00df83fbeec6b6ba9" kindref="member">Normal</ref>();</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>VN,<sp/>nur,<sp/>k;</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/>VN<sp/>=<sp/>DotProd(-<ref refid="classRenderMapSC_1a819339af8e7ab1dcab878328b34c42a3" kindref="member">view</ref>,<sp/>N);</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backFace)</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nur<sp/>=<sp/>ior;</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nur<sp/>=<sp/>(ior<sp/>!=<sp/>0.0f)<sp/>?<sp/>1.0f<sp/>/<sp/>ior<sp/>:<sp/>1.0f;</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>=<sp/>1.0f<sp/>-<sp/>nur<sp/>*<sp/>nur<sp/>*<sp/>(1.0f<sp/>-<sp/>VN<sp/>*<sp/>VN);</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&lt;=<sp/>0.0f)</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>internal<sp/>reflection:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1aa5d24d4e879a707f677b779436aac374" kindref="member">ReflectVector</ref>();</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nur<sp/>*<sp/>VN<sp/>-<sp/>sqrtf(k))<sp/>*<sp/>N<sp/>+<sp/>nur<sp/>*<sp/><ref refid="classRenderMapSC_1a819339af8e7ab1dcab878328b34c42a3" kindref="member">view</ref>;</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1ae68b5cbbb73cae8b0395c5ea292c7f41" kindref="member">P</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a6950d68f79e2e251c19726459c384c31" kindref="member">pt</ref>;<sp/>}</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1af2bff2126dbad69cb73ade35f5cb1ff5" kindref="member">DP</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a0292a054b21cf51563aa0efd60f07699" kindref="member">dpt</ref>;<sp/>}</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1af2bff2126dbad69cb73ade35f5cb1ff5" kindref="member">DP</ref>(Point3<sp/>&amp;dx,<sp/>Point3<sp/>&amp;dy)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="4149"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/><sp/>dx<sp/>=<sp/><ref refid="classRenderMapSC_1a1f7d5f9902b42ceaf1d66b73a39a9a19" kindref="member">dpt_dx</ref>;</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/>dy<sp/>=<sp/><ref refid="classRenderMapSC_1abea445424fb55f2033b721c2231dc5eb" kindref="member">dpt_dy</ref>;</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1aa93ce41830cebc962ec0d2cb06fb7b74" kindref="member">PObj</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a6950d68f79e2e251c19726459c384c31" kindref="member">pt</ref><sp/>*<sp/><ref refid="classRenderMapSC_1a08c73cc8594ec2f60f557f5cd89cb799" kindref="member">cam2obj</ref>;<sp/>}</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1a15acae2c9523c8e4ab92b1464236da4c" kindref="member">DPObj</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VectorTransform(<ref refid="classRenderMapSC_1a0292a054b21cf51563aa0efd60f07699" kindref="member">dpt</ref>,<sp/><ref refid="classRenderMapSC_1a08c73cc8594ec2f60f557f5cd89cb799" kindref="member">cam2obj</ref>);<sp/>}</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/>Box3<sp/><ref refid="classRenderMapSC_1a6404b08de7835f0b6c258d89d45eccb9" kindref="member">ObjectBox</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1abe6bbcc43421e86a5f76631d8aa9147a" kindref="member">objbox</ref>;<sp/>}</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1a060bee78c9c16a8ec6253c2eb61e3022" kindref="member">PObjRelBox</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="4157"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>w<sp/>=<sp/><ref refid="classRenderMapSC_1abe6bbcc43421e86a5f76631d8aa9147a" kindref="member">objbox</ref>.Width()<sp/>*<sp/>.5f,<sp/>c<sp/>=<sp/><ref refid="classRenderMapSC_1abe6bbcc43421e86a5f76631d8aa9147a" kindref="member">objbox</ref>.Center();</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>=<sp/><ref refid="classRenderMapSC_1aa93ce41830cebc962ec0d2cb06fb7b74" kindref="member">PObj</ref>();</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>.x<sp/>=<sp/>(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>.x<sp/>-<sp/>c.x)<sp/>/<sp/>w.x;</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>.y<sp/>=<sp/>(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>.y<sp/>-<sp/>c.y)<sp/>/<sp/>w.y;</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>.z<sp/>=<sp/>(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>.z<sp/>-<sp/>c.z)<sp/>/<sp/>w.z;</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1a9f62d066ea92af1dbe49cd5321960f07" kindref="member">DPObjRelBox</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="4166"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>w<sp/>=<sp/><ref refid="classRenderMapSC_1abe6bbcc43421e86a5f76631d8aa9147a" kindref="member">objbox</ref>.Width()<sp/>*<sp/>.5f;</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>=<sp/><ref refid="classRenderMapSC_1a15acae2c9523c8e4ab92b1464236da4c" kindref="member">DPObj</ref>();</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>.x<sp/>=<sp/>(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>.x)<sp/>/<sp/>w.x;</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>.y<sp/>=<sp/>(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>.y)<sp/>/<sp/>w.y;</highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>.z<sp/>=<sp/>(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>.z)<sp/>/<sp/>w.z;</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a4d90226c11a4d017432ffc8d07322ea1" kindref="member">ScreenUV</ref>(Point2<sp/>&amp;uv,<sp/>Point2<sp/>&amp;duv)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="4175"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/>uv<sp/>=<sp/>Point2(0.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/>duv<sp/>=<sp/>Point2(0.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/>IPoint2<sp/><ref refid="classRenderMapSC_1a261cc9f4278d2bd7983a1268945b590b" kindref="member">ScreenCoord</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IPoint2(0,<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1aa8b19c4f4f3d50abb712e6106fee60dd" kindref="member">UVW</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="4181"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a4e01aca88a143357f17bdb5310c14e86" kindref="member">gettv</ref>(ch);</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a4d70eca225917a6ed3b582ee60678483" kindref="member">tv</ref>[ch][0]<sp/>*<sp/><ref refid="classRenderMapSC_1a3b1bd636b7d8fcf4213b5e63e4d0134d" kindref="member">bary</ref>[0]<sp/>+<sp/><ref refid="classRenderMapSC_1a4d70eca225917a6ed3b582ee60678483" kindref="member">tv</ref>[ch][1]<sp/>*<sp/><ref refid="classRenderMapSC_1a3b1bd636b7d8fcf4213b5e63e4d0134d" kindref="member">bary</ref>[1]<sp/>+<sp/><ref refid="classRenderMapSC_1a4d70eca225917a6ed3b582ee60678483" kindref="member">tv</ref>[ch][2]<sp/>*<sp/><ref refid="classRenderMapSC_1a3b1bd636b7d8fcf4213b5e63e4d0134d" kindref="member">bary</ref>[2];</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1ab2d2b6a1cde47f7648a787360636ec15" kindref="member">DUVW</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="4186"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a4e01aca88a143357f17bdb5310c14e86" kindref="member">gettv</ref>(ch);</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pabs(<ref refid="classRenderMapSC_1a4d70eca225917a6ed3b582ee60678483" kindref="member">tv</ref>[ch][1]<sp/>-<sp/><ref refid="classRenderMapSC_1a4d70eca225917a6ed3b582ee60678483" kindref="member">tv</ref>[ch][0])<sp/>+<sp/>pabs(<ref refid="classRenderMapSC_1a4d70eca225917a6ed3b582ee60678483" kindref="member">tv</ref>[ch][2]<sp/>-<sp/><ref refid="classRenderMapSC_1a4d70eca225917a6ed3b582ee60678483" kindref="member">tv</ref>[ch][0]))<sp/>*<sp/>.5f<sp/>*<sp/><ref refid="classRenderMapSC_1afedbdaccd0062df64a296948c542450c" kindref="member">sz_ratio</ref>;</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1a16a336e32b9536522ba78f52512db3a1" kindref="member">DPdUVW</ref>(Point3<sp/>dP[3],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="4191"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRenderMapSC_1a4e01aca88a143357f17bdb5310c14e86" kindref="member">gettv</ref>(ch);</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>bvec[3];</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/><sp/>ComputeBumpVectors(<ref refid="classRenderMapSC_1a4d70eca225917a6ed3b582ee60678483" kindref="member">tv</ref>[ch],<sp/><ref refid="classRenderMapSC_1af8ac316e6010bd9fdd93480758c75ebf" kindref="member">vp</ref>,<sp/>bvec);</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dP[i]<sp/>=<sp/>Normalize(bvec[i]);</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRenderMapSC_1ae1d9cd88a61a463a59b6197ef22e441e" kindref="member">GetBGColor</ref>(Color<sp/>&amp;co,<sp/>Color<sp/>&amp;tr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fogBG)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="4199"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/><sp/><sp/>co<sp/>=<sp/><ref refid="classRenderMapSC_1a2cbedeef8f3dac0a18a08f8099373115" kindref="member">back_color</ref>;</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.Black();</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1aae7d088425fbb401c8f677716eeb18a7" kindref="member">PointTo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/>RefFrame<sp/>ito)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="4204"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ito)</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>REF_WORLD:</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>REF_CAMERA:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>REF_OBJECT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>*<sp/><ref refid="classRenderMapSC_1a08c73cc8594ec2f60f557f5cd89cb799" kindref="member">cam2obj</ref>;</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1ace138a9a1e884cce05a3055e96860618" kindref="member">PointFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/>RefFrame<sp/>ito)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="4214"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ito)</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>REF_WORLD:</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>REF_CAMERA:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>REF_OBJECT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>*<sp/><ref refid="classRenderMapSC_1ac614b87bf9774ec85a46ff0b97b9d28e" kindref="member">obj2cam</ref>;</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1a406ac66880c8091ea62603adf458cde6" kindref="member">VectorTo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/>RefFrame<sp/>ito)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="4224"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ito)</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>REF_WORLD:</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>REF_CAMERA:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>REF_OBJECT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VectorTransform(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/><ref refid="classRenderMapSC_1a08c73cc8594ec2f60f557f5cd89cb799" kindref="member">cam2obj</ref>);</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/>Point3<sp/><ref refid="classRenderMapSC_1a83a408092e2c6e106ca0fc28a638d6b9" kindref="member">VectorFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/>RefFrame<sp/>ito)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="4234"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ito)</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>REF_WORLD:</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>REF_CAMERA:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>REF_OBJECT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VectorTransform(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/><ref refid="classRenderMapSC_1ac614b87bf9774ec85a46ff0b97b9d28e" kindref="member">obj2cam</ref>);</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4243"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"></highlight></codeline>
<codeline lineno="4245"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>DagUtil::render_map()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4246"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!ip-&gt;GetSelNodeCount())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4247"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{ip-&gt;DisplayTempPrompt(GetString(IDS_NO_SEL));return;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4248"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_edint(elm_wd,lm_wd);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4249"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_edint(elm_ht,lm_ht);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4250"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_edint(elm_mapch,lm_mapch);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4251"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!TheManager-&gt;SelectFileOutput(&amp;rmap_bi,ip-&gt;GetMAXHWnd()))<sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4252"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmap_bi.SetType(BMM_TRUE_32);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4253"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmap_bi.SetWidth(lm_wd);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4254"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmap_bi.SetHeight(lm_ht);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4255"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmap_bi.SetFlags(MAP_HAS_ALPHA);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4256"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bitmap<sp/>*bm=TheManager-&gt;Create(&amp;rmap_bi);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4257"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!bm)<sp/>{ip-&gt;DisplayTempPrompt(GetString(IDS_CANT_SAVE_BITMAP));return;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4258"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*map=new<sp/>char[lm_wd*lm_ht];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4259"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(map);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4260"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(map,0,lm_wd*lm_ht);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4261"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TimeValue<sp/>time=ip-&gt;GetTime();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4262"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderMapSC<sp/>sc(time,rmap_lighting,ip);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4263"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>nn=ip-&gt;GetSelNodeCount(),nr=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4264"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>du=1.f/lm_wd;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4265"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>dv=1.f/lm_ht;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4266"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>lastperc=0,perc;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4267"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;ProgressStart(_T(&quot;Rendering...&quot;),TRUE,dummyprogressfn,NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4268"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bm-&gt;Display();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4269"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>ni=0;ni&lt;nn;++ni)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4270"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INode<sp/>*node=ip-&gt;GetSelNode(ni);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4271"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!node)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4272"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*mtl=node-&gt;GetMtl();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4273"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!mtl)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4274"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtl-&gt;Update(time,FOREVER);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4275"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;ProgressUpdate(perc=ni*100/nn);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4276"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc.setnode(node);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4277"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>ObjectState<sp/>&amp;os=node-&gt;EvalWorldState(time);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4278"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!os.obj)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4279"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!os.obj-&gt;CanConvertToType(Class_ID(TRIOBJ_CLASS_ID,0)))<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4280"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TriObject<sp/>*tri=(TriObject*)os.obj-&gt;ConvertToType(time,Class_ID(TRIOBJ_CLASS_ID,0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4281"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!tri)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4282"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mesh<sp/>&amp;m=tri-&gt;mesh;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4283"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(m.mapSupport(lm_mapch))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4284"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4285"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc.setmesh(m);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4286"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Face<sp/>*f=m.faces;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4287"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVFace<sp/>*tf=m.mapFaces(lm_mapch);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4288"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>*tv=m.mapVerts(lm_mapch);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4289"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>fi=0;fi&lt;m.numFaces;++fi,++f,++tf)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4290"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if((fi&amp;31)==0)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4291"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(ip-&gt;GetCancel())<sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4292"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;ProgressUpdate(perc=(ni*m.numFaces+fi)*100/(nn*m.numFaces));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4293"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(perc-lastperc&gt;=10)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4294"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bm-&gt;RefreshWindow();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4295"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastperc=perc;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4296"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4297"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4298"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc.setface(fi,lm_mapch);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4299"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>t0=tv[tf-&gt;t[0]]-Point3(du,dv,0.f)*.5f;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4300"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>t1=tv[tf-&gt;t[1]]-Point3(du,dv,0.f)*.5f;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4301"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>t2=tv[tf-&gt;t[2]]-Point3(du,dv,0.f)*.5f;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4302"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box3<sp/>box;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4303"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box+=t0;<sp/>box+=t1;<sp/>box+=t2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4304"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>u0=floorf(box.pmin.x*lm_wd);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4305"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>v0=floorf(box.pmin.y*lm_ht);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4306"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>u1=ceilf(box.pmax.x*lm_wd);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4307"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>v1=ceilf(box.pmax.y*lm_ht);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4308"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>A[3],B[3],C[3];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4309"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/><sp/>MAKELINE(p0,p1,A,B,C)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="4310"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>a=-(p1.y-p0.y)*lm_ht;<sp/>\</highlight></codeline>
<codeline lineno="4311"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>b=(p1.x-p0.x)*lm_wd;<sp/>\</highlight></codeline>
<codeline lineno="4312"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>l=sqrt(a*a+b*b);<sp/>\</highlight></codeline>
<codeline lineno="4313"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(l==0)<sp/>A=B=0;<sp/>else<sp/>{A=a/l;B=b/l;}<sp/>\</highlight></codeline>
<codeline lineno="4314"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C=-(A*p0.x*lm_wd+B*p0.y*lm_ht);<sp/>\</highlight></codeline>
<codeline lineno="4315"><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4316"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAKELINE(t0,t1,A[0],B[0],C[0]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4317"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAKELINE(t1,t2,A[1],B[1],C[1]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4318"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAKELINE(t2,t0,A[2],B[2],C[2]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4319"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>MAKELINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4320"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(A[0]*t2.x*lm_wd+B[0]*t2.y*lm_ht+C[0]&lt;0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4321"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;i&lt;3;++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4322"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A[i]=-A[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4323"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B[i]=-B[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4324"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[i]=-C[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4325"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4326"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>y=v0%lm_ht;<sp/>if(y&lt;0)<sp/>y+=lm_ht;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4327"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>x0=u0%lm_wd;<sp/>if(x0&lt;0)<sp/>x0+=lm_wd;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4328"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>v=v0;v&lt;=v1;++v,y=(++y&gt;=lm_ht?0:y))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4329"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>tv=v/float(lm_ht)+dv*.5f;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4330"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>de[3];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4331"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;i&lt;3;++i)<sp/>de[i]=B[i]*v+C[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4332"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>u=u0,x=x0;u&lt;=u1;++u,x=(++x&gt;=lm_wd?0:x))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4333"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>bord=false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4334"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;i&lt;3;++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4335"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>d=A[i]*u+de[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4336"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(d&gt;=0)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4337"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(d&lt;=-1.5f)<sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4338"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bord=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4339"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4340"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(i&lt;3)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4341"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(map[y*lm_wd+x]==1)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4342"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>tu=u/float(lm_wd)+du*.5f;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4343"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc.ResetOutput();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4344"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc.setpt(tu,tv,du,dv);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4345"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtl-&gt;Shade(sc);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4346"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc.out.c.ClampMinMax();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4347"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>a=1-(sc.out.t.r+sc.out.t.g+sc.out.t.b)/3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4348"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(a&lt;0)<sp/>a=0;<sp/>else<sp/>if(a&gt;1)<sp/>a=1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4349"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMM_Color_64<sp/>c;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4350"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.r=sc.out.c.r*0xFFFF;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4351"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.g=sc.out.c.g*0xFFFF;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4352"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.b=sc.out.c.b*0xFFFF;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4353"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.a=a*0xFFFF;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4354"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verify(bm-&gt;PutPixels(x,lm_ht-1-y,1,&amp;c));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4355"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map[y*lm_wd+x]=(bord?2:1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4356"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4357"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4358"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4359"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4360"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(tri!=os.obj)<sp/>delete<sp/>tri;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4361"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(ip-&gt;GetCancel())<sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4362"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bm-&gt;RefreshWindow();<sp/>lastperc=perc;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4363"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4364"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete[]<sp/>map;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4365"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bm-&gt;UnDisplay();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4366"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;ProgressUpdate(100,FALSE,_T(&quot;Saving<sp/>bitmap...&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4367"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(nr<sp/>&amp;&amp;<sp/>!ip-&gt;GetCancel())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4368"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(bm-&gt;OpenOutput(&amp;rmap_bi)!=BMMRES_SUCCESS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4369"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{ip-&gt;DisplayTempPrompt(GetString(IDS_CANT_SAVE_BITMAP));return;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4370"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(bm-&gt;Write(&amp;rmap_bi)!=BMMRES_SUCCESS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4371"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{ip-&gt;DisplayTempPrompt(GetString(IDS_CANT_SAVE_BITMAP));return;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4372"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bm-&gt;Close(&amp;rmap_bi);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4373"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4374"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bm-&gt;DeleteThis();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4375"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;ProgressEnd();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4376"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4377"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>s;<sp/>s.printf(GetString(IDS_OBJS_RENDERED),nr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4378"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;DisplayTempPrompt(s);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4379"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4380"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4381"><highlight class="normal"></highlight></codeline>
<codeline lineno="4382"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a300e270e8c168379b46b935a80c32c8c" kindref="member">extrude_spline</ref>(TimeValue<sp/>time,<sp/>INode<sp/>&amp;node,<sp/>BezierShape<sp/>&amp;,<sp/>Mesh<sp/>&amp;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1a1ae9d9605c00811251e50d0567e6c3ad" kindref="member">ht</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tile,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>grav,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>steps,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>up,</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>usetang);</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"></highlight></codeline>
<codeline lineno="4385"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1a9e7de6616d42c28bb14268d24d0fc30b" kindref="member">DagUtil::make_grass</ref>()</highlight></codeline>
<codeline lineno="4386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNodeCount()<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1aeb25f666ad209c4102ae5e84880444b0" kindref="member">IDS_SEL_1_OBJ</ref>));</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1aa83b7ab53967617e351caeeab52307e9" kindref="member">egrassht</ref>,<sp/><ref refid="classDagUtil_1ac5c585bd63f38d02e10d332a2dd704db" kindref="member">grass_ht</ref>);</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1a97678d56e41e3e779d26b6f59832dcf0" kindref="member">egrasstile</ref>,<sp/><ref refid="classDagUtil_1aea321e22da279e7c7caaaec85e8b4719" kindref="member">grass_tile</ref>);</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1a08596f76eeb74eeb07a2ab53e00f7393" kindref="member">egrassg</ref>,<sp/><ref refid="classDagUtil_1a7c445ed4470f7ab7e99c3e7f61fbf32b" kindref="member">grass_g</ref>);</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a14a306dd89ac4b563b5da49c18afbc29" kindref="member">get_edint</ref>(<ref refid="classDagUtil_1a5f1ce60f48928a4b13c682edf709708a" kindref="member">egrasssegs</ref>,<sp/><ref refid="classDagUtil_1afeaa53771243f92e746aae34e781ae95" kindref="member">grass_segs</ref>);</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a14a306dd89ac4b563b5da49c18afbc29" kindref="member">get_edint</ref>(<ref refid="classDagUtil_1acce27f1ac1608bcb23ae10e528b78ec8" kindref="member">egrasssteps</ref>,<sp/><ref refid="classDagUtil_1a6cb60175f29e2ed5ded018ee7b514a5d" kindref="member">grass_steps</ref>);</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1aa6fae51583ded7240363967b452f7d66" kindref="member">get_chkbool</ref>(<ref refid="resource_8h_1a721069e44bdc902889c85953cc4692e2" kindref="member">IDC_GRASSUP</ref>,<sp/><ref refid="classDagUtil_1a09ca1c80b75e7beae5796d8472c8f810" kindref="member">grass_up</ref>,<sp/><ref refid="classDagUtil_1ae10cb6fe69717782759a594e13a45a46" kindref="member">splinesAndSmoothRoll</ref>);</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1aa6fae51583ded7240363967b452f7d66" kindref="member">get_chkbool</ref>(<ref refid="resource_8h_1a29420ad4731f701f7d9af22088202af4" kindref="member">IDC_GRASSUSETANG</ref>,<sp/><ref refid="classDagUtil_1a01f2f910a844dc6f5f614b347b185a0c" kindref="member">grass_usetang</ref>,<sp/><ref refid="classDagUtil_1ae10cb6fe69717782759a594e13a45a46" kindref="member">splinesAndSmoothRoll</ref>);</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/>TimeValue<sp/>time<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/>INode<sp/>*node<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNode(0);</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/>Object<sp/>*obj<sp/>=<sp/>node-&gt;EvalWorldState(time).obj;</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/>assert(obj);</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj-&gt;SuperClassID()<sp/>!=<sp/>SHAPE_CLASS_ID)</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1ae3ea314c8974162dcb08cb781f088a73" kindref="member">IDS_MUST_BE_SPLINE</ref>));</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/>ShapeObject<sp/>*shobj<sp/>=<sp/>(ShapeObject<sp/>*)obj;</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shobj-&gt;CanMakeBezier())</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1ae3ea314c8974162dcb08cb781f088a73" kindref="member">IDS_MUST_BE_SPLINE</ref>));</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/>BezierShape<sp/>shp;</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/>shobj-&gt;MakeBezier(time,<sp/>shp);</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/>Mesh<sp/>mesh;</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a300e270e8c168379b46b935a80c32c8c" kindref="member">extrude_spline</ref>(time,<sp/>*node,<sp/>shp,<sp/>mesh,<sp/><ref refid="classDagUtil_1ac5c585bd63f38d02e10d332a2dd704db" kindref="member">grass_ht</ref>,<sp/><ref refid="classDagUtil_1aea321e22da279e7c7caaaec85e8b4719" kindref="member">grass_tile</ref>,<sp/><ref refid="classDagUtil_1a7c445ed4470f7ab7e99c3e7f61fbf32b" kindref="member">grass_g</ref>,<sp/><ref refid="classDagUtil_1afeaa53771243f92e746aae34e781ae95" kindref="member">grass_segs</ref>,<sp/><ref refid="classDagUtil_1a6cb60175f29e2ed5ded018ee7b514a5d" kindref="member">grass_steps</ref>,<sp/><ref refid="classDagUtil_1a09ca1c80b75e7beae5796d8472c8f810" kindref="member">grass_up</ref>,<sp/><ref refid="classDagUtil_1a01f2f910a844dc6f5f614b347b185a0c" kindref="member">grass_usetang</ref>);</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mesh.numFaces)</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/>TriObject<sp/>*tri<sp/>=<sp/>CreateNewTriObject();</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/>assert(tri);</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/>tri-&gt;mesh<sp/>=<sp/>mesh;</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/>Mtl<sp/>*mtl<sp/>=<sp/>node-&gt;GetMtl();</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/>theHold.Begin();</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/>node<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;CreateObjectNode(tri);</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/>assert(node);</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/>theHold.Accept(_T(</highlight><highlight class="stringliteral">&quot;Extrude<sp/>spline&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/>TSTR<sp/>name<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;ExtrSpline&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;MakeNameUnique(name);</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/>node-&gt;SetName(name);</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/>node-&gt;SetMtl(mtl);</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/>node-&gt;BackCull(FALSE);</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/>Matrix3<sp/>tm;</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/>tm.IdentityMatrix();</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/>node-&gt;SetNodeTM(time,<sp/>tm);</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(time);</highlight></codeline>
<codeline lineno="4437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"></highlight></codeline>
<codeline lineno="4439"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a5e48ebaa9a07e0a55e6bc239db9a458e" kindref="member">project_spline_on_scene</ref>(Interface<sp/>*,<sp/>INode<sp/>&amp;,<sp/>BezierShape<sp/>&amp;shp,<sp/>BezierShape<sp/>&amp;proj,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxseglen,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>optang,</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>optseglen);</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"></highlight></codeline>
<codeline lineno="4442"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1ab3845c84fc206ffd7fae59d248dc3ea6" kindref="member">DagUtil::project_spline</ref>()</highlight></codeline>
<codeline lineno="4443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNodeCount()<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1aeb25f666ad209c4102ae5e84880444b0" kindref="member">IDS_SEL_1_OBJ</ref>));</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1a0bdcc7d7bf0cc401f2517e8c029e5e16" kindref="member">epjs_maxseglen</ref>,<sp/><ref refid="classDagUtil_1a5ca58d935c1191eeb79a0640ceac06f1" kindref="member">pjspl_maxseglen</ref>);</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1a95411d618f35980bf9a4ab958aa1bbcf" kindref="member">epjs_optseglen</ref>,<sp/><ref refid="classDagUtil_1adbd30a8376e7e899396ea9141861f27b" kindref="member">pjspl_optseglen</ref>);</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1ab0f0424bae942f9a6b4f9d4b27d6ce1d" kindref="member">get_edfloat</ref>(<ref refid="classDagUtil_1aa06567671a0f76a4bc105d4d24e27d51" kindref="member">epjs_optang</ref>,<sp/><ref refid="classDagUtil_1adcdfa16bced9c2fe0b5cdd87dc032a97" kindref="member">pjspl_optang</ref>);</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/>TimeValue<sp/>time<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/>INode<sp/>*node<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNode(0);</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/>Object<sp/>*obj<sp/>=<sp/>node-&gt;EvalWorldState(time).obj;</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/>assert(obj);</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj-&gt;SuperClassID()<sp/>!=<sp/>SHAPE_CLASS_ID)</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1ae3ea314c8974162dcb08cb781f088a73" kindref="member">IDS_MUST_BE_SPLINE</ref>));</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/>ShapeObject<sp/>*shobj<sp/>=<sp/>(ShapeObject<sp/>*)obj;</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shobj-&gt;CanMakeBezier())</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;DisplayTempPrompt(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1ae3ea314c8974162dcb08cb781f088a73" kindref="member">IDS_MUST_BE_SPLINE</ref>));</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/>BezierShape<sp/>shp;</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/>shobj-&gt;MakeBezier(time,<sp/>shp);</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/>SplineShape<sp/>*splshp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SplineShape;</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/>assert(splshp);</highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a5e48ebaa9a07e0a55e6bc239db9a458e" kindref="member">project_spline_on_scene</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>,<sp/>*node,<sp/>shp,<sp/>splshp-&gt;shape,<sp/><ref refid="classDagUtil_1a5ca58d935c1191eeb79a0640ceac06f1" kindref="member">pjspl_maxseglen</ref>,<sp/>DegToRad(<ref refid="classDagUtil_1adcdfa16bced9c2fe0b5cdd87dc032a97" kindref="member">pjspl_optang</ref>),<sp/><ref refid="classDagUtil_1adbd30a8376e7e899396ea9141861f27b" kindref="member">pjspl_optseglen</ref>);</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(splshp-&gt;shape.splineCount<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>splshp;</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/>Mtl<sp/>*mtl<sp/>=<sp/>node-&gt;GetMtl();</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/>theHold.Begin();</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/>node<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;CreateObjectNode(splshp);</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/>assert(node);</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/>theHold.Accept(_T(</highlight><highlight class="stringliteral">&quot;Project<sp/>spline&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/>TSTR<sp/>name<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;ProjSpline&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;MakeNameUnique(name);</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/>node-&gt;SetName(name);</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/>node-&gt;SetMtl(mtl);</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/>Matrix3<sp/>tm;</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/>tm.IdentityMatrix();</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/>node-&gt;SetNodeTM(time,<sp/>tm);</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(time);</highlight></codeline>
<codeline lineno="4490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Point3<sp/>get_pt(Point3<sp/>&amp;v1,<sp/>Point3<sp/>&amp;v2,<sp/>Point3<sp/>&amp;nrm1,<sp/>Point3<sp/>&amp;nrm2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pow,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wh)</highlight></codeline>
<codeline lineno="4492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/>Point3<sp/>pr1<sp/>=<sp/>(v2<sp/>-<sp/>v1),<sp/>pr2<sp/>=<sp/>pr1;<sp/></highlight><highlight class="comment">//<sp/>Normalize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/>pr1<sp/>=<sp/>(pr1<sp/>-<sp/>DotProd(nrm1,<sp/>pr1)<sp/>*<sp/>nrm1);</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pr1=nrm1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/>pr1<sp/>*=<sp/>pow;</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/>pr2<sp/>=<sp/>(pr2<sp/>-<sp/>DotProd(nrm2,<sp/>pr2)<sp/>*<sp/>nrm2);</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pr2=nrm2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/>pr2<sp/>*=<sp/>pow;</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx<sp/>=<sp/>v1.x,<sp/>cx<sp/>=<sp/>pr1.x,<sp/>ax<sp/>=<sp/>pr2.x<sp/>-<sp/>2<sp/>*<sp/>v2.x<sp/>+<sp/>2<sp/>*<sp/>dx<sp/>+<sp/>cx,<sp/>bx<sp/>=<sp/>v2.x<sp/>-<sp/>ax<sp/>-<sp/>cx<sp/>-<sp/>dx;</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy<sp/>=<sp/>v1.y,<sp/>cy<sp/>=<sp/>pr1.y,<sp/>ay<sp/>=<sp/>pr2.y<sp/>-<sp/>2<sp/>*<sp/>v2.y<sp/>+<sp/>2<sp/>*<sp/>dy<sp/>+<sp/>cy,<sp/>by<sp/>=<sp/>v2.y<sp/>-<sp/>ay<sp/>-<sp/>cy<sp/>-<sp/>dy;</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dz<sp/>=<sp/>v1.z,<sp/>cz<sp/>=<sp/>pr1.z,<sp/>az<sp/>=<sp/>pr2.z<sp/>-<sp/>2<sp/>*<sp/>v2.z<sp/>+<sp/>2<sp/>*<sp/>dz<sp/>+<sp/>cz,<sp/>bz<sp/>=<sp/>v2.z<sp/>-<sp/>az<sp/>-<sp/>cz<sp/>-<sp/>dz;</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Point3(((ax<sp/>*<sp/>wh<sp/>+<sp/>bx)<sp/>*<sp/>wh<sp/>+<sp/>cx)<sp/>*<sp/>wh<sp/>+<sp/>dx,<sp/>((ay<sp/>*<sp/>wh<sp/>+<sp/>by)<sp/>*<sp/>wh<sp/>+<sp/>cy)<sp/>*<sp/>wh<sp/>+<sp/>dy,<sp/>((az<sp/>*<sp/>wh<sp/>+<sp/>bz)<sp/>*<sp/>wh<sp/>+<sp/>cz)<sp/>*<sp/>wh<sp/>+<sp/>dz);</highlight></codeline>
<codeline lineno="4504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"></highlight></codeline>
<codeline lineno="4506"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>neighbedge(Face<sp/>&amp;f,<sp/>DWORD<sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;hh1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;hh2)</highlight></codeline>
<codeline lineno="4507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/>DWORD<sp/>*v<sp/>=<sp/>f.getAllVerts();</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>hh1=hh2=-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/>v[0])</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/>hh1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/>hh2<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/>v[1])</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/>hh1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/>hh2<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/>hh1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/><sp/>hh2<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"></highlight></codeline>
<codeline lineno="4527"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whichEdge(Face<sp/>&amp;f,<sp/>DWORD<sp/>a,<sp/>DWORD<sp/>b)</highlight></codeline>
<codeline lineno="4528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/>DWORD<sp/>*v<sp/>=<sp/>f.getAllVerts();</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/>v[0])</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>v[1])</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>v[2])</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/>v[1])</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>v[0])</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>v[2])</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>=<sp/>v[2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>v[0])</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>v[1])</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"></highlight></codeline>
<codeline lineno="4552"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_partof_selquad(Mesh<sp/>&amp;m,<sp/>AdjEdgeList<sp/>&amp;ae,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vv1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vv2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fc1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;fc2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;v1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;v2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;v3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;v4,</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;he,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;he2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;dved)</highlight></codeline>
<codeline lineno="4554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(he<sp/>=<sp/>0;<sp/>he<sp/>&lt;<sp/>3;<sp/>++he)</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m.faces[fc1].getEdgeVis(he))</highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(he<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>he1;</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(he1<sp/>=<sp/>he<sp/>+<sp/>1;<sp/>he1<sp/>&lt;<sp/>3;<sp/>++he1)</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m.faces[fc1].getEdgeVis(he1))</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(he1<sp/>&lt;<sp/>3)</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).Clear(fc1);</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/><sp/>he1<sp/>=<sp/>whichEdge(m.faces[fc1],<sp/>vv1,<sp/>vv2);</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(he1<sp/>==<sp/>he)</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).Clear(fc1);</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/>v1<sp/>=<sp/>m.faces[fc1].v[(he<sp/>==<sp/>0)<sp/>?<sp/>2<sp/>:<sp/>(he<sp/>-<sp/>1)];</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/>v2<sp/>=<sp/>m.faces[fc1].v[he];</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/>v3<sp/>=<sp/>m.faces[fc1].v[(he<sp/>==<sp/>2)<sp/>?<sp/>0<sp/>:<sp/>(he<sp/>+<sp/>1)];</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/>dved<sp/>=<sp/>ae.FindEdge(v2,<sp/>v3);</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/>fc2<sp/>=<sp/>ae.edges[dved].f[0];</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc2<sp/>==<sp/>fc1)</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/><sp/><sp/>fc2<sp/>=<sp/>ae.edges[dved].f[1];</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/>he2<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc2<sp/>==<sp/>UNDEFINED)</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).Clear(fc1);</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).Clear(fc2);</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/><sp/>he2<sp/>=<sp/>whichEdge(m.faces[fc2],<sp/>v2,<sp/>v3);</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(he2<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).Clear(fc1);</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).Clear(fc2);</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/>m.faces[fc2].setEdgeVisFlags(EDGE_VIS,<sp/>EDGE_VIS,<sp/>EDGE_VIS);</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/>m.faces[fc2].setEdgeVis(he2,<sp/>EDGE_INVIS);</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).Set(fc2);</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(v4<sp/>=<sp/>0;<sp/>v4<sp/>&lt;<sp/>3;<sp/>++v4)</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.faces[fc2].v[v4]<sp/>!=<sp/>v2<sp/>&amp;&amp;<sp/>m.faces[fc2].v[v4]<sp/>!=<sp/>v3)</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v4<sp/>=<sp/>m.faces[fc2].v[v4];</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"></highlight></codeline>
<codeline lineno="4613"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Tab&lt;int&gt;<sp/>*recurse_fcsquads;</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Tab&lt;int&gt;<sp/>*recurse_fcs;</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Tab&lt;int&gt;<sp/>*recurse_dvEdges;</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Mesh<sp/>*recurse_m;</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>AdjEdgeList<sp/>*recurse_ae;</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"></highlight></codeline>
<codeline lineno="4619"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_recurse(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eds[4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vedb1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vedb2)</highlight></codeline>
<codeline lineno="4620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>4;<sp/>++k)</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ed1[2],<sp/>ed2[2];</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*int<sp/>vv1=m.faces[eds[k]/3].v[eds[k]%3];</highlight></codeline>
<codeline lineno="4626"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>vv2=m.faces[eds[k]/3].v[(eds[k]+)%3];</highlight></codeline>
<codeline lineno="4627"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>me=ae.FindEdge(vv1,vv2);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>meee<sp/>=<sp/>eds[k];</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vv1<sp/>=<sp/>recurse_ae-&gt;edges[meee].v[0];</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vv2<sp/>=<sp/>recurse_ae-&gt;edges[meee].v[1];</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fc1;</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f1<sp/>=<sp/>recurse_ae-&gt;edges[meee].f[0];</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f2<sp/>=<sp/>recurse_ae-&gt;edges[meee].f[1];</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f2<sp/>==<sp/>UNDEFINED<sp/>||<sp/>f1<sp/>==<sp/>UNDEFINED)</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(*recurse_m)[f1]<sp/>||<sp/>!<ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(*recurse_m)[f2])</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;fc<sp/>%d<sp/>%d&quot;,f1,f2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*recurse_fcs)[f1]<sp/>&amp;&amp;<sp/>(*recurse_fcs)[f2])</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*recurse_fcs)[f1])</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc1<sp/>=<sp/>f2;</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc1<sp/>=<sp/>f1;</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"></highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((recurse_m-&gt;faces[fc1].flags<sp/>&amp;<sp/>VIS_MASK)<sp/>==<sp/>EDGE_ALL)</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(*recurse_m).Clear(fc1);</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>he,<sp/>he2,<sp/>me;</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fc2;</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4;</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_partof_selquad(*recurse_m,<sp/>*recurse_ae,<sp/>vv1,<sp/>vv2,<sp/>fc1,<sp/>fc2,<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>he,<sp/>he2,<sp/>me))</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed1[0]<sp/>=<sp/>(he<sp/>==<sp/>2)<sp/>?<sp/>1<sp/>:<sp/>((he<sp/>==<sp/>1)<sp/>?<sp/>0<sp/>:<sp/>2);</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hh1,<sp/>hh2;</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbedge(recurse_m-&gt;faces[fc2],<sp/>v2,<sp/>hh1,<sp/>hh2);</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed2[0]<sp/>=<sp/>(hh1<sp/>==<sp/>he2)<sp/>?<sp/>hh2<sp/>:<sp/>hh1;</highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>3;<sp/>++k)</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>!=<sp/>he<sp/>&amp;&amp;<sp/>k<sp/>!=<sp/>ed1[0])</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed1[1]<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>3;<sp/>++k)</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>!=<sp/>he2<sp/>&amp;&amp;<sp/>k<sp/>!=<sp/>ed2[0])</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed2[1]<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ed1[0]+=f1*3;ed1[1]+=f1*3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ed2[0]+=f2*3;ed2[1]+=f2*3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>ed1[1];</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed1[1]<sp/>=<sp/>ed2[1];</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed2[1]<sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed1[0]<sp/>=<sp/>recurse_ae-&gt;FindEdge(recurse_m-&gt;faces[fc1].v[ed1[0]<sp/>%<sp/>3],<sp/>recurse_m-&gt;faces[fc1].v[(ed1[0]<sp/>+<sp/>1)<sp/>%<sp/>3]);</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed1[1]<sp/>=<sp/>recurse_ae-&gt;FindEdge(recurse_m-&gt;faces[fc2].v[ed1[1]<sp/>%<sp/>3],<sp/>recurse_m-&gt;faces[fc2].v[(ed1[1]<sp/>+<sp/>1)<sp/>%<sp/>3]);</highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed2[0]<sp/>=<sp/>recurse_ae-&gt;FindEdge(recurse_m-&gt;faces[fc2].v[ed2[0]<sp/>%<sp/>3],<sp/>recurse_m-&gt;faces[fc2].v[(ed2[0]<sp/>+<sp/>1)<sp/>%<sp/>3]);</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed2[1]<sp/>=<sp/>recurse_ae-&gt;FindEdge(recurse_m-&gt;faces[fc1].v[ed2[1]<sp/>%<sp/>3],<sp/>recurse_m-&gt;faces[fc1].v[(ed2[1]<sp/>+<sp/>1)<sp/>%<sp/>3]);</highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*recurse_dvEdges)[ed1[0]]<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*recurse_dvEdges)[ed1[0]]<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*recurse_dvEdges)[ed2[1]]<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*recurse_dvEdges)[ed2[1]]<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*recurse_dvEdges)[ed1[1]]<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*recurse_dvEdges)[ed1[1]]<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*recurse_dvEdges)[ed2[0]]<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*recurse_dvEdges)[ed2[0]]<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s)</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*recurse_dvEdges)[ed1[0]]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*recurse_dvEdges)[ed1[1]]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*recurse_dvEdges)[ed2[0]]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*recurse_dvEdges)[ed2[1]]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*recurse_dvEdges)[ed2[0]]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*recurse_dvEdges)[ed2[1]]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*recurse_dvEdges)[ed1[0]]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*recurse_dvEdges)[ed1[1]]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*recurse_fcsquads)[fc1]<sp/>=<sp/>fc2;</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*recurse_fcsquads)[fc2]<sp/>=<sp/>fc1;</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*recurse_fcs)[fc1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*recurse_fcs)[fc2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eds[4];</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eds[0]<sp/>=<sp/>ed1[0];</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eds[1]<sp/>=<sp/>ed1[1];</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eds[2]<sp/>=<sp/>ed2[0];</highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eds[3]<sp/>=<sp/>ed2[1];</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;rec&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_recurse(eds,<sp/>vedb1,<sp/>vedb2);</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"></highlight></codeline>
<codeline lineno="4738"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>recurse(Tab&lt;int&gt;<sp/>&amp;fcsquads,<sp/>Tab&lt;int&gt;<sp/>&amp;fcs,<sp/>Tab&lt;int&gt;<sp/>&amp;dvEdges,<sp/>Mesh<sp/>&amp;m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eds[4],<sp/>AdjEdgeList<sp/>&amp;ae,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vedb1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vedb2,</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>trne)</highlight></codeline>
<codeline lineno="4740"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/>recurse_fcsquads<sp/>=<sp/>&amp;fcsquads;</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/>recurse_fcs<sp/>=<sp/>&amp;fcs;</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/>recurse_dvEdges<sp/>=<sp/>&amp;dvEdges;</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/>recurse_m<sp/>=<sp/>&amp;m;</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/>recurse_ae<sp/>=<sp/>&amp;ae;</highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/>_recurse(eds,<sp/>vedb1,<sp/>vedb2);</highlight></codeline>
<codeline lineno="4747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"></highlight></codeline>
<codeline lineno="4749"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MESHSMOOTHMAPS_SUPPORT<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4750"><highlight class="normal"></highlight></codeline>
<codeline lineno="4751" refid="structDivideE" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structDivideE" kindref="compound">DivideE</ref></highlight></codeline>
<codeline lineno="4752"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDivideE_1ad3b184af1b859fb7b98d4ccdeba5d6ad" kindref="member">ed</ref>;</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDivideE_1a28fe74cbb0a50326cb7991319b51dea7" kindref="member">order</ref>[2];</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/>Tab&lt;int&gt;<sp/><ref refid="structDivideE_1ab9e0c8f12f1ced4aba9af809f8dbb42a" kindref="member">vrt</ref>;<sp/></highlight><highlight class="comment">//<sp/>in<sp/>some<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/>Tab&lt;int[2]&gt;<sp/><ref refid="structDivideE_1aea7aca76d676c04fc51dea23aaa62881" kindref="member">tvrt</ref>[<ref refid="util_8cpp_1a6cb069a9f45813f7f1986d434ffdc2ce" kindref="member">MESHSMOOTHMAPS_SUPPORT</ref>];</highlight></codeline>
<codeline lineno="4757"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Tab&lt;int&gt;<sp/><ref refid="util_8cpp_1a1ac59ad7bc17e165372145bbeb526f25" kindref="member">Tabint</ref>;</highlight></codeline>
<codeline lineno="4759"><highlight class="normal"></highlight></codeline>
<codeline lineno="4760"><highlight class="normal"></highlight></codeline>
<codeline lineno="4761"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a7f8576a2ebf4aa01f6ed3343e118c1e3" kindref="member">calc_sm_normals</ref>(Tab&lt;Point3&gt;<sp/>&amp;norms,<sp/>Mesh<sp/>&amp;m,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>use_sm,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pow)</highlight></codeline>
<codeline lineno="4762"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/>Tab&lt;Point3&gt;<sp/>norm;</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/>norm.Resize(m.numFaces);</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/>norm.SetCount(m.numFaces);</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>norm.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>v1<sp/>=<sp/>m.verts[m.faces[i].v[2]]<sp/>-<sp/>m.verts[m.faces[i].v[0]];</highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>v2<sp/>=<sp/>m.verts[m.faces[i].v[1]]<sp/>-<sp/>m.verts[m.faces[i].v[0]];</highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/><sp/><sp/>norm[i]<sp/>=<sp/>Normalize(CrossProd(v1,<sp/>v2));</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/>Tab&lt;Tabint<sp/>*&gt;<sp/>vrfs;</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/>vrfs.Resize(m.numVerts);</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/>vrfs.SetCount(m.numVerts);</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numVerts;<sp/>++i)</highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/><sp/><sp/>vrfs[i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="ltmap_8cpp_1a1ac59ad7bc17e165372145bbeb526f25" kindref="member">Tabint</ref>;</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numFaces;<sp/>++i)</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/><sp/><sp/>vrfs[m.faces[i].v[0]]-&gt;Append(1,<sp/>&amp;i);</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/><sp/><sp/>vrfs[m.faces[i].v[1]]-&gt;Append(1,<sp/>&amp;i);</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/><sp/><sp/>vrfs[m.faces[i].v[2]]-&gt;Append(1,<sp/>&amp;i);</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/>Tab&lt;Point3[3]&gt;<sp/>nrms;</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/>nrms.Resize(m.numFaces);</highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/>nrms.SetCount(m.numFaces);</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numFaces;<sp/>++i)</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>ng[3];</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vi<sp/>=<sp/>0;<sp/>vi<sp/>&lt;<sp/>3;<sp/>++vi)</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>n(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>m.faces[i].v[vi];</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_sm)</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.faces[i].smGroup<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>norm[i];</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>vrfs[v]-&gt;Count();<sp/>++j)</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!use_sm<sp/>||<sp/>(m.faces[(*vrfs[v])[j]].smGroup<sp/>&amp;<sp/>m.faces[i].smGroup))</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>norm[(*vrfs[v])[j]];</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ng[vi]<sp/>=<sp/>Normalize(n);</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;nrm<sp/>%g<sp/>%g<sp/>%g&quot;,ng[vi].x,ng[vi].y,ng[vi].z);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/>nrms[i][0]<sp/>=<sp/>ng[0];</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/>nrms[i][1]<sp/>=<sp/>ng[1];</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/><sp/>nrms[i][2]<sp/>=<sp/>ng[2];</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/>norms.Resize(m.numVerts);</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/>norms.SetCount(m.numVerts);</highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>norms.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>n(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;fc<sp/>%d&quot;,vrfs[i]-&gt;Count());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>vrfs[i]-&gt;Count();<sp/>++j)</highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(!use_sm)if(!mesh_face_sel(m)[(*vrfs[i])[j]])<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fc<sp/>=<sp/>(*vrfs[i])[j];</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>3;<sp/>++k)</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.faces[fc].v[k]<sp/>==<sp/>i)</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!use_sm)</highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>nrms[fc][k];</highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>nrms[fc][k];</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/><sp/>norms[i]<sp/>=<sp/>Normalize(n)<sp/>*<sp/>pow;</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vrfs.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(vrfs[i]);</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/>vrfs.SetCount(0);</highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4839"><highlight class="normal"></highlight></codeline>
<codeline lineno="4840"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gettvrt(Mesh<sp/>&amp;m,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>at,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v1,<sp/>AdjEdgeList<sp/>&amp;ae,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;ed,<sp/>Point3<sp/>&amp;tvrt1,<sp/>Point3<sp/>&amp;tvrt2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi,</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ord[2])</highlight></codeline>
<codeline lineno="4842"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f[2];</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"><sp/><sp/>f[0]<sp/>=<sp/>ae.edges[ed].f[0];</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/>f[1]<sp/>=<sp/>ae.edges[ed].f[1];</highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>++i)</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f[i]<sp/>==<sp/>UNDEFINED)</highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wh<sp/>=<sp/>whichEdge(m.faces[f[i]],<sp/>v0,<sp/>v1);</highlight></codeline>
<codeline lineno="4851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/>m.mapFaces(mi)[f[i]].t[wh<sp/>%<sp/>3],<sp/>t2<sp/>=<sp/>m.mapFaces(mi)[f[i]].t[(wh<sp/>+<sp/>1)<sp/>%<sp/>3];</highlight></codeline>
<codeline lineno="4852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&lt;<sp/>0<sp/>||<sp/>t2<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>tvrt;</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ord[i])</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tvrt<sp/>=<sp/>(m.mapVerts(mi)[t2]<sp/>-<sp/>m.mapVerts(mi)[t1])<sp/>*<sp/>at<sp/>+<sp/>m.mapVerts(mi)[t1];</highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tvrt<sp/>=<sp/>(m.mapVerts(mi)[t1]<sp/>-<sp/>m.mapVerts(mi)[t2])<sp/>*<sp/>at<sp/>+<sp/>m.mapVerts(mi)[t2];</highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tvrt1<sp/>=<sp/>tvrt;</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tvrt2<sp/>=<sp/>tvrt;</highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4865"><highlight class="normal"></highlight></codeline>
<codeline lineno="4866"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>int_lcmp(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)(b))<sp/>-<sp/>*((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)(a));<sp/>}</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"></highlight></codeline>
<codeline lineno="4868" refid="structTQuad" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structTQuad" kindref="compound">TQuad</ref></highlight></codeline>
<codeline lineno="4869"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>v[4];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>cred4;//0:<sp/>1-3<sp/>1-4<sp/>2-3<sp/>2-4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>nrm1;//0<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/>Face<sp/><ref refid="structTQuad_1a1c8d8f9ffee42c4cc81997fdc9ce1894" kindref="member">f</ref>[2];</highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/>TVFace<sp/><ref refid="structTQuad_1aba342e29d28bc3fa1094924d39256a1a" kindref="member">tf</ref>[<ref refid="util_8cpp_1a6cb069a9f45813f7f1986d434ffdc2ce" kindref="member">MESHSMOOTHMAPS_SUPPORT</ref>][2];</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTQuad_1a2d56e6d3bc87949e4650d61d0231e5e0" kindref="member">v2v1</ref>[3],<sp/><ref refid="structTQuad_1ae29052989a190c332beb8097cf6bf3de" kindref="member">v2v2</ref>[3];</highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>t2t1[3],t2t2[3];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><ref refid="structTQuad_1a0a92ff050a986800ffef5b8b56cafc99" kindref="member">TQuad</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/><ref refid="structTQuad_1a0a92ff050a986800ffef5b8b56cafc99" kindref="member">TQuad</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vr[4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fc1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fc2,<sp/>Mesh<sp/>&amp;m)</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//,AdjEdgeList<sp/>&amp;ae,int<sp/>ed1,int<sp/>ed2//int<sp/>tr[4],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*for(int<sp/>k=0;k&lt;3;++k)</highlight></codeline>
<codeline lineno="4882"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!m.faces[fc1].getEdgeVis(k))<sp/>break;</highlight></codeline>
<codeline lineno="4883"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>vv[2];vv[0]=m.faces[fc1].v[k];vv[1]=m.faces[fc1].v[(k+1)%3];</highlight></codeline>
<codeline lineno="4884"><highlight class="comment"><sp/><sp/><sp/><sp/>if(vv[0]==v[0])<sp/>{</highlight></codeline>
<codeline lineno="4885"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(vv[1]==v[2])<sp/>cred4=0;</highlight></codeline>
<codeline lineno="4886"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>cred4=1;</highlight></codeline>
<codeline lineno="4887"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="4888"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(vv[1]==v[2])<sp/>cred4=2;</highlight></codeline>
<codeline lineno="4889"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>cred4=3;</highlight></codeline>
<codeline lineno="4890"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTQuad_1a1c8d8f9ffee42c4cc81997fdc9ce1894" kindref="member">f</ref>[0]<sp/>=<sp/>m.faces[fc1];</highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTQuad_1a1c8d8f9ffee42c4cc81997fdc9ce1894" kindref="member">f</ref>[1]<sp/>=<sp/>m.faces[fc2];</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>m.getNumMaps();<sp/>++mi)</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(mi))</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTQuad_1aba342e29d28bc3fa1094924d39256a1a" kindref="member">tf</ref>[mi][0]<sp/>=<sp/>m.mapFaces(mi)[fc1];</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTQuad_1aba342e29d28bc3fa1094924d39256a1a" kindref="member">tf</ref>[mi][1]<sp/>=<sp/>m.mapFaces(mi)[fc2];</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>3;<sp/>++k)</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structTQuad_1a1c8d8f9ffee42c4cc81997fdc9ce1894" kindref="member">f</ref>[0].v[k]<sp/>==<sp/>vr[0])</highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTQuad_1a2d56e6d3bc87949e4650d61d0231e5e0" kindref="member">v2v1</ref>[k]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structTQuad_1a1c8d8f9ffee42c4cc81997fdc9ce1894" kindref="member">f</ref>[0].v[k]<sp/>==<sp/>vr[1])</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTQuad_1a2d56e6d3bc87949e4650d61d0231e5e0" kindref="member">v2v1</ref>[k]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structTQuad_1a1c8d8f9ffee42c4cc81997fdc9ce1894" kindref="member">f</ref>[0].v[k]<sp/>==<sp/>vr[2])</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTQuad_1a2d56e6d3bc87949e4650d61d0231e5e0" kindref="member">v2v1</ref>[k]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTQuad_1a2d56e6d3bc87949e4650d61d0231e5e0" kindref="member">v2v1</ref>[k]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>3;<sp/>++k)</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structTQuad_1a1c8d8f9ffee42c4cc81997fdc9ce1894" kindref="member">f</ref>[1].v[k]<sp/>==<sp/>vr[0])</highlight></codeline>
<codeline lineno="4916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTQuad_1ae29052989a190c332beb8097cf6bf3de" kindref="member">v2v2</ref>[k]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structTQuad_1a1c8d8f9ffee42c4cc81997fdc9ce1894" kindref="member">f</ref>[1].v[k]<sp/>==<sp/>vr[1])</highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTQuad_1ae29052989a190c332beb8097cf6bf3de" kindref="member">v2v2</ref>[k]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structTQuad_1a1c8d8f9ffee42c4cc81997fdc9ce1894" kindref="member">f</ref>[1].v[k]<sp/>==<sp/>vr[2])</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTQuad_1ae29052989a190c332beb8097cf6bf3de" kindref="member">v2v2</ref>[k]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTQuad_1ae29052989a190c332beb8097cf6bf3de" kindref="member">v2v2</ref>[k]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="4923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(k=0;k&lt;3;++k){</highlight></codeline>
<codeline lineno="4925"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(tf[0].t[k]==tr[0])<sp/>t2t1[k]=0;</highlight></codeline>
<codeline lineno="4926"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if(tf[0].t[k]==tr[1])<sp/>t2t1[k]=1;</highlight></codeline>
<codeline lineno="4927"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if(tf[0].t[k]==tr[2])<sp/>t2t1[k]=2;</highlight></codeline>
<codeline lineno="4928"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>t2t1[k]=3;</highlight></codeline>
<codeline lineno="4929"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4930"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(k=0;k&lt;3;++k){</highlight></codeline>
<codeline lineno="4931"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(tf[1].t[k]==tr[0])<sp/>t2t2[k]=0;</highlight></codeline>
<codeline lineno="4932"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if(tf[1].t[k]==tr[1])<sp/>t2t2[k]=1;</highlight></codeline>
<codeline lineno="4933"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if(tf[1].t[k]==tr[2])<sp/>t2t2[k]=2;</highlight></codeline>
<codeline lineno="4934"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>t2t2[k]=3;</highlight></codeline>
<codeline lineno="4935"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structTQuad_1a310e2077dbfed6aac19b1d0e81a50f43" kindref="member">GetAnalogueQuad</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fv[4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ft[<ref refid="util_8cpp_1a6cb069a9f45813f7f1986d434ffdc2ce" kindref="member">MESHSMOOTHMAPS_SUPPORT</ref>][4],<sp/>Face<sp/>&amp;fc1,<sp/>Face<sp/>&amp;fc2,<sp/>TVFace<sp/>tfc1[<ref refid="util_8cpp_1a6cb069a9f45813f7f1986d434ffdc2ce" kindref="member">MESHSMOOTHMAPS_SUPPORT</ref>][2])</highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/><sp/><sp/>fc1<sp/>=<sp/><ref refid="structTQuad_1a1c8d8f9ffee42c4cc81997fdc9ce1894" kindref="member">f</ref>[0];</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/><sp/><sp/>fc2<sp/>=<sp/><ref refid="structTQuad_1a1c8d8f9ffee42c4cc81997fdc9ce1894" kindref="member">f</ref>[1];</highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/><ref refid="util_8cpp_1a6cb069a9f45813f7f1986d434ffdc2ce" kindref="member">MESHSMOOTHMAPS_SUPPORT</ref>;<sp/>++mi)</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tfc1[mi][0]<sp/>=<sp/><ref refid="structTQuad_1aba342e29d28bc3fa1094924d39256a1a" kindref="member">tf</ref>[mi][0];</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tfc1[mi][1]<sp/>=<sp/><ref refid="structTQuad_1aba342e29d28bc3fa1094924d39256a1a" kindref="member">tf</ref>[mi][1];</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>3;<sp/>++k)</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tfc1[mi][0].t[k]<sp/>=<sp/>ft[mi][<ref refid="structTQuad_1a2d56e6d3bc87949e4650d61d0231e5e0" kindref="member">v2v1</ref>[k]];</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>3;<sp/>++k)</highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tfc1[mi][1].t[k]<sp/>=<sp/>ft[mi][<ref refid="structTQuad_1ae29052989a190c332beb8097cf6bf3de" kindref="member">v2v2</ref>[k]];</highlight></codeline>
<codeline lineno="4955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>3;<sp/>++k)</highlight></codeline>
<codeline lineno="4960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc1.v[k]<sp/>=<sp/>fv[<ref refid="structTQuad_1a2d56e6d3bc87949e4650d61d0231e5e0" kindref="member">v2v1</ref>[k]];</highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>3;<sp/>++k)</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc2.v[k]<sp/>=<sp/>fv[<ref refid="structTQuad_1ae29052989a190c332beb8097cf6bf3de" kindref="member">v2v2</ref>[k]];</highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4970"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4971"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"></highlight></codeline>
<codeline lineno="4973"><highlight class="normal"></highlight></codeline>
<codeline lineno="4974"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1aabf25cf563fe0a4b62f4b0c2b97078e8" kindref="member">DagUtil::smooth_mesh</ref>(INode<sp/>*node,<sp/>Mesh<sp/>&amp;m)</highlight></codeline>
<codeline lineno="4975"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/>Mesh<sp/>&amp;mesh<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m.getNumTVerts())</highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4979"><highlight class="normal"></highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.getNumMaps()<sp/>&gt;<sp/><ref refid="util_8cpp_1a6cb069a9f45813f7f1986d434ffdc2ce" kindref="member">MESHSMOOTHMAPS_SUPPORT</ref>)</highlight></codeline>
<codeline lineno="4981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/>BitArray<sp/>presel<sp/>=<sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m);</highlight></codeline>
<codeline lineno="4983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classDagUtil_1a53308b258e8510dd2b8966e913c68413" kindref="member">smooth_selected</ref>)</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).SetAll();</highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;!!!<sp/>%d&quot;,tmselectf);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4986"><highlight class="normal"><sp/><sp/>AdjEdgeList<sp/>ae(mesh);</highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/>Tab&lt;int&gt;<sp/>divEdges;</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/>divEdges.Resize(ae.edges.Count());</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/>divEdges.SetCount(ae.edges.Count());</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/>memset(&amp;divEdges[0],<sp/>0,<sp/>ae.edges.Count()<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/>Tab&lt;int&gt;<sp/>fcsPassed;</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/>fcsPassed.Resize(m.getNumFaces());</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><sp/><sp/>fcsPassed.SetCount(m.getNumFaces());</highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/>memset(&amp;fcsPassed[0],<sp/>0,<sp/>m.getNumFaces()<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/>Tab&lt;int&gt;<sp/>fcsquads;</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"><sp/><sp/>fcsquads.Resize(m.getNumFaces());</highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/>fcsquads.SetCount(m.getNumFaces());</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/>memset(&amp;fcsquads[0],<sp/>0xFF,<sp/>m.getNumFaces()<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f1<sp/>=<sp/>0;<sp/>f1<sp/>&lt;<sp/>m.getNumFaces();<sp/>++f1)</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m)[f1])</highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mesh.faces[f1].flags<sp/>&amp;<sp/>VIS_MASK)<sp/>==<sp/>EDGE_ALL)</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).Clear(f1);</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>he,<sp/>he1;</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(he<sp/>=<sp/>0;<sp/>he<sp/>&lt;<sp/>3;<sp/>++he)</highlight></codeline>
<codeline lineno="5011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mesh.faces[f1].getEdgeVis(he))</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(he1<sp/>=<sp/>he<sp/>+<sp/>1;<sp/>he1<sp/>&lt;<sp/>3;<sp/>++he1)</highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mesh.faces[f1].getEdgeVis(he1))</highlight></codeline>
<codeline lineno="5015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(he1<sp/>&lt;<sp/>3)</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).Clear(f1);</highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4;</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v1<sp/>=<sp/>mesh.faces[f1].v[(he<sp/>==<sp/>0)<sp/>?<sp/>2<sp/>:<sp/>(he<sp/>-<sp/>1)];</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v2<sp/>=<sp/>mesh.faces[f1].v[he];</highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v3<sp/>=<sp/>mesh.faces[f1].v[(he<sp/>==<sp/>2)<sp/>?<sp/>0<sp/>:<sp/>(he<sp/>+<sp/>1)];</highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>me<sp/>=<sp/>ae.FindEdge(v2,<sp/>v3);</highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f2<sp/>=<sp/>ae.edges[me].f[0];</highlight></codeline>
<codeline lineno="5027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f2<sp/>==<sp/>f1)</highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f2<sp/>=<sp/>ae.edges[me].f[1];</highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>he2<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f2<sp/>==<sp/>UNDEFINED)</highlight></codeline>
<codeline lineno="5031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).Clear(f1);</highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).Clear(f2);</highlight></codeline>
<codeline lineno="5034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>he2<sp/>=<sp/>whichEdge(mesh.faces[f2],<sp/>v2,<sp/>v3);</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(he2<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="5040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).Clear(f1);</highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).Clear(f2);</highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.faces[f2].setEdgeVisFlags(EDGE_VIS,<sp/>EDGE_VIS,<sp/>EDGE_VIS);</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.faces[f2].setEdgeVis(he2,<sp/>EDGE_INVIS);</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).Set(f2);</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(v4<sp/>=<sp/>0;<sp/>v4<sp/>&lt;<sp/>3;<sp/>++v4)</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.faces[f2].v[v4]<sp/>!=<sp/>v2<sp/>&amp;&amp;<sp/>mesh.faces[f2].v[v4]<sp/>!=<sp/>v3)</highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v4<sp/>=<sp/>mesh.faces[f2].v[v4];</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ed1[2],<sp/>ed2[2],<sp/>s<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed1[0]<sp/>=<sp/>(he<sp/>==<sp/>2)<sp/>?<sp/>1<sp/>:<sp/>((he<sp/>==<sp/>1)<sp/>?<sp/>0<sp/>:<sp/>2);</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hh1,<sp/>hh2;</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbedge(mesh.faces[f2],<sp/>v2,<sp/>hh1,<sp/>hh2);</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed2[0]<sp/>=<sp/>(hh1<sp/>==<sp/>he2)<sp/>?<sp/>hh2<sp/>:<sp/>hh1;</highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="5063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>3;<sp/>++k)</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>!=<sp/>he<sp/>&amp;&amp;<sp/>k<sp/>!=<sp/>ed1[0])</highlight></codeline>
<codeline lineno="5065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed1[1]<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="5070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>3;<sp/>++k)</highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>!=<sp/>he2<sp/>&amp;&amp;<sp/>k<sp/>!=<sp/>ed2[0])</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed2[1]<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tt1<sp/>=<sp/>m.tvFace[f1].t[(ed1[0]<sp/>+<sp/>1)<sp/>%<sp/>3],<sp/>tt2<sp/>=<sp/>m.tvFace[f1].t[ed1[0]];</highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tt3<sp/>=<sp/>m.tvFace[f1].t[(ed1[1]<sp/>+<sp/>1)<sp/>%<sp/>3],<sp/>tt4<sp/>=<sp/>m.tvFace[f1].t[ed1[1]];</highlight></codeline>
<codeline lineno="5078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tt1<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>tt2<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>tt3<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>tt4<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="5079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>t1<sp/>=<sp/>m.tVerts[tt1]<sp/>-<sp/>m.tVerts[tt2];</highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>t2<sp/>=<sp/>m.tVerts[tt3]<sp/>-<sp/>m.tVerts[tt4];</highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(t1.x)<sp/>&gt;<sp/>fabs(t2.x))</highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="classDagUtil_1a4ee0097f03be2ea7374d28e3f553e31e" kindref="member">mesh_smoothtu</ref>;</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ed1[0]+=f1*3;ed1[1]+=f1*3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ed2[0]+=f2*3;ed2[1]+=f2*3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>ed1[1];</highlight></codeline>
<codeline lineno="5094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed1[1]<sp/>=<sp/>ed2[1];</highlight></codeline>
<codeline lineno="5095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed2[1]<sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="5096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed1[0]<sp/>=<sp/>ae.FindEdge(m.faces[f1].v[ed1[0]<sp/>%<sp/>3],<sp/>m.faces[f1].v[(ed1[0]<sp/>+<sp/>1)<sp/>%<sp/>3]);</highlight></codeline>
<codeline lineno="5097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed1[1]<sp/>=<sp/>ae.FindEdge(m.faces[f2].v[ed1[1]<sp/>%<sp/>3],<sp/>m.faces[f2].v[(ed1[1]<sp/>+<sp/>1)<sp/>%<sp/>3]);</highlight></codeline>
<codeline lineno="5098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed2[0]<sp/>=<sp/>ae.FindEdge(m.faces[f2].v[ed2[0]<sp/>%<sp/>3],<sp/>m.faces[f2].v[(ed2[0]<sp/>+<sp/>1)<sp/>%<sp/>3]);</highlight></codeline>
<codeline lineno="5099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed2[1]<sp/>=<sp/>ae.FindEdge(m.faces[f1].v[ed2[1]<sp/>%<sp/>3],<sp/>m.faces[f1].v[(ed2[1]<sp/>+<sp/>1)<sp/>%<sp/>3]);</highlight></codeline>
<codeline lineno="5100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDagUtil_1a4ee0097f03be2ea7374d28e3f553e31e" kindref="member">mesh_smoothtu</ref>)</highlight></codeline>
<codeline lineno="5102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>!s;</highlight></codeline>
<codeline lineno="5103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;s<sp/>%d<sp/>%d&quot;,s,mesh_smoothtu);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s)</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divEdges[ed1[0]]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divEdges[ed1[1]]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divEdges[ed2[0]]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="5109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divEdges[ed2[1]]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="5110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divEdges[ed2[0]]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divEdges[ed2[1]]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divEdges[ed1[0]]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divEdges[ed1[1]]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fcsPassed[f1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fcsPassed[f2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eds[4];</highlight></codeline>
<codeline lineno="5121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eds[0]<sp/>=<sp/>ed1[0];</highlight></codeline>
<codeline lineno="5122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eds[1]<sp/>=<sp/>ed1[1];</highlight></codeline>
<codeline lineno="5123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eds[2]<sp/>=<sp/>ed2[0];</highlight></codeline>
<codeline lineno="5124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eds[3]<sp/>=<sp/>ed2[1];</highlight></codeline>
<codeline lineno="5125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fcsquads[f1]<sp/>=<sp/>f2;</highlight></codeline>
<codeline lineno="5126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fcsquads[f2]<sp/>=<sp/>f1;</highlight></codeline>
<codeline lineno="5127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recurse(fcsquads,<sp/>fcsPassed,<sp/>divEdges,<sp/>m,<sp/>eds,<sp/>ae,<sp/>v2,<sp/>v3,<sp/><ref refid="classDagUtil_1a40c94bc93a753c9550d87f625666e742" kindref="member">turn_edge</ref>);</highlight></codeline>
<codeline lineno="5128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/>Tab&lt;DivideE<sp/>*&gt;<sp/>ded;</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"><sp/><sp/>Tab&lt;Point3&gt;<sp/>normals;</highlight></codeline>
<codeline lineno="5133"><highlight class="normal"><sp/><sp/>Tab&lt;Point3&gt;<sp/>addverts,<sp/>addtverts[<ref refid="util_8cpp_1a6cb069a9f45813f7f1986d434ffdc2ce" kindref="member">MESHSMOOTHMAPS_SUPPORT</ref>];</highlight></codeline>
<codeline lineno="5134"><highlight class="normal"><sp/><sp/>addverts.Append(m.numVerts,<sp/>m.verts);</highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>m.getNumMaps();<sp/>++mi)</highlight></codeline>
<codeline lineno="5137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(mi))</highlight></codeline>
<codeline lineno="5138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addtverts[mi].Append(m.getNumMapVerts(mi),<sp/>m.mapVerts(mi));</highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;calc<sp/>smooth<sp/>%g&quot;,sharpness);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a7f8576a2ebf4aa01f6ed3343e118c1e3" kindref="member">calc_sm_normals</ref>(normals,<sp/>mesh,<sp/><ref refid="classDagUtil_1ad5779d754ce442890e728271a6f1c562" kindref="member">use_smooth_grps</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>divEdges.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(divEdges[i]<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;%d&quot;,i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDivideE" kindref="compound">DivideE</ref><sp/>*de<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structDivideE" kindref="compound">DivideE</ref>;</highlight></codeline>
<codeline lineno="5149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>ded.Append(1,<sp/>&amp;de);</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"><sp/><sp/><sp/><sp/>ded[rc]-&gt;<ref refid="structDivideE_1ad3b184af1b859fb7b98d4ccdeba5d6ad" kindref="member">ed</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="5151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v0<sp/>=<sp/>ae.edges[i].v[0],<sp/>v1<sp/>=<sp/>ae.edges[i].v[1];</highlight></codeline>
<codeline lineno="5152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uu<sp/>=<sp/>0;<sp/>uu<sp/>&lt;<sp/>2;<sp/>++uu)</highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ae.edges[i].f[uu]<sp/>==<sp/>UNDEFINED)</highlight></codeline>
<codeline lineno="5155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ded[rc]-&gt;order[uu]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whe<sp/>=<sp/>whichEdge(m.faces[ae.edges[i].f[uu]],<sp/>v0,<sp/>v1);</highlight></codeline>
<codeline lineno="5159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.faces[ae.edges[i].f[uu]].v[whe]<sp/>!=<sp/>v0)</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ded[rc]-&gt;order[uu]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ded[rc]-&gt;order[uu]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;%g&quot;,Length(normals[v0]));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ki<sp/>=<sp/>0;<sp/>ki<sp/>&lt;<sp/><ref refid="classDagUtil_1a31cfeccd1645583aec40d6944b8510bd" kindref="member">iterations</ref>;<sp/>++ki)</highlight></codeline>
<codeline lineno="5167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>at<sp/>=<sp/>float(ki<sp/>+<sp/>1)<sp/>/<sp/>float(<ref refid="classDagUtil_1a31cfeccd1645583aec40d6944b8510bd" kindref="member">iterations</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>vrt<sp/>=<sp/>get_pt(m.verts[v0],<sp/>m.verts[v1],<sp/>normals[v0],<sp/>normals[v1],<sp/><ref refid="classDagUtil_1a3ff42da8777dcca7e9be388d02546de6" kindref="member">sharpness</ref>,<sp/>at);</highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vv<sp/>=<sp/>addverts.Append(1,<sp/>&amp;vrt);</highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ded[rc]-&gt;vrt.Append(1,<sp/>&amp;vv);</highlight></codeline>
<codeline lineno="5172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>m.getNumMaps();<sp/>++mi)</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(mi))</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>tvrt[2];</highlight></codeline>
<codeline lineno="5177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gettvrt(mesh,<sp/>at,<sp/>v0,<sp/>v1,<sp/>ae,<sp/>i,<sp/>tvrt[0],<sp/>tvrt[1],<sp/>mi,<sp/>ded[rc]-&gt;order);</highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tt[2];</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tt[0]<sp/>=<sp/>addtverts[mi].Append(2,<sp/>tvrt);</highlight></codeline>
<codeline lineno="5180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tt[1]<sp/>=<sp/>tt[0]<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ded[rc]-&gt;tvrt[mi].Append(1,<sp/>&amp;tt);</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5186"><highlight class="normal"><sp/><sp/>Tab&lt;Face&gt;<sp/>newfcs;</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/>newfcs.Resize(m.numFaces);</highlight></codeline>
<codeline lineno="5188"><highlight class="normal"><sp/><sp/>newfcs.SetCount(m.numFaces);</highlight></codeline>
<codeline lineno="5189"><highlight class="normal"><sp/><sp/>memcpy(&amp;newfcs[0],<sp/>m.faces,<sp/>m.numFaces<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Face));</highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/>Tab&lt;TVFace&gt;<sp/>newtvfcs[<ref refid="util_8cpp_1a6cb069a9f45813f7f1986d434ffdc2ce" kindref="member">MESHSMOOTHMAPS_SUPPORT</ref>];</highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>m.getNumMaps();<sp/>++mi)</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(mi))</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newtvfcs[mi].Resize(m.numFaces);</highlight></codeline>
<codeline lineno="5196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newtvfcs[mi].SetCount(m.numFaces);</highlight></codeline>
<codeline lineno="5197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;newtvfcs[mi][0],<sp/>m.mapFaces(mi),<sp/>m.numFaces<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TVFace));</highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5200"><highlight class="normal"></highlight></codeline>
<codeline lineno="5201"><highlight class="normal"><sp/><sp/>Tab&lt;int&gt;<sp/>todel;</highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/>Tab&lt;int&gt;<sp/>fcsedg[2];</highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/>fcsedg[0].Resize(m.getNumFaces());</highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/>fcsedg[0].SetCount(m.getNumFaces());</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/>memset(&amp;fcsedg[0][0],<sp/>0xff,<sp/>m.getNumFaces()<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="5206"><highlight class="normal"><sp/><sp/>fcsedg[1].Resize(m.getNumFaces());</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><sp/><sp/>fcsedg[1].SetCount(m.getNumFaces());</highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/>memset(&amp;fcsedg[1][0],<sp/>0xff,<sp/>m.getNumFaces()<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="5209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ded.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="5210"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5211"><highlight class="normal"><sp/><sp/><sp/><sp/>MEdge<sp/>&amp;me<sp/>=<sp/>ae.edges[ded[i]-&gt;ed];</highlight></codeline>
<codeline lineno="5212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fcc[2];</highlight></codeline>
<codeline lineno="5213"><highlight class="normal"><sp/><sp/><sp/><sp/>fcc[0]<sp/>=<sp/>me.f[0];</highlight></codeline>
<codeline lineno="5214"><highlight class="normal"><sp/><sp/><sp/><sp/>fcc[1]<sp/>=<sp/>me.f[1];</highlight></codeline>
<codeline lineno="5215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kf<sp/>=<sp/>0;<sp/>kf<sp/>&lt;<sp/>2;<sp/>++kf)</highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fc1<sp/>=<sp/>fcc[kf];</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc1<sp/>==<sp/>UNDEFINED)</highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fcsedg[0][fc1]<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcsedg[0][fc1]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcsedg[1][fc1]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"></highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/>Tab&lt;int&gt;<sp/>fcsdivd;</highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/>fcsdivd.Resize(m.getNumFaces());</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"><sp/><sp/>fcsdivd.SetCount(m.getNumFaces());</highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/>memset(&amp;fcsdivd[0],<sp/>0,<sp/>m.getNumFaces()<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m)<sp/>=<sp/>presel;</highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/>BitArray<sp/>newfacesel;</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/>newfacesel<sp/>=<sp/>presel;</highlight></codeline>
<codeline lineno="5234"><highlight class="normal"></highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ded.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/><sp/><sp/>MEdge<sp/>&amp;me<sp/>=<sp/>ae.edges[ded[i]-&gt;ed];</highlight></codeline>
<codeline lineno="5238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fcc[2];</highlight></codeline>
<codeline lineno="5239"><highlight class="normal"><sp/><sp/><sp/><sp/>fcc[0]<sp/>=<sp/>me.f[0];</highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/><sp/><sp/>fcc[1]<sp/>=<sp/>me.f[1];</highlight></codeline>
<codeline lineno="5241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kf<sp/>=<sp/>0;<sp/>kf<sp/>&lt;<sp/>2;<sp/>++kf)</highlight></codeline>
<codeline lineno="5242"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fc1<sp/>=<sp/>fcc[kf];</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc1<sp/>==<sp/>UNDEFINED)</highlight></codeline>
<codeline lineno="5245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fcsdivd[fc1])</highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fcsquads[fc1]<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="5249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;1212&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fc2<sp/>=<sp/>fcsquads[fc1];</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;fc2<sp/>%d&quot;,fc2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcsdivd[fc1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcsdivd[fc2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii2<sp/>=<sp/>fcsedg[0][fc2];</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ii2<sp/>==<sp/>i<sp/>||<sp/>ii2<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ii2<sp/>=<sp/>fcsedg[1][fc2];</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;ed2<sp/>%d&quot;,ii2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ii2<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="5260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fr2p,<sp/>whe2,<sp/>whe1;</highlight></codeline>
<codeline lineno="5262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>vsm1[3],vsm2[3];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MEdge<sp/>&amp;me<sp/>=<sp/>ae.edges[ded[ii2]-&gt;ed];</highlight></codeline>
<codeline lineno="5265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr2p<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(me.f[fr2p]<sp/>!=<sp/>fc2)</highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr2p<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(me.f[fr2p]<sp/>!=<sp/>fc2)</highlight></codeline>
<codeline lineno="5270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>whe2<sp/>=<sp/>whichEdge(m.faces[fc2],<sp/>me.v[0],<sp/>me.v[1]);</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;edg2<sp/>%d<sp/>%d&quot;,whe2,fr2p);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>whe1<sp/>=<sp/>whichEdge(m.faces[fc1],<sp/>me.v[0],<sp/>me.v[1]);</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;edg1<sp/>%d&quot;,whe1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vr[4];</highlight></codeline>
<codeline lineno="5278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vr[0]<sp/>=<sp/>whe1;</highlight></codeline>
<codeline lineno="5279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vr[1]<sp/>=<sp/>(vr[0]<sp/>+<sp/>1)<sp/>%<sp/>3;</highlight></codeline>
<codeline lineno="5280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vr[2]<sp/>=<sp/>whe2;</highlight></codeline>
<codeline lineno="5281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vr[3]<sp/>=<sp/>(vr[2]<sp/>+<sp/>1)<sp/>%<sp/>3;</highlight></codeline>
<codeline lineno="5282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curv[4],<sp/>curt[<ref refid="util_8cpp_1a6cb069a9f45813f7f1986d434ffdc2ce" kindref="member">MESHSMOOTHMAPS_SUPPORT</ref>][4],<sp/>tr[<ref refid="util_8cpp_1a6cb069a9f45813f7f1986d434ffdc2ce" kindref="member">MESHSMOOTHMAPS_SUPPORT</ref>][4];</highlight></codeline>
<codeline lineno="5283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ded[i]-&gt;order[kf])</highlight></codeline>
<codeline lineno="5284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cc<sp/>=<sp/>vr[0];</highlight></codeline>
<codeline lineno="5286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vr[0]<sp/>=<sp/>vr[1];</highlight></codeline>
<codeline lineno="5287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vr[1]<sp/>=<sp/>cc;</highlight></codeline>
<codeline lineno="5288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ded[ii2]-&gt;order[fr2p])</highlight></codeline>
<codeline lineno="5290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cc<sp/>=<sp/>vr[2];</highlight></codeline>
<codeline lineno="5292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vr[2]<sp/>=<sp/>vr[3];</highlight></codeline>
<codeline lineno="5293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vr[3]<sp/>=<sp/>cc;</highlight></codeline>
<codeline lineno="5294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bck<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ded[ii2]-&gt;order[fr2p]<sp/>==<sp/>ded[i]-&gt;order[kf])</highlight></codeline>
<codeline lineno="5297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bck<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cc<sp/>=<sp/>vr[2];</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vr[2]<sp/>=<sp/>vr[3];</highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vr[3]<sp/>=<sp/>cc;</highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;order<sp/>%d<sp/>%d&quot;,ded[ii2]-&gt;order[fr2p],ded[i]-&gt;order[kf]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>m.getNumMaps();<sp/>++mi)</highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(mi))</highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr[mi][0]<sp/>=<sp/>m.mapFaces(mi)[fc1].t[vr[0]];</highlight></codeline>
<codeline lineno="5309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr[mi][1]<sp/>=<sp/>m.mapFaces(mi)[fc1].t[vr[1]];</highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr[mi][2]<sp/>=<sp/>m.mapFaces(mi)[fc2].t[vr[2]];</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr[mi][3]<sp/>=<sp/>m.mapFaces(mi)[fc2].t[vr[3]];</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"></highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vr[0]<sp/>=<sp/>m.faces[fc1].v[vr[0]];</highlight></codeline>
<codeline lineno="5316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vr[1]<sp/>=<sp/>m.faces[fc1].v[vr[1]];</highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vr[2]<sp/>=<sp/>m.faces[fc2].v[vr[2]];</highlight></codeline>
<codeline lineno="5318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vr[3]<sp/>=<sp/>m.faces[fc2].v[vr[3]];</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>=<sp/>0;<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>&lt;<sp/>4;<sp/>++<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="5321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>m.getNumMaps();<sp/>++mi)</highlight></codeline>
<codeline lineno="5324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(mi))</highlight></codeline>
<codeline lineno="5325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curt[mi][<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>]<sp/>=<sp/>tr[mi][<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>];</highlight></codeline>
<codeline lineno="5326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curv[<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>]<sp/>=<sp/>vr[<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>];</highlight></codeline>
<codeline lineno="5328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;11&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTQuad" kindref="compound">TQuad</ref><sp/>qd(vr,<sp/>fc1,<sp/>fc2,<sp/>m);</highlight></codeline>
<codeline lineno="5332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;vr2<sp/>%d<sp/>vr1<sp/>%d&quot;,ded[ii2]-&gt;vrt.Count(),ded[i]-&gt;vrt.Count());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;<sp/>r<sp/>&lt;=<sp/>ded[i]-&gt;vrt.Count();<sp/>++r)</highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&lt;<sp/>ded[i]-&gt;vrt.Count())</highlight></codeline>
<codeline lineno="5336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r1<sp/>=<sp/>r,<sp/>r2<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bck)</highlight></codeline>
<codeline lineno="5339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r2<sp/>=<sp/>ded[i]-&gt;vrt.Count()<sp/>-<sp/>1<sp/>-<sp/>r;</highlight></codeline>
<codeline lineno="5341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curv[1]<sp/>=<sp/>ded[i]-&gt;vrt[r1];</highlight></codeline>
<codeline lineno="5343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curv[3]<sp/>=<sp/>ded[ii2]-&gt;vrt[r2];</highlight></codeline>
<codeline lineno="5344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>tr=r;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(ded[i]-&gt;order[kf])<sp/>tr=ded[i]-&gt;tvrt.Count()-r-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>m.getNumMaps();<sp/>++mi)</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(mi))</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curt[mi][1]<sp/>=<sp/>ded[i]-&gt;tvrt[mi][r1][kf];</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(ded[ii2]-&gt;order[fr2p])<sp/>tr=ded[ii2]-&gt;tvrt.Count()-r-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curt[mi][3]<sp/>=<sp/>ded[ii2]-&gt;tvrt[mi][r2][fr2p];</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curv[1]<sp/>=<sp/>vr[1];</highlight></codeline>
<codeline lineno="5359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curv[3]<sp/>=<sp/>vr[3];</highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>m.getNumMaps();<sp/>++mi)</highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(mi))</highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curt[mi][1]<sp/>=<sp/>tr[mi][1];</highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curt[mi][3]<sp/>=<sp/>tr[mi][3];</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>curt[1]=0;curt[3]=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Face<sp/>fc[2];</highlight></codeline>
<codeline lineno="5371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVFace<sp/>tfc[<ref refid="util_8cpp_1a6cb069a9f45813f7f1986d434ffdc2ce" kindref="member">MESHSMOOTHMAPS_SUPPORT</ref>][2];</highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd.GetAnalogueQuad(curv,<sp/>curt,<sp/>fc[0],<sp/>fc[1],<sp/>tfc);</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;frst<sp/>tv1(%g<sp/>%g<sp/>%g)<sp/>tv2(%g<sp/>%g<sp/>%g)&quot;,P3D(addtverts[curt[0]]),P3D(addtverts[curt[2]]));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curv[0]<sp/>=<sp/>curv[1];</highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curv[2]<sp/>=<sp/>curv[3];</highlight></codeline>
<codeline lineno="5376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>m.getNumMaps();<sp/>++mi)</highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(mi))</highlight></codeline>
<codeline lineno="5379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curt[mi][0]<sp/>=<sp/>curt[mi][1];</highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curt[mi][2]<sp/>=<sp/>curt[mi][3];</highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;sec<sp/>tv1(%g<sp/>%g<sp/>%g)<sp/>tv2(%g<sp/>%g<sp/>%g)&quot;,P3D(addtverts[curt[0]]),P3D(addtverts[curt[2]]));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fad<sp/>=<sp/>newfcs.Append(2,<sp/>fc);</highlight></codeline>
<codeline lineno="5388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>m.getNumMaps();<sp/>++mi)</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(mi))</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newtvfcs[mi].Append(2,<sp/>tfc[mi]);</highlight></codeline>
<codeline lineno="5393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newfacesel.SetSize(newfcs.Count(),<sp/>1);</highlight></codeline>
<codeline lineno="5396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newfacesel.Set(fad,<sp/>presel[fc1]);</highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newfacesel.Set(fad<sp/>+<sp/>1,<sp/>presel[fc1]);</highlight></codeline>
<codeline lineno="5398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>qd.GetAnalogueQuad(vr,tr,fc[0],fc[1],tfc[0],tfc[1]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newfcs[fc1]<sp/>=<sp/>fc[0];</highlight></codeline>
<codeline lineno="5403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newfcs[fc2]<sp/>=<sp/>fc[1];</highlight></codeline>
<codeline lineno="5404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>m.getNumMaps();<sp/>++mi)</highlight></codeline>
<codeline lineno="5406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(mi))</highlight></codeline>
<codeline lineno="5407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newtvfcs[mi][fc1]<sp/>=<sp/>tfc[mi][0];</highlight></codeline>
<codeline lineno="5409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newtvfcs[mi][fc2]<sp/>=<sp/>tfc[mi][1];</highlight></codeline>
<codeline lineno="5410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curv<sp/>=<sp/>0,<sp/>curt[<ref refid="util_8cpp_1a6cb069a9f45813f7f1986d434ffdc2ce" kindref="member">MESHSMOOTHMAPS_SUPPORT</ref>],<sp/>frstv,<sp/>secv;</highlight></codeline>
<codeline lineno="5418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frstv<sp/>=<sp/>whichEdge(m.faces[fc1],<sp/>me.v[0],<sp/>me.v[1]);</highlight></codeline>
<codeline lineno="5419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frstv<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="5420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secv<sp/>=<sp/>(frstv<sp/>+<sp/>1)<sp/>%<sp/>3;</highlight></codeline>
<codeline lineno="5422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Face<sp/>fff<sp/>=<sp/>m.faces[fc1];</highlight></codeline>
<codeline lineno="5423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVFace<sp/>ttt[<ref refid="util_8cpp_1a6cb069a9f45813f7f1986d434ffdc2ce" kindref="member">MESHSMOOTHMAPS_SUPPORT</ref>];</highlight></codeline>
<codeline lineno="5424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>m.getNumMaps();<sp/>++mi)</highlight></codeline>
<codeline lineno="5426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(mi))</highlight></codeline>
<codeline lineno="5427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttt[mi]<sp/>=<sp/>m.mapFaces(mi)[fc1];</highlight></codeline>
<codeline lineno="5429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(LengthSquared(addvrts[ded[i]-&gt;vrt[0]]-addvrts[fff.v[frstv]])&gt;LengthSquared(addvrts[ded[i]-&gt;vrt[0]]-addvrts[fff.v[secv]])){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ded[i]-&gt;order[kf])</highlight></codeline>
<codeline lineno="5433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cc<sp/>=<sp/>frstv;</highlight></codeline>
<codeline lineno="5435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frstv<sp/>=<sp/>secv;</highlight></codeline>
<codeline lineno="5436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secv<sp/>=<sp/>cc;</highlight></codeline>
<codeline lineno="5437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;=<sp/>ded[i]-&gt;vrt.Count();<sp/>++l)</highlight></codeline>
<codeline lineno="5439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVFace<sp/>tface[<ref refid="util_8cpp_1a6cb069a9f45813f7f1986d434ffdc2ce" kindref="member">MESHSMOOTHMAPS_SUPPORT</ref>];</highlight></codeline>
<codeline lineno="5441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/><ref refid="util_8cpp_1a6cb069a9f45813f7f1986d434ffdc2ce" kindref="member">MESHSMOOTHMAPS_SUPPORT</ref>;<sp/>++mi)</highlight></codeline>
<codeline lineno="5443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tface[mi]<sp/>=<sp/>ttt[mi];</highlight></codeline>
<codeline lineno="5444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Face<sp/>face<sp/>=<sp/>fff;</highlight></codeline>
<codeline lineno="5446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face.v[frstv]<sp/>=<sp/>curv;</highlight></codeline>
<codeline lineno="5448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&lt;<sp/>ded[i]-&gt;vrt.Count())</highlight></codeline>
<codeline lineno="5449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face.v[secv]<sp/>=<sp/>ded[i]-&gt;vrt[l];</highlight></codeline>
<codeline lineno="5451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curv<sp/>=<sp/>ded[i]-&gt;vrt[l];</highlight></codeline>
<codeline lineno="5452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>m.getNumMaps();<sp/>++mi)</highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(mi))</highlight></codeline>
<codeline lineno="5458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tface[mi].t[frstv]<sp/>=<sp/>curt[mi];</highlight></codeline>
<codeline lineno="5460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&lt;<sp/>ded[i]-&gt;vrt.Count())</highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>m.getNumMaps();<sp/>++mi)</highlight></codeline>
<codeline lineno="5467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(mi))</highlight></codeline>
<codeline lineno="5468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tface[mi].t[secv]<sp/>=<sp/>ded[i]-&gt;tvrt[mi][l][kf];</highlight></codeline>
<codeline lineno="5470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curt[mi]<sp/>=<sp/>ded[i]-&gt;tvrt[mi][l][kf];</highlight></codeline>
<codeline lineno="5471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fad<sp/>=<sp/>newfcs.Append(1,<sp/>&amp;face);</highlight></codeline>
<codeline lineno="5477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>m.getNumMaps();<sp/>++mi)</highlight></codeline>
<codeline lineno="5479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(mi))</highlight></codeline>
<codeline lineno="5480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newtvfcs[mi].Append(1,<sp/>&amp;tface[mi]);</highlight></codeline>
<codeline lineno="5482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newfacesel.SetSize(newfcs.Count(),<sp/>1);</highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newfacesel.Set(fad,<sp/>presel[fc1]);</highlight></codeline>
<codeline lineno="5486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newfcs[fc1]<sp/>=<sp/>face;</highlight></codeline>
<codeline lineno="5490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>m.getNumMaps();<sp/>++mi)</highlight></codeline>
<codeline lineno="5492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(mi))</highlight></codeline>
<codeline lineno="5493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newtvfcs[mi][fc1]<sp/>=<sp/>tface[mi];</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>todel.Append(1,&amp;fc1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcsdivd[fc1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ded[i];</highlight></codeline>
<codeline lineno="5504"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5505"><highlight class="normal"><sp/><sp/>ded.SetCount(0);</highlight></codeline>
<codeline lineno="5506"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*todel.Sort(int_lcmp);</highlight></codeline>
<codeline lineno="5507"><highlight class="comment"><sp/><sp/>{for(int<sp/>p=0;p&lt;todel.Count();++p)<sp/>{newfcs.Delete(todel[p],1);newtvfcs.Delete(todel[p],1);}}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if(newtvfcs.Count()!=newfcs.Count())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>theHold.Begin();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>theHold.Put(new<sp/>MeshSmoothRestore());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/>m.setNumFaces(newfcs.Count());</highlight></codeline>
<codeline lineno="5512"><highlight class="normal"><sp/><sp/>memcpy(m.faces,<sp/>&amp;newfcs[0],<sp/>newfcs.Count()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Face));</highlight></codeline>
<codeline lineno="5513"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>m.getNumMaps();<sp/>++mi)</highlight></codeline>
<codeline lineno="5515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(mi))</highlight></codeline>
<codeline lineno="5516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(m.mapFaces(mi),<sp/>&amp;newtvfcs[mi][0],<sp/>newtvfcs[mi].Count()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TVFace));</highlight></codeline>
<codeline lineno="5518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5520"><highlight class="normal"><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m)<sp/>=<sp/>newfacesel;</highlight></codeline>
<codeline lineno="5521"><highlight class="normal"><sp/><sp/>m.setNumVerts(addverts.Count());</highlight></codeline>
<codeline lineno="5522"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>addverts.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="5524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.setVert(i,<sp/>addverts[i]);</highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mi<sp/>=<sp/>0;<sp/>mi<sp/>&lt;<sp/>m.getNumMaps();<sp/>++mi)</highlight></codeline>
<codeline lineno="5528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(mi))</highlight></codeline>
<codeline lineno="5529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.setNumMapVerts(mi,<sp/>addtverts[mi].Count());</highlight></codeline>
<codeline lineno="5531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>addtverts[mi].Count();<sp/>++i)</highlight></codeline>
<codeline lineno="5533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.setMapVert(mi,<sp/>i,<sp/>addtverts[mi][i]);</highlight></codeline>
<codeline lineno="5534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5537"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>theHold.Accept(GetString(IDS_MESHSMOOTH));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5539"><highlight class="normal"></highlight></codeline>
<codeline lineno="5540"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1adbe3deec7ed466cb46b9848816e8228d" kindref="member">DagUtil::mesh_smooth</ref>()</highlight></codeline>
<codeline lineno="5541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a520e07ac1ad2cb452fe1276be795b0ea" kindref="member">update_vars</ref>();</highlight></codeline>
<codeline lineno="5543"><highlight class="normal"><sp/><sp/>TimeValue<sp/>time<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="5544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNodeCount();</highlight></codeline>
<codeline lineno="5545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nn<sp/>=<sp/>0;<sp/>nn<sp/>&lt;<sp/>nc;<sp/>++nn)</highlight></codeline>
<codeline lineno="5546"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5547"><highlight class="normal"><sp/><sp/><sp/><sp/>INode<sp/>*node<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNode(nn);</highlight></codeline>
<codeline lineno="5548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)</highlight></codeline>
<codeline lineno="5549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;!!!!cd&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(!node-&gt;IsSubClassOf(Class_ID(TRIOBJ_CLASS_ID,0)))<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5552"><highlight class="normal"><sp/><sp/><sp/><sp/>Object<sp/>*meshobj<sp/>=<sp/>node-&gt;EvalWorldState(time).obj;</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"><sp/><sp/><sp/><sp/>TriObject<sp/>*to<sp/>=<sp/>(TriObject<sp/>*)meshobj-&gt;ConvertToType(time,<sp/>Class_ID(TRIOBJ_CLASS_ID,<sp/>0));</highlight></codeline>
<codeline lineno="5554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!to)</highlight></codeline>
<codeline lineno="5555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to<sp/>!=<sp/>meshobj)</highlight></codeline>
<codeline lineno="5557"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to-&gt;DeleteMe();</highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5561"><highlight class="normal"><sp/><sp/><sp/><sp/>Mesh<sp/>&amp;mesh<sp/>=<sp/>to-&gt;mesh;</highlight></codeline>
<codeline lineno="5562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;!!!12!cd&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDagUtil_1aabf25cf563fe0a4b62f4b0c2b97078e8" kindref="member">smooth_mesh</ref>(node,<sp/>mesh);</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.InvalidateGeomCache();</highlight></codeline>
<codeline lineno="5565"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;InvalidateWS();</highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5567"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;RedrawViews(time);</highlight></codeline>
<codeline lineno="5568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5569"><highlight class="normal"></highlight></codeline>
<codeline lineno="5570"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a5e0b9330ac7b63f66915a7c34e1f7925" kindref="member">put_meshes_on_mesh</ref>(Interface<sp/>*ip,<sp/>TCHAR<sp/>*selsname,<sp/>Tab&lt;INode<sp/>*&gt;<sp/>&amp;snode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>objnum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_to_norm,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_smgr,</highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rotatez,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>slope,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selfaces,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xydiap[2],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zdiap[2],<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>xys,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>zs);</highlight></codeline>
<codeline lineno="5572"><highlight class="normal"></highlight></codeline>
<codeline lineno="5573"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDagUtil_1af40ea5afd2851fcdd1206af51ba33f96" kindref="member">DagUtil::genobjonsurf</ref>()</highlight></codeline>
<codeline lineno="5574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5575"><highlight class="normal"><sp/><sp/><ref refid="classDagUtil_1a520e07ac1ad2cb452fe1276be795b0ea" kindref="member">update_vars</ref>();</highlight></codeline>
<codeline lineno="5576"><highlight class="normal"><sp/><sp/>TimeValue<sp/>time<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetTime();</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNodeCount();</highlight></codeline>
<codeline lineno="5578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nc)</highlight></codeline>
<codeline lineno="5579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5580"><highlight class="normal"><sp/><sp/>Tab&lt;INode<sp/>*&gt;<sp/>snode;</highlight></codeline>
<codeline lineno="5581"><highlight class="normal"><sp/><sp/>snode.SetCount(nc);</highlight></codeline>
<codeline lineno="5582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nc;<sp/>++i)</highlight></codeline>
<codeline lineno="5583"><highlight class="normal"><sp/><sp/><sp/><sp/>snode[i]<sp/>=<sp/><ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>-&gt;GetSelNode(i);</highlight></codeline>
<codeline lineno="5584"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a5e0b9330ac7b63f66915a7c34e1f7925" kindref="member">put_meshes_on_mesh</ref>(<ref refid="classDagUtil_1a6649e872e86e0c8d7d4810e7e1c7db7f" kindref="member">ip</ref>,<sp/><ref refid="classDagUtil_1ac184605103009d29a258d552ebedf365" kindref="member">gs_sname</ref>,<sp/>snode,<sp/><ref refid="classDagUtil_1a997d9bceb4dd3634df78aee587c52ddc" kindref="member">gs_objnum</ref>,<sp/><ref refid="classDagUtil_1a991f68e95088983d917ba87ee9afaff5" kindref="member">gs_seed</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(<ref refid="classDagUtil_1a7370d674d3c422081571e24f3779f81d" kindref="member">gs_set2norm</ref><sp/>!=<sp/>0),<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(<ref refid="classDagUtil_1af258629a2dfe69531d056994219f0f8f" kindref="member">gs_usesmgr</ref><sp/>!=<sp/>0),<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(<ref refid="classDagUtil_1a9ac8514c70fa8e65aac6b149c6d27911" kindref="member">gs_rotatez</ref><sp/>!=<sp/>0),</highlight></codeline>
<codeline lineno="5585"><highlight class="normal"><sp/><sp/><sp/><sp/>DegToRad(<ref refid="classDagUtil_1a48b928410b1ad4594f765f9cdf00e0ef" kindref="member">gs_slope</ref>),<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(<ref refid="classDagUtil_1a5fca6231de82bfbb82587c5ad20f6e51" kindref="member">gs_selfaces</ref><sp/>!=<sp/>0),<sp/><ref refid="classDagUtil_1a8303f93b240dd10b07a4fce8834cd483" kindref="member">gs_xydiap</ref>,<sp/><ref refid="classDagUtil_1a5c59932a40b407fe51384a41ea614dc7" kindref="member">gs_zdiap</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(<ref refid="classDagUtil_1ad468043dcd63b0c05f636077d3a8f7ae" kindref="member">gs_scalexy</ref><sp/>!=<sp/>0),<sp/><ref refid="classDagUtil_1a1395f9914d1118e2651e7be2d50c9cb1" kindref="member">gs_scalez</ref>);</highlight></codeline>
<codeline lineno="5586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5587"><highlight class="normal"></highlight></codeline>
<codeline lineno="5588"><highlight class="normal">Matrix3<sp/><ref refid="util_8cpp_1a0ab0a5c17c8fed4cac0335e19af84ef7" kindref="member">get_scaled_stretch_node_tm</ref>(INode<sp/>*node,<sp/>TimeValue<sp/>time)</highlight></codeline>
<codeline lineno="5589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5590"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R24)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>masterScale<sp/>=<sp/>(float)GetSystemUnitScale(UNITS_METERS);</highlight></codeline>
<codeline lineno="5592"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>masterScale<sp/>=<sp/>(float)GetMasterScale(UNITS_METERS);</highlight></codeline>
<codeline lineno="5594"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5595"><highlight class="normal"><sp/><sp/>Matrix3<sp/>tm<sp/>=<sp/>node-&gt;GetStretchTM(time)<sp/>*<sp/>node-&gt;GetNodeTM(time);</highlight></codeline>
<codeline lineno="5596"><highlight class="normal"><sp/><sp/>tm.SetTrans(tm.GetTrans()<sp/>*<sp/>masterScale);</highlight></codeline>
<codeline lineno="5597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tm;</highlight></codeline>
<codeline lineno="5598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5599"><highlight class="normal"></highlight></codeline>
<codeline lineno="5600"><highlight class="normal"></highlight></codeline>
<codeline lineno="5601"><highlight class="normal">Matrix3<sp/><ref refid="util_8cpp_1a62bd0983642b5aa1bfeb95655f4272b3" kindref="member">get_scaled_object_tm</ref>(INode<sp/>*node,<sp/>TimeValue<sp/>time)</highlight></codeline>
<codeline lineno="5602"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5603"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R24)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>masterScale<sp/>=<sp/>(float)GetSystemUnitScale(UNITS_METERS);</highlight></codeline>
<codeline lineno="5605"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>masterScale<sp/>=<sp/>(float)GetMasterScale(UNITS_METERS);</highlight></codeline>
<codeline lineno="5607"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5608"><highlight class="normal"><sp/><sp/>Matrix3<sp/>tm<sp/>=<sp/>node-&gt;GetObjectTM(time);</highlight></codeline>
<codeline lineno="5609"><highlight class="normal"><sp/><sp/>tm.SetTrans(tm.GetTrans()<sp/>*<sp/>masterScale);</highlight></codeline>
<codeline lineno="5610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tm;</highlight></codeline>
<codeline lineno="5611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5612"><highlight class="normal"></highlight></codeline>
<codeline lineno="5613"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(INode<sp/>*node,<sp/><ref refid="classENodeCB" kindref="compound">ENodeCB</ref><sp/>*cb)</highlight></codeline>
<codeline lineno="5614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)</highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="5617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cn<sp/>=<sp/>node-&gt;NumberOfChildren();</highlight></codeline>
<codeline lineno="5618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cn;<sp/>++i)</highlight></codeline>
<codeline lineno="5619"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/><sp/><sp/>INode<sp/>*n<sp/>=<sp/>node-&gt;GetChildNode(i);</highlight></codeline>
<codeline lineno="5621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cb-&gt;<ref refid="classENodeCB_1ad287b227ea11aa5f7d22d4f768193c17" kindref="member">proc</ref>(n))</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da82f2d62a910a95b53a40e91b2767907e" kindref="member">ECB_STOP</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>:</highlight></codeline>
<codeline lineno="5625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="util_8cpp_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(n,<sp/>cb))</highlight></codeline>
<codeline lineno="5626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="5630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"></highlight></codeline>
<codeline lineno="5632"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1abdeb1a5821e1c4a6559af37a29033c1b" kindref="member">enum_layer_nodes</ref>(ILayer<sp/>*layer,<sp/><ref refid="classENodeCB" kindref="compound">ENodeCB</ref><sp/>*cb)</highlight></codeline>
<codeline lineno="5633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!layer)</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5636"><highlight class="normal"><sp/><sp/>ILayerProperties<sp/>*layerProp<sp/>=<sp/>(ILayerProperties<sp/>*)layer-&gt;GetInterface(LAYERPROPERTIES_INTERFACE);</highlight></codeline>
<codeline lineno="5637"><highlight class="normal"><sp/><sp/>Tab&lt;INode<sp/>*&gt;<sp/>nodes;</highlight></codeline>
<codeline lineno="5638"><highlight class="normal"><sp/><sp/>layerProp-&gt;Nodes(nodes);</highlight></codeline>
<codeline lineno="5639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nodes.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="5640"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5641"><highlight class="normal"><sp/><sp/><sp/><sp/>cb-&gt;<ref refid="classENodeCB_1ad287b227ea11aa5f7d22d4f768193c17" kindref="member">proc</ref>(nodes[i]);</highlight></codeline>
<codeline lineno="5642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(nodes[i],<sp/>cb);</highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5645"><highlight class="normal"></highlight></codeline>
<codeline lineno="5646"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1ae35c7235ed4f8cfd7c6d5c7530ebaea1" kindref="member">enum_nodes_by_node</ref>(INode<sp/>*node,<sp/><ref refid="classENodeCB" kindref="compound">ENodeCB</ref><sp/>*cb)</highlight></codeline>
<codeline lineno="5647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5648"><highlight class="normal"><sp/><sp/>cb-&gt;<ref refid="classENodeCB_1ad287b227ea11aa5f7d22d4f768193c17" kindref="member">proc</ref>(node);</highlight></codeline>
<codeline lineno="5649"><highlight class="normal"><sp/><sp/><ref refid="util_8cpp_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(node,<sp/>cb);</highlight></codeline>
<codeline lineno="5650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5651"><highlight class="normal"></highlight></codeline>
<codeline lineno="5652"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R27)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R27</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5653"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a533d4977a8bf8ddfd90a918427945e3f" kindref="member">is_default_layer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ILayer<sp/>&amp;layer)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tcscmp(layer.GetName().data(),<sp/>_T(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">))<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="5654"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5655"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a533d4977a8bf8ddfd90a918427945e3f" kindref="member">is_default_layer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ILayer<sp/>&amp;layer)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tcscmp(layer.GetName(),<sp/>_T(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">))<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="5656"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="util.cpp"/>
  </compounddef>
</doxygen>
