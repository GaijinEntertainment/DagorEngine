<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="expUtil_8cpp" kind="file" language="C++">
    <compoundname>expUtil.cpp</compoundname>
    <includes local="no">max.h</includes>
    <includes local="no">plugapi.h</includes>
    <includes local="no">ilayermanager.h</includes>
    <includes local="no">ilayerproperties.h</includes>
    <includes local="no">utilapi.h</includes>
    <includes local="no">bmmlib.h</includes>
    <includes local="no">stdmat.h</includes>
    <includes local="no">splshape.h</includes>
    <includes local="no">notetrck.h</includes>
    <includes local="no">modstack.h</includes>
    <includes local="no">cs/phyexp.h</includes>
    <includes local="no">meshnormalspec.h</includes>
    <includes local="no">impexp.h</includes>
    <includes refid="comboBoxHelper_8h" local="yes">comboBoxHelper.h</includes>
    <includes refid="dagor_8h" local="yes">dagor.h</includes>
    <includes refid="dagorLogWindow_8h" local="yes">dagorLogWindow.h</includes>
    <includes refid="enumnode_8h" local="yes">enumnode.h</includes>
    <includes refid="dagfmt_8h" local="yes">dagfmt.h</includes>
    <includes refid="mater_8h" local="yes">mater.h</includes>
    <includes refid="expanim_8h" local="yes">expanim.h</includes>
    <includes refid="expanim2_8h" local="yes">expanim2.h</includes>
    <includes local="yes">Bones.h</includes>
    <includes refid="resource_8h" local="yes">resource.h</includes>
    <includes refid="debug_8h" local="yes">debug.h</includes>
    <includes refid="rolluppanel_8h" local="yes">rolluppanel.h</includes>
    <includes refid="datablk_8h" local="yes">datablk.h</includes>
    <includes local="no">set</includes>
    <includes local="no">map</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes local="no">Shobjidl.h</includes>
    <includes local="no">Shlobj.h</includes>
    <includes local="no">sstream</includes>
    <includes local="no">fstream</includes>
    <includes refid="cfg_8h" local="yes">cfg.h</includes>
    <includes refid="layout_8h" local="yes">layout.h</includes>
    <includes refid="common_8h" local="yes">common.h</includes>
    <incdepgraph>
      <node id="46">
        <label>cfg.h</label>
        <link refid="cfg_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>comboBoxHelper.h</label>
        <link refid="comboBoxHelper_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>dagfmt.h</label>
        <link refid="dagfmt_8h"/>
      </node>
      <node id="17">
        <label>dagor.h</label>
        <link refid="dagor_8h"/>
      </node>
      <node id="18">
        <label>dagorLogWindow.h</label>
        <link refid="dagorLogWindow_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>datablk.h</label>
        <link refid="datablk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>debug.h</label>
        <link refid="debug_8h"/>
      </node>
      <node id="21">
        <label>enumnode.h</label>
        <link refid="enumnode_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>expUtil.cpp</label>
        <link refid="expUtil_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>expanim.h</label>
        <link refid="expanim_8h"/>
      </node>
      <node id="26">
        <label>expanim2.h</label>
        <link refid="expanim2_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>layout.h</label>
        <link refid="layout_8h"/>
      </node>
      <node id="24">
        <label>mater.h</label>
        <link refid="mater_8h"/>
      </node>
      <node id="32">
        <label>math3d.h</label>
        <link refid="math3d_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>resource.h</label>
        <link refid="resource_8h"/>
      </node>
      <node id="30">
        <label>rolluppanel.h</label>
        <link refid="rolluppanel_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>Bones.h</label>
      </node>
      <node id="43">
        <label>Shlobj.h</label>
      </node>
      <node id="42">
        <label>Shobjidl.h</label>
      </node>
      <node id="7">
        <label>bmmlib.h</label>
      </node>
      <node id="12">
        <label>cs/phyexp.h</label>
      </node>
      <node id="36">
        <label>e3dcolor.h</label>
      </node>
      <node id="35">
        <label>float.h</label>
      </node>
      <node id="45">
        <label>fstream</label>
      </node>
      <node id="22">
        <label>ilayer.h</label>
      </node>
      <node id="4">
        <label>ilayermanager.h</label>
      </node>
      <node id="5">
        <label>ilayerproperties.h</label>
      </node>
      <node id="14">
        <label>impexp.h</label>
      </node>
      <node id="39">
        <label>map</label>
      </node>
      <node id="33">
        <label>math.h</label>
      </node>
      <node id="2">
        <label>max.h</label>
      </node>
      <node id="13">
        <label>meshnormalspec.h</label>
      </node>
      <node id="11">
        <label>modstack.h</label>
      </node>
      <node id="10">
        <label>notetrck.h</label>
      </node>
      <node id="3">
        <label>plugapi.h</label>
      </node>
      <node id="38">
        <label>set</label>
      </node>
      <node id="9">
        <label>splshape.h</label>
      </node>
      <node id="44">
        <label>sstream</label>
      </node>
      <node id="34">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>stdmat.h</label>
      </node>
      <node id="37">
        <label>str.h</label>
      </node>
      <node id="19">
        <label>strclass.h</label>
      </node>
      <node id="40">
        <label>string</label>
      </node>
      <node id="6">
        <label>utilapi.h</label>
      </node>
      <node id="41">
        <label>utility</label>
      </node>
      <node id="20">
        <label>vector</label>
      </node>
      <node id="16">
        <label>windowsx.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classExpUtil" prot="public">ExpUtil</innerclass>
    <innerclass refid="classDagExport" prot="public">DagExport</innerclass>
    <innerclass refid="classDagExpCD" prot="public">DagExpCD</innerclass>
    <innerclass refid="classExpUtilDesc" prot="public">ExpUtilDesc</innerclass>
    <innerclass refid="structBlock" prot="public">Block</innerclass>
    <innerclass refid="structExpMat" prot="public">ExpMat</innerclass>
    <innerclass refid="classMyExpTMAnimCB" prot="public">MyExpTMAnimCB</innerclass>
    <innerclass refid="structExpNode" prot="public">ExpNode</innerclass>
    <innerclass refid="structExpKeyLabel" prot="public">ExpKeyLabel</innerclass>
    <innerclass refid="structExpNoteTrack" prot="public">ExpNoteTrack</innerclass>
    <innerclass refid="classExportENCB" prot="public">ExportENCB</innerclass>
    <innerclass refid="structExportENCB_1_1AnimDataHeader" prot="public">ExportENCB::AnimDataHeader</innerclass>
    <innerclass refid="structExportENCB_1_1DataTypeHeader" prot="public">ExportENCB::DataTypeHeader</innerclass>
    <innerclass refid="structExportENCB_1_1ChannelParams" prot="public">ExportENCB::ChannelParams</innerclass>
    <innerclass refid="structExportENCB_1_1AnimKeyQuat" prot="public">ExportENCB::AnimKeyQuat</innerclass>
    <innerclass refid="structExportENCB_1_1AnimKeyLabel" prot="public">ExportENCB::AnimKeyLabel</innerclass>
    <innerclass refid="classCameraNodeEnumerator" prot="public">CameraNodeEnumerator</innerclass>
    <innerclass refid="structCameraNodeEnumerator_1_1Cam" prot="public">CameraNodeEnumerator::Cam</innerclass>
    <innerclass refid="classIDagorExportUtil" prot="public">IDagorExportUtil</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="expUtil_8cpp_1a7e6512f6bda417f77207d0edca6aa3db" prot="public" static="no">
        <name>SET_TYPE</name>
        <initializer>set</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="50" column="10" bodyfile="expUtil.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expUtil_8cpp_1aa016f26675334cfc166d97dc9ec7d318" prot="public" static="no">
        <name>MAP_TYPE</name>
        <initializer>map</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="51" column="9" bodyfile="expUtil.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expUtil_8cpp_1a5a21ec59d9eb9ce715ded30627ef662c" prot="public" static="no">
        <name>INTERVAL</name>
        <param><defname>name</defname></param>
        <param><defname>elapsed</defname></param>
        <param><defname>type</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="54" column="11" bodyfile="expUtil.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expUtil_8cpp_1a398da37e411bb2d829f85232480defea" prot="public" static="no">
        <name>ERRMSG_DELAY</name>
        <initializer>3000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="71" column="9" bodyfile="expUtil.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" prot="public" static="no">
        <name>wr</name>
        <param><defname>p</defname></param>
        <param><defname>l</defname></param>
        <initializer>  {                              \
    <ref refid="polyBumpUtil_8cpp_1a7699f0fa17b7a8c6cc60895b6ec8bb97" kindref="member">if</ref> (<ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>, l, 1, <ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>) != 1) \
      <ref refid="polyBumpUtil_8cpp_1a9717e7bbecb906637e86cef6da3d83c2" kindref="member">return</ref> 0;                  \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="1047" column="9" bodyfile="expUtil.cpp" bodystart="1773" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" prot="public" static="no">
        <name>wr</name>
        <param><defname>p</defname></param>
        <param><defname>l</defname></param>
        <initializer>  {                              \
    <ref refid="polyBumpUtil_8cpp_1a7699f0fa17b7a8c6cc60895b6ec8bb97" kindref="member">if</ref> (<ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>, l, 1, <ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>) != 1) \
      <ref refid="polyBumpUtil_8cpp_1a9717e7bbecb906637e86cef6da3d83c2" kindref="member">return</ref> 0;                  \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="1078" column="9" bodyfile="expUtil.cpp" bodystart="1773" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" prot="public" static="no">
        <name>wr</name>
        <param><defname>p</defname></param>
        <param><defname>l</defname></param>
        <initializer>  {                                \
    <ref refid="polyBumpUtil_8cpp_1a7699f0fa17b7a8c6cc60895b6ec8bb97" kindref="member">if</ref> (l &gt; 0)                     \
      <ref refid="polyBumpUtil_8cpp_1a7699f0fa17b7a8c6cc60895b6ec8bb97" kindref="member">if</ref> (<ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>, l, 1, <ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>) != 1) \
        <ref refid="polyBumpUtil_8cpp_1a9717e7bbecb906637e86cef6da3d83c2" kindref="member">return</ref> 0;                  \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="1773" column="9" bodyfile="expUtil.cpp" bodystart="1773" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" prot="public" static="no">
        <name>bblk</name>
        <param><defname>id</defname></param>
        <initializer>  {                     \
    <ref refid="polyBumpUtil_8cpp_1a7699f0fa17b7a8c6cc60895b6ec8bb97" kindref="member">if</ref> (!begin_blk(id)) \
      <ref refid="polyBumpUtil_8cpp_1a9717e7bbecb906637e86cef6da3d83c2" kindref="member">return</ref> 0;         \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="1804" column="9" bodyfile="expUtil.cpp" bodystart="1804" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" prot="public" static="no">
        <name>eblk</name>
        <initializer>  {                 \
    <ref refid="polyBumpUtil_8cpp_1a7699f0fa17b7a8c6cc60895b6ec8bb97" kindref="member">if</ref> (!end_blk()) \
      <ref refid="polyBumpUtil_8cpp_1a9717e7bbecb906637e86cef6da3d83c2" kindref="member">return</ref> 0;     \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="1809" column="9" bodyfile="expUtil.cpp" bodystart="1809" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600afcd0c4f1eee6995fa669130f65322320" prot="public">
          <name>CH_EXP_FNAME</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600ae966136bbc9f6c7965c0e25f04add687" prot="public">
          <name>CH_EXPHIDDEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a2bdf62c40ccf3d17583a487fe61967aa" prot="public">
          <name>CH_EXPFLG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a01b57f7f8bd94ca5100e0d286cb5765f" prot="public">
          <name>CH_ANIMEPS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a28c7b0c88fa048c8e2692f53ed591773" prot="public">
          <name>CH_ANIMRANGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a8a69f71edb5976ba2d92acd6c6dba995" prot="public">
          <name>CH_EXP_ANIM2_FNAME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a6caec50977ed4fb00b038136ae952118" prot="public">
          <name>CH_EXP_CAMERA_FNAME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a4a3990c1f896e017f1f121948e539951" prot="public">
          <name>CH_ANIMEPS2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a3c69ac220caaf605d441f12501098743" prot="public">
          <name>CH_EXP_PHYS_FNAME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600af0afb78c862def66af31a817e38271b8" prot="public">
          <name>CH_EXP_MODE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="303" column="1" bodyfile="expUtil.cpp" bodystart="304" bodyend="315"/>
      </memberdef>
      <memberdef kind="enum" id="expUtil_8cpp_1a63446b230c177c997637df55fe9df08a" prot="public" static="no" strong="no">
        <type></type>
        <name>ExpOps</name>
        <enumvalue id="expUtil_8cpp_1a63446b230c177c997637df55fe9df08aa1d2c95c28c53e6ea88888ceeb07c4395" prot="public">
          <name>fun_export</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="5201" column="1" bodyfile="expUtil.cpp" bodystart="5202" bodyend="5204"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="expUtil_8cpp_1a65f85814a8290f9797005d3b28e7e5fc" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char uchar</definition>
        <argsstring></argsstring>
        <name>uchar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="73" column="23" bodyfile="expUtil.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="expUtil_8cpp_1ab95f123a6c9bcfee6a343170ef8c5f69" prot="public" static="no">
        <type>unsigned short</type>
        <definition>typedef unsigned short ushort</definition>
        <argsstring></argsstring>
        <name>ushort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="74" column="24" bodyfile="expUtil.cpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="expUtil_8cpp_1a91ad9478d81a7aaf2593e8d9c3d06a14" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int uint</definition>
        <argsstring></argsstring>
        <name>uint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="75" column="22" bodyfile="expUtil.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="expUtil_8cpp_1a4be4302620be4a0cda3e678fdc4f05fb" prot="public" static="no">
        <type>int</type>
        <definition>typedef int FaceNGr[3]</definition>
        <argsstring>[3]</argsstring>
        <name>FaceNGr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="76" column="13" bodyfile="expUtil.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="expUtil_8cpp_1a2cfdf5592681bf9cd5ede91484624862" prot="public" static="yes" mutable="no">
        <type><ref refid="classExpUtil" kindref="compound">ExpUtil</ref></type>
        <definition>ExpUtil util</definition>
        <argsstring></argsstring>
        <name>util</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="189" column="16" bodyfile="expUtil.cpp" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="expUtil_8cpp_1a93b1265582b6203f189d0ce73a40c1d6" prot="public" static="yes" mutable="no">
        <type><ref refid="classDagExpCD" kindref="compound">DagExpCD</ref></type>
        <definition>DagExpCD dagexpcd</definition>
        <argsstring></argsstring>
        <name>dagexpcd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="237" column="17" bodyfile="expUtil.cpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="expUtil_8cpp_1a7bb9762ac492cc3297e2fd6d1726b857" prot="public" static="yes" mutable="no">
        <type><ref refid="classExpUtilDesc" kindref="compound">ExpUtilDesc</ref></type>
        <definition>ExpUtilDesc utilDesc</definition>
        <argsstring></argsstring>
        <name>utilDesc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="457" column="20" bodyfile="expUtil.cpp" bodystart="457" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="expUtil_8cpp_1a0078deee7f7e8c27d4c0ce0d13ef34db" prot="public" static="yes" mutable="no">
        <type>Tab&lt; <ref refid="structBlock" kindref="compound">Block</ref> &gt;</type>
        <definition>Tab&lt;Block&gt; blk</definition>
        <argsstring></argsstring>
        <name>blk</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="937" column="12" bodyfile="expUtil.cpp" bodystart="937" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="expUtil_8cpp_1aca9ba5fb8820a1fb40ac72dcc873bd71" prot="public" static="yes" mutable="no">
        <type>FILE *</type>
        <definition>FILE* fileh</definition>
        <argsstring></argsstring>
        <name>fileh</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="938" column="13" bodyfile="expUtil.cpp" bodystart="938" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="expUtil_8cpp_1abc4af7c9a5cb3f58feeab2643f6102ea" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char origin_lin_vel_node_name[]</definition>
        <argsstring>[]</argsstring>
        <name>origin_lin_vel_node_name</name>
        <initializer>= &quot;origin_lin_vel_node_name&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="1156" column="12" bodyfile="expUtil.cpp" bodystart="1156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="expUtil_8cpp_1a817cb8996a10ac6b56b0730e268ba158" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char origin_ang_vel_node_name[]</definition>
        <argsstring>[]</argsstring>
        <name>origin_ang_vel_node_name</name>
        <initializer>= &quot;origin_ang_vel_node_name&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="1157" column="12" bodyfile="expUtil.cpp" bodystart="1157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="expUtil_8cpp_1aa531863a61e92c63c2f2ee55d453a8fe" prot="public" static="yes" mutable="no">
        <type>TCHAR</type>
        <definition>TCHAR filename[MAX_PATH]</definition>
        <argsstring>[MAX_PATH]</argsstring>
        <name>filename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="1158" column="14" bodyfile="expUtil.cpp" bodystart="1158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="expUtil_8cpp_1a9b9f7ac01e8fd1810d5d402cdb1a0780" prot="public" static="yes" mutable="no">
        <type><ref refid="classIDagorExportUtil" kindref="compound">IDagorExportUtil</ref></type>
        <definition>IDagorExportUtil dagorexputiliface(Interface_ID(0x18da32ce, 0x739f1b15), _T(&quot;dagorExport&quot;), IDS_DAGOR_EXPORT_IFACE, NULL, FP_CORE, fun_export, _T(&quot;export&quot;), -1, TYPE_BOOL, 0, 4, _T(&quot;filename&quot;), -1, TYPE_STRING, _T(&quot;range&quot;), -1, TYPE_INTERVAL, _T(&quot;selectedOnly&quot;), -1, TYPE_BOOL, f_keyArgDefault, false, _T(&quot;suppressPrompts&quot;), -1, TYPE_BOOL, f_keyArgDefault, false, end)</definition>
        <argsstring>(Interface_ID(0x18da32ce, 0x739f1b15), _T(&quot;dagorExport&quot;), IDS_DAGOR_EXPORT_IFACE, NULL, FP_CORE, fun_export, _T(&quot;export&quot;), -1, TYPE_BOOL, 0, 4, _T(&quot;filename&quot;), -1, TYPE_STRING, _T(&quot;range&quot;), -1, TYPE_INTERVAL, _T(&quot;selectedOnly&quot;), -1, TYPE_BOOL, f_keyArgDefault, false, _T(&quot;suppressPrompts&quot;), -1, TYPE_BOOL, f_keyArgDefault, false, end)</argsstring>
        <name>dagorexputiliface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="5242" column="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string wideToStr</definition>
        <argsstring>(const TCHAR *sw)</argsstring>
        <name>wideToStr</name>
        <param>
          <type>const TCHAR *</type>
          <declname>sw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="63" column="13" bodyfile="common.cpp" bodystart="115" bodyend="129" declfile="expUtil.cpp" declline="63" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1ac9fb07f5e9a035c1eca78f6428d9a590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref></type>
        <definition>M_STD_STRING strToWide</definition>
        <argsstring>(const char *sz)</argsstring>
        <name>strToWide</name>
        <param>
          <type>const char *</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="64" column="14" bodyfile="common.cpp" bodystart="99" bodyend="112" declfile="expUtil.cpp" declline="64" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1a533d4977a8bf8ddfd90a918427945e3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_default_layer</definition>
        <argsstring>(const ILayer &amp;layer)</argsstring>
        <name>is_default_layer</name>
        <param>
          <type>const ILayer &amp;</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="65" column="6" bodyfile="util.cpp" bodystart="5655" bodyend="5655" declfile="expUtil.cpp" declline="65" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1af55e3469ac33a4cc57e44b31f0fca1b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void export_physics</definition>
        <argsstring>(FILE *file, Interface *ip)</argsstring>
        <name>export_physics</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>Interface *</type>
          <declname>ip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="80" column="6" bodyfile="physExport.cpp" bodystart="1156" bodyend="1163" declfile="expUtil.cpp" declline="80" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1a5cbf6c1604baf4ace0e13d64bbb72f9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calc_momjs</definition>
        <argsstring>(Interface *ip)</argsstring>
        <name>calc_momjs</name>
        <param>
          <type>Interface *</type>
          <declname>ip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="82" column="6" bodyfile="physExport.cpp" bodystart="1166" bodyend="1182" declfile="expUtil.cpp" declline="82" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1a146454c840ea1e558aa4713864b0245f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void scale_matrix</definition>
        <argsstring>(Matrix3 &amp;tm)</argsstring>
        <name>scale_matrix</name>
        <param>
          <type>Matrix3 &amp;</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="95" column="6" bodyfile="expUtil.cpp" bodystart="95" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1a3f889cd4c09a1ef307f5385e45e51d8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ClassDesc *</type>
        <definition>ClassDesc * GetDAGEXPCD</definition>
        <argsstring>()</argsstring>
        <name>GetDAGEXPCD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="239" column="11" bodyfile="expUtil.cpp" bodystart="239" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1a753f5db36a16f2ba0e85bcd4ebfbafcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool force_export_to_dag</definition>
        <argsstring>(const TCHAR *fname, Interface *ip, TCHAR **textures, int max_textures, TCHAR *default_material)</argsstring>
        <name>force_export_to_dag</name>
        <param>
          <type>const TCHAR *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>Interface *</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>TCHAR **</type>
          <declname>textures</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_textures</declname>
        </param>
        <param>
          <type>TCHAR *</type>
          <declname>default_material</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="241" column="6" bodyfile="expUtil.cpp" bodystart="241" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void explog</definition>
        <argsstring>(const TCHAR *s,...)</argsstring>
        <name>explog</name>
        <param>
          <type>const TCHAR *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="260" column="6" bodyfile="expUtil.cpp" bodystart="260" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void explogWarning</definition>
        <argsstring>(const TCHAR *s,...)</argsstring>
        <name>explogWarning</name>
        <param>
          <type>const TCHAR *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="268" column="6" bodyfile="expUtil.cpp" bodystart="268" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1a6d1a7ff230ef43fa67f30777cf3fc315" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void explogError</definition>
        <argsstring>(const TCHAR *s,...)</argsstring>
        <name>explogError</name>
        <param>
          <type>const TCHAR *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="276" column="6" bodyfile="expUtil.cpp" bodystart="276" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1a40fe9c6c4fd75189564015d351c7681a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ClassDesc *</type>
        <definition>ClassDesc * GetExpUtilCD</definition>
        <argsstring>()</argsstring>
        <name>GetExpUtilCD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="458" column="11" bodyfile="expUtil.cpp" bodystart="458" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1a6dc2e692c4fbb56285314fa0ce0b86da" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INT_PTR CALLBACK</type>
        <definition>static INT_PTR CALLBACK ExpDagDlgProc</definition>
        <argsstring>(HWND hw, UINT msg, WPARAM wParam, LPARAM lParam)</argsstring>
        <name>ExpDagDlgProc</name>
        <param>
          <type>HWND</type>
          <declname>hw</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>WPARAM</type>
          <declname>wParam</declname>
        </param>
        <param>
          <type>LPARAM</type>
          <declname>lParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="663" column="25" bodyfile="expUtil.cpp" bodystart="663" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1a5fe49019c1c6f4d430078db14b7647bc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INT_PTR CALLBACK</type>
        <definition>static INT_PTR CALLBACK ExportAnimDlgProc</definition>
        <argsstring>(HWND hw, UINT msg, WPARAM wParam, LPARAM lParam)</argsstring>
        <name>ExportAnimDlgProc</name>
        <param>
          <type>HWND</type>
          <declname>hw</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>WPARAM</type>
          <declname>wParam</declname>
        </param>
        <param>
          <type>LPARAM</type>
          <declname>lParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="668" column="25" bodyfile="expUtil.cpp" bodystart="668" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1a0d978fa24e42bf73c4c45a4b1a7ac2f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INT_PTR CALLBACK</type>
        <definition>static INT_PTR CALLBACK ExportOtherDlgProc</definition>
        <argsstring>(HWND hw, UINT msg, WPARAM wParam, LPARAM lParam)</argsstring>
        <name>ExportOtherDlgProc</name>
        <param>
          <type>HWND</type>
          <declname>hw</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>WPARAM</type>
          <declname>wParam</declname>
        </param>
        <param>
          <type>LPARAM</type>
          <declname>lParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="673" column="25" bodyfile="expUtil.cpp" bodystart="673" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1a1be6d9998d4e0ffbe7779132014a2045" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INT_PTR CALLBACK</type>
        <definition>static INT_PTR CALLBACK LogDlgProc</definition>
        <argsstring>(HWND hw, UINT msg, WPARAM wpar, LPARAM lpar)</argsstring>
        <name>LogDlgProc</name>
        <param>
          <type>HWND</type>
          <declname>hw</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>WPARAM</type>
          <declname>wpar</declname>
        </param>
        <param>
          <type>LPARAM</type>
          <declname>lpar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="678" column="25" bodyfile="expUtil.cpp" bodystart="678" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1acd5ed247b8e01c268af885839e8762cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void init_blk</definition>
        <argsstring>(FILE *h)</argsstring>
        <name>init_blk</name>
        <param>
          <type>FILE *</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="940" column="13" bodyfile="expUtil.cpp" bodystart="940" bodyend="944"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1a37bcea637b30a30fabf346e24a9ae2e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int begin_blk</definition>
        <argsstring>(int t)</argsstring>
        <name>begin_blk</name>
        <param>
          <type>int</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="946" column="12" bodyfile="expUtil.cpp" bodystart="946" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1afadc387182e7b852abe0804ecd17c564" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int end_blk</definition>
        <argsstring>()</argsstring>
        <name>end_blk</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="962" column="12" bodyfile="expUtil.cpp" bodystart="962" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1a18e3ce39898a4dd67d5c41e3a9a49c8d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adjwtm</definition>
        <argsstring>(Matrix3 &amp;tm)</argsstring>
        <name>adjwtm</name>
        <param>
          <type>Matrix3 &amp;</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="978" column="20" bodyfile="expUtil.cpp" bodystart="978" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1a53a7521cf962642fb4fccea770efbc1a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int save_pos_anim</definition>
        <argsstring>(FILE *h, Tab&lt; PosKey &gt; &amp;k)</argsstring>
        <name>save_pos_anim</name>
        <param>
          <type>FILE *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>Tab&lt; <ref refid="structPosKey" kindref="compound">PosKey</ref> &gt; &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="1045" column="12" bodyfile="expUtil.cpp" bodystart="1045" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1aa214525bb2f7885b9e3dfd3de910fae3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int save_rot_anim</definition>
        <argsstring>(FILE *h, Tab&lt; RotKey &gt; &amp;k)</argsstring>
        <name>save_rot_anim</name>
        <param>
          <type>FILE *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>Tab&lt; <ref refid="structRotKey" kindref="compound">RotKey</ref> &gt; &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="1076" column="12" bodyfile="expUtil.cpp" bodystart="1076" bodyend="1106"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1a7546d94530195dac2591555bcbbe3072" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FolderOpenDialog</definition>
        <argsstring>(TCHAR *path, HWND hPanel)</argsstring>
        <name>FolderOpenDialog</name>
        <param>
          <type>TCHAR *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>HWND</type>
          <declname>hPanel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="4349" column="13" bodyfile="expUtil.cpp" bodystart="4349" bodyend="4364"/>
      </memberdef>
      <memberdef kind="function" id="expUtil_8cpp_1a8036daeeff4e66e0424a344a3ed8da70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_export_mode</definition>
        <argsstring>(bool use_legacy_import)</argsstring>
        <name>update_export_mode</name>
        <param>
          <type>bool</type>
          <declname>use_legacy_import</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="expUtil.cpp" line="5176" column="6" bodyfile="expUtil.cpp" bodystart="5176" bodyend="5180"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;max.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;plugapi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ilayermanager.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ilayerproperties.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utilapi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bmmlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdmat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;splshape.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;notetrck.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;modstack.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cs/phyexp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;meshnormalspec.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;impexp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="comboBoxHelper_8h" kindref="compound">comboBoxHelper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dagor_8h" kindref="compound">dagor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dagorLogWindow_8h" kindref="compound">dagorLogWindow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="enumnode_8h" kindref="compound">enumnode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dagfmt_8h" kindref="compound">dagfmt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mater_8h" kindref="compound">mater.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="expanim_8h" kindref="compound">expanim.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="expanim2_8h" kindref="compound">expanim2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Bones.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MAX_RELEASE<sp/>&gt;=<sp/>4000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iparamb2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ISkin.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="resource_8h" kindref="compound">resource.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="debug_8h" kindref="compound">debug.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rolluppanel_8h" kindref="compound">rolluppanel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="datablk_8h" kindref="compound">datablk.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R13)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;INamedSelectionSetManager.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(__cplusplus<sp/>&gt;=<sp/>201100L)<sp/>||<sp/>(defined(_MSVC_LANG)<sp/>&amp;&amp;<sp/>_MSVC_LANG<sp/>&gt;=<sp/>201100L)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_TYPE<sp/>unordered_set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAP_TYPE<sp/>unordered_map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>TIMER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Timer_8hpp" kindref="compound">Timer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TIMER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INTERVAL(name,<sp/>elapsed,<sp/>type)<sp/>TimerInterval<sp/>timerInterval(name,<sp/>elapsed,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INTERVAL(name,<sp/>elapsed,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_TYPE<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAP_TYPE<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INTERVAL(name,<sp/>elapsed,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Shobjidl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Shlobj.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">std::string<sp/><ref refid="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*sw);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/><ref refid="expUtil_8cpp_1ac9fb07f5e9a035c1eca78f6428d9a590" kindref="member">strToWide</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sz);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1a533d4977a8bf8ddfd90a918427945e3f" kindref="member">is_default_layer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ILayer<sp/>&amp;layer);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cfg_8h" kindref="compound">cfg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="layout_8h" kindref="compound">layout.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERRMSG_DELAY<sp/>3000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1a4be4302620be4a0cda3e678fdc4f05fb" kindref="member">FaceNGr</ref>[3];</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classExportENCB" kindref="compound">ExportENCB</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1af55e3469ac33a4cc57e44b31f0fca1b0" kindref="member">export_physics</ref>(FILE<sp/>*file,<sp/>Interface<sp/>*ip);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1a5cbf6c1604baf4ace0e13d64bbb72f9e" kindref="member">calc_momjs</ref>(Interface<sp/>*ip);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="85"><highlight class="comment">static<sp/>void<sp/>debug_tm(Matrix3<sp/>&amp;tm)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/>debug(&quot;&quot;);</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/>for(int<sp/>i=0;i&lt;4;++i)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/>Point3<sp/>p=tm.GetRow(i);</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/>debug(&quot;%f<sp/>%f<sp/>%f&quot;,p.x,p.y,p.z);</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/>debug(&quot;&quot;);</highlight></codeline>
<codeline lineno="92"><highlight class="comment">}</highlight></codeline>
<codeline lineno="93"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1a146454c840ea1e558aa4713864b0245f" kindref="member">scale_matrix</ref>(Matrix3<sp/>&amp;tm)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R24)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>masterScale<sp/>=<sp/>(float)GetSystemUnitScale(UNITS_METERS);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>masterScale<sp/>=<sp/>(float)GetMasterScale(UNITS_METERS);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>tm.SetTrans(tm.GetTrans()<sp/>*<sp/>masterScale);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classExpUtil" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classExpUtil" kindref="compound">ExpUtil</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>UtilityObj</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Warning!<sp/>This<sp/>is<sp/>enum<sp/>is<sp/>stored<sp/>in<sp/>the<sp/>Max<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(__cplusplus<sp/>&gt;=<sp/>201100L)<sp/>||<sp/>(defined(_MSVC_LANG)<sp/>&amp;&amp;<sp/>_MSVC_LANG<sp/>&gt;=<sp/>201100L)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71" kindref="member">ExportMode</ref></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71" kindref="member">ExportMode</ref></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71a3d6de23c17caebe5e1069e9d8162f68e" kindref="member">Standard</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71aa8276397b749e6de07630003c71a17b2" kindref="member">ObjectsAsDags</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71a1a84d00dd5e6f917c72da626b5760a7e" kindref="member">LayersAsDags</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>IUtil<sp/>*<ref refid="classExpUtil_1aee33a88f0af2c0a96b997bd264532429" kindref="member">iu</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>Interface<sp/>*<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>HWND<sp/><ref refid="classExpUtil_1a1e17af3c62062a6c3a2e6f5e16f3204c" kindref="member">hExpDag</ref>,<sp/><ref refid="classExpUtil_1abc7096c9c625e44cc2e4ef5e64ae49bd" kindref="member">hExpAnim</ref>,<sp/><ref refid="classExpUtil_1a60a1f8f89838afdf076be986e10c1564" kindref="member">hExpOther</ref>,<sp/><ref refid="classExpUtil_1a1ccb2c2fe0f49d9944cc9a33bd3f6db9" kindref="member">hLog</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>ICustEdit<sp/>*<ref refid="classExpUtil_1a357951d13253dded351001f0d91ae0c7" kindref="member">eastart</ref>,<sp/>*<ref refid="classExpUtil_1a997c2bfb9706e92532b48c95e8d17948" kindref="member">eaend</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>ICustEdit<sp/>*<ref refid="classExpUtil_1ab1801e923e5a910a80dca6f3c1dbb1b9" kindref="member">epose</ref>,<sp/>*<ref refid="classExpUtil_1a32e208eaa430c444b8d8169b8a8ffd50" kindref="member">erote</ref>,<sp/>*<ref refid="classExpUtil_1a1c50c8e94e4cc1a57577217e722c11c1" kindref="member">escle</ref>,<sp/>*<ref refid="classExpUtil_1adfaa8b523c7116fbca61a3c806625e79" kindref="member">eorte</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>ICustEdit<sp/>*<ref refid="classExpUtil_1a9672f7c2e5ae7a9c3f0f56bcfad40954" kindref="member">epose2</ref>,<sp/>*<ref refid="classExpUtil_1acb6cba9122e8a026155ca94f639db3f8" kindref="member">erote2</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>TSTR<sp/><ref refid="classExpUtil_1a3751f0176ca3e72f41e949bd7ab926aa" kindref="member">exp_fname</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>TSTR<sp/><ref refid="classExpUtil_1a574065a40555a0055242667cda0716f3" kindref="member">exp_anim2_fname</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>TSTR<sp/><ref refid="classExpUtil_1a887f9b0d80416214d28b608275052a5b" kindref="member">exp_camera_fname</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>TSTR<sp/><ref refid="classExpUtil_1ad4108e9533c4dd517034af21ef39795f" kindref="member">exp_phys_fname</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>TSTR<sp/><ref refid="classExpUtil_1a56fd79b5d613e82d43dc4bffe039bcb4" kindref="member">exp_instances_fname</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71" kindref="member">ExportMode</ref><sp/><ref refid="classExpUtil_1a33454b89fd841b5b1fee1de4ac57e850" kindref="member">exportMode</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1afaa97785354e31ef4951ae28c5ccccd3" kindref="member">poseps</ref>,<sp/><ref refid="classExpUtil_1aa04a871d433c0d968ba72bd23bdb9a61" kindref="member">roteps</ref>,<sp/><ref refid="classExpUtil_1aec43fc2ae864c27db6159601ba2506b3" kindref="member">scleps</ref>,<sp/><ref refid="classExpUtil_1ab64905843d83c6b29649ed85736396cf" kindref="member">orteps</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1aca8d554d9d91add33362d522582f2e10" kindref="member">poseps2</ref>,<sp/><ref refid="classExpUtil_1a7c90f88999e7842d63e294ffa78b1a41" kindref="member">roteps2</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>TimeValue<sp/><ref refid="classExpUtil_1a11e3343900a93370d7eb826dcc5ea98b" kindref="member">astart</ref>,<sp/><ref refid="classExpUtil_1a3b55a6b7b7eb2f628552d88a28679793" kindref="member">aend</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a9c812ede9a27d6f648d285dddb655f51" kindref="member">suppressPrompts</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1ae85784dc140ee6022d047de4c0ea9ee8" kindref="member">ExpUtil</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a076bfcffcc8ad5631d3e526cae820a51" kindref="member">BeginEditParams</ref>(Interface<sp/>*<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>,<sp/>IUtil<sp/>*<ref refid="classExpUtil_1aee33a88f0af2c0a96b997bd264532429" kindref="member">iu</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1abe4333360c385a613bc8d838cfe5f6da" kindref="member">EndEditParams</ref>(Interface<sp/>*<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>,<sp/>IUtil<sp/>*<ref refid="classExpUtil_1aee33a88f0af2c0a96b997bd264532429" kindref="member">iu</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a2d2db67b78cd798184a8be8b5351fb8e" kindref="member">DeleteThis</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a4f6f9a090dba0a8b63e4662a9acbf244" kindref="member">update_ui_dag</ref>(HWND<sp/>hw);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1afff7390ef934861b72935d5802f36739" kindref="member">update_ui_anim</ref>(HWND<sp/>hw);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1adad70095a1ee366d60185ff1a72c4ba7" kindref="member">update_ui_other</ref>(HWND<sp/>hw);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a39aec5f75bfc81bf561fa7aa8851f158" kindref="member">update_ui</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a5ca36e001149f70b7ba8dfb8a52792d1" kindref="member">update_tooltips</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1ade542522c542a4ebf52623b1e70e8a45" kindref="member">Init</ref>(HWND<sp/>hw);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a006fc2e221311c6be89405c9358c6fe6" kindref="member">Destroy</ref>(HWND<sp/>hw);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a248be070d4b538d715840f4693466bd8" kindref="member">InitAnim</ref>(HWND<sp/>hw);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a4c2a8843d6881766de389c194e81eb9b" kindref="member">DestroyAnim</ref>(HWND<sp/>hw);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1aa5219b9747527ac27a1d5bd524aab711" kindref="member">input_exp_fname</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a6b8e2f02740081112cebaff294a8c7c7" kindref="member">input_exp_anim2_fname</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1abaa4ce5c2870fa36ed63376dfc25cb33" kindref="member">input_exp_camera_fname</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a9d41c5429368145c923a35c5ad1e7f07" kindref="member">input_exp_phys_fname</ref>();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a7531906ea173c7167121e513f5260f3b" kindref="member">input_exp_instances_fname</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>BOOL<sp/><ref refid="classExpUtil_1ad58eb39df2700603f66a9ac20054a22b" kindref="member">export_one_dag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*exp_fn,<sp/>TCHAR<sp/>**textures<sp/>=<sp/>NULL,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_textures<sp/>=<sp/>0,<sp/>TCHAR<sp/>*default_material<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>BOOL<sp/><ref refid="classExpUtil_1a7213d1d4cf45d2bee678b9a7f253b5d0" kindref="member">export_one_dag_cb</ref>(<ref refid="classExportENCB" kindref="compound">ExportENCB</ref><sp/>&amp;cb,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*exp_fn,<sp/>TCHAR<sp/>**textures<sp/>=<sp/>NULL,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_textures<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/>*default_material<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>BOOL<sp/><ref refid="classExpUtil_1a57fe73c0502686d0215c4fe0ddabf49a" kindref="member">export_dag</ref>(TCHAR<sp/>**textures<sp/>=<sp/>NULL,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_textures<sp/>=<sp/>0,<sp/>TCHAR<sp/>*default_material<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a74c1bbf62427141225ba6564b30c2436" kindref="member">export_anim_v2</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1ae0f155f8dbbc7b7d793bfe5e0f0cf9d1" kindref="member">export_camera_v1</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a3df5005e61a1aa2a841fb1e4a4ead059" kindref="member">exportPhysics</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1afa2aec6461f400b682bfc31d29a4658a" kindref="member">export_instances</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a7b73360afda994312cf13615d5dc8a4c" kindref="member">calcMomj</ref>();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>BOOL<sp/><ref refid="classExpUtil_1aa97d7ec2929c2a808a5e1d904d881f67" kindref="member">export_dlg_proc</ref>(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>BOOL<sp/><ref refid="classExpUtil_1a775db58423b75b014ff2aebaa6c321fe" kindref="member">export_anim_dlg_proc</ref>(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>BOOL<sp/><ref refid="classExpUtil_1a2ca9ca74dbcdc104e14605788ea348e2" kindref="member">export_other_dlg_proc</ref>(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a96e84d22def812865afea0c96b0b5366" kindref="member">checkDupesAndSpaces</ref>(Tab&lt;INode<sp/>*&gt;<sp/>&amp;node_list);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a23ccbd104c1d2ae07dabfde193bb0ede" kindref="member">errorMessage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*msg);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1ad3cb4f47443771f59b653941df73972c" kindref="member">warningMessage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*title<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>exportObjectsAsDagsInternal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*folder,<sp/>INode<sp/>&amp;node);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>exportObjectsAsDags();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>exportLayerAsDag(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*folder,<sp/>ILayer<sp/>&amp;layer);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>exportLayersAsDagsInternal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*folder,<sp/>ILayer<sp/>&amp;layer);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>exportLayersAsDags();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>ToolTipExtender<sp/>tooltipExtender;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classExpUtil" kindref="compound">ExpUtil</ref><sp/>util;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="classDagExport" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classDagExport" kindref="compound">DagExport</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SceneExport</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ExtCount()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="max__cpt_8h_1ac2ec3340fbe0c6ea0663fd3923d13fe5" kindref="member">MCHAR</ref><sp/>*Ext(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_T(</highlight><highlight class="stringliteral">&quot;dag&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="max__cpt_8h_1ac2ec3340fbe0c6ea0663fd3923d13fe5" kindref="member">MCHAR</ref><sp/>*LongDesc()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a1ab149ba77ef1df410e33c0944d1bd67" kindref="member">IDS_DAGIMP_LONG</ref>);<sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="max__cpt_8h_1ac2ec3340fbe0c6ea0663fd3923d13fe5" kindref="member">MCHAR</ref><sp/>*ShortDesc()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a3d565038f0680240e193147138f295eb" kindref="member">IDS_DAGIMP_SHORT</ref>);<sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="max__cpt_8h_1ac2ec3340fbe0c6ea0663fd3923d13fe5" kindref="member">MCHAR</ref><sp/>*AuthorName()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1af24e0543d77d2d080e2f746f81079e8a" kindref="member">IDS_AUTHOR</ref>);<sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="max__cpt_8h_1ac2ec3340fbe0c6ea0663fd3923d13fe5" kindref="member">MCHAR</ref><sp/>*CopyrightMessage()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1adeac7106dc07fa16a93146f9143a3e1a" kindref="member">IDS_COPYRIGHT</ref>);<sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="max__cpt_8h_1ac2ec3340fbe0c6ea0663fd3923d13fe5" kindref="member">MCHAR</ref><sp/>*OtherMessage1()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="max__cpt_8h_1ac2ec3340fbe0c6ea0663fd3923d13fe5" kindref="member">MCHAR</ref><sp/>*OtherMessage2()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Version()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ShowAbout(HWND<sp/>hWnd)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DoExport(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="max__cpt_8h_1ac2ec3340fbe0c6ea0663fd3923d13fe5" kindref="member">MCHAR</ref><sp/>*name,<sp/>ExpInterface<sp/>*ei,<sp/>Interface<sp/>*i,<sp/>BOOL<sp/>suppressPrompts<sp/>=<sp/>FALSE,<sp/>DWORD<sp/>options<sp/>=<sp/>0)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="206"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>util.<ref refid="classExpUtil_1a3751f0176ca3e72f41e949bd7ab926aa" kindref="member">exp_fname</ref><sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>util.<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>sure<sp/>what<sp/>is<sp/>the<sp/>correct<sp/>solution<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>of<sp/>errors<sp/>we<sp/>already<sp/>show<sp/>a<sp/>message<sp/>box<sp/>but<sp/>if<sp/>we<sp/>report<sp/>back<sp/>IMPEXP_FAIL<sp/>then<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>an<sp/>additional<sp/>message<sp/>box<sp/>shown<sp/>to<sp/>the<sp/>user<sp/>with<sp/>no<sp/>additional<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>we<sp/>only<sp/>report<sp/>back<sp/>errors<sp/>if<sp/>message<sp/>prompts<sp/>are<sp/>suppressed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>success<sp/>=<sp/>util.<ref refid="classExpUtil_1a57fe73c0502686d0215c4fe0ddabf49a" kindref="member">export_dag</ref>();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(success<sp/>||<sp/>!suppressPrompts)<sp/>?<sp/>IMPEXP_SUCCESS<sp/>:<sp/>IMPEXP_FAIL;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal">};</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classDagExpCD" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classDagExpCD" kindref="compound">DagExpCD</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ClassDesc</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDagExpCD_1a3f67b88ae49e615ed47eb18a9f737f63" kindref="member">IsPublic</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;<sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="classDagExpCD_1adbe191a3276878ba3d79f68aab044132" kindref="member">Create</ref>(BOOL<sp/>loading)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classDagExport" kindref="compound">DagExport</ref>;<sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*<ref refid="classDagExpCD_1a06afb71876ee87222f983230745fdcce" kindref="member">ClassName</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a08b53396baebfe5b3c890796b1fae8f1" kindref="member">IDS_DAGEXP</ref>);<sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R24)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="max__cpt_8h_1ac2ec3340fbe0c6ea0663fd3923d13fe5" kindref="member">MCHAR</ref><sp/>*<ref refid="classDagExpCD_1a59ca27734297c1e53a515f6b8d043064" kindref="member">NonLocalizedClassName</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDagExpCD_1a06afb71876ee87222f983230745fdcce" kindref="member">ClassName</ref>();<sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="max__cpt_8h_1ac2ec3340fbe0c6ea0663fd3923d13fe5" kindref="member">MCHAR</ref><sp/>*<ref refid="classDagExpCD_1a59ca27734297c1e53a515f6b8d043064" kindref="member">NonLocalizedClassName</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDagExpCD_1a06afb71876ee87222f983230745fdcce" kindref="member">ClassName</ref>();<sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>SClass_ID<sp/><ref refid="classDagExpCD_1a66dede25cb05c0ccaf80626cd9f77b2a" kindref="member">SuperClassID</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SCENE_EXPORT_CLASS_ID;<sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>Class_ID<sp/><ref refid="classDagExpCD_1ac558abddbc2a459dfacc7b14dd54c5f7" kindref="member">ClassID</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dagor_8h_1a4e4a64451d339c70f19503906ab95d33" kindref="member">DAGEXP_CID</ref>;<sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*<ref refid="classDagExpCD_1afc37033485ae79bf05129f168ef91d8d" kindref="member">Category</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*<ref refid="classDagExpCD_1a713c154c4f9355e17b66c9479cc0ded3" kindref="member">InternalName</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_T(</highlight><highlight class="stringliteral">&quot;DagExporter&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>HINSTANCE<sp/><ref refid="classDagExpCD_1a1bd958e11b811c46c8ed36a799b20223" kindref="member">HInstance</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dagor_8h_1a74029128723095e7bf00a71d46af8b24" kindref="member">hInstance</ref>;<sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal">};</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classDagExpCD" kindref="compound">DagExpCD</ref><sp/>dagexpcd;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal">ClassDesc<sp/>*<ref refid="expUtil_8cpp_1a3f889cd4c09a1ef307f5385e45e51d8b" kindref="member">GetDAGEXPCD</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;dagexpcd;<sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1a753f5db36a16f2ba0e85bcd4ebfbafcd" kindref="member">force_export_to_dag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*fname,<sp/>Interface<sp/>*ip,<sp/>TCHAR<sp/>**textures,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_textures,<sp/>TCHAR<sp/>*default_material)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>util.<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref><sp/>=<sp/>ip;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>=<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca7c997ef7aea4da936f1ca86659dba95f" kindref="member">EXP_MESH</ref><sp/>|<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06caf81ae9ea1446789418685c688c161a40" kindref="member">EXP_MAT</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>util.<ref refid="classExpUtil_1a3751f0176ca3e72f41e949bd7ab926aa" kindref="member">exp_fname</ref><sp/>=<sp/>fname;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MAX_RELEASE<sp/>&gt;=<sp/>3000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>SetSaveRequiredFlag();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>SetSaveRequired();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>util.<ref refid="classExpUtil_1a57fe73c0502686d0215c4fe0ddabf49a" kindref="member">export_dag</ref>(textures,<sp/>max_textures,<sp/>default_material);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>util.<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*s,<sp/>...)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>va_list<sp/>ap;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>va_start(ap,<sp/>s);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><ref refid="classDagorLogWindow_1a42c9339a383b9d8c8581d81437b3937b" kindref="member">DagorLogWindow::addToLog</ref>(<ref refid="classDagorLogWindow_1a459098ccdd150144790891abc9e6229aad382c903dfbb1b22f21b4d110f122adc" kindref="member">DagorLogWindow::LogLevel::Note</ref>,<sp/>s,<sp/>ap);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*s,<sp/>...)</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>va_list<sp/>ap;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>va_start(ap,<sp/>s);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><ref refid="classDagorLogWindow_1a42c9339a383b9d8c8581d81437b3937b" kindref="member">DagorLogWindow::addToLog</ref>(<ref refid="classDagorLogWindow_1a459098ccdd150144790891abc9e6229aa32ae57a69fc892e4e85954eeaeceb376" kindref="member">DagorLogWindow::LogLevel::Warning</ref>,<sp/>s,<sp/>ap);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1a6d1a7ff230ef43fa67f30777cf3fc315" kindref="member">explogError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*s,<sp/>...)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>va_list<sp/>ap;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>va_start(ap,<sp/>s);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><ref refid="classDagorLogWindow_1a42c9339a383b9d8c8581d81437b3937b" kindref="member">DagorLogWindow::addToLog</ref>(<ref refid="classDagorLogWindow_1a459098ccdd150144790891abc9e6229aa123d64e6b2e73123ce7805de9474e755" kindref="member">DagorLogWindow::LogLevel::Error</ref>,<sp/>s,<sp/>ap);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="classExpUtilDesc" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classExpUtilDesc" kindref="compound">ExpUtilDesc</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ClassDesc</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExpUtilDesc_1a70fbbba20e3d4617914c934b1de1dd16" kindref="member">IsPublic</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="classExpUtilDesc_1aead6b212dbacc7f6d36fbf5fe6e71e99" kindref="member">Create</ref>(BOOL<sp/>loading<sp/>=<sp/>FALSE)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;util;<sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*<ref refid="classExpUtilDesc_1ad8cdf87251328a5844bbfc9c79b990e4" kindref="member">ClassName</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1ad382111f38816a0a17638631225c7c8f" kindref="member">IDS_EXPUTIL_NAME</ref>);<sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R24)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="max__cpt_8h_1ac2ec3340fbe0c6ea0663fd3923d13fe5" kindref="member">MCHAR</ref><sp/>*<ref refid="classExpUtilDesc_1a038a23f5c921694dddec5c65fbc0549c" kindref="member">NonLocalizedClassName</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classExpUtilDesc_1ad8cdf87251328a5844bbfc9c79b990e4" kindref="member">ClassName</ref>();<sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="max__cpt_8h_1ac2ec3340fbe0c6ea0663fd3923d13fe5" kindref="member">MCHAR</ref><sp/>*<ref refid="classExpUtilDesc_1a038a23f5c921694dddec5c65fbc0549c" kindref="member">NonLocalizedClassName</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classExpUtilDesc_1ad8cdf87251328a5844bbfc9c79b990e4" kindref="member">ClassName</ref>();<sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>SClass_ID<sp/><ref refid="classExpUtilDesc_1a80ef9d9ae06fa6b17f1e800ca959b8ec" kindref="member">SuperClassID</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UTILITY_CLASS_ID;<sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>Class_ID<sp/><ref refid="classExpUtilDesc_1aaeb3796da747df25bcfeb848fe6562c3" kindref="member">ClassID</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dagor_8h_1a5e6f306d5fac83f2543840ae6523928a" kindref="member">ExpUtil_CID</ref>;<sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*<ref refid="classExpUtilDesc_1a70a21596779bfa6a54e5564b3dbaf153" kindref="member">Category</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a197942343099f043d210a555ea7e026f" kindref="member">IDS_UTIL_CAT</ref>);<sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>BOOL<sp/><ref refid="classExpUtilDesc_1a0cfc9bdb1c39c731c1b6dacc1cf9c3a6" kindref="member">NeedsToSave</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;<sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>IOResult<sp/><ref refid="classExpUtilDesc_1a157ee72a2f76c7c084954f522397f32c" kindref="member">Save</ref>(ISave<sp/>*)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>IOResult<sp/><ref refid="classExpUtilDesc_1a27345f23ca5dc87d5fb162400d843948" kindref="member">Load</ref>(ILoad<sp/>*)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal">};</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600afcd0c4f1eee6995fa669130f65322320" kindref="member">CH_EXP_FNAME</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600ae966136bbc9f6c7965c0e25f04add687" kindref="member">CH_EXPHIDDEN</ref>,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a2bdf62c40ccf3d17583a487fe61967aa" kindref="member">CH_EXPFLG</ref>,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a01b57f7f8bd94ca5100e0d286cb5765f" kindref="member">CH_ANIMEPS</ref>,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a28c7b0c88fa048c8e2692f53ed591773" kindref="member">CH_ANIMRANGE</ref>,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a8a69f71edb5976ba2d92acd6c6dba995" kindref="member">CH_EXP_ANIM2_FNAME</ref>,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a6caec50977ed4fb00b038136ae952118" kindref="member">CH_EXP_CAMERA_FNAME</ref>,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a4a3990c1f896e017f1f121948e539951" kindref="member">CH_ANIMEPS2</ref>,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a3c69ac220caaf605d441f12501098743" kindref="member">CH_EXP_PHYS_FNAME</ref>,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600af0afb78c862def66af31a817e38271b8" kindref="member">CH_EXP_MODE</ref>,</highlight></codeline>
<codeline lineno="315"><highlight class="normal">};</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal">IOResult<sp/><ref refid="classExpUtilDesc_1a157ee72a2f76c7c084954f522397f32c" kindref="member">ExpUtilDesc::Save</ref>(ISave<sp/>*io)</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>ULONG<sp/>nw;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(util.<ref refid="classExpUtil_1a3751f0176ca3e72f41e949bd7ab926aa" kindref="member">exp_fname</ref>.Length())</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>io-&gt;BeginChunk(<ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600afcd0c4f1eee6995fa669130f65322320" kindref="member">CH_EXP_FNAME</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;WriteCString(util.<ref refid="classExpUtil_1a3751f0176ca3e72f41e949bd7ab926aa" kindref="member">exp_fname</ref>)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>io-&gt;EndChunk();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>io-&gt;BeginChunk(<ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a2bdf62c40ccf3d17583a487fe61967aa" kindref="member">CH_EXPFLG</ref>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>io-&gt;EndChunk();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>io-&gt;BeginChunk(<ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a28c7b0c88fa048c8e2692f53ed591773" kindref="member">CH_ANIMRANGE</ref>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classExpUtil_1a11e3343900a93370d7eb826dcc5ea98b" kindref="member">astart</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classExpUtil_1a3b55a6b7b7eb2f628552d88a28679793" kindref="member">aend</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>io-&gt;EndChunk();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>io-&gt;BeginChunk(<ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a01b57f7f8bd94ca5100e0d286cb5765f" kindref="member">CH_ANIMEPS</ref>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classExpUtil_1afaa97785354e31ef4951ae28c5ccccd3" kindref="member">poseps</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classExpUtil_1aa04a871d433c0d968ba72bd23bdb9a61" kindref="member">roteps</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classExpUtil_1aec43fc2ae864c27db6159601ba2506b3" kindref="member">scleps</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classExpUtil_1ab64905843d83c6b29649ed85736396cf" kindref="member">orteps</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>io-&gt;EndChunk();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>io-&gt;BeginChunk(<ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a4a3990c1f896e017f1f121948e539951" kindref="member">CH_ANIMEPS2</ref>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classExpUtil_1aca8d554d9d91add33362d522582f2e10" kindref="member">poseps2</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;util.<ref refid="classExpUtil_1a7c90f88999e7842d63e294ffa78b1a41" kindref="member">roteps2</ref>,<sp/>4,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>io-&gt;EndChunk();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(util.<ref refid="classExpUtil_1a574065a40555a0055242667cda0716f3" kindref="member">exp_anim2_fname</ref>.Length())</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>io-&gt;BeginChunk(<ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a8a69f71edb5976ba2d92acd6c6dba995" kindref="member">CH_EXP_ANIM2_FNAME</ref>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;WriteCString(util.<ref refid="classExpUtil_1a574065a40555a0055242667cda0716f3" kindref="member">exp_anim2_fname</ref>)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>io-&gt;EndChunk();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(util.<ref refid="classExpUtil_1a887f9b0d80416214d28b608275052a5b" kindref="member">exp_camera_fname</ref>.Length())</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>io-&gt;BeginChunk(<ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a6caec50977ed4fb00b038136ae952118" kindref="member">CH_EXP_CAMERA_FNAME</ref>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;WriteCString(util.<ref refid="classExpUtil_1a887f9b0d80416214d28b608275052a5b" kindref="member">exp_camera_fname</ref>)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>io-&gt;EndChunk();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(util.<ref refid="classExpUtil_1ad4108e9533c4dd517034af21ef39795f" kindref="member">exp_phys_fname</ref>.Length())</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>io-&gt;BeginChunk(<ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a3c69ac220caaf605d441f12501098743" kindref="member">CH_EXP_PHYS_FNAME</ref>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;WriteCString(util.<ref refid="classExpUtil_1ad4108e9533c4dd517034af21ef39795f" kindref="member">exp_phys_fname</ref>)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>io-&gt;EndChunk();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>io-&gt;BeginChunk(<ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600af0afb78c862def66af31a817e38271b8" kindref="member">CH_EXP_MODE</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BYTE<sp/>exportMode<sp/>=<sp/>(BYTE)util.<ref refid="classExpUtil_1a33454b89fd841b5b1fee1de4ac57e850" kindref="member">exportMode</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Write(&amp;exportMode,<sp/>1,<sp/>&amp;nw)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>io-&gt;EndChunk();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_OK;</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal">IOResult<sp/><ref refid="classExpUtilDesc_1a27345f23ca5dc87d5fb162400d843948" kindref="member">ExpUtilDesc::Load</ref>(ILoad<sp/>*io)</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>ULONG<sp/>nr;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>TCHAR<sp/>*str;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>=<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cafc7caccb696d051101bce613a82ed7c8" kindref="member">EXP_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>util.<ref refid="classExpUtil_1a33454b89fd841b5b1fee1de4ac57e850" kindref="member">exportMode</ref><sp/>=<sp/><ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71a3d6de23c17caebe5e1069e9d8162f68e" kindref="member">ExpUtil::ExportMode::Standard</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(io-&gt;OpenChunk()<sp/>==<sp/>IO_OK)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(io-&gt;CurChunkID())</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600afcd0c4f1eee6995fa669130f65322320" kindref="member">CH_EXP_FNAME</ref>:</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;ReadCStringChunk(&amp;str)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>util.<ref refid="classExpUtil_1a3751f0176ca3e72f41e949bd7ab926aa" kindref="member">exp_fname</ref><sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a8a69f71edb5976ba2d92acd6c6dba995" kindref="member">CH_EXP_ANIM2_FNAME</ref>:</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;ReadCStringChunk(&amp;str)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>util.<ref refid="classExpUtil_1a574065a40555a0055242667cda0716f3" kindref="member">exp_anim2_fname</ref><sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a6caec50977ed4fb00b038136ae952118" kindref="member">CH_EXP_CAMERA_FNAME</ref>:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;ReadCStringChunk(&amp;str)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>util.<ref refid="classExpUtil_1a887f9b0d80416214d28b608275052a5b" kindref="member">exp_camera_fname</ref><sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a3c69ac220caaf605d441f12501098743" kindref="member">CH_EXP_PHYS_FNAME</ref>:</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;ReadCStringChunk(&amp;str)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>util.<ref refid="classExpUtil_1ad4108e9533c4dd517034af21ef39795f" kindref="member">exp_phys_fname</ref><sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600ae966136bbc9f6c7965c0e25f04add687" kindref="member">CH_EXPHIDDEN</ref>:<sp/>util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>|=<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca6b7267d63b63440a7aa60ef3a099e71b" kindref="member">EXP_HID</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a2bdf62c40ccf3d17583a487fe61967aa" kindref="member">CH_EXPFLG</ref>:</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a28c7b0c88fa048c8e2692f53ed591773" kindref="member">CH_ANIMRANGE</ref>:</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classExpUtil_1a11e3343900a93370d7eb826dcc5ea98b" kindref="member">astart</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classExpUtil_1a3b55a6b7b7eb2f628552d88a28679793" kindref="member">aend</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a01b57f7f8bd94ca5100e0d286cb5765f" kindref="member">CH_ANIMEPS</ref>:</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classExpUtil_1afaa97785354e31ef4951ae28c5ccccd3" kindref="member">poseps</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classExpUtil_1aa04a871d433c0d968ba72bd23bdb9a61" kindref="member">roteps</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classExpUtil_1aec43fc2ae864c27db6159601ba2506b3" kindref="member">scleps</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classExpUtil_1ab64905843d83c6b29649ed85736396cf" kindref="member">orteps</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600a4a3990c1f896e017f1f121948e539951" kindref="member">CH_ANIMEPS2</ref>:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classExpUtil_1aca8d554d9d91add33362d522582f2e10" kindref="member">poseps2</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;util.<ref refid="classExpUtil_1a7c90f88999e7842d63e294ffa78b1a41" kindref="member">roteps2</ref>,<sp/>4,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1abed82baf7f470b522273a3e37c24c600af0afb78c862def66af31a817e38271b8" kindref="member">CH_EXP_MODE</ref>:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BYTE<sp/>exportMode;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io-&gt;Read(&amp;exportMode,<sp/>1,<sp/>&amp;nr)<sp/>!=<sp/>IO_OK)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_ERROR;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>util.<ref refid="classExpUtil_1a33454b89fd841b5b1fee1de4ac57e850" kindref="member">exportMode</ref><sp/>=<sp/>(<ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71" kindref="member">ExpUtil::ExportMode</ref>)exportMode;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>io-&gt;CloseChunk();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>util.<ref refid="classExpUtil_1a39aec5f75bfc81bf561fa7aa8851f158" kindref="member">update_ui</ref>();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IO_OK;</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classExpUtilDesc" kindref="compound">ExpUtilDesc</ref><sp/>utilDesc;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">ClassDesc<sp/>*<ref refid="expUtil_8cpp_1a40fe9c6c4fd75189564015d351c7681a" kindref="member">GetExpUtilCD</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;utilDesc;<sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">ExpUtil::set_expflg</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;=<sp/>~f;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>|=<sp/>f;</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal">BOOL<sp/><ref refid="classExpUtil_1aa97d7ec2929c2a808a5e1d904d881f67" kindref="member">ExpUtil::export_dlg_proc</ref>(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wpar,<sp/>LPARAM<sp/>lpar)</highlight></codeline>
<codeline lineno="468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_INITDIALOG:<sp/><ref refid="classExpUtil_1ade542522c542a4ebf52623b1e70e8a45" kindref="member">Init</ref>(hw);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_DESTROY:<sp/><ref refid="classExpUtil_1a006fc2e221311c6be89405c9358c6fe6" kindref="member">Destroy</ref>(hw);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_COMMAND:</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WORD<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>LOWORD(wpar);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a0465e216867b8d35885f89e6c0445d8a" kindref="member">IDC_EXPORT</ref>:</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExpUtil_1a33454b89fd841b5b1fee1de4ac57e850" kindref="member">exportMode</ref><sp/>==<sp/><ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71a3d6de23c17caebe5e1069e9d8162f68e" kindref="member">ExportMode::Standard</ref>)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExpUtil_1aa5219b9747527ac27a1d5bd524aab711" kindref="member">input_exp_fname</ref>())</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a57fe73c0502686d0215c4fe0ddabf49a" kindref="member">export_dag</ref>();</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExpUtil_1a33454b89fd841b5b1fee1de4ac57e850" kindref="member">exportMode</ref><sp/>==<sp/><ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71a1a84d00dd5e6f917c72da626b5760a7e" kindref="member">ExportMode::LayersAsDags</ref>)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exportLayersAsDags();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExpUtil_1a33454b89fd841b5b1fee1de4ac57e850" kindref="member">exportMode</ref><sp/>==<sp/><ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71aa8276397b749e6de07630003c71a17b2" kindref="member">ExportMode::ObjectsAsDags</ref>)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exportObjectsAsDags();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1abe6abaf8896263d49e5327a234b01d11" kindref="member">IDC_EXPHIDDEN</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca6b7267d63b63440a7aa60ef3a099e71b" kindref="member">EXP_HID</ref>,<sp/>IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a2db228d516c7633a1bdce258f4f65a3c" kindref="member">IDC_EXPSEL</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cac93b52a68dc3b54c1ad6d4f92faa7cb8" kindref="member">EXP_SEL</ref>,<sp/>IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1acd59138bbd896d8d07f46c5f8b03adaf" kindref="member">IDC_EXPMESH</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca7c997ef7aea4da936f1ca86659dba95f" kindref="member">EXP_MESH</ref>,<sp/>IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a682e761577402765f66787044bc2cf42" kindref="member">IDC_EXP_VNORM</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca7726b8a815ab142189d736d669f85519" kindref="member">EXP_NO_VNORM</ref>,<sp/>!IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a47bce04990ee8850e12c6db1399e236c" kindref="member">IDC_EXPLIGHT</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06caff2dc62d0636cb92e42053636baf1360" kindref="member">EXP_LT</ref>,<sp/>IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1aec21159ee695e846a385a176980c3575" kindref="member">IDC_EXPCAM</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca8f58f8ccc99b7a781b3eed35ada98b40" kindref="member">EXP_CAM</ref>,<sp/>IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a0849ff2347cefba528bd72c228bdd8d3" kindref="member">IDC_EXPHELPER</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca11c244d530f173871feee7fa44df43ef" kindref="member">EXP_HLP</ref>,<sp/>IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a6297a99c7c6f811a9ba937bde5dd6c73" kindref="member">IDC_EXPSPLINE</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cae304ba10296381a1f92fa75aff1a6837" kindref="member">EXP_SPLINE</ref>,<sp/>IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1ac000e293de910a9f83cf90c8deeecf9c" kindref="member">IDC_EXPMATER</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06caf81ae9ea1446789418685c688c161a40" kindref="member">EXP_MAT</ref>,<sp/>IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a34d284864dae02c9c9ab75641732a52f" kindref="member">IDC_EXPMATEROPT</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca50d59afd84fb1166581bec94cb9eff6a" kindref="member">EXP_MATOPT</ref>,<sp/>IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a7d7b3e72660a3d8e3225be7d0e15e2bc" kindref="member">IDC_EXPORT_MODE</ref>:</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HIWORD(wpar)<sp/>==<sp/>CBN_SELENDOK)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a33454b89fd841b5b1fee1de4ac57e850" kindref="member">exportMode</ref><sp/>=<sp/>(<ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71" kindref="member">ExportMode</ref>)<ref refid="classComboBoxHelper_1ac3847285046379bdc68dd905c89f6dac" kindref="member">ComboBoxHelper::GetSelectedItemData</ref>((HWND)lpar,<sp/>(LPARAM)<ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71a3d6de23c17caebe5e1069e9d8162f68e" kindref="member">ExportMode::Standard</ref>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a5ca36e001149f70b7ba8dfb8a52792d1" kindref="member">update_tooltips</ref>();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal">BOOL<sp/><ref refid="classExpUtil_1a775db58423b75b014ff2aebaa6c321fe" kindref="member">ExpUtil::export_anim_dlg_proc</ref>(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wpar,<sp/>LPARAM<sp/>lpar)</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_INITDIALOG:<sp/><ref refid="classExpUtil_1a248be070d4b538d715840f4693466bd8" kindref="member">InitAnim</ref>(hw);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_DESTROY:<sp/><ref refid="classExpUtil_1a4c2a8843d6881766de389c194e81eb9b" kindref="member">DestroyAnim</ref>(hw);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_COMMAND:</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WORD<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>LOWORD(wpar);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a410d347eb56023e918f0ad0fcc37fcc4" kindref="member">IDC_ARANGE</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca956d9e2e9bf0cfa553e275e892b79bb0" kindref="member">EXP_ARNG</ref>,<sp/>IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a548a540dc0a0acd50d5e498272dde954" kindref="member">IDC_USEKEYS</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca2b1328b19dd43178c38e8dc685100949" kindref="member">EXP_UKEYS</ref>,<sp/>IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1aed2bb0b11bdd557370ed8153237588bf" kindref="member">IDC_USENTKEYS</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca1f4425ebaa08df4d936fe2dfe5827428" kindref="member">EXP_UNTKEYS</ref>,<sp/>IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a6aaf916e99596f7ae2724856c9b28152" kindref="member">IDC_DONTCHKKEYS</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca0a62bfe82a87610fb653f54c5db745a6" kindref="member">EXP_DONTCHKKEYS</ref>,<sp/>IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a0e4b20da75e49b79c7a1ad50ba47048a" kindref="member">IDC_REDUCE_POS</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cabbf7c66e7c660f84d0a9f4a16791f755" kindref="member">EXP_DONT_REDUCE_POS</ref>,<sp/>!IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1ab44011c4d33767803baad22badcfacd5" kindref="member">IDC_LOOP_ANIM</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca586010b725db9fe896a4b4b427909710" kindref="member">EXP_LOOPED_ANIM</ref>,<sp/>IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1ab5b111d7540ae043027345ca0f076b6e" kindref="member">IDC_REDUCE_ROT</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cafb2e1e878c65f7ea4518fbd009d9e734" kindref="member">EXP_DONT_REDUCE_ROT</ref>,<sp/>!IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a1534f7263458ac30682e5bc9b1a61afb" kindref="member">IDC_REDUCE_SCL</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca414ab861700663ad48785af6f890032e" kindref="member">EXP_DONT_REDUCE_SCL</ref>,<sp/>!IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a67b9813dcf3832c4524b6c420b74a52a" kindref="member">IDC_ASTART</ref>:</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>s;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.Resize(64);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a357951d13253dded351001f0d91ae0c7" kindref="member">eastart</ref>-&gt;GetText(<ref refid="max__cpt_8h_1a4b8679f2290082869d2b9c3a83aebbba" kindref="member">STR_DEST</ref>(s),<sp/>64);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StringToTime(s,<sp/><ref refid="classExpUtil_1a11e3343900a93370d7eb826dcc5ea98b" kindref="member">astart</ref>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a73cc2cf1192b63d2b08e74847d94beef" kindref="member">IDC_AEND</ref>:</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>s;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.Resize(64);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a997c2bfb9706e92532b48c95e8d17948" kindref="member">eaend</ref>-&gt;GetText(<ref refid="max__cpt_8h_1a4b8679f2290082869d2b9c3a83aebbba" kindref="member">STR_DEST</ref>(s),<sp/>64);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StringToTime(s,<sp/><ref refid="classExpUtil_1a3b55a6b7b7eb2f628552d88a28679793" kindref="member">aend</ref>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1ad386b2ecb9e19d31272e603b5039ca74" kindref="member">IDC_POSEPS</ref>:<sp/><ref refid="classExpUtil_1afaa97785354e31ef4951ae28c5ccccd3" kindref="member">poseps</ref><sp/>=<sp/><ref refid="classExpUtil_1ab1801e923e5a910a80dca6f3c1dbb1b9" kindref="member">epose</ref>-&gt;GetFloat();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1aa3e456054c2c10e7f0623503af3c1486" kindref="member">IDC_SCLEPS</ref>:<sp/><ref refid="classExpUtil_1aec43fc2ae864c27db6159601ba2506b3" kindref="member">scleps</ref><sp/>=<sp/><ref refid="classExpUtil_1a1c50c8e94e4cc1a57577217e722c11c1" kindref="member">escle</ref>-&gt;GetFloat()<sp/>/<sp/>100;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a07ddcf27aced53e4057149564d78107b" kindref="member">IDC_ROTEPS</ref>:<sp/><ref refid="classExpUtil_1aa04a871d433c0d968ba72bd23bdb9a61" kindref="member">roteps</ref><sp/>=<sp/>DegToRad(<ref refid="classExpUtil_1a32e208eaa430c444b8d8169b8a8ffd50" kindref="member">erote</ref>-&gt;GetFloat());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1adee0457a038f5cb8ea7df3a2e264de3e" kindref="member">IDC_ORTEPS</ref>:<sp/><ref refid="classExpUtil_1ab64905843d83c6b29649ed85736396cf" kindref="member">orteps</ref><sp/>=<sp/>DegToRad(<ref refid="classExpUtil_1adfaa8b523c7116fbca61a3c806625e79" kindref="member">eorte</ref>-&gt;GetFloat());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a92d6be13d3715f2b663b92d925b9197b" kindref="member">IDC_ORIGIN_LINVEL_EPS</ref>:<sp/><ref refid="classExpUtil_1aca8d554d9d91add33362d522582f2e10" kindref="member">poseps2</ref><sp/>=<sp/><ref refid="classExpUtil_1a9672f7c2e5ae7a9c3f0f56bcfad40954" kindref="member">epose2</ref>-&gt;GetFloat();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1abf78f2ac89572d18e048ec13f42a47b1" kindref="member">IDC_ORIGIN_ANGVEL_EPS</ref>:<sp/><ref refid="classExpUtil_1a7c90f88999e7842d63e294ffa78b1a41" kindref="member">roteps2</ref><sp/>=<sp/>DegToRad(<ref refid="classExpUtil_1acb6cba9122e8a026155ca94f639db3f8" kindref="member">erote2</ref>-&gt;GetFloat());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a43cff32c5fe8684e32472a199af412e8" kindref="member">IDC_EXPORT_ANIM2</ref>:</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExpUtil_1a6b8e2f02740081112cebaff294a8c7c7" kindref="member">input_exp_anim2_fname</ref>())</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a74c1bbf62427141225ba6564b30c2436" kindref="member">export_anim_v2</ref>();</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal">BOOL<sp/><ref refid="classExpUtil_1a2ca9ca74dbcdc104e14605788ea348e2" kindref="member">ExpUtil::export_other_dlg_proc</ref>(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wpar,<sp/>LPARAM<sp/>lpar)</highlight></codeline>
<codeline lineno="578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TCHAR<sp/>path[MAX_PATH];</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>prevent_enchange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_INITDIALOG:<sp/><ref refid="classExpUtil_1adad70095a1ee366d60185ff1a72c4ba7" kindref="member">update_ui_other</ref>(hw);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_COMMAND:</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WORD<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>LOWORD(wpar);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a653907da7737ed3f9d5469f283edee25" kindref="member">IDC_CALC_MOMJ</ref>:<sp/><ref refid="classExpUtil_1a7b73360afda994312cf13615d5dc8a4c" kindref="member">calcMomj</ref>();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1ad81bef41c85e59861f5c2b02839fe984" kindref="member">IDC_CALC_MOMJ_ON_EXPORT</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca8ec676346ed8c63ceb28bc171bd35c3a" kindref="member">EXP_DONT_CALC_MOMJ</ref>,<sp/>!IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a5e005335a86fb4878c64b1c18ee667ea" kindref="member">IDC_EXPLTARG</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca52345d6698f8b3a9ed2ec14f48894136" kindref="member">EXP_LTARG</ref>,<sp/>IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a9c6909260f2bbf4db03cf076ce6e92ac" kindref="member">IDC_EXPCTARG</ref>:<sp/><ref refid="classExpUtil_1adf6a1207abcb9c4344f631e16fa5ffa2" kindref="member">set_expflg</ref>(<ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca32c6048fd40363320af58e6ce8bb7dd4" kindref="member">EXP_CTARG</ref>,<sp/>IsDlgButtonChecked(hw,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a5c9b41442acf5f01b8296c64cb5ed95f" kindref="member">IDC_SET_DAGORPATH</ref>:</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TCHAR<sp/>dir[MAX_PATH];</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_tcscpy(dir,<sp/><ref refid="expUtil_8cpp_1ac9fb07f5e9a035c1eca78f6428d9a590" kindref="member">strToWide</ref>(<ref refid="dagor_8h_1a325c848df9994c7cc15e7655503ef5a6" kindref="member">dagor_path</ref>).c_str());</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>-&gt;ChooseDirectory(hw,<sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a2a9440cde92d53a50678d9fbed4d8fc8" kindref="member">IDS_CHOOSE_DAGOR_PATH</ref>),<sp/>dir);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir[0])</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dagor_8h_1a030c82e9618b053d19ace84d82225081" kindref="member">set_dagor_path</ref>(<ref refid="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(dir).data());</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8cpp_1adc4b6cbb3c15d79ea757b361472a5430" kindref="member">update_path_edit_control</ref>(hw,<sp/><ref refid="resource_8h_1abb5cc701f25306ac5f24f59d96471e8c" kindref="member">IDC_DAGORPATH</ref>,<sp/><ref refid="expUtil_8cpp_1ac9fb07f5e9a035c1eca78f6428d9a590" kindref="member">strToWide</ref>(<ref refid="dagor_8h_1a325c848df9994c7cc15e7655503ef5a6" kindref="member">dagor_path</ref>).data());</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1abb5cc701f25306ac5f24f59d96471e8c" kindref="member">IDC_DAGORPATH</ref>:</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(HIWORD(wpar))</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EN_SETFOCUS:<sp/>DisableAccelerators();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EN_KILLFOCUS:</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnableAccelerators();</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetDlgItemText(hw,<sp/><ref refid="resource_8h_1abb5cc701f25306ac5f24f59d96471e8c" kindref="member">IDC_DAGORPATH</ref>,<sp/>path,<sp/>MAX_PATH);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dagor_8h_1a030c82e9618b053d19ace84d82225081" kindref="member">set_dagor_path</ref>(<ref refid="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(path).data());</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EN_CHANGE:</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!prevent_enchange)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetDlgItemText(hw,<sp/><ref refid="resource_8h_1abb5cc701f25306ac5f24f59d96471e8c" kindref="member">IDC_DAGORPATH</ref>,<sp/>path,<sp/>MAX_PATH);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>new_path<sp/>=<sp/><ref refid="common_8cpp_1a7987669935f82bfd122e32c8f3ae2d58" kindref="member">drop_quotation_marks</ref>(path);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path<sp/>!=<sp/>new_path)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAutotoggle" kindref="compound">Autotoggle</ref><sp/>eguard(prevent_enchange);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8cpp_1adc4b6cbb3c15d79ea757b361472a5430" kindref="member">update_path_edit_control</ref>(hw,<sp/><ref refid="resource_8h_1abb5cc701f25306ac5f24f59d96471e8c" kindref="member">IDC_DAGORPATH</ref>,<sp/>new_path);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1ad17b877c7bb6f817f5188a4d63a1b23b" kindref="member">IDC_EXPORT_CAMERA2</ref>:</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExpUtil_1abaa4ce5c2870fa36ed63376dfc25cb33" kindref="member">input_exp_camera_fname</ref>())</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1ae0f155f8dbbc7b7d793bfe5e0f0cf9d1" kindref="member">export_camera_v1</ref>();</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1ac79eaa752441bc38f51675adf395b532" kindref="member">IDC_EXPORT_PHYS</ref>:</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExpUtil_1a9d41c5429368145c923a35c5ad1e7f07" kindref="member">input_exp_phys_fname</ref>())</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a3df5005e61a1aa2a841fb1e4a4ead059" kindref="member">exportPhysics</ref>();</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1abe5543d265f187e179e620aaa47d62dd" kindref="member">IDC_EXPORT_INSTANCES</ref>:</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExpUtil_1a7531906ea173c7167121e513f5260f3b" kindref="member">input_exp_instances_fname</ref>())</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1afa2aec6461f400b682bfc31d29a4658a" kindref="member">export_instances</ref>();</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INT_PTR<sp/>CALLBACK<sp/>ExpDagDlgProc(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>util.<ref refid="classExpUtil_1aa97d7ec2929c2a808a5e1d904d881f67" kindref="member">export_dlg_proc</ref>(hw,<sp/>msg,<sp/>wParam,<sp/>lParam);</highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INT_PTR<sp/>CALLBACK<sp/>ExportAnimDlgProc(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>util.<ref refid="classExpUtil_1a775db58423b75b014ff2aebaa6c321fe" kindref="member">export_anim_dlg_proc</ref>(hw,<sp/>msg,<sp/>wParam,<sp/>lParam);</highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INT_PTR<sp/>CALLBACK<sp/>ExportOtherDlgProc(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>util.<ref refid="classExpUtil_1a2ca9ca74dbcdc104e14605788ea348e2" kindref="member">export_other_dlg_proc</ref>(hw,<sp/>msg,<sp/>wParam,<sp/>lParam);</highlight></codeline>
<codeline lineno="676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INT_PTR<sp/>CALLBACK<sp/>LogDlgProc(HWND<sp/>hw,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wpar,<sp/>LPARAM<sp/>lpar)</highlight></codeline>
<codeline lineno="679"><highlight class="normal">{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_COMMAND:</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(LOWORD(wpar))</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a66a86c4c4d58c77ed4d098e0461db780" kindref="member">IDC_OPEN_LOG</ref>:<sp/><ref refid="classDagorLogWindow_1a65e078c63db9c8fed5094e7a0f24e496" kindref="member">DagorLogWindow::show</ref>(</highlight><highlight class="comment">/*reset_position_and_size<sp/>=<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1aa7509b1e2cc49583808438f563fdff4c" kindref="member">IDC_CLEAR_LOG</ref>:<sp/><ref refid="classDagorLogWindow_1a942c1354a32e315d800e26a47e9341ae" kindref="member">DagorLogWindow::clearLog</ref>();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><ref refid="classExpUtil_1ae85784dc140ee6022d047de4c0ea9ee8" kindref="member">ExpUtil::ExpUtil</ref>()</highlight></codeline>
<codeline lineno="696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1aee33a88f0af2c0a96b997bd264532429" kindref="member">iu</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a1e17af3c62062a6c3a2e6f5e16f3204c" kindref="member">hExpDag</ref><sp/>=<sp/><ref refid="classExpUtil_1abc7096c9c625e44cc2e4ef5e64ae49bd" kindref="member">hExpAnim</ref><sp/>=<sp/><ref refid="classExpUtil_1a60a1f8f89838afdf076be986e10c1564" kindref="member">hExpOther</ref><sp/>=<sp/><ref refid="classExpUtil_1a1ccb2c2fe0f49d9944cc9a33bd3f6db9" kindref="member">hLog</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>=<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cafc7caccb696d051101bce613a82ed7c8" kindref="member">EXP_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a33454b89fd841b5b1fee1de4ac57e850" kindref="member">exportMode</ref><sp/>=<sp/><ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71a3d6de23c17caebe5e1069e9d8162f68e" kindref="member">ExportMode::Standard</ref>;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a11e3343900a93370d7eb826dcc5ea98b" kindref="member">astart</ref><sp/>=<sp/>GetAnimStart();</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a3b55a6b7b7eb2f628552d88a28679793" kindref="member">aend</ref><sp/>=<sp/>GetAnimEnd();</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1afaa97785354e31ef4951ae28c5ccccd3" kindref="member">poseps</ref><sp/>=<sp/>0.005f;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1aec43fc2ae864c27db6159601ba2506b3" kindref="member">scleps</ref><sp/>=<sp/>0.01f;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1aa04a871d433c0d968ba72bd23bdb9a61" kindref="member">roteps</ref><sp/>=<sp/>DegToRad(1);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1ab64905843d83c6b29649ed85736396cf" kindref="member">orteps</ref><sp/>=<sp/>DegToRad(1);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1aca8d554d9d91add33362d522582f2e10" kindref="member">poseps2</ref><sp/>=<sp/>0.005f;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a7c90f88999e7842d63e294ffa78b1a41" kindref="member">roteps2</ref><sp/>=<sp/>DegToRad(1);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a357951d13253dded351001f0d91ae0c7" kindref="member">eastart</ref><sp/>=<sp/><ref refid="classExpUtil_1a997c2bfb9706e92532b48c95e8d17948" kindref="member">eaend</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1ab1801e923e5a910a80dca6f3c1dbb1b9" kindref="member">epose</ref><sp/>=<sp/><ref refid="classExpUtil_1a32e208eaa430c444b8d8169b8a8ffd50" kindref="member">erote</ref><sp/>=<sp/><ref refid="classExpUtil_1a1c50c8e94e4cc1a57577217e722c11c1" kindref="member">escle</ref><sp/>=<sp/><ref refid="classExpUtil_1adfaa8b523c7116fbca61a3c806625e79" kindref="member">eorte</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a9c812ede9a27d6f648d285dddb655f51" kindref="member">suppressPrompts</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a076bfcffcc8ad5631d3e526cae820a51" kindref="member">ExpUtil::BeginEditParams</ref>(Interface<sp/>*ip,<sp/>IUtil<sp/>*iu)</highlight></codeline>
<codeline lineno="719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>this-&gt;iu<sp/>=<sp/><ref refid="classExpUtil_1aee33a88f0af2c0a96b997bd264532429" kindref="member">iu</ref>;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>this-&gt;ip<sp/>=<sp/><ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a1e17af3c62062a6c3a2e6f5e16f3204c" kindref="member">hExpDag</ref><sp/>=<sp/><ref refid="common_8cpp_1ab84324e6a3ef91427b0e8a5b101a4b98" kindref="member">add_rollup_page</ref>(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>,<sp/><ref refid="resource_8h_1aa2e5ce8785fb2d47aeda744c42033b51" kindref="member">IDD_EXPUTIL</ref>,<sp/>ExpDagDlgProc,<sp/>_T(</highlight><highlight class="stringliteral">&quot;DAG&quot;</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1abc7096c9c625e44cc2e4ef5e64ae49bd" kindref="member">hExpAnim</ref><sp/>=<sp/><ref refid="common_8cpp_1ab84324e6a3ef91427b0e8a5b101a4b98" kindref="member">add_rollup_page</ref>(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>,<sp/><ref refid="resource_8h_1a939ccd65621dc54905c9e863ac72f0ef" kindref="member">IDD_EXPANIM</ref>,<sp/>ExportAnimDlgProc,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Animation&quot;</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a60a1f8f89838afdf076be986e10c1564" kindref="member">hExpOther</ref><sp/>=<sp/><ref refid="common_8cpp_1ab84324e6a3ef91427b0e8a5b101a4b98" kindref="member">add_rollup_page</ref>(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>,<sp/><ref refid="resource_8h_1abfe91e7d30e44828e51a45dfb511dd67" kindref="member">IDD_EXPOTHER</ref>,<sp/>ExportOtherDlgProc,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Other&quot;</highlight><highlight class="normal">),<sp/>0,<sp/>APPENDROLL_CLOSED);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a1ccb2c2fe0f49d9944cc9a33bd3f6db9" kindref="member">hLog</ref><sp/>=<sp/><ref refid="common_8cpp_1ab84324e6a3ef91427b0e8a5b101a4b98" kindref="member">add_rollup_page</ref>(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>,<sp/><ref refid="resource_8h_1a3cde0cf34fa02c1e5f81c8861ceae18b" kindref="member">IDD_LOGROLL</ref>,<sp/>LogDlgProc,<sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1acc00693702340be54a95d7bdb35a9102" kindref="member">IDS_EXPLOG_ROLL</ref>),<sp/>0,<sp/>APPENDROLL_CLOSED);</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1abe4333360c385a613bc8d838cfe5f6da" kindref="member">ExpUtil::EndEditParams</ref>(Interface<sp/>*ip,<sp/>IUtil<sp/>*iu)</highlight></codeline>
<codeline lineno="730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>this-&gt;iu<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>this-&gt;ip<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><ref refid="common_8cpp_1ac9901f1c91ba6fca4d76e222820f8b52" kindref="member">delete_rollup_page</ref>(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>,<sp/>&amp;<ref refid="classExpUtil_1a1e17af3c62062a6c3a2e6f5e16f3204c" kindref="member">hExpDag</ref>);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><ref refid="common_8cpp_1ac9901f1c91ba6fca4d76e222820f8b52" kindref="member">delete_rollup_page</ref>(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>,<sp/>&amp;<ref refid="classExpUtil_1abc7096c9c625e44cc2e4ef5e64ae49bd" kindref="member">hExpAnim</ref>);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><ref refid="common_8cpp_1ac9901f1c91ba6fca4d76e222820f8b52" kindref="member">delete_rollup_page</ref>(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>,<sp/>&amp;<ref refid="classExpUtil_1a60a1f8f89838afdf076be986e10c1564" kindref="member">hExpOther</ref>);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><ref refid="common_8cpp_1ac9901f1c91ba6fca4d76e222820f8b52" kindref="member">delete_rollup_page</ref>(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>,<sp/>&amp;<ref refid="classExpUtil_1a1ccb2c2fe0f49d9944cc9a33bd3f6db9" kindref="member">hLog</ref>);</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a5ca36e001149f70b7ba8dfb8a52792d1" kindref="member">ExpUtil::update_tooltips</ref>()</highlight></codeline>
<codeline lineno="741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>HWND<sp/>expmode<sp/>=<sp/>GetDlgItem(<ref refid="classExpUtil_1a1e17af3c62062a6c3a2e6f5e16f3204c" kindref="member">hExpDag</ref>,<sp/><ref refid="resource_8h_1a7d7b3e72660a3d8e3225be7d0e15e2bc" kindref="member">IDC_EXPORT_MODE</ref>);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>HWND<sp/>exphidden<sp/>=<sp/>GetDlgItem(<ref refid="classExpUtil_1a1e17af3c62062a6c3a2e6f5e16f3204c" kindref="member">hExpDag</ref>,<sp/><ref refid="resource_8h_1abe6abaf8896263d49e5327a234b01d11" kindref="member">IDC_EXPHIDDEN</ref>);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>HWND<sp/>expsel<sp/>=<sp/>GetDlgItem(<ref refid="classExpUtil_1a1e17af3c62062a6c3a2e6f5e16f3204c" kindref="member">hExpDag</ref>,<sp/><ref refid="resource_8h_1a2db228d516c7633a1bdce258f4f65a3c" kindref="member">IDC_EXPSEL</ref>);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExpUtil_1a33454b89fd841b5b1fee1de4ac57e850" kindref="member">exportMode</ref><sp/>==<sp/><ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71a1a84d00dd5e6f917c72da626b5760a7e" kindref="member">ExportMode::LayersAsDags</ref>)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>tooltipExtender.SetToolTip(expmode,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Layers<sp/>are<sp/>exported<sp/>as<sp/>separate<sp/>dag<sp/>files.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>tooltipExtender.SetToolTip(exphidden,</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_T(</highlight><highlight class="stringliteral">&quot;Export<sp/>hidden<sp/>layers<sp/>inside<sp/>layers\n(if<sp/>those<sp/>layers<sp/>should<sp/>be<sp/>exported<sp/>based<sp/>on<sp/>other<sp/>parameters).&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>tooltipExtender.SetToolTip(expsel,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Process<sp/>only<sp/>current<sp/>layer<sp/>and<sp/>children<sp/>of<sp/>it\n(The<sp/>default<sp/>layer<sp/>is<sp/>only<sp/>exported<sp/>if<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_T(</highlight><highlight class="stringliteral">&quot;it&apos;s<sp/>the<sp/>current<sp/>layer<sp/>and<sp/>\&quot;sel\&quot;<sp/>is<sp/>active.)&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExpUtil_1a33454b89fd841b5b1fee1de4ac57e850" kindref="member">exportMode</ref><sp/>==<sp/><ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71aa8276397b749e6de07630003c71a17b2" kindref="member">ExportMode::ObjectsAsDags</ref>)</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>tooltipExtender.SetToolTip(expmode,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Objects<sp/>are<sp/>exported<sp/>as<sp/>separate<sp/>dag<sp/>files.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>tooltipExtender.SetToolTip(exphidden,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Export<sp/>hidden<sp/>objects&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>tooltipExtender.SetToolTip(expsel,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Export<sp/>only<sp/>selected<sp/>objects&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>tooltipExtender.SetToolTip(expmode,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Export<sp/>one<sp/>file.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>tooltipExtender.SetToolTip(exphidden,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Export<sp/>hidden<sp/>objects&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>tooltipExtender.SetToolTip(expsel,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Export<sp/>only<sp/>selected<sp/>objects&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a4f6f9a090dba0a8b63e4662a9acbf244" kindref="member">ExpUtil::update_ui_dag</ref>(HWND<sp/>hw)</highlight></codeline>
<codeline lineno="770"><highlight class="normal">{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hw)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>HWND<sp/>exportModeComboBox<sp/>=<sp/>GetDlgItem(hw,<sp/><ref refid="resource_8h_1a7d7b3e72660a3d8e3225be7d0e15e2bc" kindref="member">IDC_EXPORT_MODE</ref>);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>ComboBox_SetCurSel(exportModeComboBox,<sp/><ref refid="classComboBoxHelper_1a022f1cf616af7f2619d698117866a2d6" kindref="member">ComboBoxHelper::GetItemIndexByData</ref>(exportModeComboBox,<sp/>(LPARAM)<ref refid="classExpUtil_1a33454b89fd841b5b1fee1de4ac57e850" kindref="member">exportMode</ref>));</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1abe6abaf8896263d49e5327a234b01d11" kindref="member">IDC_EXPHIDDEN</ref>,<sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca6b7267d63b63440a7aa60ef3a099e71b" kindref="member">EXP_HID</ref>);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a2db228d516c7633a1bdce258f4f65a3c" kindref="member">IDC_EXPSEL</ref>,<sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cac93b52a68dc3b54c1ad6d4f92faa7cb8" kindref="member">EXP_SEL</ref>);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1acd59138bbd896d8d07f46c5f8b03adaf" kindref="member">IDC_EXPMESH</ref>,<sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca7c997ef7aea4da936f1ca86659dba95f" kindref="member">EXP_MESH</ref>);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a682e761577402765f66787044bc2cf42" kindref="member">IDC_EXP_VNORM</ref>,<sp/>!(<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca7726b8a815ab142189d736d669f85519" kindref="member">EXP_NO_VNORM</ref>));</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a47bce04990ee8850e12c6db1399e236c" kindref="member">IDC_EXPLIGHT</ref>,<sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06caff2dc62d0636cb92e42053636baf1360" kindref="member">EXP_LT</ref>);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1aec21159ee695e846a385a176980c3575" kindref="member">IDC_EXPCAM</ref>,<sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca8f58f8ccc99b7a781b3eed35ada98b40" kindref="member">EXP_CAM</ref>);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a0849ff2347cefba528bd72c228bdd8d3" kindref="member">IDC_EXPHELPER</ref>,<sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca11c244d530f173871feee7fa44df43ef" kindref="member">EXP_HLP</ref>);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a6297a99c7c6f811a9ba937bde5dd6c73" kindref="member">IDC_EXPSPLINE</ref>,<sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cae304ba10296381a1f92fa75aff1a6837" kindref="member">EXP_SPLINE</ref>);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1ac000e293de910a9f83cf90c8deeecf9c" kindref="member">IDC_EXPMATER</ref>,<sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06caf81ae9ea1446789418685c688c161a40" kindref="member">EXP_MAT</ref>);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a34d284864dae02c9c9ab75641732a52f" kindref="member">IDC_EXPMATEROPT</ref>,<sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca50d59afd84fb1166581bec94cb9eff6a" kindref="member">EXP_MATOPT</ref>);</highlight></codeline>
<codeline lineno="787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1afff7390ef934861b72935d5802f36739" kindref="member">ExpUtil::update_ui_anim</ref>(HWND<sp/>hw)</highlight></codeline>
<codeline lineno="790"><highlight class="normal">{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hw)</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>TSTR<sp/>s;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/>TimeToString(<ref refid="classExpUtil_1a11e3343900a93370d7eb826dcc5ea98b" kindref="member">astart</ref>,<sp/>s);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a357951d13253dded351001f0d91ae0c7" kindref="member">eastart</ref>-&gt;SetText(s);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>TimeToString(<ref refid="classExpUtil_1a3b55a6b7b7eb2f628552d88a28679793" kindref="member">aend</ref>,<sp/>s);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a997c2bfb9706e92532b48c95e8d17948" kindref="member">eaend</ref>-&gt;SetText(s);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1ab1801e923e5a910a80dca6f3c1dbb1b9" kindref="member">epose</ref>-&gt;SetText(<ref refid="classExpUtil_1afaa97785354e31ef4951ae28c5ccccd3" kindref="member">poseps</ref>,<sp/>3);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a1c50c8e94e4cc1a57577217e722c11c1" kindref="member">escle</ref>-&gt;SetText(<ref refid="classExpUtil_1aec43fc2ae864c27db6159601ba2506b3" kindref="member">scleps</ref><sp/>*<sp/>100,<sp/>2);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a32e208eaa430c444b8d8169b8a8ffd50" kindref="member">erote</ref>-&gt;SetText(RadToDeg(<ref refid="classExpUtil_1aa04a871d433c0d968ba72bd23bdb9a61" kindref="member">roteps</ref>),<sp/>2);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1adfaa8b523c7116fbca61a3c806625e79" kindref="member">eorte</ref>-&gt;SetText(RadToDeg(<ref refid="classExpUtil_1ab64905843d83c6b29649ed85736396cf" kindref="member">orteps</ref>),<sp/>2);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a9672f7c2e5ae7a9c3f0f56bcfad40954" kindref="member">epose2</ref>-&gt;SetText(<ref refid="classExpUtil_1aca8d554d9d91add33362d522582f2e10" kindref="member">poseps2</ref>,<sp/>3);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1acb6cba9122e8a026155ca94f639db3f8" kindref="member">erote2</ref>-&gt;SetText(RadToDeg(<ref refid="classExpUtil_1a7c90f88999e7842d63e294ffa78b1a41" kindref="member">roteps2</ref>),<sp/>2);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a410d347eb56023e918f0ad0fcc37fcc4" kindref="member">IDC_ARANGE</ref>,<sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca956d9e2e9bf0cfa553e275e892b79bb0" kindref="member">EXP_ARNG</ref>);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a548a540dc0a0acd50d5e498272dde954" kindref="member">IDC_USEKEYS</ref>,<sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca2b1328b19dd43178c38e8dc685100949" kindref="member">EXP_UKEYS</ref>);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1aed2bb0b11bdd557370ed8153237588bf" kindref="member">IDC_USENTKEYS</ref>,<sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca1f4425ebaa08df4d936fe2dfe5827428" kindref="member">EXP_UNTKEYS</ref>);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a6aaf916e99596f7ae2724856c9b28152" kindref="member">IDC_DONTCHKKEYS</ref>,<sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca0a62bfe82a87610fb653f54c5db745a6" kindref="member">EXP_DONTCHKKEYS</ref>);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a0e4b20da75e49b79c7a1ad50ba47048a" kindref="member">IDC_REDUCE_POS</ref>,<sp/>!(<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cabbf7c66e7c660f84d0a9f4a16791f755" kindref="member">EXP_DONT_REDUCE_POS</ref>));</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1ab5b111d7540ae043027345ca0f076b6e" kindref="member">IDC_REDUCE_ROT</ref>,<sp/>!(<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cafb2e1e878c65f7ea4518fbd009d9e734" kindref="member">EXP_DONT_REDUCE_ROT</ref>));</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a1534f7263458ac30682e5bc9b1a61afb" kindref="member">IDC_REDUCE_SCL</ref>,<sp/>!(<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca414ab861700663ad48785af6f890032e" kindref="member">EXP_DONT_REDUCE_SCL</ref>));</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1ab44011c4d33767803baad22badcfacd5" kindref="member">IDC_LOOP_ANIM</ref>,<sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca586010b725db9fe896a4b4b427909710" kindref="member">EXP_LOOPED_ANIM</ref>);</highlight></codeline>
<codeline lineno="814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1adad70095a1ee366d60185ff1a72c4ba7" kindref="member">ExpUtil::update_ui_other</ref>(HWND<sp/>hw)</highlight></codeline>
<codeline lineno="817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hw)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1ad81bef41c85e59861f5c2b02839fe984" kindref="member">IDC_CALC_MOMJ_ON_EXPORT</ref>,<sp/>!(<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca8ec676346ed8c63ceb28bc171bd35c3a" kindref="member">EXP_DONT_CALC_MOMJ</ref>));</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a5e005335a86fb4878c64b1c18ee667ea" kindref="member">IDC_EXPLTARG</ref>,<sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca52345d6698f8b3a9ed2ec14f48894136" kindref="member">EXP_LTARG</ref>);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>CheckDlgButton(hw,<sp/><ref refid="resource_8h_1a9c6909260f2bbf4db03cf076ce6e92ac" kindref="member">IDC_EXPCTARG</ref>,<sp/><ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca32c6048fd40363320af58e6ce8bb7dd4" kindref="member">EXP_CTARG</ref>);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><ref refid="common_8cpp_1adc4b6cbb3c15d79ea757b361472a5430" kindref="member">update_path_edit_control</ref>(hw,<sp/><ref refid="resource_8h_1abb5cc701f25306ac5f24f59d96471e8c" kindref="member">IDC_DAGORPATH</ref>,<sp/><ref refid="expUtil_8cpp_1ac9fb07f5e9a035c1eca78f6428d9a590" kindref="member">strToWide</ref>(<ref refid="dagor_8h_1a325c848df9994c7cc15e7655503ef5a6" kindref="member">dagor_path</ref>).c_str());</highlight></codeline>
<codeline lineno="825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a39aec5f75bfc81bf561fa7aa8851f158" kindref="member">ExpUtil::update_ui</ref>()</highlight></codeline>
<codeline lineno="828"><highlight class="normal">{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a4f6f9a090dba0a8b63e4662a9acbf244" kindref="member">update_ui_dag</ref>(<ref refid="classExpUtil_1a1e17af3c62062a6c3a2e6f5e16f3204c" kindref="member">hExpDag</ref>);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1afff7390ef934861b72935d5802f36739" kindref="member">update_ui_anim</ref>(<ref refid="classExpUtil_1abc7096c9c625e44cc2e4ef5e64ae49bd" kindref="member">hExpAnim</ref>);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1adad70095a1ee366d60185ff1a72c4ba7" kindref="member">update_ui_other</ref>(<ref refid="classExpUtil_1a60a1f8f89838afdf076be986e10c1564" kindref="member">hExpOther</ref>);</highlight></codeline>
<codeline lineno="832"><highlight class="normal">}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="835"><highlight class="comment">void<sp/>ExpUtil::update_vars()<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="comment"><sp/><sp/>if(!ip)<sp/>return;</highlight></codeline>
<codeline lineno="837"><highlight class="comment"><sp/><sp/>util.exphidden=IsDlgButtonChecked(hPanel,IDC_EXPHIDDEN);</highlight></codeline>
<codeline lineno="838"><highlight class="comment">}</highlight></codeline>
<codeline lineno="839"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1ade542522c542a4ebf52623b1e70e8a45" kindref="member">ExpUtil::Init</ref>(HWND<sp/>hw)</highlight></codeline>
<codeline lineno="842"><highlight class="normal">{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a1e17af3c62062a6c3a2e6f5e16f3204c" kindref="member">hExpDag</ref><sp/>=<sp/>hw;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>HWND<sp/>exportModeComboBox<sp/>=<sp/>GetDlgItem(hw,<sp/><ref refid="resource_8h_1a7d7b3e72660a3d8e3225be7d0e15e2bc" kindref="member">IDC_EXPORT_MODE</ref>);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><ref refid="classComboBoxHelper_1a6b259b765774eb14ac4962573c654e39" kindref="member">ComboBoxHelper::AddItemWithData</ref>(exportModeComboBox,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Standard&quot;</highlight><highlight class="normal">),<sp/>(LPARAM)<ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71a3d6de23c17caebe5e1069e9d8162f68e" kindref="member">ExportMode::Standard</ref>);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><ref refid="classComboBoxHelper_1a6b259b765774eb14ac4962573c654e39" kindref="member">ComboBoxHelper::AddItemWithData</ref>(exportModeComboBox,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Objects<sp/>as<sp/>dags&quot;</highlight><highlight class="normal">),<sp/>(LPARAM)<ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71aa8276397b749e6de07630003c71a17b2" kindref="member">ExportMode::ObjectsAsDags</ref>);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><ref refid="classComboBoxHelper_1a6b259b765774eb14ac4962573c654e39" kindref="member">ComboBoxHelper::AddItemWithData</ref>(exportModeComboBox,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Layers<sp/>as<sp/>dags&quot;</highlight><highlight class="normal">),<sp/>(LPARAM)<ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71a1a84d00dd5e6f917c72da626b5760a7e" kindref="member">ExportMode::LayersAsDags</ref>);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a4f6f9a090dba0a8b63e4662a9acbf244" kindref="member">update_ui_dag</ref>(hw);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>tooltipExtender.SetToolTip(GetDlgItem(hw,<sp/><ref refid="resource_8h_1acd59138bbd896d8d07f46c5f8b03adaf" kindref="member">IDC_EXPMESH</ref>),<sp/>TSTR(_T(</highlight><highlight class="stringliteral">&quot;Export<sp/>mesh&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>tooltipExtender.SetToolTip(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a47bce04990ee8850e12c6db1399e236c" kindref="member">IDC_EXPLIGHT</ref>),<sp/>TSTR(_T(</highlight><highlight class="stringliteral">&quot;Export<sp/>light&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/>tooltipExtender.SetToolTip(GetDlgItem(hw,<sp/><ref refid="resource_8h_1aec21159ee695e846a385a176980c3575" kindref="member">IDC_EXPCAM</ref>),<sp/>TSTR(_T(</highlight><highlight class="stringliteral">&quot;Export<sp/>camera&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>tooltipExtender.SetToolTip(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a0849ff2347cefba528bd72c228bdd8d3" kindref="member">IDC_EXPHELPER</ref>),<sp/>TSTR(_T(</highlight><highlight class="stringliteral">&quot;Export<sp/>helper&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/>tooltipExtender.SetToolTip(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a682e761577402765f66787044bc2cf42" kindref="member">IDC_EXP_VNORM</ref>),<sp/>TSTR(_T(</highlight><highlight class="stringliteral">&quot;Export<sp/>vertex<sp/>normals&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>tooltipExtender.SetToolTip(GetDlgItem(hw,<sp/><ref refid="resource_8h_1ac000e293de910a9f83cf90c8deeecf9c" kindref="member">IDC_EXPMATER</ref>),<sp/>TSTR(_T(</highlight><highlight class="stringliteral">&quot;Export<sp/>materials&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>tooltipExtender.SetToolTip(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a34d284864dae02c9c9ab75641732a52f" kindref="member">IDC_EXPMATEROPT</ref>),<sp/>TSTR(_T(</highlight><highlight class="stringliteral">&quot;Enable<sp/>material<sp/>optimization&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/>tooltipExtender.SetToolTip(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a6297a99c7c6f811a9ba937bde5dd6c73" kindref="member">IDC_EXPSPLINE</ref>),<sp/>TSTR(_T(</highlight><highlight class="stringliteral">&quot;Export<sp/>splines&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a5ca36e001149f70b7ba8dfb8a52792d1" kindref="member">update_tooltips</ref>();</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>SendMessage(tooltipExtender.GetToolTipHWND(),<sp/>TTM_SETDELAYTIME,<sp/>TTDT_AUTOPOP,<sp/>32000);</highlight></codeline>
<codeline lineno="862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a006fc2e221311c6be89405c9358c6fe6" kindref="member">ExpUtil::Destroy</ref>(HWND<sp/>hw)<sp/>{}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a248be070d4b538d715840f4693466bd8" kindref="member">ExpUtil::InitAnim</ref>(HWND<sp/>hw)</highlight></codeline>
<codeline lineno="867"><highlight class="normal">{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a357951d13253dded351001f0d91ae0c7" kindref="member">eastart</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a67b9813dcf3832c4524b6c420b74a52a" kindref="member">IDC_ASTART</ref>));</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a997c2bfb9706e92532b48c95e8d17948" kindref="member">eaend</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a73cc2cf1192b63d2b08e74847d94beef" kindref="member">IDC_AEND</ref>));</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1ab1801e923e5a910a80dca6f3c1dbb1b9" kindref="member">epose</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1ad386b2ecb9e19d31272e603b5039ca74" kindref="member">IDC_POSEPS</ref>));</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a32e208eaa430c444b8d8169b8a8ffd50" kindref="member">erote</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a07ddcf27aced53e4057149564d78107b" kindref="member">IDC_ROTEPS</ref>));</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a1c50c8e94e4cc1a57577217e722c11c1" kindref="member">escle</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1aa3e456054c2c10e7f0623503af3c1486" kindref="member">IDC_SCLEPS</ref>));</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1adfaa8b523c7116fbca61a3c806625e79" kindref="member">eorte</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1adee0457a038f5cb8ea7df3a2e264de3e" kindref="member">IDC_ORTEPS</ref>));</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a9672f7c2e5ae7a9c3f0f56bcfad40954" kindref="member">epose2</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1a92d6be13d3715f2b663b92d925b9197b" kindref="member">IDC_ORIGIN_LINVEL_EPS</ref>));</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1acb6cba9122e8a026155ca94f639db3f8" kindref="member">erote2</ref><sp/>=<sp/>GetICustEdit(GetDlgItem(hw,<sp/><ref refid="resource_8h_1abf78f2ac89572d18e048ec13f42a47b1" kindref="member">IDC_ORIGIN_ANGVEL_EPS</ref>));</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1afff7390ef934861b72935d5802f36739" kindref="member">update_ui_anim</ref>(hw);</highlight></codeline>
<codeline lineno="877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a4c2a8843d6881766de389c194e81eb9b" kindref="member">ExpUtil::DestroyAnim</ref>(HWND<sp/>hw)</highlight></codeline>
<codeline lineno="880"><highlight class="normal">{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>ReleaseICustEdit(<ref refid="classExpUtil_1a357951d13253dded351001f0d91ae0c7" kindref="member">eastart</ref>);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>ReleaseICustEdit(<ref refid="classExpUtil_1a997c2bfb9706e92532b48c95e8d17948" kindref="member">eaend</ref>);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>ReleaseICustEdit(<ref refid="classExpUtil_1ab1801e923e5a910a80dca6f3c1dbb1b9" kindref="member">epose</ref>);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>ReleaseICustEdit(<ref refid="classExpUtil_1a32e208eaa430c444b8d8169b8a8ffd50" kindref="member">erote</ref>);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>ReleaseICustEdit(<ref refid="classExpUtil_1a1c50c8e94e4cc1a57577217e722c11c1" kindref="member">escle</ref>);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>ReleaseICustEdit(<ref refid="classExpUtil_1adfaa8b523c7116fbca61a3c806625e79" kindref="member">eorte</ref>);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>ReleaseICustEdit(<ref refid="classExpUtil_1a9672f7c2e5ae7a9c3f0f56bcfad40954" kindref="member">epose2</ref>);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/>ReleaseICustEdit(<ref refid="classExpUtil_1acb6cba9122e8a026155ca94f639db3f8" kindref="member">erote2</ref>);</highlight></codeline>
<codeline lineno="889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1aa5219b9747527ac27a1d5bd524aab711" kindref="member">ExpUtil::input_exp_fname</ref>()</highlight></codeline>
<codeline lineno="892"><highlight class="normal">{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>FilterList<sp/>fl;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>fl.Append(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1ab4da16aba837425eea10a78744f0ae9e" kindref="member">IDS_SCENE_FILES</ref>));</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>fl.Append(_T(</highlight><highlight class="stringliteral">&quot;*.dag&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="common_8cpp_1aa6d335e2aa545c68709f116b7de9298b" kindref="member">get_save_filename</ref>(<ref refid="classExpUtil_1a1e17af3c62062a6c3a2e6f5e16f3204c" kindref="member">hExpDag</ref>,<sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a1e1068e82f15faaf069214eb7969a63a" kindref="member">IDS_SAVE_SCENE_TITLE</ref>),<sp/>fl,<sp/>_T(</highlight><highlight class="stringliteral">&quot;dag&quot;</highlight><highlight class="normal">),<sp/><ref refid="classExpUtil_1a3751f0176ca3e72f41e949bd7ab926aa" kindref="member">exp_fname</ref>);</highlight></codeline>
<codeline lineno="897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a6b8e2f02740081112cebaff294a8c7c7" kindref="member">ExpUtil::input_exp_anim2_fname</ref>()</highlight></codeline>
<codeline lineno="900"><highlight class="normal">{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>FilterList<sp/>fl;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/>fl.Append(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1abc57bf8feac4c0861ba46c6bc69d4b1d" kindref="member">IDS_ANIM2_FILES</ref>));</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>fl.Append(_T<sp/>(</highlight><highlight class="stringliteral">&quot;*.a2d&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="common_8cpp_1aa6d335e2aa545c68709f116b7de9298b" kindref="member">get_save_filename</ref>(<ref refid="classExpUtil_1abc7096c9c625e44cc2e4ef5e64ae49bd" kindref="member">hExpAnim</ref>,<sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a618d2352f2b2c8339926268b3a391b82" kindref="member">IDS_SAVE_ANIM2_TITLE2</ref>),<sp/>fl,<sp/>_T(</highlight><highlight class="stringliteral">&quot;a2d&quot;</highlight><highlight class="normal">),<sp/><ref refid="classExpUtil_1a574065a40555a0055242667cda0716f3" kindref="member">exp_anim2_fname</ref>);</highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1abaa4ce5c2870fa36ed63376dfc25cb33" kindref="member">ExpUtil::input_exp_camera_fname</ref>()</highlight></codeline>
<codeline lineno="908"><highlight class="normal">{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/>FilterList<sp/>fl;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>fl.Append(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a0fd1d844a47d3b60386c974aa2aac4fd" kindref="member">IDS_CAMERA_FILES</ref>));</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>fl.Append(_T<sp/>(</highlight><highlight class="stringliteral">&quot;*.cam&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="common_8cpp_1aa6d335e2aa545c68709f116b7de9298b" kindref="member">get_save_filename</ref>(<ref refid="classExpUtil_1a60a1f8f89838afdf076be986e10c1564" kindref="member">hExpOther</ref>,<sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1aba306ee618feca3bb0875db82bc76300" kindref="member">IDS_SAVE_CAMERA_TITLE</ref>),<sp/>fl,<sp/>_T(</highlight><highlight class="stringliteral">&quot;cam&quot;</highlight><highlight class="normal">),<sp/><ref refid="classExpUtil_1a887f9b0d80416214d28b608275052a5b" kindref="member">exp_camera_fname</ref>);</highlight></codeline>
<codeline lineno="913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a9d41c5429368145c923a35c5ad1e7f07" kindref="member">ExpUtil::input_exp_phys_fname</ref>()</highlight></codeline>
<codeline lineno="916"><highlight class="normal">{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>FilterList<sp/>fl;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/>fl.Append(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1aac802a189d430234f9f966b4f9856f4a" kindref="member">IDS_PHYS_FILES</ref>));</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>fl.Append(_T<sp/>(</highlight><highlight class="stringliteral">&quot;*.dphys&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="common_8cpp_1aa6d335e2aa545c68709f116b7de9298b" kindref="member">get_save_filename</ref>(<ref refid="classExpUtil_1a60a1f8f89838afdf076be986e10c1564" kindref="member">hExpOther</ref>,<sp/><ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a78f853181c64a3ded20cecef575368d8" kindref="member">IDS_SAVE_PHYS_TITLE</ref>),<sp/>fl,<sp/>_T(</highlight><highlight class="stringliteral">&quot;dphys&quot;</highlight><highlight class="normal">),<sp/><ref refid="classExpUtil_1ad4108e9533c4dd517034af21ef39795f" kindref="member">exp_phys_fname</ref>);</highlight></codeline>
<codeline lineno="921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a7531906ea173c7167121e513f5260f3b" kindref="member">ExpUtil::input_exp_instances_fname</ref>()</highlight></codeline>
<codeline lineno="924"><highlight class="normal">{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>FilterList<sp/>fl;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/>fl.Append(_T(</highlight><highlight class="stringliteral">&quot;Instances<sp/>placement<sp/>(*.blk)&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>fl.Append(_T(</highlight><highlight class="stringliteral">&quot;*.blk&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="common_8cpp_1aa6d335e2aa545c68709f116b7de9298b" kindref="member">get_save_filename</ref>(<ref refid="classExpUtil_1a60a1f8f89838afdf076be986e10c1564" kindref="member">hExpOther</ref>,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Save<sp/>instances<sp/>placement...&quot;</highlight><highlight class="normal">),<sp/>fl,<sp/>_T(</highlight><highlight class="stringliteral">&quot;blk&quot;</highlight><highlight class="normal">),<sp/><ref refid="classExpUtil_1a56fd79b5d613e82d43dc4bffe039bcb4" kindref="member">exp_instances_fname</ref>);</highlight></codeline>
<codeline lineno="929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structBlock" kindref="compound">Block</ref></highlight></codeline>
<codeline lineno="933"><highlight class="normal">{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structBlock_1a4c72705c2d5aba13ad391db7672e70dd" kindref="member">ofs</ref>;</highlight></codeline>
<codeline lineno="935"><highlight class="normal">};</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Tab&lt;Block&gt;<sp/>blk;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FILE<sp/>*fileh<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_blk(FILE<sp/>*<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>)</highlight></codeline>
<codeline lineno="941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>blk.SetCount(0);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>fileh<sp/>=<sp/><ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>;</highlight></codeline>
<codeline lineno="944"><highlight class="normal">}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>begin_blk(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t)</highlight></codeline>
<codeline lineno="947"><highlight class="normal">{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(&amp;n,<sp/>4,<sp/>1,<sp/>fileh)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(&amp;t,<sp/>4,<sp/>1,<sp/>fileh)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><ref refid="structBlock" kindref="compound">Block</ref><sp/>b;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/>b.<ref refid="structBlock_1a4c72705c2d5aba13ad391db7672e70dd" kindref="member">ofs</ref><sp/>=<sp/>ftell(fileh);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>blk.Count();</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>blk.Append(1,<sp/>&amp;b);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blk.Count()<sp/>!=<sp/>n<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_blk()</highlight></codeline>
<codeline lineno="963"><highlight class="normal">{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>blk.Count()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>o<sp/>=<sp/>ftell(fileh);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/>fseek(fileh,<sp/>blk[i].ofs<sp/>-<sp/>8,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>o<sp/>-<sp/>blk[i].ofs<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(&amp;n,<sp/>4,<sp/>1,<sp/>fileh)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>blk.Delete(i,<sp/>1);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/>fseek(fileh,<sp/>o,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>adjwtm(Matrix3<sp/>&amp;tm)</highlight></codeline>
<codeline lineno="979"><highlight class="normal">{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/>MRow<sp/>*m<sp/>=<sp/>tm.GetAddr();</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>m[i][1];</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>m[i][1]<sp/>=<sp/>m[i][2];</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>m[i][2]<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/>tm.ClearIdentFlag(ROT_IDENT<sp/>|<sp/>SCL_IDENT);</highlight></codeline>
<codeline lineno="988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990" refid="structExpMat" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structExpMat" kindref="compound">ExpMat</ref></highlight></codeline>
<codeline lineno="991"><highlight class="normal">{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><ref refid="structDagMater" kindref="compound">DagMater</ref><sp/><ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>TCHAR<sp/>*<ref refid="structExpMat_1a973bab825f4f63bcaf37dfcfdd006b6b" kindref="member">name</ref>,<sp/>*<ref refid="structExpMat_1aabb16a5318105044271b390d1df6641f" kindref="member">classname</ref>,<sp/>*<ref refid="structExpMat_1a64a3d7c187e5632f0b78781b26014e9c" kindref="member">script</ref>;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>Mtl<sp/>*<ref refid="structExpMat_1ab63bfefe2371112bcec61c458567fc97" kindref="member">mtl</ref>;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/>DWORD<sp/><ref refid="structExpMat_1ab5f5403edfbf996a3c74ba14fafcd655" kindref="member">wirecolor</ref>;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><ref refid="structExpMat_1a44feec0ad002f3c087b39ab43389a0df" kindref="member">ExpMat</ref>()<sp/>{<sp/><ref refid="structExpMat_1a973bab825f4f63bcaf37dfcfdd006b6b" kindref="member">name</ref><sp/>=<sp/><ref refid="structExpMat_1aabb16a5318105044271b390d1df6641f" kindref="member">classname</ref><sp/>=<sp/><ref refid="structExpMat_1a64a3d7c187e5632f0b78781b26014e9c" kindref="member">script</ref><sp/>=<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal">};</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000" refid="classMyExpTMAnimCB" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMyExpTMAnimCB" kindref="compound">MyExpTMAnimCB</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classExpTMAnimCB" kindref="compound">ExpTMAnimCB</ref></highlight></codeline>
<codeline lineno="1001"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/>INode<sp/>*<ref refid="classMyExpTMAnimCB_1ae9af307fed577fea40d66a51bf087352" kindref="member">node</ref>,<sp/>*<ref refid="classMyExpTMAnimCB_1ac8013cfc640fd2fe96aa66617ce275ae" kindref="member">pnode</ref>,<sp/>*<ref refid="classMyExpTMAnimCB_1ab655c1619335df9ceb3f0facf313b7db" kindref="member">origin</ref>;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classMyExpTMAnimCB_1a0fb8951e7d32a802e8e19e8ec0ba51f0" kindref="member">nonort</ref>;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><ref refid="classMyExpTMAnimCB" kindref="compound">MyExpTMAnimCB</ref>(INode<sp/>*n,<sp/>INode<sp/>*pn,<sp/>INode<sp/>*orig)</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug<sp/>(<sp/>&quot;n=%p<sp/><sp/>pn=%p<sp/><sp/>origin=%p&quot;,<sp/>n,<sp/>pn,<sp/>origin<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMyExpTMAnimCB_1ae9af307fed577fea40d66a51bf087352" kindref="member">node</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMyExpTMAnimCB_1ac8013cfc640fd2fe96aa66617ce275ae" kindref="member">pnode</ref><sp/>=<sp/>pn;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMyExpTMAnimCB_1ab655c1619335df9ceb3f0facf313b7db" kindref="member">origin</ref><sp/>=<sp/>orig;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMyExpTMAnimCB_1a0fb8951e7d32a802e8e19e8ec0ba51f0" kindref="member">nonort</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*<ref refid="classMyExpTMAnimCB_1a0ec63c4a891bd14c0dfdecfa4bf3ed41" kindref="member">get_name</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1015"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classMyExpTMAnimCB_1ae9af307fed577fea40d66a51bf087352" kindref="member">node</ref>)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_T(</highlight><highlight class="stringliteral">&quot;&lt;NULL&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classMyExpTMAnimCB_1ae9af307fed577fea40d66a51bf087352" kindref="member">node</ref>-&gt;GetName();</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMyExpTMAnimCB_1a4fec60070b816ac49c8fa15feccfdd3a" kindref="member">interp_tm</ref>(TimeValue<sp/>t,<sp/>Matrix3<sp/>&amp;m)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1021"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix3<sp/>ntm<sp/>=<sp/><ref refid="dagor_8h_1a0ab0a5c17c8fed4cac0335e19af84ef7" kindref="member">get_scaled_stretch_node_tm</ref>(<ref refid="classMyExpTMAnimCB_1ae9af307fed577fea40d66a51bf087352" kindref="member">node</ref>,<sp/>t);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>adjwtm(ntm);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix3<sp/>ptm;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classMyExpTMAnimCB_1ac8013cfc640fd2fe96aa66617ce275ae" kindref="member">pnode</ref>)</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptm<sp/>=<sp/><ref refid="dagor_8h_1a0ab0a5c17c8fed4cac0335e19af84ef7" kindref="member">get_scaled_stretch_node_tm</ref>(<ref refid="classMyExpTMAnimCB_1ac8013cfc640fd2fe96aa66617ce275ae" kindref="member">pnode</ref>,<sp/>t);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classMyExpTMAnimCB_1ac8013cfc640fd2fe96aa66617ce275ae" kindref="member">pnode</ref>-&gt;IsRootNode())</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjwtm(ptm);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>ntm<sp/>*<sp/>Inverse(ptm);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classMyExpTMAnimCB_1ab655c1619335df9ceb3f0facf313b7db" kindref="member">origin</ref>)</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Matrix3<sp/>otm;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>otm<sp/>=<sp/><ref refid="dagor_8h_1a0ab0a5c17c8fed4cac0335e19af84ef7" kindref="member">get_scaled_stretch_node_tm</ref>(<ref refid="classMyExpTMAnimCB_1ab655c1619335df9ceb3f0facf313b7db" kindref="member">origin</ref>,<sp/>t);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjwtm(otm);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>ntm<sp/>*<sp/>Inverse(otm);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>ntm;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMyExpTMAnimCB_1ab20e90d905e37ffac44ba069818e1aad" kindref="member">non_orthog_tm</ref>(TimeValue<sp/>t)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/><ref refid="classMyExpTMAnimCB_1a0fb8951e7d32a802e8e19e8ec0ba51f0" kindref="member">nonort</ref><sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>save_pos_anim(FILE<sp/>*<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>,<sp/>Tab&lt;PosKey&gt;<sp/>&amp;k)</highlight></codeline>
<codeline lineno="1046"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>wr(p,<sp/>l)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1048"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1049"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(fwrite(p,<sp/>l,<sp/>1,<sp/>h)<sp/>!=<sp/>1)<sp/>\</highlight></codeline>
<codeline lineno="1050"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1051"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>k.Count();</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>0xFFFF)</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>num<sp/>=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;num,<sp/>2);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;k[0].<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/>12);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDagPosKey" kindref="compound">DagPosKey</ref><sp/>d;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagPosKey_1a9e253baa3d10dc693dcf43664aedf2e7" kindref="member">t</ref><sp/>=<sp/>k[i].t;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagPosKey_1ac2af4871b6af345f146444dc8adc04d3" kindref="member">p</ref><sp/>=<sp/>k[i].p;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagPosKey_1abbe789defa2d895419c259a58099629a" kindref="member">i</ref><sp/>=<sp/>k[i].i;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagPosKey_1a7af49d7332a09e5f74a8da06b7f6efe0" kindref="member">o</ref><sp/>=<sp/>k[i].o;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;d,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(d));</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>wr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>save_rot_anim(FILE<sp/>*<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>,<sp/>Tab&lt;RotKey&gt;<sp/>&amp;k)</highlight></codeline>
<codeline lineno="1077"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>wr(p,<sp/>l)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1079"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1080"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(fwrite(p,<sp/>l,<sp/>1,<sp/>h)<sp/>!=<sp/>1)<sp/>\</highlight></codeline>
<codeline lineno="1081"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1082"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>k.Count();</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>0xFFFF)</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>num<sp/>=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;num,<sp/>2);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>Quat<sp/>q<sp/>=<sp/>Conjugate(k[0].<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;q,<sp/>16);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDagRotKey" kindref="compound">DagRotKey</ref><sp/>d;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagRotKey_1a836b45de95003c2c3c432248e7d677f6" kindref="member">t</ref><sp/>=<sp/>k[i].t;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagRotKey_1aa8b06ee2591c10dfcd0907d3f50310a8" kindref="member">p</ref><sp/>=<sp/>Conjugate(k[i].<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagRotKey_1a63686c785e26af838fc04f150cd36ac7" kindref="member">i</ref><sp/>=<sp/>Conjugate(k[i].i);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagRotKey_1a9d3235752cd134a39be076c4feb30824" kindref="member">o</ref><sp/>=<sp/>Conjugate(k[i].o);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;d,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(d));</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>wr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108" refid="structExpNode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structExpNode" kindref="compound">ExpNode</ref></highlight></codeline>
<codeline lineno="1109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>Tab&lt;ExpNode<sp/>*&gt;<sp/><ref refid="structExpNode_1a14cee1ade5dd6a3e511d75bcf522a22a" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><ref refid="structExpNode" kindref="compound">ExpNode</ref><sp/>*<ref refid="structExpNode_1ab24fa98743c1cf748b3be2b58060a778" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/><ref refid="structExpNode_1aadf418392cbd46430eaeba3ff597f6b1" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><ref refid="structExpNode" kindref="compound">ExpNode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structExpNode_1ab24fa98743c1cf748b3be2b58060a778" kindref="member">parent</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><ref refid="structExpNode_1a5498444827d720e7abcccdd3d874cd61" kindref="member">~ExpNode</ref>()</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="structExpNode_1a14cee1ade5dd6a3e511d75bcf522a22a" kindref="member">child</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structExpNode_1a14cee1ade5dd6a3e511d75bcf522a22a" kindref="member">child</ref>[i])</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(<ref refid="structExpNode_1a14cee1ade5dd6a3e511d75bcf522a22a" kindref="member">child</ref>[i]);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structExpNode_1a528c7bc5d56b2c958738748e4834a851" kindref="member">add_child</ref>(<ref refid="structExpNode" kindref="compound">ExpNode</ref><sp/>*n)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structExpNode_1a14cee1ade5dd6a3e511d75bcf522a22a" kindref="member">child</ref>.Append(1,<sp/>&amp;n);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;<ref refid="structExpNode_1ab24fa98743c1cf748b3be2b58060a778" kindref="member">parent</ref><sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134" refid="structExpKeyLabel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structExpKeyLabel" kindref="compound">ExpKeyLabel</ref></highlight></codeline>
<codeline lineno="1135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/><ref refid="structExpKeyLabel_1a5cef4fb83c9a0f49cb3d4727dc63c712" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/>TimeValue<sp/><ref refid="structExpKeyLabel_1a658f63333c4b170a167ed406fbd02cb1" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140" refid="structExpNoteTrack" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structExpNoteTrack" kindref="compound">ExpNoteTrack</ref></highlight></codeline>
<codeline lineno="1141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/>Tab&lt;ExpKeyLabel&gt;<sp/><ref refid="structExpNoteTrack_1a31827c104864c59ca1919105ef1262e5" kindref="member">kl</ref>;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/>INode<sp/>*<ref refid="structExpNoteTrack_1aca4fd2209bceca907aa8805e09714508" kindref="member">node</ref>;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><ref refid="structExpNoteTrack" kindref="compound">ExpNoteTrack</ref>(INode<sp/>*n)<sp/>{<sp/><ref refid="structExpNoteTrack_1aca4fd2209bceca907aa8805e09714508" kindref="member">node</ref><sp/>=<sp/>n;<sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>int<sp/>operator<sp/>==(ExpNoteTrack<sp/>&amp;a)<sp/>{</highlight></codeline>
<codeline lineno="1147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if(kl.Count()!=a.kl.Count())<sp/>return<sp/>0;</highlight></codeline>
<codeline lineno="1148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>num=kl.Count();</highlight></codeline>
<codeline lineno="1149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;i&lt;num;++i)</highlight></codeline>
<codeline lineno="1150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(kl[i].id!=a.kl[i].id<sp/>||<sp/>kl[i].t!=a.kl[i].t)<sp/>return<sp/>0;</highlight></codeline>
<codeline lineno="1151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1;</highlight></codeline>
<codeline lineno="1152"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1abc4af7c9a5cb3f58feeab2643f6102ea" kindref="member">origin_lin_vel_node_name</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;origin_lin_vel_node_name&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1a817cb8996a10ac6b56b0730e268ba158" kindref="member">origin_ang_vel_node_name</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;origin_ang_vel_node_name&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TCHAR<sp/>filename[MAX_PATH];</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TIMER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classTimer" kindref="compound">Timer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtlElapsed<sp/>=<sp/>0.,<sp/>procAddMtl<sp/>=<sp/>0.,<sp/>dagorMatElapsed<sp/>=<sp/>0.,<sp/>dagorMatEarlyExitElapsed<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mtlCount<sp/>=<sp/>0,<sp/>procNodeCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165" refid="classExportENCB" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classExportENCB" kindref="compound">ExportENCB</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classENodeCB" kindref="compound">ENodeCB</ref></highlight></codeline>
<codeline lineno="1166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/>TimeValue<sp/><ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/>Tab&lt;INode<sp/>*&gt;<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/>Tab&lt;bool&gt;<sp/><ref refid="classExportENCB_1a212a05425275e17313a58810e69ec95c" kindref="member">nodeExp</ref>;<sp/></highlight><highlight class="comment">//<sp/>used<sp/>in<sp/>a2d<sp/>export<sp/>to<sp/>denote<sp/>nodes<sp/>that<sp/>should<sp/>be<sp/>exported;<sp/>&apos;node&apos;<sp/>contains<sp/>all<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/>Tab&lt;ExpMat&gt;<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/>std::vector&lt;std::SET_TYPE&lt;Mtl<sp/>*&gt;&gt;<sp/><ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/>Tab&lt;int&gt;<sp/><ref refid="classExportENCB_1a9798223a7ea40950b4f2f05d1e7e23fd" kindref="member">matIDtoMatIdx</ref>;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/>Tab&lt;TCHAR<sp/>*&gt;<sp/><ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/>Tab&lt;TCHAR<sp/>*&gt;<sp/><ref refid="classExportENCB_1a8bcbb5fb0fcf139c3b0fb37ff8a0942d" kindref="member">klabel</ref>;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/>Tab&lt;ExpNoteTrack<sp/>*&gt;<sp/><ref refid="classExportENCB_1a3e595643bf5f6eb98fd0ff3105328c87" kindref="member">ntrack</ref>;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1ae11b6df0abdc0946ce4f4e5805794591" kindref="member">max_pkeys</ref>,<sp/><ref refid="classExportENCB_1ad3db7127424d6cf1389a10da416ef3a7" kindref="member">max_rkeys</ref>,<sp/><ref refid="classExportENCB_1a74a42c2cf36b768eac48cf42308cc61c" kindref="member">max_skeys</ref>;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/>INode<sp/>*<ref refid="classExportENCB_1a9b89aa734b4bc0b483d362533a7fcf94" kindref="member">max_pkeys_n</ref>,<sp/>*<ref refid="classExportENCB_1a282ee8289b7875304df23fe8e7003293" kindref="member">max_rkeys_n</ref>,<sp/>*<ref refid="classExportENCB_1a7421f55dc83e6d06ddf9a815c926520f" kindref="member">max_skeys_n</ref>;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/>INodeTab<sp/><ref refid="classExportENCB_1a34eeca1eb50b92257fe7ddff0bab055a" kindref="member">nonort_nodes</ref>;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/>INode<sp/>*<ref refid="classExportENCB_1a11424e241091bee00004601c9a2d26de" kindref="member">nodeOrigin</ref>;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>INode<sp/>*<ref refid="classExportENCB_1a77aa44ec1356ee83d4127c059808f5b1" kindref="member">useIdentityTransformForNode</ref>;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a727f2b5fac19fa93ccea3c2ff888877c" kindref="member">nonort</ref>,<sp/><ref refid="classExportENCB_1a8b78ce658a6310287b03e50695ad7c3b" kindref="member">nofaces</ref>;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a205f7c37a8d7a345a547c1c90e41f934" kindref="member">hasDegenerateTriangles</ref>;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a3e3d3180776915ef242696002bfb9517" kindref="member">hasNoSmoothing</ref>;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a50db4d5bda845ec5acef359790621f97" kindref="member">hasBigMeshes</ref>;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1aa9d58fd2ad394c6815d296cad63a4abd" kindref="member">hasNonDagorMaterials</ref>;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1ad0a531b60722deba581396d9ac32423d" kindref="member">hasSubSubMaterials</ref>;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1ae53cc35aa929caffa9d3f1c7a3b56a77" kindref="member">hasAbsolutePaths</ref>;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a3526f19f614fccbe54f92f2de51a252b" kindref="member">a2dExported</ref>;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/>TCHAR<sp/>*<ref refid="classExportENCB_1a7cdc5956572388a8cb06fcf69ec88350" kindref="member">default_material</ref>;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><ref refid="classCfgShader" kindref="compound">CfgShader</ref><sp/>*<ref refid="classExportENCB_1a9727c1f96b7ebece156b0af5969392c1" kindref="member">cfg</ref>;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/><ref refid="classExportENCB_1afd715fe5459b709f9268a62a877f4fc1" kindref="member">value</ref>[<ref refid="dagfmt_8h_1a282dfcbdaafa034b352413466c4f781e" kindref="member">DAGTEXNUM</ref>];</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/><ref refid="classExportENCB_1a44b62acaa7b6dcc67dd8e42c3a46d0c7" kindref="member">tex_slot</ref>[<ref refid="dagfmt_8h_1a282dfcbdaafa034b352413466c4f781e" kindref="member">DAGTEXNUM</ref>];</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/>std::MAP_TYPE&lt;std::wstring,<sp/>StringVector&gt;<sp/><ref refid="classExportENCB_1a4184c7f6c0771d12c1d9e93fc33eb0d9" kindref="member">shaderParamsMap</ref>;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><ref refid="classExportENCB" kindref="compound">ExportENCB</ref>(TimeValue<sp/>t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>a2d)</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref><sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ae11b6df0abdc0946ce4f4e5805794591" kindref="member">max_pkeys</ref><sp/>=<sp/><ref refid="classExportENCB_1ad3db7127424d6cf1389a10da416ef3a7" kindref="member">max_rkeys</ref><sp/>=<sp/><ref refid="classExportENCB_1a74a42c2cf36b768eac48cf42308cc61c" kindref="member">max_skeys</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a9b89aa734b4bc0b483d362533a7fcf94" kindref="member">max_pkeys_n</ref><sp/>=<sp/><ref refid="classExportENCB_1a282ee8289b7875304df23fe8e7003293" kindref="member">max_rkeys_n</ref><sp/>=<sp/><ref refid="classExportENCB_1a7421f55dc83e6d06ddf9a815c926520f" kindref="member">max_skeys_n</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a727f2b5fac19fa93ccea3c2ff888877c" kindref="member">nonort</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a8b78ce658a6310287b03e50695ad7c3b" kindref="member">nofaces</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a205f7c37a8d7a345a547c1c90e41f934" kindref="member">hasDegenerateTriangles</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a3e3d3180776915ef242696002bfb9517" kindref="member">hasNoSmoothing</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a50db4d5bda845ec5acef359790621f97" kindref="member">hasBigMeshes</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1aa9d58fd2ad394c6815d296cad63a4abd" kindref="member">hasNonDagorMaterials</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ad0a531b60722deba581396d9ac32423d" kindref="member">hasSubSubMaterials</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ae53cc35aa929caffa9d3f1c7a3b56a77" kindref="member">hasAbsolutePaths</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a11424e241091bee00004601c9a2d26de" kindref="member">nodeOrigin</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(__cplusplus<sp/>&gt;=<sp/>201100L)<sp/>||<sp/>(defined(_MSVC_LANG)<sp/>&amp;&amp;<sp/>_MSVC_LANG<sp/>&gt;=<sp/>201100L)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a77aa44ec1356ee83d4127c059808f5b1" kindref="member">useIdentityTransformForNode</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a77aa44ec1356ee83d4127c059808f5b1" kindref="member">useIdentityTransformForNode</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a3526f19f614fccbe54f92f2de51a252b" kindref="member">a2dExported</ref><sp/>=<sp/>a2d;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a7cdc5956572388a8cb06fcf69ec88350" kindref="member">default_material</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCfgShader_1af916040330d237b1f39f398aee636be5" kindref="member">CfgShader::GetCfgFilename</ref>(_T(</highlight><highlight class="stringliteral">&quot;DagorShaders.cfg&quot;</highlight><highlight class="normal">),<sp/>filename);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a9727c1f96b7ebece156b0af5969392c1" kindref="member">cfg</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classCfgShader" kindref="compound">CfgShader</ref>(filename);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a9727c1f96b7ebece156b0af5969392c1" kindref="member">cfg</ref>-&gt;<ref refid="classCfgShader_1a367f84d7b6bf1139f5e5d3fd05603c97" kindref="member">GetSettingsParams</ref>();</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="dagfmt_8h_1a282dfcbdaafa034b352413466c4f781e" kindref="member">DAGTEXNUM</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="classExportENCB_1a9727c1f96b7ebece156b0af5969392c1" kindref="member">cfg</ref>-&gt;<ref refid="classCfgShader_1a28238933d02d50ee18f20b32ceaccc16" kindref="member">settings_params</ref>.size())</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1afd715fe5459b709f9268a62a877f4fc1" kindref="member">value</ref>[i]<sp/>=<sp/><ref refid="classExportENCB_1a9727c1f96b7ebece156b0af5969392c1" kindref="member">cfg</ref>-&gt;<ref refid="classCfgShader_1a56390a01b587cb4c94a8eeaebe7c02e9" kindref="member">GetParamValue</ref>(<ref refid="cfg_8h_1a0a8c6d6836bb49bddee5ed0a742b8fd9" kindref="member">CFG_SETTINGS_NAME</ref>,<sp/><ref refid="classExportENCB_1a9727c1f96b7ebece156b0af5969392c1" kindref="member">cfg</ref>-&gt;<ref refid="classCfgShader_1a28238933d02d50ee18f20b32ceaccc16" kindref="member">settings_params</ref>.at(i));</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a44b62acaa7b6dcc67dd8e42c3a46d0c7" kindref="member">tex_slot</ref>[i]<sp/>=<sp/><ref refid="classExportENCB_1a9727c1f96b7ebece156b0af5969392c1" kindref="member">cfg</ref>-&gt;<ref refid="classCfgShader_1a28238933d02d50ee18f20b32ceaccc16" kindref="member">settings_params</ref>.at(i);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><ref refid="classExportENCB_1a96b35528b35164433114a7a585d9b053" kindref="member">~ExportENCB</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1232"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a9727c1f96b7ebece156b0af5969392c1" kindref="member">cfg</ref>;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].name)</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].name);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].classname)</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].classname);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].script)</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].script);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>[i])</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>[i]);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1a8bcbb5fb0fcf139c3b0fb37ff8a0942d" kindref="member">klabel</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a8bcbb5fb0fcf139c3b0fb37ff8a0942d" kindref="member">klabel</ref>[i])</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="classExportENCB_1a8bcbb5fb0fcf139c3b0fb37ff8a0942d" kindref="member">klabel</ref>[i]);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1a3e595643bf5f6eb98fd0ff3105328c87" kindref="member">ntrack</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a3e595643bf5f6eb98fd0ff3105328c87" kindref="member">ntrack</ref>[i])</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a3e595643bf5f6eb98fd0ff3105328c87" kindref="member">ntrack</ref>[i]);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a0fb4f90f9405b54ccee1d1598ccd6379" kindref="member">add_klabel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*n)</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DebugPrint(&quot;add_klabel<sp/>&lt;%s&gt;\n&quot;,n);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n[0])</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1a8bcbb5fb0fcf139c3b0fb37ff8a0942d" kindref="member">klabel</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_tcsicmp(<ref refid="classExportENCB_1a8bcbb5fb0fcf139c3b0fb37ff8a0942d" kindref="member">klabel</ref>[i],<sp/>n)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="classExportENCB_1a8bcbb5fb0fcf139c3b0fb37ff8a0942d" kindref="member">klabel</ref>.Count()<sp/>!=<sp/>0xFFFF);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a8bcbb5fb0fcf139c3b0fb37ff8a0942d" kindref="member">klabel</ref>.Count()<sp/>&gt;=<sp/>0xFFFF)</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/>*s<sp/>=<sp/>_tcsdup(n);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(s);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a8bcbb5fb0fcf139c3b0fb37ff8a0942d" kindref="member">klabel</ref>.Append(1,<sp/>&amp;s);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DebugPrint(&quot;<sp/><sp/>added<sp/>%d\n&quot;,klabel.Count());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a8bcbb5fb0fcf139c3b0fb37ff8a0942d" kindref="member">klabel</ref>.Count()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a1e0c215b2aa0c1bcdcc7486b457de137" kindref="member">get_notetrack</ref>(INode<sp/>*n,<sp/>Tab&lt;TimeValue&gt;<sp/>&amp;gk)</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DebugPrint(&quot;get_notetrk<sp/>for<sp/>&lt;%s&gt;\n&quot;,n-&gt;GetName());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>n;<sp/>n<sp/>=<sp/>n-&gt;GetParentNode())</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1a3e595643bf5f6eb98fd0ff3105328c87" kindref="member">ntrack</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a3e595643bf5f6eb98fd0ff3105328c87" kindref="member">ntrack</ref>[i]-&gt;<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref><sp/>==<sp/>n)</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;HasNoteTracks())</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DebugPrint(&quot;notetrk<sp/>of<sp/>&lt;%s&gt;\n&quot;,n-&gt;GetName());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>n-&gt;NumNoteTracks();</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ti<sp/>=<sp/>0;<sp/>ti<sp/>&lt;<sp/>num;<sp/>++ti)</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DefNoteTrack<sp/>*nt<sp/>=<sp/>(DefNoteTrack<sp/>*)n-&gt;GetNoteTrack(ti);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nt)</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DebugPrint(&quot;notetrk<sp/>%d/%d\n&quot;,ti+1,num);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nt-&gt;keys.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gk.Append(1,<sp/>&amp;nt-&gt;keys[i]-&gt;time);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nt-&gt;keys[i]-&gt;note.length())</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="classExportENCB_1a3e595643bf5f6eb98fd0ff3105328c87" kindref="member">ntrack</ref>.Count()<sp/>!=<sp/>0xFFFF);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classExportENCB_1a3e595643bf5f6eb98fd0ff3105328c87" kindref="member">ntrack</ref>.Count();</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structExpNoteTrack" kindref="compound">ExpNoteTrack</ref><sp/>*tr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structExpNoteTrack" kindref="compound">ExpNoteTrack</ref>(n);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(tr);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a3e595643bf5f6eb98fd0ff3105328c87" kindref="member">ntrack</ref>.Append(1,<sp/>&amp;tr);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structExpKeyLabel" kindref="compound">ExpKeyLabel</ref><sp/>k;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k.<ref refid="structExpKeyLabel_1a658f63333c4b170a167ed406fbd02cb1" kindref="member">t</ref><sp/>=<sp/>nt-&gt;keys[i]-&gt;time;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k.<ref refid="structExpKeyLabel_1a5cef4fb83c9a0f49cb3d4727dc63c712" kindref="member">id</ref><sp/>=<sp/><ref refid="classExportENCB_1a0fb4f90f9405b54ccee1d1598ccd6379" kindref="member">add_klabel</ref>(nt-&gt;keys[i]-&gt;note);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DebugPrint(&quot;notekey[%d]<sp/>at<sp/>%d<sp/>&lt;%s&gt;<sp/>(%d)\n&quot;,i,k.t,(char*)nt-&gt;keys[i]-&gt;note,k.id);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a3e595643bf5f6eb98fd0ff3105328c87" kindref="member">ntrack</ref>[id]-&gt;kl.Append(1,<sp/>&amp;k);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(id==ntrack.Count()-1)<sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;i&lt;id;++i)<sp/>if(*ntrack[i]==*ntrack[id])<sp/>{</highlight></codeline>
<codeline lineno="1323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete(ntrack[id]);</highlight></codeline>
<codeline lineno="1324"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ntrack.Delete(id,1);</highlight></codeline>
<codeline lineno="1325"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>i;</highlight></codeline>
<codeline lineno="1326"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1328"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a9e90122e9198f525dac799be3af23e19" kindref="member">add_tex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*fn)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fn)</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fn[0])</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_tcsicmp(<ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>[i],<sp/>fn)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>.Count()<sp/>!=<sp/>0xFFFF);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>.Count()<sp/>&gt;=<sp/>0xFFFF)</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/>*s<sp/>=<sp/>_tcsdup(fn);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(s);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>.Append(1,<sp/>&amp;s);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>.Count()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a7dd8e805ea22c6e78900cc7e64efa4ba" kindref="member">doesScriptMatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*b)</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_UNICODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>std::wstring<sp/>propsa(a),<sp/>propsb(b);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>prop[512];</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>propsa(a),<sp/>propsb(b);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>prop[512];</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(propsa.length()<sp/>!=<sp/>propsb.length())</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>No<sp/>need<sp/>to<sp/>check<sp/>b<sp/>entries<sp/>against<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0,<sp/>prevPos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>propsa.find(_T(</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">),<sp/>pos);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pos<sp/>!=<sp/>propsa.npos)</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>propsa.copy(prop,<sp/>pos<sp/>-<sp/>prevPos,<sp/>prevPos);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prop[pos<sp/>-<sp/>prevPos]<sp/>=<sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>posB<sp/>=<sp/>propsb.find(prop);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(posB<sp/>==<sp/>propsa.npos)</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&lt;<sp/>propsa.length()<sp/>-<sp/>2)</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>-<sp/>prevPos<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prevPos<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>propsa.find(_T(</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">),<sp/>pos);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&lt;<sp/>propsa.length())</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>propsa.copy(prop,<sp/>propsa.length()<sp/>-<sp/>pos,<sp/>pos);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prop[propsa.length()<sp/>-<sp/>pos]<sp/>=<sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>posB<sp/>=<sp/>propsb.find(prop);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(posB<sp/>==<sp/>propsa.npos)</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1aa93cd7ec686482d3bd51a3638c03722d" kindref="member">add_mtl</ref>(INode<sp/>*<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>,<sp/>Mtl<sp/>*mtl,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subm<sp/>=<sp/>0,<sp/>DWORD<sp/>wirecolor<sp/>=<sp/>0xFFFFFF)</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TIMER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>++mtlCount;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mtl)</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].mtl<sp/>==<sp/>NULL<sp/>||<sp/><ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>[i].empty())<sp/>&amp;&amp;<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].wirecolor<sp/>==<sp/>wirecolor)</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count()<sp/>!=<sp/>0xFFFF);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count()<sp/>&gt;=<sp/>0xFFFF)</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structExpMat" kindref="compound">ExpMat</ref><sp/>e;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1af2c43c9d53a6cf2436ce87d1386ffc14" kindref="member">flags</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1ab63bfefe2371112bcec61c458567fc97" kindref="member">mtl</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1ab5f5403edfbf996a3c74ba14fafcd655" kindref="member">wirecolor</ref><sp/>=<sp/>wirecolor;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1a05b84552c4d9c66cc4261aef9c5a2527" kindref="member">amb</ref><sp/>=<sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1ade0995b87a7c30f2e6f58551a631cd8d" kindref="member">diff</ref><sp/>=<sp/>Color(wirecolor);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1ae4d320fd5dc658247d0392e4b9bb8c0e" kindref="member">spec</ref><sp/>=<sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1a7053dfde42a85aea927cd9a63b6a8f6b" kindref="member">emis</ref><sp/>=<sp/>Color(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1aba09a83825d6d2e79bc5107f04735c96" kindref="member">power</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="dagfmt_8h_1a282dfcbdaafa034b352413466c4f781e" kindref="member">DAGTEXNUM</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1a8a278ea7d627dc6b5f710060e5ce3f52" kindref="member">texid</ref>[i]<sp/>=<sp/><ref refid="dagfmt_8h_1a58387a5ae7b7d5e8b0d03c90583a338e" kindref="member">DAGBADMATID</ref>;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a973bab825f4f63bcaf37dfcfdd006b6b" kindref="member">name</ref><sp/>=<sp/><ref refid="classExportENCB_1a99c926346ff8b0c687ad2778619bbee3" kindref="member">validateMatName</ref>(e.<ref refid="structExpMat_1a973bab825f4f63bcaf37dfcfdd006b6b" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Append(1,<sp/>&amp;e);</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>.push_back(std::SET_TYPE&lt;Mtl<sp/>*&gt;());</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>mtl-&gt;NumSubMtls();</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num)</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subm)</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T(</highlight><highlight class="stringliteral">&quot;&apos;%s&apos;<sp/>has<sp/>Multi/Sub-Object<sp/>material<sp/>&apos;%s&apos;<sp/>in<sp/>Multi/Sub-Object<sp/>material\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>-&gt;GetName(),<sp/>mtl-&gt;GetName());</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ad0a531b60722deba581396d9ac32423d" kindref="member">hasSubSubMaterials</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1aa93cd7ec686482d3bd51a3638c03722d" kindref="member">add_mtl</ref>(<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>,<sp/>mtl-&gt;GetSubMtl(i),<sp/>1);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a5a21ec59d9eb9ce715ded30627ef662c" kindref="member">INTERVAL</ref>(</highlight><highlight class="stringliteral">&quot;DagorMatEarlyExit&quot;</highlight><highlight class="normal">,<sp/>dagorMatEarlyExitElapsed,<sp/><ref refid="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301ac4fd1ef4041f00039def6df0331841de" kindref="member">TimerIntervalType::ACC</ref>);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].mtl<sp/>==<sp/>mtl)</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>[i].insert(mtl);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>Class_ID<sp/>cid<sp/>=<sp/>mtl-&gt;ClassID();</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid<sp/>==<sp/>Class_ID(DMTL_CLASS_ID,<sp/>0))</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a5a21ec59d9eb9ce715ded30627ef662c" kindref="member">INTERVAL</ref>(</highlight><highlight class="stringliteral">&quot;DagorMat&quot;</highlight><highlight class="normal">,<sp/>dagorMatElapsed,<sp/><ref refid="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301ae927adbf288d9abd51aabe2af4acc026" kindref="member">TimerIntervalType::GATHER</ref>);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T(</highlight><highlight class="stringliteral">&quot;&apos;%s&apos;<sp/>has<sp/>standard<sp/>material<sp/>&apos;%s&apos;\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>-&gt;GetName(),<sp/>mtl-&gt;GetName());</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1aa9d58fd2ad394c6815d296cad63a4abd" kindref="member">hasNonDagorMaterials</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count()<sp/>!=<sp/>0xFFFF);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count()<sp/>&gt;=<sp/>0xFFFF)</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StdMat<sp/>*m<sp/>=<sp/>(StdMat<sp/>*)mtl;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structExpMat" kindref="compound">ExpMat</ref><sp/>e;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1af2c43c9d53a6cf2436ce87d1386ffc14" kindref="member">flags</ref><sp/>=<sp/><ref refid="dagfmt_8h_1a3068a5b72fff6b6bf5073c5579cbe165" kindref="member">DAG_MF_16TEX</ref>;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1ab63bfefe2371112bcec61c458567fc97" kindref="member">mtl</ref><sp/>=<sp/>mtl;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;GetTwoSided())</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1af2c43c9d53a6cf2436ce87d1386ffc14" kindref="member">flags</ref><sp/>|=<sp/><ref refid="dagfmt_8h_1a57c22b5e490e806168b189dda7ea961d" kindref="member">DAG_MF_2SIDED</ref>;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>si<sp/>=<sp/>m-&gt;GetSelfIllum(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1a05b84552c4d9c66cc4261aef9c5a2527" kindref="member">amb</ref><sp/>=<sp/>m-&gt;GetAmbient(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>)<sp/>*<sp/>(1<sp/>-<sp/>si);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1ade0995b87a7c30f2e6f58551a631cd8d" kindref="member">diff</ref><sp/>=<sp/>m-&gt;GetDiffuse(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>)<sp/>*<sp/>(1<sp/>-<sp/>si);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1ae4d320fd5dc658247d0392e4b9bb8c0e" kindref="member">spec</ref><sp/>=<sp/>m-&gt;GetSpecular(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>)<sp/>*<sp/>m-&gt;GetShinStr(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1a7053dfde42a85aea927cd9a63b6a8f6b" kindref="member">emis</ref><sp/>=<sp/>m-&gt;GetDiffuse(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>)<sp/>*<sp/>si;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1aba09a83825d6d2e79bc5107f04735c96" kindref="member">power</ref><sp/>=<sp/>powf(2.0f,<sp/>m-&gt;GetShininess(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>)<sp/>*<sp/>10.0f)<sp/>*<sp/>4.0f;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a973bab825f4f63bcaf37dfcfdd006b6b" kindref="member">name</ref><sp/>=<sp/>_tcsdup(mtl-&gt;GetName());</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1ab5f5403edfbf996a3c74ba14fafcd655" kindref="member">wirecolor</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="dagfmt_8h_1a282dfcbdaafa034b352413466c4f781e" kindref="member">DAGTEXNUM</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1a8a278ea7d627dc6b5f710060e5ce3f52" kindref="member">texid</ref>[i]<sp/>=<sp/><ref refid="dagfmt_8h_1a58387a5ae7b7d5e8b0d03c90583a338e" kindref="member">DAGBADMATID</ref>;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Texmap<sp/>*<ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref><sp/>=<sp/>m-&gt;GetSubTexmap(ID_DI);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>)</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>-&gt;ClassID()<sp/>==<sp/>Class_ID(BMTEX_CLASS_ID,<sp/>0))</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BitmapTex<sp/>*b<sp/>=<sp/>(BitmapTex<sp/>*)<ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1a8a278ea7d627dc6b5f710060e5ce3f52" kindref="member">texid</ref>[0]<sp/>=<sp/><ref refid="classExportENCB_1a9e90122e9198f525dac799be3af23e19" kindref="member">add_tex</ref>(<ref refid="classExportENCB_1ab1549f0686ca5197b59443ed1679ac22" kindref="member">makeCheckedRelPath</ref>(<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>,<sp/>mtl,<sp/>b-&gt;GetMapName()));</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1a8a278ea7d627dc6b5f710060e5ce3f52" kindref="member">texid</ref>[0]<sp/>!=<sp/><ref refid="dagfmt_8h_1a58387a5ae7b7d5e8b0d03c90583a338e" kindref="member">DAGBADMATID</ref>)</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1a05b84552c4d9c66cc4261aef9c5a2527" kindref="member">amb</ref><sp/>=<sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1ade0995b87a7c30f2e6f58551a631cd8d" kindref="member">diff</ref><sp/>=<sp/>Color(1,<sp/>1,<sp/>1)<sp/>*<sp/>(1<sp/>-<sp/>si);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1a7053dfde42a85aea927cd9a63b6a8f6b" kindref="member">emis</ref><sp/>=<sp/>Color(1,<sp/>1,<sp/>1)<sp/>*<sp/>si;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1aabb16a5318105044271b390d1df6641f" kindref="member">classname</ref><sp/>=<sp/>_tcsdup(_T(</highlight><highlight class="stringliteral">&quot;simple&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a64a3d7c187e5632f0b78781b26014e9c" kindref="member">script</ref><sp/>=<sp/>_tcsdup(_T(</highlight><highlight class="stringliteral">&quot;lighting=vltmap&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a973bab825f4f63bcaf37dfcfdd006b6b" kindref="member">name</ref><sp/>=<sp/><ref refid="classExportENCB_1a99c926346ff8b0c687ad2778619bbee3" kindref="member">validateMatName</ref>(e.<ref refid="structExpMat_1a973bab825f4f63bcaf37dfcfdd006b6b" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].mtl<sp/>==<sp/>mtl<sp/>||<sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].m<sp/>==<sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref><sp/>&amp;&amp;<sp/>(<ref refid="classExportENCB_1a99a68d83e7d40d62c6b9a2e29a2a52d5" kindref="member">useMOpt</ref>()<sp/>||<sp/>!_tcscmp(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].name,<sp/>e.<ref refid="structExpMat_1a973bab825f4f63bcaf37dfcfdd006b6b" kindref="member">name</ref>))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!_tcscmp(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].classname,<sp/>e.<ref refid="structExpMat_1aabb16a5318105044271b390d1df6641f" kindref="member">classname</ref>)<sp/>&amp;&amp;<sp/><ref refid="classExportENCB_1a7dd8e805ea22c6e78900cc7e64efa4ba" kindref="member">doesScriptMatch</ref>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].script,<sp/>e.<ref refid="structExpMat_1a64a3d7c187e5632f0b78781b26014e9c" kindref="member">script</ref>)))</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>[i].insert(mtl);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>.push_back(std::SET_TYPE&lt;Mtl<sp/>*&gt;());</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>.back().insert(mtl);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Append(1,<sp/>&amp;e);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid<sp/>==<sp/><ref refid="dagor_8h_1a9ead658a52f6878a9360e47eea9322e2" kindref="member">DagorMat_CID</ref><sp/>||<sp/>cid<sp/>==<sp/><ref refid="dagor_8h_1aaa6ea09f471b5e57f5b69b9996227c66" kindref="member">DagorMat2_CID</ref>)</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a5a21ec59d9eb9ce715ded30627ef662c" kindref="member">INTERVAL</ref>(</highlight><highlight class="stringliteral">&quot;DagorMat&quot;</highlight><highlight class="normal">,<sp/>dagorMatElapsed,<sp/><ref refid="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301ae927adbf288d9abd51aabe2af4acc026" kindref="member">TimerIntervalType::GATHER</ref>);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count()<sp/>!=<sp/>0xFFFF);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count()<sp/>&gt;=<sp/>0xFFFF)</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIDagorMat" kindref="compound">IDagorMat</ref><sp/>*m<sp/>=<sp/>(<ref refid="classIDagorMat" kindref="compound">IDagorMat</ref><sp/>*)mtl-&gt;GetInterface(<ref refid="mater_8h_1a36dcaa0c637134b05278e83da132935e" kindref="member">I_DAGORMAT</ref>);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(m);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structExpMat" kindref="compound">ExpMat</ref><sp/>e;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1af2c43c9d53a6cf2436ce87d1386ffc14" kindref="member">flags</ref><sp/>=<sp/><ref refid="dagfmt_8h_1a3068a5b72fff6b6bf5073c5579cbe165" kindref="member">DAG_MF_16TEX</ref>;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1ab63bfefe2371112bcec61c458567fc97" kindref="member">mtl</ref><sp/>=<sp/>mtl;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="classIDagorMat_1a8d93be97a06dcd377a24e9fa47055d13" kindref="member">get_2sided</ref>()<sp/>==<sp/><ref refid="classIDagorMat_1aa9e1f9b3ca95a6715f15fe27fbfa732aa54c65daef485e12e23c450d276053134" kindref="member">IDagorMat::Sides::DoubleSided</ref>)</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1af2c43c9d53a6cf2436ce87d1386ffc14" kindref="member">flags</ref><sp/>|=<sp/><ref refid="dagfmt_8h_1a57c22b5e490e806168b189dda7ea961d" kindref="member">DAG_MF_2SIDED</ref>;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1a05b84552c4d9c66cc4261aef9c5a2527" kindref="member">amb</ref><sp/>=<sp/>m-&gt;<ref refid="classIDagorMat_1a87ba4f21930b96625725ef197be7f358" kindref="member">get_amb</ref>();</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1ade0995b87a7c30f2e6f58551a631cd8d" kindref="member">diff</ref><sp/>=<sp/>m-&gt;<ref refid="classIDagorMat_1a619315422c7471fc3865590e4f288d48" kindref="member">get_diff</ref>();</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1ae4d320fd5dc658247d0392e4b9bb8c0e" kindref="member">spec</ref><sp/>=<sp/>m-&gt;<ref refid="classIDagorMat_1a7bd1940bef3e2436cf26e447e1cbf693" kindref="member">get_spec</ref>();</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1a7053dfde42a85aea927cd9a63b6a8f6b" kindref="member">emis</ref><sp/>=<sp/>m-&gt;<ref refid="classIDagorMat_1a1b3ec43de86ca25d121b61b2ec38d7e4" kindref="member">get_emis</ref>();</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1aba09a83825d6d2e79bc5107f04735c96" kindref="member">power</ref><sp/>=<sp/>m-&gt;<ref refid="classIDagorMat_1a915c33b5c5b998e4cb05bebb3770543f" kindref="member">get_power</ref>();</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1aabb16a5318105044271b390d1df6641f" kindref="member">classname</ref><sp/>=<sp/>_tcsdup(m-&gt;<ref refid="classIDagorMat_1a41d2a95db7399aa0a504416e5a300c65" kindref="member">get_classname</ref>());</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(e.<ref refid="structExpMat_1aabb16a5318105044271b390d1df6641f" kindref="member">classname</ref>);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a64a3d7c187e5632f0b78781b26014e9c" kindref="member">script</ref><sp/>=<sp/>_tcsdup(m-&gt;<ref refid="classIDagorMat_1ac93f0f9f28724d6ab4ddc83319888a88" kindref="member">get_script</ref>());</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(e.<ref refid="structExpMat_1a64a3d7c187e5632f0b78781b26014e9c" kindref="member">script</ref>);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a973bab825f4f63bcaf37dfcfdd006b6b" kindref="member">name</ref><sp/>=<sp/>_tcsdup(mtl-&gt;GetName());</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1ab5f5403edfbf996a3c74ba14fafcd655" kindref="member">wirecolor</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="dagfmt_8h_1a282dfcbdaafa034b352413466c4f781e" kindref="member">DAGTEXNUM</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="classExportENCB_1a9727c1f96b7ebece156b0af5969392c1" kindref="member">cfg</ref>-&gt;<ref refid="classCfgShader_1a28238933d02d50ee18f20b32ceaccc16" kindref="member">settings_params</ref>.size())</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1a8a278ea7d627dc6b5f710060e5ce3f52" kindref="member">texid</ref>[i]<sp/>=<sp/><ref refid="dagfmt_8h_1a58387a5ae7b7d5e8b0d03c90583a338e" kindref="member">DAGBADMATID</ref>;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1aac8fc27342213a2c8f99bf3ed5a11a2a" kindref="member">M_STD_STRING</ref><sp/><ref refid="classExportENCB_1afd715fe5459b709f9268a62a877f4fc1" kindref="member">value</ref><sp/>=<sp/>this-&gt;value[i];</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_tcslen(e.<ref refid="structExpMat_1aabb16a5318105044271b390d1df6641f" kindref="member">classname</ref>))</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::wstring<sp/>className<sp/>=<sp/>e.<ref refid="structExpMat_1aabb16a5318105044271b390d1df6641f" kindref="member">classname</ref>;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="classExportENCB_1a4184c7f6c0771d12c1d9e93fc33eb0d9" kindref="member">shaderParamsMap</ref>.find(className);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfg_8h_1ae5ef8cc5d6614eca03380f7efa3eaea5" kindref="member">StringVector</ref><sp/>*shaderParams;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="classExportENCB_1a4184c7f6c0771d12c1d9e93fc33eb0d9" kindref="member">shaderParamsMap</ref>.end())</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a9727c1f96b7ebece156b0af5969392c1" kindref="member">cfg</ref>-&gt;<ref refid="classCfgShader_1a26a5264aa69fd5f2fede935ed589800d" kindref="member">GetShaderParams</ref>(e.<ref refid="structExpMat_1aabb16a5318105044271b390d1df6641f" kindref="member">classname</ref>);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shaderParams<sp/>=<sp/>&amp;<ref refid="classExportENCB_1a9727c1f96b7ebece156b0af5969392c1" kindref="member">cfg</ref>-&gt;<ref refid="classCfgShader_1a8e6eedaba432f0f7ec6584cab98e9c53" kindref="member">shader_params</ref>;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shaderParams<sp/>=<sp/>&amp;it-&gt;second;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>shaderParams-&gt;size();<sp/>++j)</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shaderParams-&gt;at(j)<sp/>==<sp/><ref refid="classExportENCB_1a44b62acaa7b6dcc67dd8e42c3a46d0c7" kindref="member">tex_slot</ref>[i])</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1afd715fe5459b709f9268a62a877f4fc1" kindref="member">value</ref><sp/>=<sp/><ref refid="classExportENCB_1a9727c1f96b7ebece156b0af5969392c1" kindref="member">cfg</ref>-&gt;<ref refid="classCfgShader_1a56390a01b587cb4c94a8eeaebe7c02e9" kindref="member">GetParamValue</ref>(e.<ref refid="structExpMat_1aabb16a5318105044271b390d1df6641f" kindref="member">classname</ref>,<sp/><ref refid="classExportENCB_1a44b62acaa7b6dcc67dd8e42c3a46d0c7" kindref="member">tex_slot</ref>[i].c_str());</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref>.<ref refid="structDagMater_1a8a278ea7d627dc6b5f710060e5ce3f52" kindref="member">texid</ref>[i]<sp/>=<sp/>(<ref refid="classExportENCB_1afd715fe5459b709f9268a62a877f4fc1" kindref="member">value</ref><sp/>==<sp/>_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))<sp/>?<sp/><ref refid="dagfmt_8h_1a58387a5ae7b7d5e8b0d03c90583a338e" kindref="member">DAGBADMATID</ref><sp/>:<sp/><ref refid="classExportENCB_1a9e90122e9198f525dac799be3af23e19" kindref="member">add_tex</ref>(<ref refid="classExportENCB_1ab1549f0686ca5197b59443ed1679ac22" kindref="member">makeCheckedRelPath</ref>(<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>,<sp/>mtl,<sp/>m-&gt;<ref refid="classIDagorMat_1a26c96873fd833ac5cee96482b6f99383" kindref="member">get_texname</ref>(i)));</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mtl-&gt;ReleaseInterface(<ref refid="mater_8h_1a36dcaa0c637134b05278e83da132935e" kindref="member">I_DAGORMAT</ref>,<sp/>m);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structExpMat_1a973bab825f4f63bcaf37dfcfdd006b6b" kindref="member">name</ref><sp/>=<sp/><ref refid="classExportENCB_1a99c926346ff8b0c687ad2778619bbee3" kindref="member">validateMatName</ref>(e.<ref refid="structExpMat_1a973bab825f4f63bcaf37dfcfdd006b6b" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].mtl<sp/>==<sp/>mtl<sp/>||<sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].m<sp/>==<sp/>e.<ref refid="structExpMat_1a9292d88eb67e9e21419fa8a3729d6d93" kindref="member">m</ref><sp/>&amp;&amp;<sp/>(<ref refid="classExportENCB_1a99a68d83e7d40d62c6b9a2e29a2a52d5" kindref="member">useMOpt</ref>()<sp/>||<sp/>!_tcscmp(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].name,<sp/>e.<ref refid="structExpMat_1a973bab825f4f63bcaf37dfcfdd006b6b" kindref="member">name</ref>))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!_tcscmp(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].classname,<sp/>e.<ref refid="structExpMat_1aabb16a5318105044271b390d1df6641f" kindref="member">classname</ref>)<sp/>&amp;&amp;<sp/><ref refid="classExportENCB_1a7dd8e805ea22c6e78900cc7e64efa4ba" kindref="member">doesScriptMatch</ref>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].script,<sp/>e.<ref refid="structExpMat_1a64a3d7c187e5632f0b78781b26014e9c" kindref="member">script</ref>)))</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>[i].insert(mtl);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>.push_back(std::SET_TYPE&lt;Mtl<sp/>*&gt;());</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>.back().insert(mtl);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Append(1,<sp/>&amp;e);</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T(</highlight><highlight class="stringliteral">&quot;&apos;%s&apos;<sp/>has<sp/>material<sp/>&apos;%s&apos;<sp/>of<sp/>unknown<sp/>type\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>-&gt;GetName(),<sp/>mtl-&gt;GetName());</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1aa9d58fd2ad394c6815d296cad63a4abd" kindref="member">hasNonDagorMaterials</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/>TCHAR<sp/>*<ref refid="classExportENCB_1a99c926346ff8b0c687ad2778619bbee3" kindref="member">validateMatName</ref>(TCHAR<sp/>*mat_name)</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/>DebugPrint(_T(</highlight><highlight class="stringliteral">&quot;validateMatName<sp/>&lt;%s&gt;&quot;</highlight><highlight class="normal">),<sp/>mat_name);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat_name<sp/>&amp;&amp;<sp/>*mat_name)</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat_name;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/>buf[64];</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat_name)</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(mat_name);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;autoNamedMat_%d&quot;</highlight><highlight class="normal">),<sp/>name_idx);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count();<sp/>i++)</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_tcscmp(buf,<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].name)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tcsdup(buf);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name_idx++;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a727d0043d1b0ca8432e492868ef29631" kindref="member">proc</ref>(INode<sp/>*n)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1606"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_tcsicmp(n-&gt;GetName(),<sp/>_T(</highlight><highlight class="stringliteral">&quot;ORIGIN&quot;</highlight><highlight class="normal">))<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cac93b52a68dc3b54c1ad6d4f92faa7cb8" kindref="member">EXP_SEL</ref>)<sp/>&amp;&amp;<sp/>!n-&gt;Selected())</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;skip<sp/>non-selected<sp/>origin\r\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca6b7267d63b63440a7aa60ef3a099e71b" kindref="member">EXP_HID</ref>)<sp/>&amp;&amp;<sp/>n-&gt;IsNodeHidden())</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;skip<sp/>hidden<sp/>origin\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classExportENCB_1a11424e241091bee00004601c9a2d26de" kindref="member">nodeOrigin</ref>)</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;found<sp/>origin<sp/>node\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;duplicate<sp/>origin<sp/>node<sp/>found,<sp/>use<sp/>last\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a11424e241091bee00004601c9a2d26de" kindref="member">nodeOrigin</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>export<sp/>origin<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a3526f19f614fccbe54f92f2de51a252b" kindref="member">a2dExported</ref>)</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vis<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca6b7267d63b63440a7aa60ef3a099e71b" kindref="member">EXP_HID</ref>))</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;IsNodeHidden())</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vis<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cac93b52a68dc3b54c1ad6d4f92faa7cb8" kindref="member">EXP_SEL</ref>)</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n-&gt;Selected())</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vis<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="classExportENCB_1a212a05425275e17313a58810e69ec95c" kindref="member">nodeExp</ref>.Count()<sp/>!=<sp/>0xFFFF);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a212a05425275e17313a58810e69ec95c" kindref="member">nodeExp</ref>.Append(1,<sp/>&amp;vis);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca6b7267d63b63440a7aa60ef3a099e71b" kindref="member">EXP_HID</ref>))</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;IsNodeHidden())</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(n-&gt;GetVisibility(time)&lt;0)<sp/>return<sp/>ECB_CONT;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cac93b52a68dc3b54c1ad6d4f92faa7cb8" kindref="member">EXP_SEL</ref>)</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n-&gt;Selected())</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a5a21ec59d9eb9ce715ded30627ef662c" kindref="member">INTERVAL</ref>(</highlight><highlight class="stringliteral">&quot;add_mtl&quot;</highlight><highlight class="normal">,<sp/>mtlElapsed,<sp/><ref refid="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301ac4fd1ef4041f00039def6df0331841de" kindref="member">TimerIntervalType::ACC</ref>);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TIMER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++procNodeCount;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06caf81ae9ea1446789418685c688c161a40" kindref="member">EXP_MAT</ref>)<sp/>&amp;&amp;<sp/>!(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cac69eb6cee48db816e89b55bf744b32ea" kindref="member">EXP_OBJECTS</ref>))</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a5a21ec59d9eb9ce715ded30627ef662c" kindref="member">INTERVAL</ref>(</highlight><highlight class="stringliteral">&quot;proc<sp/>add_mtl&quot;</highlight><highlight class="normal">,<sp/>procAddMtl,<sp/><ref refid="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301ac4fd1ef4041f00039def6df0331841de" kindref="member">TimerIntervalType::ACC</ref>);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1aa93cd7ec686482d3bd51a3638c03722d" kindref="member">add_mtl</ref>(n,<sp/>n-&gt;GetMtl(),<sp/>0,<sp/>n-&gt;GetWireColor());</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cac69eb6cee48db816e89b55bf744b32ea" kindref="member">EXP_OBJECTS</ref>))</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OutputDebugString(n-&gt;GetName());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OutputDebugString(&quot;\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Object<sp/>*obj<sp/>=<sp/>n-&gt;EvalWorldState(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>).obj;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj)</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SClass_ID<sp/>scid<sp/>=<sp/>obj-&gt;SuperClassID();</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Class_ID<sp/>cid<sp/>=<sp/>obj-&gt;ClassID();</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scid<sp/>==<sp/>GEOMOBJECT_CLASS_ID<sp/>&amp;&amp;<sp/>cid<sp/>==<sp/>Class_ID(TARGET_CLASS_ID,<sp/>0)<sp/>&amp;&amp;<sp/>!(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca8f58f8ccc99b7a781b3eed35ada98b40" kindref="member">EXP_CAM</ref>))</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid<sp/>==<sp/><ref refid="dagor_8h_1a3c99c6cc99ba27ff7f869c2901da2733" kindref="member">Dummy_CID</ref>)</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scid<sp/>==<sp/>LIGHT_CLASS_ID)</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06caff2dc62d0636cb92e42053636baf1360" kindref="member">EXP_LT</ref>))</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n-&gt;NumberOfChildren())</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scid<sp/>==<sp/>SHAPE_CLASS_ID)</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1693"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!(util.expflg&amp;EXP_SPLINE))</highlight></codeline>
<codeline lineno="1694"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!n-&gt;NumberOfChildren())<sp/>return<sp/>ECB_CONT;</highlight></codeline>
<codeline lineno="1695"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj-&gt;CanConvertToType(Class_ID(TRIOBJ_CLASS_ID,<sp/>0)))</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1700"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!(util.expflg&amp;EXP_MESH))</highlight></codeline>
<codeline lineno="1701"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!n-&gt;NumberOfChildren())<sp/>return<sp/>ECB_CONT;</highlight></codeline>
<codeline lineno="1702"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!obj)</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca11c244d530f173871feee7fa44df43ef" kindref="member">EXP_HLP</ref>))</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n-&gt;NumberOfChildren())</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;Renderable()<sp/>&amp;&amp;<sp/>!n-&gt;GetMtl()<sp/>&amp;&amp;<sp/>!n-&gt;IsGroupHead())</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;&apos;%s&apos;<sp/>has<sp/>no<sp/>material\r\n&quot;</highlight><highlight class="normal">),<sp/>n-&gt;GetName());</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1aa9d58fd2ad394c6815d296cad63a4abd" kindref="member">hasNonDagorMaterials</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a5a21ec59d9eb9ce715ded30627ef662c" kindref="member">INTERVAL</ref>(</highlight><highlight class="stringliteral">&quot;add_mtl&quot;</highlight><highlight class="normal">,<sp/>mtlElapsed,<sp/><ref refid="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301ac4fd1ef4041f00039def6df0331841de" kindref="member">TimerIntervalType::ACC</ref>);</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06caf81ae9ea1446789418685c688c161a40" kindref="member">EXP_MAT</ref>)</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a5a21ec59d9eb9ce715ded30627ef662c" kindref="member">INTERVAL</ref>(</highlight><highlight class="stringliteral">&quot;proc<sp/>add_mtl&quot;</highlight><highlight class="normal">,<sp/>procAddMtl,<sp/><ref refid="Timer_8hpp_1a458fa3211b9143beeaff9ac927d7d301ac4fd1ef4041f00039def6df0331841de" kindref="member">TimerIntervalType::ACC</ref>);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1aa93cd7ec686482d3bd51a3638c03722d" kindref="member">add_mtl</ref>(n,<sp/>n-&gt;GetMtl(),<sp/>0,<sp/>n-&gt;GetWireColor());</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count()<sp/>!=<sp/>0xFFFF);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count()<sp/>&gt;=<sp/>0xFFFF)</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Append(1,<sp/>&amp;n);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a82ac93ea652a754c6934ee20abd1b43c" kindref="member">getnodeid</ref>(INode<sp/>*n)</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[i]<sp/>==<sp/>n)</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a9cddf091be94f216d49975026e7d9933" kindref="member">getmatid</ref>(Mtl<sp/>*m,<sp/>DWORD<sp/>wc<sp/>=<sp/>0xFFFFFF)</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m)</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>[i].empty()<sp/>&amp;&amp;<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].wirecolor<sp/>==<sp/>wc)</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>[i].find(m)<sp/>!=<sp/><ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>[i].end())</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a3e8defe188c1cbb6828cf548486f657f" kindref="member">getusedmatid</ref>(Mtl<sp/>*m,<sp/>DWORD<sp/>wc<sp/>=<sp/>0xFFFFFF)</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m)</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].mtl<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].wirecolor<sp/>==<sp/>wc)</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].mtl<sp/>==<sp/>m)</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>wr(p,<sp/>l)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1774"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1775"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(l<sp/>&gt;<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1776"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(fwrite(p,<sp/>l,<sp/>1,<sp/>h)<sp/>!=<sp/>1)<sp/>\</highlight></codeline>
<codeline lineno="1777"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1778"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1781"><highlight class="comment">bool<sp/>wr_hlp(<sp/>const<sp/>void<sp/>*<sp/>p,<sp/>int<sp/>l,<sp/>FILE<sp/>*<sp/>h<sp/>)</highlight></codeline>
<codeline lineno="1782"><highlight class="comment">{</highlight></codeline>
<codeline lineno="1783"><highlight class="comment"><sp/><sp/>int<sp/>pos<sp/>=<sp/>ftell(<sp/>h<sp/>);</highlight></codeline>
<codeline lineno="1784"><highlight class="comment"><sp/><sp/>if<sp/>(<sp/>pos<sp/>+<sp/>l<sp/>&gt;0xc81<sp/>)</highlight></codeline>
<codeline lineno="1785"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1786"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>r<sp/>=<sp/>0xc81<sp/>-<sp/>pos<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1787"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(<sp/>r<sp/>&gt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1788"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1789"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>BYTE<sp/>b<sp/>=<sp/>((BYTE*)p)[<sp/>r<sp/>];</highlight></codeline>
<codeline lineno="1790"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>debug(<sp/>&quot;test&quot;);</highlight></codeline>
<codeline lineno="1791"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1792"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1793"><highlight class="comment"></highlight></codeline>
<codeline lineno="1794"><highlight class="comment"><sp/><sp/><sp/><sp/>if(fwrite(p,l,1,h)!=1)</highlight></codeline>
<codeline lineno="1795"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="1796"><highlight class="comment"></highlight></codeline>
<codeline lineno="1797"><highlight class="comment"></highlight></codeline>
<codeline lineno="1798"><highlight class="comment"></highlight></codeline>
<codeline lineno="1799"><highlight class="comment"><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="1800"><highlight class="comment">}</highlight></codeline>
<codeline lineno="1801"><highlight class="comment"></highlight></codeline>
<codeline lineno="1802"><highlight class="comment">#define<sp/>wr(p,l)<sp/>{if(l&gt;0)<sp/>if(!wr_hlp(p,l,h))<sp/>return<sp/>0;}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>bblk(id)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1805"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1806"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!begin_blk(id))<sp/>\</highlight></codeline>
<codeline lineno="1807"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1808"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>eblk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1810"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1811"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!end_blk())<sp/>\</highlight></codeline>
<codeline lineno="1812"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1813"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1ad4afceccbf53faab95cbb8a60b360465" kindref="member">checkDegenerateTriangle</ref>(INode<sp/>*<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>,<sp/>Matrix3<sp/>&amp;applied_transform,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index1,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index2,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index3,</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>&amp;vertex1,<sp/>Point3<sp/>&amp;vertex2,<sp/>Point3<sp/>&amp;vertex3);</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*<ref refid="classExportENCB_1ab1549f0686ca5197b59443ed1679ac22" kindref="member">makeCheckedRelPath</ref>(INode<sp/>*<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>,<sp/>Mtl<sp/>*mtl,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*absolute_path);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a99a68d83e7d40d62c6b9a2e29a2a52d5" kindref="member">useMOpt</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca50d59afd84fb1166581bec94cb9eff6a" kindref="member">EXP_MATOPT</ref>)<sp/>&amp;&amp;<sp/>(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca7c997ef7aea4da936f1ca86659dba95f" kindref="member">EXP_MESH</ref>);<sp/>}</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a220be4c30ceb5db734455ba3935379a7" kindref="member">save_node</ref>(<ref refid="structExpNode" kindref="compound">ExpNode</ref><sp/>*enod,<sp/>FILE<sp/>*<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>)</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R24)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>masterScale<sp/>=<sp/>(float)GetSystemUnitScale(UNITS_METERS);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>masterScale<sp/>=<sp/>(float)GetMasterScale(UNITS_METERS);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix3<sp/>originTm;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a11424e241091bee00004601c9a2d26de" kindref="member">nodeOrigin</ref>)</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>originTm<sp/>=<sp/><ref refid="dagor_8h_1a0ab0a5c17c8fed4cac0335e19af84ef7" kindref="member">get_scaled_stretch_node_tm</ref>(<ref refid="classExportENCB_1a11424e241091bee00004601c9a2d26de" kindref="member">nodeOrigin</ref>,<sp/><ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjwtm(originTm);</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>originTm.IdentityMatrix();</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1a06fc87d81c62e9abb8790b6e5713c55bae86c37d60258015f247e4e8b50d5bda8" kindref="member">DAG_NODE</ref>);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/>INode<sp/>*n<sp/>=<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[enod-&gt;<ref refid="structExpNode_1aadf418392cbd46430eaeba3ff597f6b1" kindref="member">id</ref>];</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/>INode<sp/>*pnode<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1adf764cbdea00d65edcd07bb9953ad2b7a77d078c73b62a3a142315c2d21c3aecb" kindref="member">DAG_NODE_DATA</ref>);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDagNodeData" kindref="compound">DagNodeData</ref><sp/>d;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>pid<sp/>=<sp/>enod-&gt;<ref refid="structExpNode_1ab24fa98743c1cf748b3be2b58060a778" kindref="member">parent</ref>-&gt;<ref refid="structExpNode_1aadf418392cbd46430eaeba3ff597f6b1" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid<sp/>&lt;<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count())</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode<sp/>=<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[pid];</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagNodeData_1a7f59307c5bb4e2c54998f58d83fd8101" kindref="member">id</ref><sp/>=<sp/>enod-&gt;<ref refid="structExpNode_1aadf418392cbd46430eaeba3ff597f6b1" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagNodeData_1a13d181080f2bec849922b5b5e255fc98" kindref="member">cnum</ref><sp/>=<sp/>enod-&gt;<ref refid="structExpNode_1a14cee1ade5dd6a3e511d75bcf522a22a" kindref="member">child</ref>.Count();</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagNodeData_1a1bd2388447c485c5c1a42a0ef7d72588" kindref="member">flg</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;Renderable())</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagNodeData_1a1bd2388447c485c5c1a42a0ef7d72588" kindref="member">flg</ref><sp/>|=<sp/><ref refid="dagfmt_8h_1afc0232e42686b05f96aede9f3a37ac8b" kindref="member">DAG_NF_RENDERABLE</ref>;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;CastShadows())</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagNodeData_1a1bd2388447c485c5c1a42a0ef7d72588" kindref="member">flg</ref><sp/>|=<sp/><ref refid="dagfmt_8h_1a71c98ba575f1023b2ccabe8ac3cd3e64" kindref="member">DAG_NF_CASTSHADOW</ref>;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;RcvShadows())</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagNodeData_1a1bd2388447c485c5c1a42a0ef7d72588" kindref="member">flg</ref><sp/>|=<sp/><ref refid="dagfmt_8h_1a7f5db6a0e6d573d7b1c2924e8cb77072" kindref="member">DAG_NF_RCVSHADOW</ref>;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObjectState<sp/>&amp;os<sp/>=<sp/>n-&gt;EvalWorldState(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(os.obj-&gt;SuperClassID()<sp/>==<sp/>LIGHT_CLASS_ID)</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GenLight<sp/>*o<sp/>=<sp/>(GenLight<sp/>*)os.obj;</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o-&gt;GetShadow())</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagNodeData_1a1bd2388447c485c5c1a42a0ef7d72588" kindref="member">flg</ref><sp/>|=<sp/><ref refid="dagfmt_8h_1a71c98ba575f1023b2ccabe8ac3cd3e64" kindref="member">DAG_NF_CASTSHADOW</ref>;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagNodeData_1a1bd2388447c485c5c1a42a0ef7d72588" kindref="member">flg</ref><sp/>&amp;=<sp/>~DAG_NF_CASTSHADOW;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;d,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(d));</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*nm<sp/>=<sp/>n-&gt;GetName();</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nm)</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nameCopy<sp/>=<sp/>strdup(<ref refid="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(nm).c_str());</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(nameCopy,<sp/>strlen(nameCopy));</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(nameCopy);</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRollupPanel_1ad20333cd9dce0b8ff93cfdcb3c49c188" kindref="member">RollupPanel::correctUserProp</ref>(n);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>s;</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;GetUserPropBuffer(s);</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>DataBlock<sp/>blk;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>RollupPanel::saveUserPropBufferToBlk(blk,<sp/>n);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>create<sp/>a<sp/>check<sp/>for<sp/>presence<sp/>of<sp/>billboards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if(blk.paramCount())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(n-&gt;GetMtl())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDagorMat<sp/>*m<sp/>=<sp/>(IDagorMat<sp/>*)<sp/>n-&gt;GetMtl()-&gt;GetInterface<sp/>(I_DAGORMAT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(m<sp/>&amp;&amp;<sp/>(strcmp(m-&gt;get_classname(),&quot;billboard_atest&quot;)==NULL<sp/>||</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcmp(m-&gt;get_classname(),&quot;facing_leaves&quot;)==NULL)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blk.setBool(&quot;billboard&quot;,<sp/>true<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug(&quot;find<sp/>billboard<sp/>material<sp/>&apos;%s&apos;&quot;,<sp/>m-&gt;get_classname());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>scr<sp/>=<sp/><ref refid="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(s);</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a99a68d83e7d40d62c6b9a2e29a2a52d5" kindref="member">useMOpt</ref>())</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>scr.find(</highlight><highlight class="stringliteral">&quot;apex_interior_material:t=\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::SET_TYPE&lt;Mtl<sp/>*&gt;::iterator<sp/>mtlIt<sp/>=<sp/><ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>[i].begin();<sp/>mtlIt<sp/>!=<sp/><ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>[i].end();<sp/>++mtlIt)</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>matName<sp/>=<sp/><ref refid="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>((*mtlIt)-&gt;GetName());</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matName<sp/>==<sp/><ref refid="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].name))</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>posVal<sp/>=<sp/>scr.find(matName.c_str(),<sp/>pos,<sp/>matName.length());</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(posVal<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scr.replace(posVal,<sp/>matName.length(),<sp/><ref refid="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].name));</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1adf764cbdea00d65edcd07bb9953ad2b7a2ff2a721145b148de54684ff31b6ef80" kindref="member">DAG_NODE_SCRIPT</ref>);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(scr.c_str(),<sp/>scr.length());</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;int&gt;<sp/>subMatIdLUT;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unusedSlotIdx<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06caf81ae9ea1446789418685c688c161a40" kindref="member">EXP_MAT</ref>)</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*mtl<sp/>=<sp/>n-&gt;GetMtl();</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mtl)</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/>mtl-&gt;NumSubMtls();</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num)</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1adf764cbdea00d65edcd07bb9953ad2b7abaa5d4b96ab7235f3ba08c9bcaea180c" kindref="member">DAG_NODE_MATER</ref>);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;int&gt;<sp/>uniqueMatIdx;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subMatIdLUT.SetCount(num);</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>subMatIdLUT.Count();<sp/>++j)</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subMatIdLUT[j]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>num;<sp/>++j)</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classExportENCB_1a9cddf091be94f216d49975026e7d9933" kindref="member">getmatid</ref>(mtl-&gt;GetSubMtl(j));</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>0<sp/>||<sp/><ref refid="classExportENCB_1a9798223a7ea40950b4f2f05d1e7e23fd" kindref="member">matIDtoMatIdx</ref>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>uniqueMatIdx.Count();<sp/>++x)</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniqueMatIdx[x]<sp/>==<sp/><ref refid="classExportENCB_1a9798223a7ea40950b4f2f05d1e7e23fd" kindref="member">matIDtoMatIdx</ref>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subMatIdLUT[j]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniqueMatIdx.SetCount(uniqueMatIdx.Count()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniqueMatIdx[uniqueMatIdx.Count()<sp/>-<sp/>1]<sp/>=<sp/><ref refid="classExportENCB_1a9798223a7ea40950b4f2f05d1e7e23fd" kindref="member">matIDtoMatIdx</ref>[id];</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>[<ref refid="classExportENCB_1a9798223a7ea40950b4f2f05d1e7e23fd" kindref="member">matIDtoMatIdx</ref>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">]].empty())</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unusedSlotIdx<sp/>=<sp/><ref refid="classExportENCB_1a9798223a7ea40950b4f2f05d1e7e23fd" kindref="member">matIDtoMatIdx</ref>[id];</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subMatIdLUT[j]<sp/>=<sp/>uniqueMatIdx.Count()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;<ref refid="classExportENCB_1a9798223a7ea40950b4f2f05d1e7e23fd" kindref="member">matIDtoMatIdx</ref>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">],<sp/>2);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/><ref refid="classExportENCB_1a9cddf091be94f216d49975026e7d9933" kindref="member">getmatid</ref>(mtl,<sp/>n-&gt;GetWireColor());</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/><ref refid="classExportENCB_1a9798223a7ea40950b4f2f05d1e7e23fd" kindref="member">matIDtoMatIdx</ref>[num];</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1adf764cbdea00d65edcd07bb9953ad2b7abaa5d4b96ab7235f3ba08c9bcaea180c" kindref="member">DAG_NODE_MATER</ref>);</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;num,<sp/>2);</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMyExpTMAnimCB" kindref="compound">MyExpTMAnimCB</ref><sp/>cb(n,<sp/>pnode,<sp/><ref refid="classExportENCB_1a11424e241091bee00004601c9a2d26de" kindref="member">nodeOrigin</ref>);</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;PosKey&gt;<sp/>pos,<sp/>scl;</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;RotKey&gt;<sp/>rot;</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>ntid<sp/>=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos.SetCount(1);</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rot.SetCount(1);</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scl.SetCount(1);</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos[0].t<sp/>=<sp/>rot[0].t<sp/>=<sp/>scl[0].t<sp/>=<sp/><ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos.Count()<sp/>&gt;<sp/><ref refid="classExportENCB_1ae11b6df0abdc0946ce4f4e5805794591" kindref="member">max_pkeys</ref>)</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ae11b6df0abdc0946ce4f4e5805794591" kindref="member">max_pkeys</ref><sp/>=<sp/>pos.Count();</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a9b89aa734b4bc0b483d362533a7fcf94" kindref="member">max_pkeys_n</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rot.Count()<sp/>&gt;<sp/><ref refid="classExportENCB_1ad3db7127424d6cf1389a10da416ef3a7" kindref="member">max_rkeys</ref>)</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ad3db7127424d6cf1389a10da416ef3a7" kindref="member">max_rkeys</ref><sp/>=<sp/>rot.Count();</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a282ee8289b7875304df23fe8e7003293" kindref="member">max_rkeys_n</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scl.Count()<sp/>&gt;<sp/><ref refid="classExportENCB_1a74a42c2cf36b768eac48cf42308cc61c" kindref="member">max_skeys</ref>)</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a74a42c2cf36b768eac48cf42308cc61c" kindref="member">max_skeys</ref><sp/>=<sp/>scl.Count();</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a7421f55dc83e6d06ddf9a815c926520f" kindref="member">max_skeys_n</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix3<sp/>ntm<sp/>=<sp/><ref refid="dagor_8h_1a0ab0a5c17c8fed4cac0335e19af84ef7" kindref="member">get_scaled_stretch_node_tm</ref>(n,<sp/>pos[0].t);</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjwtm(ntm);</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1adf764cbdea00d65edcd07bb9953ad2b7a51bac9ae8de9425a1c871296794f27c5" kindref="member">DAG_NODE_TM</ref>);</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix3<sp/>ptm;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/><ref refid="classExportENCB_1a77aa44ec1356ee83d4127c059808f5b1" kindref="member">useIdentityTransformForNode</ref>)</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ntm.IdentityMatrix();</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjwtm(ntm);</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptm.IdentityMatrix();</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pnode)</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptm<sp/>=<sp/><ref refid="dagor_8h_1a0ab0a5c17c8fed4cac0335e19af84ef7" kindref="member">get_scaled_stretch_node_tm</ref>(pnode,<sp/>pos[0].t);</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pnode-&gt;IsRootNode())</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjwtm(ptm);</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a11424e241091bee00004601c9a2d26de" kindref="member">nodeOrigin</ref>)</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptm<sp/>=<sp/>originTm;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptm.IdentityMatrix();</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2030"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug<sp/>(<sp/>&quot;node<sp/>&lt;%s&gt;<sp/>wtm<sp/>(rows):&quot;,<sp/>wideToStr(n-&gt;GetName()).c_str());</highlight></codeline>
<codeline lineno="2031"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug<sp/>(<sp/>&quot;<sp/><sp/>(%.3f,%.3f,%.3f)\n<sp/><sp/>(%.3f,%.3f,%.3f)\n<sp/><sp/>(%.3f,%.3f,%.3f)\n<sp/><sp/>(%.3f,%.3f,%.3f)&quot;,</highlight></codeline>
<codeline lineno="2032"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ntm.GetRow(0).x,<sp/>ntm.GetRow(0).y,<sp/>ntm.GetRow(0).z,<sp/>ntm.GetRow(1).x,<sp/>ntm.GetRow(1).y,<sp/>ntm.GetRow(1).z,</highlight></codeline>
<codeline lineno="2033"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ntm.GetRow(2).x,<sp/>ntm.GetRow(2).y,<sp/>ntm.GetRow(2).z,<sp/>ntm.GetRow(3).x,<sp/>ntm.GetRow(3).y,<sp/>ntm.GetRow(3).z<sp/>);</highlight></codeline>
<codeline lineno="2034"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptm<sp/>=<sp/>ntm<sp/>*<sp/>Inverse(ptm);</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2037"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug<sp/>(<sp/>&quot;node<sp/>&lt;%s&gt;<sp/>tm<sp/>(rows)<sp/>local:&quot;,<sp/>wideToStr(n-&gt;GetName()).c_str());</highlight></codeline>
<codeline lineno="2038"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug<sp/>(<sp/>&quot;<sp/><sp/>(%.3f,%.3f,%.3f)\n<sp/><sp/>(%.3f,%.3f,%.3f)\n<sp/><sp/>(%.3f,%.3f,%.3f)\n<sp/><sp/>(%.3f,%.3f,%.3f)&quot;,</highlight></codeline>
<codeline lineno="2039"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptm.GetRow(0).x,<sp/>ptm.GetRow(0).y,<sp/>ptm.GetRow(0).z,<sp/>ptm.GetRow(1).x,<sp/>ptm.GetRow(1).y,<sp/>ptm.GetRow(1).z,</highlight></codeline>
<codeline lineno="2040"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptm.GetRow(2).x,<sp/>ptm.GetRow(2).y,<sp/>ptm.GetRow(2).z,<sp/>ptm.GetRow(3).x,<sp/>ptm.GetRow(3).y,<sp/>ptm.GetRow(3).z<sp/>);</highlight></codeline>
<codeline lineno="2041"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(ptm.GetAddr(),<sp/>4<sp/>*<sp/>3<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos.Count()<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>rot.Count()<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>scl.Count()<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="comment">/*ntid&gt;=0<sp/>&amp;&amp;*/</highlight><highlight class="normal"><sp/>ntid<sp/>&lt;<sp/><ref refid="classExportENCB_1a3e595643bf5f6eb98fd0ff3105328c87" kindref="member">ntrack</ref>.Count())</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1adf764cbdea00d65edcd07bb9953ad2b7a153c45a9a14b43e4e496e089c09fdd3d" kindref="member">DAG_NODE_NOTETRACK</ref>);</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;ntid,<sp/>2);</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb.<ref refid="classMyExpTMAnimCB_1a0fb8951e7d32a802e8e19e8ec0ba51f0" kindref="member">nonort</ref>)</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a34eeca1eb50b92257fe7ddff0bab055a" kindref="member">nonort_nodes</ref>.Append(1,<sp/>&amp;n);</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a727f2b5fac19fa93ccea3c2ff888877c" kindref="member">nonort</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1adf764cbdea00d65edcd07bb9953ad2b7a41213fca2a1de143db6165e6b2e5cc9e" kindref="member">DAG_NODE_ANIM</ref>);</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;ntid,<sp/>2);</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!save_pos_anim(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>,<sp/>pos))</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!save_rot_anim(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>,<sp/>rot))</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!save_pos_anim(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>,<sp/>scl))</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObjectState<sp/>&amp;os<sp/>=<sp/>n-&gt;EvalWorldState(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(os.obj)</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(os.obj-&gt;ClassID()<sp/>==<sp/><ref refid="dagor_8h_1a3c99c6cc99ba27ff7f869c2901da2733" kindref="member">Dummy_CID</ref>)</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>no-op</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06caff2dc62d0636cb92e42053636baf1360" kindref="member">EXP_LT</ref>)<sp/>&amp;&amp;<sp/>os.obj-&gt;SuperClassID()<sp/>==<sp/>LIGHT_CLASS_ID)</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GenLight<sp/>*o<sp/>=<sp/>(GenLight<sp/>*)os.obj;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDagLight" kindref="compound">DagLight</ref><sp/>d;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDagLight2" kindref="compound">DagLight2</ref><sp/>d2;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color<sp/>col<sp/>=<sp/>o-&gt;GetRGBColor(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>)<sp/>*<sp/>o-&gt;GetIntensity(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagLight_1a9ddde5a9057f0479a6660f80732d0abd" kindref="member">r</ref><sp/>=<sp/>col.r;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagLight_1a51d9e2499cc8f4c052bc0052e0819b8d" kindref="member">g</ref><sp/>=<sp/>col.g;</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagLight_1a38e0dfeeba77ea75a334d7f822a08cfa" kindref="member">b</ref><sp/>=<sp/>col.b;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagLight_1a60681e33fb6279b0141c4405f1140758" kindref="member">drad</ref><sp/>=<sp/>o-&gt;GetDecayRadius(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagLight_1a25eebd5c643d1850f7ff00adac52d40d" kindref="member">range</ref><sp/>=<sp/>o-&gt;GetAtten(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>,<sp/>ATTEN_END);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagLight_1a7680f03a14534f23d1c291ac74b6f11d" kindref="member">decay</ref><sp/>=<sp/>o-&gt;GetDecayType();</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2.<ref refid="structDagLight2_1ae76d3e5172b8a893ea57ee834c9902be" kindref="member">mult</ref><sp/>=<sp/>o-&gt;GetIntensity(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2.<ref refid="structDagLight2_1a05dc43d7fc32ebec34843c3231d22567" kindref="member">falloff</ref><sp/>=<sp/>o-&gt;GetFallsize(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2.<ref refid="structDagLight2_1a4b90d1ec2617399b7f82f3604a144d3d" kindref="member">hotspot</ref><sp/>=<sp/>o-&gt;GetHotspot(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(o-&gt;Type())</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TSPOT_LIGHT:</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FSPOT_LIGHT:<sp/>d2.<ref refid="structDagLight2_1acd0be638e1b29de98d213926c4f6d30e" kindref="member">type</ref><sp/>=<sp/><ref refid="dagfmt_8h_1abc6126af1d45847bc59afa0aa3216b04a56298c71d402bc2a3909033d4af67e98" kindref="member">DAG_LIGHT_SPOT</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DIR_LIGHT:</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TDIR_LIGHT:<sp/>d2.<ref refid="structDagLight2_1acd0be638e1b29de98d213926c4f6d30e" kindref="member">type</ref><sp/>=<sp/><ref refid="dagfmt_8h_1abc6126af1d45847bc59afa0aa3216b04a2002148ad383116768dfd195bafb3673" kindref="member">DAG_LIGHT_DIR</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>d2.<ref refid="structDagLight2_1acd0be638e1b29de98d213926c4f6d30e" kindref="member">type</ref><sp/>=<sp/><ref refid="dagfmt_8h_1abc6126af1d45847bc59afa0aa3216b04a5c974b13691d07553f5b3f41a36fcb6b" kindref="member">DAG_LIGHT_OMNI</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1adf764cbdea00d65edcd07bb9953ad2b7a9f987c74de054b5678c587ecb4c68611" kindref="member">DAG_NODE_OBJ</ref>);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1a99fb83031ce9923c84392b4e92f956b5a6717336d0c0ec615dc685bfe09b7ca65" kindref="member">DAG_OBJ_LIGHT</ref>);</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;d,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(d));</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;d2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(d2));</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cae304ba10296381a1f92fa75aff1a6837" kindref="member">EXP_SPLINE</ref>)<sp/>&amp;&amp;<sp/>os.obj-&gt;SuperClassID()<sp/>==<sp/>SHAPE_CLASS_ID)</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShapeObject<sp/>*shobj<sp/>=<sp/>(ShapeObject<sp/>*)os.obj;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shobj-&gt;CanMakeBezier())</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix3<sp/>otm;</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otm<sp/>=<sp/><ref refid="dagor_8h_1a62bd0983642b5aa1bfeb95655f4272b3" kindref="member">get_scaled_object_tm</ref>(n,<sp/><ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otm<sp/>=<sp/>otm<sp/>*<sp/>Inverse(<ref refid="dagor_8h_1a0ab0a5c17c8fed4cac0335e19af84ef7" kindref="member">get_scaled_stretch_node_tm</ref>(n,<sp/><ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>));</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BezierShape<sp/>shp;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shobj-&gt;MakeBezier(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>,<sp/>shp);</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1adf764cbdea00d65edcd07bb9953ad2b7a9f987c74de054b5678c587ecb4c68611" kindref="member">DAG_NODE_OBJ</ref>);</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1a99fb83031ce9923c84392b4e92f956b5adfe3047dff3d10a4998683891573438b" kindref="member">DAG_OBJ_SPLINES</ref>);</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ns<sp/>=<sp/>shp.SplineCount();</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;ns,<sp/>4);</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>si<sp/>=<sp/>0;<sp/>si<sp/>&lt;<sp/>ns;<sp/>++si)</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spline3D<sp/>&amp;s<sp/>=<sp/>*shp.GetSpline(si);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(&amp;s);</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>flg<sp/>=<sp/>s.Closed()<sp/>?<sp/><ref refid="dagfmt_8h_1a3229e39caf35e803a1a09140e501b82d" kindref="member">DAG_SPLINE_CLOSED</ref><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;flg,<sp/>1);</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nk<sp/>=<sp/>s.KnotCount();</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;nk,<sp/>4);</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ki<sp/>=<sp/>0;<sp/>ki<sp/>&lt;<sp/>nk;<sp/>++ki)</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>kt;</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(s.GetKnotType(ki))</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KTYPE_AUTO:<sp/>kt<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KTYPE_BEZIER:<sp/>kt<sp/>=<sp/><ref refid="dagfmt_8h_1a75cc064ee1d62f347fafc0f0d836ecf3" kindref="member">DAG_SKNOT_BEZIER</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KTYPE_CORNER:<sp/>kt<sp/>=<sp/><ref refid="dagfmt_8h_1a296fc51afb976d98a9fae2f378d80ce8" kindref="member">DAG_SKNOT_CORNER</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KTYPE_BEZIER_CORNER:<sp/>kt<sp/>=<sp/><ref refid="dagfmt_8h_1a75cc064ee1d62f347fafc0f0d836ecf3" kindref="member">DAG_SKNOT_BEZIER</ref><sp/>|<sp/><ref refid="dagfmt_8h_1a296fc51afb976d98a9fae2f378d80ce8" kindref="member">DAG_SKNOT_CORNER</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>kt<sp/>=<sp/><ref refid="dagfmt_8h_1a75cc064ee1d62f347fafc0f0d836ecf3" kindref="member">DAG_SKNOT_BEZIER</ref><sp/>|<sp/><ref refid="dagfmt_8h_1a296fc51afb976d98a9fae2f378d80ce8" kindref="member">DAG_SKNOT_CORNER</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;kt,<sp/>1);</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>=<sp/>(s.GetVert(ki<sp/>*<sp/>3)<sp/>*<sp/>masterScale)<sp/>*<sp/>otm;</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/>3<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>=<sp/>(s.GetVert(ki<sp/>*<sp/>3<sp/>+<sp/>1)<sp/>*<sp/>masterScale)<sp/>*<sp/>otm;</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/>3<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>=<sp/>(s.GetVert(ki<sp/>*<sp/>3<sp/>+<sp/>2)<sp/>*<sp/>masterScale)<sp/>*<sp/>otm;</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>,<sp/>3<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca7c997ef7aea4da936f1ca86659dba95f" kindref="member">EXP_MESH</ref>)<sp/>&amp;&amp;<sp/>os.obj-&gt;SuperClassID()<sp/>==<sp/>GEOMOBJECT_CLASS_ID<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.obj-&gt;CanConvertToType(Class_ID(TRIOBJ_CLASS_ID,<sp/>0)))</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DebugPrint(&quot;mesh<sp/>&lt;%s&gt;\n&quot;,(char*)n-&gt;GetName());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modon<sp/>=<sp/>0,<sp/>numvert<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skinmod<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>physiqueMod<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>morpherMod<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">RestoreModOnExit</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INode<sp/>*n;</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>restore_prop_WSM,<sp/>restore_obj_ref;</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RestoreModOnExit(INode<sp/>*n_)<sp/>:<sp/>n(n_),<sp/>restore_prop_WSM(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>restore_obj_ref(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~RestoreModOnExit()</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(restore_prop_WSM)</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDerivedObject<sp/>&amp;der<sp/>=<sp/>*(IDerivedObject<sp/>*)n-&gt;GetProperty(PROPID_HAS_WSM);</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>der.GetModifier(der.NumModifiers()<sp/>-<sp/>1)-&gt;EnableMod();</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MAX_RELEASE<sp/>&gt;=<sp/>4000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(restore_obj_ref)</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDerivedObject<sp/>&amp;der<sp/>=<sp/>*(IDerivedObject<sp/>*)n-&gt;GetObjectRef();</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>der.GetModifier(der.NumModifiers()<sp/>-<sp/>1)-&gt;EnableMod();</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>restore_mod(n);</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;GetProperty(PROPID_HAS_WSM))</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDerivedObject<sp/>&amp;der<sp/>=<sp/>*(IDerivedObject<sp/>*)n-&gt;GetProperty(PROPID_HAS_WSM);</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(der.NumModifiers()<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Modifier<sp/>*mod<sp/>=<sp/>der.GetModifier(der.NumModifiers()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mod-&gt;ClassID()<sp/>==<sp/>BONESMOD_CID)</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modon<sp/>=<sp/>mod-&gt;IsEnabled();</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mod-&gt;DisableMod();</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restore_mod.restore_prop_WSM<sp/>=<sp/>modon;</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MAX_RELEASE<sp/>&gt;=<sp/>4000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!modon)</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Object<sp/>*obj<sp/>=<sp/>n-&gt;GetObjectRef();</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj)</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj-&gt;SuperClassID()<sp/>==<sp/>GEN_DERIVOB_CLASS_ID)</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDerivedObject<sp/>&amp;der<sp/>=<sp/>*(IDerivedObject<sp/>*)obj;</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(der.NumModifiers()<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Modifier<sp/>*mod<sp/>=<sp/>der.GetModifier(der.NumModifiers()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mod);</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mod-&gt;ClassID()<sp/>==<sp/>Class_ID(0x17bb6854,<sp/>0xa5cba2a3))</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Morpher<sp/>mod!\r\n&quot;</highlight><highlight class="normal">),<sp/>n-&gt;GetName());</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>morpherMod<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modon<sp/>=<sp/>mod-&gt;IsEnabled();</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mod-&gt;DisableMod();</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restore_mod.restore_obj_ref<sp/>=<sp/>modon;</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mod-&gt;GetInterface(I_SKIN))</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>skin<sp/>mod!\r\n&quot;</highlight><highlight class="normal">),<sp/>n-&gt;GetName());</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skinmod<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modon<sp/>=<sp/>mod-&gt;IsEnabled();</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mod-&gt;DisableMod();</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restore_mod.restore_obj_ref<sp/>=<sp/>modon;</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mod-&gt;ClassID()<sp/>==<sp/>Class_ID(PHYSIQUE_CLASS_ID_A,<sp/>PHYSIQUE_CLASS_ID_B))</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Physique<sp/>mod!\r\n&quot;</highlight><highlight class="normal">),<sp/>n-&gt;GetName());</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physiqueMod<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modon<sp/>=<sp/>mod-&gt;IsEnabled();</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mod-&gt;DisableMod();</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restore_mod.restore_obj_ref<sp/>=<sp/>modon;</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TriObject<sp/>*tri<sp/>=<sp/>(TriObject<sp/>*)n-&gt;EvalWorldState(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>).obj-&gt;ConvertToType(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>,<sp/>Class_ID(TRIOBJ_CLASS_ID,<sp/>0));</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tri)</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1adf764cbdea00d65edcd07bb9953ad2b7a9f987c74de054b5678c587ecb4c68611" kindref="member">DAG_NODE_OBJ</ref>);</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mesh<sp/>m<sp/>=<sp/>tri-&gt;mesh;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tri<sp/>!=<sp/>os.obj)</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tri;</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix3<sp/>otm;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>notSmoothed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).ClearAll();</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numFaces;<sp/>++i)</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m.faces[i].smGroup)</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).Set(i);</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notSmoothed++;</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(notSmoothed<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;Object<sp/>&apos;%s&apos;<sp/>has<sp/>no<sp/>smoothing<sp/>on<sp/>%d<sp/>faces!\r\n&quot;</highlight><highlight class="normal"><sp/>),<sp/>n-&gt;GetName(),<sp/>notSmoothed);</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.AutoSmooth(25.0f<sp/>*<sp/>3.1415926f<sp/>/<sp/>180.0f,<sp/>TRUE);</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a3e3d3180776915ef242696002bfb9517" kindref="member">hasNoSmoothing</ref><sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max__cpt_8h_1ad4866a838f923891a0355383f4521f1b" kindref="member">mesh_face_sel</ref>(m).ClearAll();</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(os.GetTM())<sp/>otm=*os.GetTM();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>otm.IdentityMatrix();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v1<sp/>=<sp/>2,<sp/>v2<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otm<sp/>=<sp/><ref refid="dagor_8h_1a62bd0983642b5aa1bfeb95655f4272b3" kindref="member">get_scaled_object_tm</ref>(n,<sp/><ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(otm.Parity())</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>v1;</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v1<sp/>=<sp/>v2;</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otm<sp/>=<sp/>otm<sp/>*<sp/>Inverse(<ref refid="dagor_8h_1a0ab0a5c17c8fed4cac0335e19af84ef7" kindref="member">get_scaled_stretch_node_tm</ref>(n,<sp/><ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>));</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!otm.Parity())<sp/>{int<sp/>a=v1;v1=v2;v2=a;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numvert<sp/>=<sp/>m.numVerts;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numVerts;<sp/>++i)</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.verts[i]<sp/>=<sp/>(m.verts[i]<sp/>*<sp/>masterScale)<sp/>*<sp/>otm;</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.numFaces<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>n-&gt;Renderable())</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;Renderable<sp/>object<sp/>&apos;%s&apos;<sp/>has<sp/>0<sp/>faces!\r\n&quot;</highlight><highlight class="normal">),<sp/>n-&gt;GetName());</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a8b78ce658a6310287b03e50695ad7c3b" kindref="member">nofaces</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MAX_RELEASE<sp/>&gt;=<sp/>3000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxntv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_MESHMAPS;<sp/>++i)</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(i))</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapFaces(i))</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntv<sp/>=<sp/>m.getNumMapVerts(i);</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ntv<sp/>&gt;<sp/>maxntv)</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxntv<sp/>=<sp/>ntv;</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxntv<sp/>=<sp/>m.numTVerts;</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.numCVerts<sp/>&gt;<sp/>maxntv)</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxntv<sp/>=<sp/>m.numCVerts;</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.numVerts<sp/>&gt;=<sp/>0x10000<sp/>||<sp/>m.numFaces<sp/>&gt;=<sp/>0x10000<sp/>||<sp/>maxntv<sp/>&gt;=<sp/>0x10000)</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(m.numVerts<sp/>&gt;=<sp/>0x10000)</highlight></codeline>
<codeline lineno="2314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>explog(_T(<sp/>&quot;&apos;%s&apos;<sp/>has<sp/>more<sp/>than<sp/>64K<sp/>vertices\r\n&quot;),<sp/>n-&gt;GetName());</highlight></codeline>
<codeline lineno="2315"><highlight class="comment"></highlight></codeline>
<codeline lineno="2316"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(m.numFaces<sp/>&gt;=<sp/>0x10000)</highlight></codeline>
<codeline lineno="2317"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>explog(_T(<sp/>&quot;&apos;%s&apos;<sp/>has<sp/>more<sp/>than<sp/>64K<sp/>faces\r\n&quot;),<sp/>n-&gt;GetName());</highlight></codeline>
<codeline lineno="2318"><highlight class="comment"></highlight></codeline>
<codeline lineno="2319"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(maxntv<sp/>&gt;=<sp/>0x10000)</highlight></codeline>
<codeline lineno="2320"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>explog(_T(<sp/>&quot;&apos;%s&apos;<sp/>has<sp/>more<sp/>than<sp/>64K<sp/>texture<sp/>vertices\r\n&quot;),<sp/>n-&gt;GetName());</highlight></codeline>
<codeline lineno="2321"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a50db4d5bda845ec5acef359790621f97" kindref="member">hasBigMeshes</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1a99fb83031ce9923c84392b4e92f956b5ab38107edf27f3c0710b681b59ceccf1c" kindref="member">DAG_OBJ_BIGMESH</ref>);</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;m.numVerts,<sp/>4);</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numVerts;<sp/>++i)</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;m.verts[i],<sp/>12);</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;m.numFaces,<sp/>4);</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numFaces;<sp/>++i)</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDagBigFace" kindref="compound">DagBigFace</ref><sp/>f;</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagBigFace_1a1b430c0a040da2c1716c738531b7830c" kindref="member">v</ref>[0]<sp/>=<sp/>m.faces[i].v[0];</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagBigFace_1a1b430c0a040da2c1716c738531b7830c" kindref="member">v</ref>[v1]<sp/>=<sp/>m.faces[i].v[1];</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagBigFace_1a1b430c0a040da2c1716c738531b7830c" kindref="member">v</ref>[v2]<sp/>=<sp/>m.faces[i].v[2];</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagBigFace_1ac8ec83b84f3c125e32aa8cfdb0cc914a" kindref="member">smgr</ref><sp/>=<sp/>m.faces[i].smGroup;</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MtlID<sp/>mid<sp/>=<sp/>m.faces[i].getMatID();</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;GetMtl())</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*mtl<sp/>=<sp/>n-&gt;GetMtl();</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>mtl-&gt;NumSubMtls();</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num)</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid<sp/>=<sp/>subMatIdLUT[mid<sp/>%<sp/>num];</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mid<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>unusedSlotIdx<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)unusedSlotIdx;</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classExportENCB_1a9cddf091be94f216d49975026e7d9933" kindref="member">getmatid</ref>(mtl);</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid<sp/>=<sp/><ref refid="classExportENCB_1a9798223a7ea40950b4f2f05d1e7e23fd" kindref="member">matIDtoMatIdx</ref>[id];</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagBigFace_1aa34160c34739683aee40a6ff58e46412" kindref="member">mat</ref><sp/>=<sp/>mid;</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;f,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(f));</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a205f7c37a8d7a345a547c1c90e41f934" kindref="member">hasDegenerateTriangles</ref><sp/>|=<sp/><ref refid="classExportENCB_1ad4afceccbf53faab95cbb8a60b360465" kindref="member">checkDegenerateTriangle</ref>(n,<sp/>otm,<sp/>m.faces[i].v[0],<sp/>m.faces[i].v[1],<sp/>m.faces[i].v[2],</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.verts[m.faces[i].v[0]],<sp/>m.verts[m.faces[i].v[1]],<sp/>m.verts[m.faces[i].v[2]]);</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>numch<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MAX_RELEASE<sp/>&gt;=<sp/>3000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch;</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>MAX_MESHMAPS;<sp/>++ch)</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(ch))</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapFaces(ch))</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.getNumMapVerts(ch)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++numch;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;numch,<sp/>1);</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>MAX_MESHMAPS;<sp/>++ch)</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m.mapSupport(ch))</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVFace<sp/>*tf<sp/>=<sp/>m.mapFaces(ch);</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tf)</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntv<sp/>=<sp/>m.getNumMapVerts(ch);</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ntv<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;ntv,<sp/>4);</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(ch<sp/>==<sp/>0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;\3&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;\2&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;ch,<sp/>1);</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>*tv<sp/>=<sp/>m.mapVerts(ch);</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ntv;<sp/>++i)</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;tv[i],<sp/>ch<sp/>==<sp/>0<sp/>?<sp/>12<sp/>:<sp/>8);</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numFaces;<sp/>++i)</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDagBigTFace" kindref="compound">DagBigTFace</ref><sp/>f;</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagBigTFace_1a848201911e05420a960aa0e5aa509593" kindref="member">t</ref>[0]<sp/>=<sp/>tf[i].t[0];</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagBigTFace_1a848201911e05420a960aa0e5aa509593" kindref="member">t</ref>[v1]<sp/>=<sp/>tf[i].t[1];</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagBigTFace_1a848201911e05420a960aa0e5aa509593" kindref="member">t</ref>[v2]<sp/>=<sp/>tf[i].t[2];</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;f,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(f));</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.numTVerts<sp/>&amp;&amp;<sp/>m.tvFace)</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++numch;</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.numCVerts<sp/>&amp;&amp;<sp/>m.vcFace)</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++numch;</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;numch,<sp/>1);</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.numTVerts<sp/>&amp;&amp;<sp/>m.tvFace)</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;m.numTVerts,<sp/>4);</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numch<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;numch,<sp/>1);</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numch<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;numch,<sp/>1);</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numTVerts;<sp/>++i)</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;m.tVerts[i],<sp/>8);</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numFaces;<sp/>++i)</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDagBigTFace" kindref="compound">DagBigTFace</ref><sp/>f;</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagBigTFace_1a848201911e05420a960aa0e5aa509593" kindref="member">t</ref>[0]<sp/>=<sp/>m.tvFace[i].t[0];</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagBigTFace_1a848201911e05420a960aa0e5aa509593" kindref="member">t</ref>[v1]<sp/>=<sp/>m.tvFace[i].t[1];</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagBigTFace_1a848201911e05420a960aa0e5aa509593" kindref="member">t</ref>[v2]<sp/>=<sp/>m.tvFace[i].t[2];</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;f,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(f));</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.numCVerts<sp/>&amp;&amp;<sp/>m.vcFace)</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;m.numCVerts,<sp/>4);</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numch<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;numch,<sp/>1);</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numch<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;numch,<sp/>1);</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numCVerts;<sp/>++i)</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;m.vertCol[i],<sp/>8);</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numFaces;<sp/>++i)</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDagBigTFace" kindref="compound">DagBigTFace</ref><sp/>f;</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagBigTFace_1a848201911e05420a960aa0e5aa509593" kindref="member">t</ref>[0]<sp/>=<sp/>m.vcFace[i].t[0];</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagBigTFace_1a848201911e05420a960aa0e5aa509593" kindref="member">t</ref>[v1]<sp/>=<sp/>m.vcFace[i].t[1];</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagBigTFace_1a848201911e05420a960aa0e5aa509593" kindref="member">t</ref>[v2]<sp/>=<sp/>m.vcFace[i].t[2];</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;f,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(f));</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1a99fb83031ce9923c84392b4e92f956b5a0467aa48acc4c3ac8feffb0c8adeb7e2" kindref="member">DAG_OBJ_MESH</ref>);</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;m.numVerts,<sp/>2);</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numVerts;<sp/>++i)</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;m.verts[i],<sp/>12);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;m.numFaces,<sp/>2);</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numFaces;<sp/>++i)</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDagFace" kindref="compound">DagFace</ref><sp/>f;</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagFace_1a158277f233be6293b93ad00988caa05e" kindref="member">v</ref>[0]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)m.faces[i].v[0];</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagFace_1a158277f233be6293b93ad00988caa05e" kindref="member">v</ref>[v1]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)m.faces[i].v[1];</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagFace_1a158277f233be6293b93ad00988caa05e" kindref="member">v</ref>[v2]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)m.faces[i].v[2];</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagFace_1a8b3883555a74190689dcb01a134906b3" kindref="member">smgr</ref><sp/>=<sp/>m.faces[i].smGroup;</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MtlID<sp/>mid<sp/>=<sp/>m.faces[i].getMatID();</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;GetMtl())</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*mtl<sp/>=<sp/>n-&gt;GetMtl();</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>mtl-&gt;NumSubMtls();</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num)</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid<sp/>=<sp/>subMatIdLUT[mid<sp/>%<sp/>num];</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mid<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>unusedSlotIdx<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)unusedSlotIdx;</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classExportENCB_1a9cddf091be94f216d49975026e7d9933" kindref="member">getmatid</ref>(mtl);</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid<sp/>=<sp/><ref refid="classExportENCB_1a9798223a7ea40950b4f2f05d1e7e23fd" kindref="member">matIDtoMatIdx</ref>[id];</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagFace_1a947397672bbdd18edf2fe06dab23c4e2" kindref="member">mat</ref><sp/>=<sp/>mid;</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;f,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(f));</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a205f7c37a8d7a345a547c1c90e41f934" kindref="member">hasDegenerateTriangles</ref><sp/>|=<sp/><ref refid="classExportENCB_1ad4afceccbf53faab95cbb8a60b360465" kindref="member">checkDegenerateTriangle</ref>(n,<sp/>otm,<sp/>m.faces[i].v[0],<sp/>m.faces[i].v[1],<sp/>m.faces[i].v[2],</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.verts[m.faces[i].v[0]],<sp/>m.verts[m.faces[i].v[1]],<sp/>m.verts[m.faces[i].v[2]]);</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>numch<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MAX_RELEASE<sp/>&gt;=<sp/>3000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch;</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>MAX_MESHMAPS;<sp/>++ch)</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapSupport(ch))</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.mapFaces(ch))</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.getNumMapVerts(ch)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++numch;</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;numch,<sp/>1);</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>MAX_MESHMAPS;<sp/>++ch)</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m.mapSupport(ch))</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVFace<sp/>*tf<sp/>=<sp/>m.mapFaces(ch);</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tf)</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntv<sp/>=<sp/>m.getNumMapVerts(ch);</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ntv<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;ntv,<sp/>2);</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(ch<sp/>==<sp/>0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;\3&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;\2&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;ch,<sp/>1);</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>*tv<sp/>=<sp/>m.mapVerts(ch);</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ntv;<sp/>++i)</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;tv[i],<sp/>ch<sp/>==<sp/>0<sp/>?<sp/>12<sp/>:<sp/>8);</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numFaces;<sp/>++i)</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDagTFace" kindref="compound">DagTFace</ref><sp/>f;</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagTFace_1a4bb9b2a320e704ed850d0481a4d5b4b5" kindref="member">t</ref>[0]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)tf[i].t[0];</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagTFace_1a4bb9b2a320e704ed850d0481a4d5b4b5" kindref="member">t</ref>[v1]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)tf[i].t[1];</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagTFace_1a4bb9b2a320e704ed850d0481a4d5b4b5" kindref="member">t</ref>[v2]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)tf[i].t[2];</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;f,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(f));</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.numTVerts<sp/>&amp;&amp;<sp/>m.tvFace)</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++numch;</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.numCVerts<sp/>&amp;&amp;<sp/>m.vcFace)</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++numch;</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;numch,<sp/>1);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.numTVerts<sp/>&amp;&amp;<sp/>m.tvFace)</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;m.numTVerts,<sp/>2);</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numch<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;numch,<sp/>1);</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numch<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;numch,<sp/>1);</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numTVerts;<sp/>++i)</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;m.tVerts[i],<sp/>8);</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numFaces;<sp/>++i)</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDagTFace" kindref="compound">DagTFace</ref><sp/>f;</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagTFace_1a4bb9b2a320e704ed850d0481a4d5b4b5" kindref="member">t</ref>[0]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)m.tvFace[i].t[0];</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagTFace_1a4bb9b2a320e704ed850d0481a4d5b4b5" kindref="member">t</ref>[v1]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)m.tvFace[i].t[1];</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagTFace_1a4bb9b2a320e704ed850d0481a4d5b4b5" kindref="member">t</ref>[v2]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)m.tvFace[i].t[2];</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;f,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(f));</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.numCVerts<sp/>&amp;&amp;<sp/>m.vcFace)</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;m.numCVerts,<sp/>2);</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numch<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;numch,<sp/>1);</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numch<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;numch,<sp/>1);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numCVerts;<sp/>++i)</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;m.vertCol[i],<sp/>8);</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numFaces;<sp/>++i)</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDagTFace" kindref="compound">DagTFace</ref><sp/>f;</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagTFace_1a4bb9b2a320e704ed850d0481a4d5b4b5" kindref="member">t</ref>[0]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)m.vcFace[i].t[0];</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagTFace_1a4bb9b2a320e704ed850d0481a4d5b4b5" kindref="member">t</ref>[v1]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)m.vcFace[i].t[1];</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.<ref refid="structDagTFace_1a4bb9b2a320e704ed850d0481a4d5b4b5" kindref="member">t</ref>[v2]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)m.vcFace[i].t[2];</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;f,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(f));</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1a99fb83031ce9923c84392b4e92f956b5a30dab6dc725e918846b10d8a753767a3" kindref="member">DAG_OBJ_FACEFLG</ref>);</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m.numFaces;<sp/>++i)</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Face<sp/>&amp;f<sp/>=<sp/>m.faces[i];</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ef<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.flags<sp/>&amp;<sp/>EDGE_B)</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ef<sp/>|=<sp/><ref refid="dagfmt_8h_1af064665dfa5dee73725d376e7d3f7c9c" kindref="member">DAG_FACEFLG_EDGE1</ref>;</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v1<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.flags<sp/>&amp;<sp/>EDGE_A)</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ef<sp/>|=<sp/><ref refid="dagfmt_8h_1aac860b5c517c20a86ab30d1e6ac098cc" kindref="member">DAG_FACEFLG_EDGE0</ref>;</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.flags<sp/>&amp;<sp/>EDGE_C)</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ef<sp/>|=<sp/><ref refid="dagfmt_8h_1a6d61dc0291a695986f789bc95c462a8d" kindref="member">DAG_FACEFLG_EDGE2</ref>;</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.flags<sp/>&amp;<sp/>EDGE_A)</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ef<sp/>|=<sp/><ref refid="dagfmt_8h_1a6d61dc0291a695986f789bc95c462a8d" kindref="member">DAG_FACEFLG_EDGE2</ref>;</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.flags<sp/>&amp;<sp/>EDGE_C)</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ef<sp/>|=<sp/><ref refid="dagfmt_8h_1aac860b5c517c20a86ab30d1e6ac098cc" kindref="member">DAG_FACEFLG_EDGE0</ref>;</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.flags<sp/>&amp;<sp/>FACE_HIDDEN)</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ef<sp/>|=<sp/><ref refid="dagfmt_8h_1a60ef8f5a97371351817f3ab3034b8b91" kindref="member">DAG_FACEFLG_HIDDEN</ref>;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;ef,<sp/>1);</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"></highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.numFaces<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"></highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MeshNormalSpec<sp/>*normalSpec<sp/>=<sp/>m.GetSpecifiedNormals();</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(normalSpec<sp/>&amp;&amp;<sp/>!(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca7726b8a815ab142189d736d669f85519" kindref="member">EXP_NO_VNORM</ref>)<sp/>&amp;&amp;<sp/>normalSpec-&gt;GetNumFaces()<sp/>==<sp/>m.numFaces<sp/>&amp;&amp;<sp/>normalSpec-&gt;GetNumNormals())</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;FaceNGr&gt;<sp/>fngr;</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalSpec-&gt;BuildNormals();</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalSpec-&gt;ComputeNormals();</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numNormals<sp/>=<sp/>normalSpec-&gt;GetNumNormals();</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fngr.Resize(m.numFaces);</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fngr.SetCount(m.numFaces);</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vid[3]<sp/>=<sp/>{0,<sp/>v1,<sp/>v2};</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face<sp/>=<sp/>0;<sp/>face<sp/>&lt;<sp/>m.numFaces;<sp/>face++)</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertex<sp/>=<sp/>0;<sp/>vertex<sp/>&lt;<sp/>3;<sp/>vertex++)</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fngr[face][vid[vertex]]<sp/>=<sp/>normalSpec-&gt;Face(face).GetNormalID(vertex);</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1a99fb83031ce9923c84392b4e92f956b5ae1a0209b9391ec3aacd908d17b87a306" kindref="member">DAG_OBJ_NORMALS</ref>);</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;numNormals,<sp/>4);</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(normalSpec-&gt;GetNormalArray(),<sp/>numNormals<sp/>*<sp/>12);</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(fngr.Addr(0),<sp/>m.numFaces<sp/>*<sp/>3<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modon)</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(morpherMod)</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDerivedObject<sp/>&amp;der<sp/>=<sp/>*(IDerivedObject<sp/>*)n-&gt;GetObjectRef();</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Modifier<sp/>*mod<sp/>=<sp/>der.GetModifier(der.NumModifiers()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1a99fb83031ce9923c84392b4e92f956b5ac0ba1219bc79d04eb404daecb702af33" kindref="member">DAG_OBJ_MORPH</ref>);</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"></highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"></highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>100;<sp/>++i)</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RefTargetHandle<sp/>ref<sp/>=<sp/>mod-&gt;GetReference(101<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ref)</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num;</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;num,<sp/>1);</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"></highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>100;<sp/>++i)</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RefTargetHandle<sp/>ref<sp/>=<sp/>mod-&gt;GetReference(101<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ref)</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"></highlight></codeline>
<codeline lineno="2641"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R27)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R27</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>name<sp/>=<sp/>mod-&gt;SubAnimName(1<sp/>+<sp/>i,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">).data();</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>name<sp/>=<sp/>mod-&gt;SubAnimName(1<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"></highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.Length()<sp/>&gt;=<sp/>255)</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>name.Length();</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;len,<sp/>1);</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(name.data(),<sp/>len);</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>nodeId<sp/>=<sp/><ref refid="classExportENCB_1a82ac93ea652a754c6934ee20abd1b43c" kindref="member">getnodeid</ref>((INode<sp/>*)ref);</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;nodeId,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(nodeId));</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"></highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(physiqueMod)</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDerivedObject<sp/>&amp;der<sp/>=<sp/>*(IDerivedObject<sp/>*)n-&gt;GetObjectRef();</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Modifier<sp/>*mod<sp/>=<sp/>der.GetModifier(der.NumModifiers()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"></highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IPhysiqueExport<sp/>*phyExport<sp/>=<sp/>(IPhysiqueExport<sp/>*)mod-&gt;GetInterface(I_PHYINTERFACE);</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IPhyContextExport<sp/>*contextExport<sp/>=<sp/>(IPhyContextExport<sp/>*)phyExport-&gt;GetContextInterface(n);</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"></highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contextExport-&gt;ConvertToRigid();</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contextExport-&gt;AllowBlending();</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a1450f7ddd500b592a4bda3ce278be908" kindref="member">numv</ref><sp/>=<sp/>contextExport-&gt;GetNumberVertices();</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>bone<sp/>nodes<sp/>and<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;INode<sp/>*&gt;<sp/>bones;</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;float&gt;<sp/>wt;</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="util_8cpp_1a1450f7ddd500b592a4bda3ce278be908" kindref="member">numv</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IPhyVertexExport<sp/>*vtx<sp/>=<sp/>(IPhyVertexExport<sp/>*)contextExport-&gt;GetVertexInterface(i);</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vtx)</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"></highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vtx-&gt;GetVertexType()<sp/>==<sp/>RIGID_TYPE)</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rigid<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IPhyRigidVertex<sp/>*v<sp/>=<sp/>(IPhyRigidVertex<sp/>*)vtx;</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INode<sp/>*bnode<sp/>=<sp/>v-&gt;GetNode();</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>bones.Count();<sp/>++j)</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bones[j]<sp/>==<sp/>bnode)</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&gt;=<sp/>bones.Count())</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt.SetCount((bones.Count()<sp/>+<sp/>1)<sp/>*<sp/><ref refid="util_8cpp_1a1450f7ddd500b592a4bda3ce278be908" kindref="member">numv</ref>);</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;wt[bones.Count()<sp/>*<sp/><ref refid="util_8cpp_1a1450f7ddd500b592a4bda3ce278be908" kindref="member">numv</ref>],<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>*<sp/><ref refid="util_8cpp_1a1450f7ddd500b592a4bda3ce278be908" kindref="member">numv</ref>);</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bones.Append(1,<sp/>&amp;bnode);</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt[j<sp/>*<sp/><ref refid="util_8cpp_1a1450f7ddd500b592a4bda3ce278be908" kindref="member">numv</ref><sp/>+<sp/>i]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vtx-&gt;GetVertexType()<sp/>==<sp/>RIGID_BLENDED_TYPE)</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blended<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IPhyBlendedRigidVertex<sp/>*v<sp/>=<sp/>(IPhyBlendedRigidVertex<sp/>*)vtx;</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>v-&gt;GetNumberNodes();</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wi<sp/>=<sp/>0;<sp/>wi<sp/>&lt;<sp/>num;<sp/>++wi)</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INode<sp/>*bnode<sp/>=<sp/>v-&gt;GetNode(wi);</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>bones.Count();<sp/>++j)</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bones[j]<sp/>==<sp/>bnode)</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"></highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&gt;=<sp/>bones.Count())</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt.SetCount((bones.Count()<sp/>+<sp/>1)<sp/>*<sp/><ref refid="util_8cpp_1a1450f7ddd500b592a4bda3ce278be908" kindref="member">numv</ref>);</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;wt[bones.Count()<sp/>*<sp/><ref refid="util_8cpp_1a1450f7ddd500b592a4bda3ce278be908" kindref="member">numv</ref>],<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>*<sp/><ref refid="util_8cpp_1a1450f7ddd500b592a4bda3ce278be908" kindref="member">numv</ref>);</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bones.Append(1,<sp/>&amp;bnode);</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt[j<sp/>*<sp/><ref refid="util_8cpp_1a1450f7ddd500b592a4bda3ce278be908" kindref="member">numv</ref><sp/>+<sp/>i]<sp/>=<sp/>v-&gt;GetWeight(wi);</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"></highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contextExport-&gt;ReleaseVertexInterface(vtx);</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"></highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>skinning<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bones.Count()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="util_8cpp_1a1450f7ddd500b592a4bda3ce278be908" kindref="member">numv</ref><sp/>==<sp/>numvert)</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1a99fb83031ce9923c84392b4e92f956b5a5198d2fa1d87f4c4d09859333acd32f9" kindref="member">DAG_OBJ_BONES</ref>);</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"></highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>numb<sp/>=<sp/>bones.Count();</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;numb,<sp/>2);</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numb;<sp/>++i)</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDagBone" kindref="compound">DagBone</ref><sp/>b;</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INode<sp/>*bn<sp/>=<sp/>bones[i];</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.<ref refid="structDagBone_1a145563458792c88537d675f02ae3c3f2" kindref="member">id</ref><sp/>=<sp/><ref refid="classExportENCB_1a82ac93ea652a754c6934ee20abd1b43c" kindref="member">getnodeid</ref>(bn);</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b.<ref refid="structDagBone_1a145563458792c88537d675f02ae3c3f2" kindref="member">id</ref><sp/>==<sp/>0xFFFF)</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a6d1a7ff230ef43fa67f30777cf3fc315" kindref="member">explogError</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>skin<sp/>refers<sp/>to<sp/>missing<sp/>bone<sp/>&lt;%s&gt;<sp/>b.id=%04X\r\n&quot;</highlight><highlight class="normal">),<sp/>n-&gt;GetName(),<sp/>bn<sp/>?<sp/>bn-&gt;GetName()<sp/>:<sp/>_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.<ref refid="structDagBone_1a145563458792c88537d675f02ae3c3f2" kindref="member">id</ref>);</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix3<sp/>tm;</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phyExport-&gt;GetInitNodeTM(bn,<sp/>tm)<sp/>!=<sp/>MATRIX_RETURNED)</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>no<sp/>Physique<sp/>init<sp/>tm<sp/>for<sp/>%s\r\n&quot;</highlight><highlight class="normal">),<sp/>n-&gt;GetName(),<sp/>bn-&gt;GetName());</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm.IdentityMatrix();</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"></highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm<sp/>=<sp/>bn-&gt;GetStretchTM(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>)<sp/>*<sp/>tm;</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a146454c840ea1e558aa4713864b0245f" kindref="member">scale_matrix</ref>(tm);</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjwtm(tm);</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm<sp/>=<sp/>tm<sp/>*<sp/>Inverse(originTm);</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;b.<ref refid="structDagBone_1a7e498473b976829559f180294bbf8865" kindref="member">tm</ref>,<sp/>tm.GetAddr(),<sp/>4<sp/>*<sp/>3<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;b,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(b));</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"></highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;numvert,<sp/>4);</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;wt[0],<sp/>numvert<sp/>*<sp/>numb<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"></highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>exported<sp/>Physique<sp/>skinning\r\n&quot;</highlight><highlight class="normal">),<sp/>n-&gt;GetName());</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>invalid<sp/>bones<sp/>data\r\n&quot;</highlight><highlight class="normal">),<sp/>n-&gt;GetName());</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"></highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clean-up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phyExport-&gt;ReleaseContextInterface(contextExport);</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mod-&gt;ReleaseInterface(I_PHYINTERFACE,<sp/>phyExport);</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!skinmod)</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDerivedObject<sp/>&amp;der<sp/>=<sp/>*(IDerivedObject<sp/>*)n-&gt;GetProperty(PROPID_HAS_WSM);</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Modifier<sp/>*mod<sp/>=<sp/>der.GetModifier(der.NumModifiers()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WSMObject<sp/>*wsm<sp/>=<sp/>(WSMObject<sp/>*)mod-&gt;GetInterface(I_BONES_WARP);</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wsm)</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;Bone&gt;<sp/>*bon<sp/>=<sp/>(Tab&lt;Bone&gt;<sp/>*)wsm-&gt;GetInterface(I_BONES);</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bon)</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ModContext<sp/>*mc<sp/>=<sp/>der.GetModContext(0);</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mc)</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mc-&gt;localData)</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BonesModData<sp/>&amp;md<sp/>=<sp/>*(BonesModData<sp/>*)mc-&gt;localData;</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numbones<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bon-&gt;Count();<sp/>++i)</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*bon)[i].<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>)</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++numbones;</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md.VN<sp/>==<sp/>numvert<sp/>&amp;&amp;<sp/>numbones<sp/>==<sp/>md.BN)</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1a99fb83031ce9923c84392b4e92f956b5a5198d2fa1d87f4c4d09859333acd32f9" kindref="member">DAG_OBJ_BONES</ref>);</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;md.BN,<sp/>2);</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>md.BN;<sp/>++i)</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDagBone" kindref="compound">DagBone</ref><sp/>b;</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INode<sp/>*bn<sp/>=<sp/>(*bon)[md.bone[i].node].node;</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.<ref refid="structDagBone_1a145563458792c88537d675f02ae3c3f2" kindref="member">id</ref><sp/>=<sp/><ref refid="classExportENCB_1a82ac93ea652a754c6934ee20abd1b43c" kindref="member">getnodeid</ref>(bn);</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b.<ref refid="structDagBone_1a145563458792c88537d675f02ae3c3f2" kindref="member">id</ref><sp/>==<sp/>0xFFFF)</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a6d1a7ff230ef43fa67f30777cf3fc315" kindref="member">explogError</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>skin<sp/>refers<sp/>to<sp/>missing<sp/>bone<sp/>&lt;%s&gt;<sp/>b.id=%04X\r\n&quot;</highlight><highlight class="normal">),<sp/>n-&gt;GetName(),</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bn<sp/>?<sp/>bn-&gt;GetName()<sp/>:<sp/>_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>b.<ref refid="structDagBone_1a145563458792c88537d675f02ae3c3f2" kindref="member">id</ref>);</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix3<sp/>tm<sp/>=<sp/>md.bone[i].nodetm;</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;bone<sp/>%d:&quot;,i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug_tm(tm);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjwtm(tm);</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm<sp/>=<sp/>tm<sp/>*<sp/>Inverse(originTm);</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug_tm(tm);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;b.<ref refid="structDagBone_1a7e498473b976829559f180294bbf8865" kindref="member">tm</ref>,<sp/>tm.GetAddr(),<sp/>4<sp/>*<sp/>3<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;b,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(b));</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;md.VN,<sp/>4);</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;md.pt[0],<sp/>md.VN<sp/>*<sp/>md.BN<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>invalid<sp/>bones<sp/>data\r\n&quot;</highlight><highlight class="normal">),<sp/>n-&gt;GetName());</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wsm-&gt;ReleaseInterface(I_BONES,<sp/>bon);</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mod-&gt;ReleaseInterface(I_BONES_WARP,<sp/>wsm);</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"></highlight></codeline>
<codeline lineno="2843"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MAX_RELEASE<sp/>&gt;=<sp/>4000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDerivedObject<sp/>&amp;der<sp/>=<sp/>*(IDerivedObject<sp/>*)n-&gt;GetObjectRef();</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Modifier<sp/>*mod<sp/>=<sp/>der.GetModifier(der.NumModifiers()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ISkin<sp/>*skin<sp/>=<sp/>(ISkin<sp/>*)mod-&gt;GetInterface(I_SKIN);</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(skin)</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ISkinContextData<sp/>*ctx<sp/>=<sp/>skin-&gt;GetContextInterface(n);</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numb<sp/>=<sp/>skin-&gt;GetNumBones();</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numb<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>ctx<sp/>&amp;&amp;<sp/>ctx-&gt;GetNumPoints()<sp/>==<sp/>numvert)</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1a99fb83031ce9923c84392b4e92f956b5a5198d2fa1d87f4c4d09859333acd32f9" kindref="member">DAG_OBJ_BONES</ref>);</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;numb,<sp/>2);</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numb;<sp/>++i)</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDagBone" kindref="compound">DagBone</ref><sp/>b;</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INode<sp/>*bn<sp/>=<sp/>skin-&gt;GetBone(i);</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.<ref refid="structDagBone_1a145563458792c88537d675f02ae3c3f2" kindref="member">id</ref><sp/>=<sp/><ref refid="classExportENCB_1a82ac93ea652a754c6934ee20abd1b43c" kindref="member">getnodeid</ref>(bn);</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b.<ref refid="structDagBone_1a145563458792c88537d675f02ae3c3f2" kindref="member">id</ref><sp/>==<sp/>0xFFFF)</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a6d1a7ff230ef43fa67f30777cf3fc315" kindref="member">explogError</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>skin<sp/>refers<sp/>to<sp/>missing<sp/>bone<sp/>&lt;%s&gt;<sp/>b.id=%04X\r\n&quot;</highlight><highlight class="normal">),<sp/>n-&gt;GetName(),<sp/>bn<sp/>?<sp/>bn-&gt;GetName()<sp/>:<sp/>_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.<ref refid="structDagBone_1a145563458792c88537d675f02ae3c3f2" kindref="member">id</ref>);</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix3<sp/>tm;</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(skin-&gt;GetBoneInitTM(bn,<sp/>tm,<sp/>FALSE)<sp/>!=<sp/>SKIN_OK)</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>no<sp/>skin<sp/>init<sp/>tm<sp/>for<sp/>%s\r\n&quot;</highlight><highlight class="normal">),<sp/>n-&gt;GetName(),<sp/>bn-&gt;GetName());</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm.IdentityMatrix();</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm<sp/>=<sp/>bn-&gt;GetStretchTM(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>)<sp/>*<sp/>tm;</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a146454c840ea1e558aa4713864b0245f" kindref="member">scale_matrix</ref>(tm);</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"></highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2880"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug(_T(&quot;%s:<sp/>(%.3f,%.3f,%.3f)<sp/>(%.3f,%.3f,%.3f)<sp/>(%.3f,%.3f,%.3f)<sp/>(%.3f,%.3f,%.3f)&quot;),<sp/>(TCHAR*)<sp/>bn-&gt;GetName<sp/>(),</highlight></codeline>
<codeline lineno="2881"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm.GetRow(0).x,<sp/>tm.GetRow(0).y,<sp/>tm.GetRow(0).z,<sp/>tm.GetRow(1).x,<sp/>tm.GetRow(1).y,<sp/>tm.GetRow(1).z,</highlight></codeline>
<codeline lineno="2882"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm.GetRow(2).x,<sp/>tm.GetRow(2).y,<sp/>tm.GetRow(2).z,<sp/>tm.GetRow(3).x,<sp/>tm.GetRow(3).y,<sp/>tm.GetRow(3).z<sp/>);</highlight></codeline>
<codeline lineno="2883"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug(&quot;bone<sp/>%d:&quot;,i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug_tm(tm);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjwtm(tm);</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm<sp/>=<sp/>tm<sp/>*<sp/>Inverse(originTm);</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug_tm(tm);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;b.<ref refid="structDagBone_1a7e498473b976829559f180294bbf8865" kindref="member">tm</ref>,<sp/>tm.GetAddr(),<sp/>4<sp/>*<sp/>3<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;b,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(b));</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;numvert,<sp/>4);</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;float&gt;<sp/>wt;</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt.SetCount(numvert<sp/>*<sp/>numb);</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;wt[0],<sp/>0,<sp/>wt.Count()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numvert;<sp/>++i)</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb<sp/>=<sp/>ctx-&gt;GetNumAssignedBones(i);</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>nb;<sp/>++j)</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>ctx-&gt;GetAssignedBone(i,<sp/>j);</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(b<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>b<sp/>&lt;<sp/>numb);</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt[i<sp/>+<sp/>b<sp/>*<sp/>numvert]<sp/>=<sp/>ctx-&gt;GetBoneWeight(i,<sp/>j);</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>wt[i<sp/>+<sp/>b<sp/>*<sp/>numvert];</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"></highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sum<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>fabsf(sum<sp/>-<sp/>1)<sp/>&gt;<sp/>1e-5)</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>nb;<sp/>++j)</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>ctx-&gt;GetAssignedBone(i,<sp/>j);</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt[i<sp/>+<sp/>b<sp/>*<sp/>numvert]<sp/>/=<sp/>sum;</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;wt[0],<sp/>numvert<sp/>*<sp/>numb<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>invalid<sp/>skin<sp/>bones<sp/>data\r\n&quot;</highlight><highlight class="normal">),<sp/>n-&gt;GetName());</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tri)</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"></highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enod-&gt;<ref refid="structExpNode_1a14cee1ade5dd6a3e511d75bcf522a22a" kindref="member">child</ref>.Count())</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1adf764cbdea00d65edcd07bb9953ad2b7afad952e8f66ed1ca41d882b58b6e3dda" kindref="member">DAG_NODE_CHILDREN</ref>);</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>enod-&gt;<ref refid="structExpNode_1a14cee1ade5dd6a3e511d75bcf522a22a" kindref="member">child</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classExportENCB_1a220be4c30ceb5db734455ba3935379a7" kindref="member">save_node</ref>(enod-&gt;<ref refid="structExpNode_1a14cee1ade5dd6a3e511d75bcf522a22a" kindref="member">child</ref>[i],<sp/><ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>))</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//===============================================================================//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a34b244b1bb7a38b5f8f66cf62c1a01ce" kindref="member">save</ref>(FILE<sp/>*<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>,<sp/>Interface<sp/>*ip,<sp/>TCHAR<sp/>**textures,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_textures)</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca7c997ef7aea4da936f1ca86659dba95f" kindref="member">EXP_MESH</ref>)</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;bool&gt;<sp/>matUsed;</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>matUsed.SetCount(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count());</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a9798223a7ea40950b4f2f05d1e7e23fd" kindref="member">matIDtoMatIdx</ref>.SetCount(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count());</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matUsed[i]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a9798223a7ea40950b4f2f05d1e7e23fd" kindref="member">matIDtoMatIdx</ref>[i]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TIMER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start<sp/>=<sp/><ref refid="classTimer_1a03000d4bf8d0dd0bdd30f4ddfa860e45" kindref="member">Timer::NowMs</ref>();</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[i])</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObjectState<sp/>&amp;os<sp/>=<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[i]-&gt;EvalWorldState(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mtl<sp/>*mtl<sp/>=<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[i]-&gt;GetMtl();</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mat_num<sp/>=<sp/>mtl<sp/>?<sp/>mtl-&gt;NumSubMtls()<sp/>:<sp/>0)</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(os.obj<sp/>&amp;&amp;<sp/>os.obj-&gt;SuperClassID()<sp/>==<sp/>GEOMOBJECT_CLASS_ID<sp/>&amp;&amp;<sp/>os.obj-&gt;CanConvertToType(Class_ID(TRIOBJ_CLASS_ID,<sp/>0)))</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TriObject<sp/>*tri<sp/>=<sp/>(TriObject<sp/>*)os.obj-&gt;ConvertToType(<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>,<sp/>Class_ID(TRIOBJ_CLASS_ID,<sp/>0)))</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mesh<sp/>m<sp/>=<sp/>tri-&gt;mesh;</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tri<sp/>!=<sp/>os.obj)</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tri;</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>m.numFaces;<sp/>++j)</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref><sp/>=<sp/>m.faces[j].getMatID();</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat_num<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R26)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R26</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref><sp/>=<sp/>m.GetMtlIndex();</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref><sp/>=<sp/>m.mtlIndex;</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref><sp/>%=<sp/>mat_num;</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tempMat<sp/>=<sp/><ref refid="classExportENCB_1a3e8defe188c1cbb6828cf548486f657f" kindref="member">getusedmatid</ref>(mtl-&gt;GetSubMtl(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>));</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tempMat<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matUsed[tempMat]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempMat<sp/>=<sp/><ref refid="classExportENCB_1a9cddf091be94f216d49975026e7d9933" kindref="member">getmatid</ref>(mtl-&gt;GetSubMtl(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>));</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tempMat<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matUsed[tempMat]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matUsed[<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref><sp/>=<sp/><ref refid="classExportENCB_1a3e8defe188c1cbb6828cf548486f657f" kindref="member">getusedmatid</ref>(mtl,<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[i]-&gt;GetWireColor());</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matUsed[<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TIMER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>end<sp/>=<sp/><ref refid="classTimer_1a03000d4bf8d0dd0bdd30f4ddfa860e45" kindref="member">Timer::NowMs</ref>();</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;matUsed:<sp/>%g<sp/>ms\r\n&quot;</highlight><highlight class="normal">),<sp/>end<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;add_mtl:<sp/>%g<sp/>ms\r\n&quot;</highlight><highlight class="normal">),<sp/>mtlElapsed);</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;add_mtl<sp/>count:<sp/>%d\r\n&quot;</highlight><highlight class="normal">),<sp/>mtlCount);</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;proc<sp/>node<sp/>mtl<sp/>count:<sp/>%d\r\n&quot;</highlight><highlight class="normal">),<sp/>procNodeCount);</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;proc<sp/>add<sp/>mtl:<sp/>%g\r\n&quot;</highlight><highlight class="normal">),<sp/>procAddMtl);</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;dagorMatElapsed:<sp/>%g\r\n&quot;</highlight><highlight class="normal">),<sp/>dagorMatElapsed);</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;dagorMatEarlyExitElapsed:<sp/>%g\r\n&quot;</highlight><highlight class="normal">),<sp/>dagorMatEarlyExitElapsed);</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;mtls:<sp/>%d<sp/>mat:<sp/>%d\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="classExportENCB_1addef173d7948447d3866ebd84d86ea10" kindref="member">mtls</ref>.size(),<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count());</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;int&gt;<sp/>tex_remap;</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;TCHAR<sp/>*&gt;<sp/>new_tex;</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tex_remap.SetCount(<ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>.Count());</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tex_remap.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_remap[i]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"></highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matUsed[i])</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remap<sp/>textures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="dagfmt_8h_1a282dfcbdaafa034b352413466c4f781e" kindref="member">DAGTEXNUM</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].m.texid[j]<sp/>!=<sp/><ref refid="dagfmt_8h_1a58387a5ae7b7d5e8b0d03c90583a338e" kindref="member">DAGBADMATID</ref>)</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>&amp;texid<sp/>=<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].m.texid[j];</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_texid<sp/>=<sp/>tex_remap[texid];</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_texid<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_remap[texid]<sp/>=<sp/>new_texid<sp/>=<sp/>new_tex.Append(1,<sp/>&amp;<ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>[texid]);</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texid<sp/>=<sp/>new_texid;</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a9798223a7ea40950b4f2f05d1e7e23fd" kindref="member">matIDtoMatIdx</ref>[i]<sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++idx;</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;mat<sp/>%s<sp/>UNUSED\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].name);</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>unused<sp/>material<sp/>props</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].classname)</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].classname);</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].script)</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].script);</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"></highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].classname<sp/>=<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].script<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].m,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].m));</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="dagfmt_8h_1a282dfcbdaafa034b352413466c4f781e" kindref="member">DAGTEXNUM</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].m.texid[j]<sp/>=<sp/><ref refid="dagfmt_8h_1a58387a5ae7b7d5e8b0d03c90583a338e" kindref="member">DAGBADMATID</ref>;</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"></highlight></codeline>
<codeline lineno="3060"><highlight class="normal"></highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tex_remap[i]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;tex<sp/>%s<sp/>UNUSED\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>[i]);</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>[i]);</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref><sp/>=<sp/>new_tex;</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"></highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="dagfmt_8h_1a7f2c9efc6b71060e5602c8fe4464688f" kindref="member">DAG_ID</ref>;</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;n,<sp/>4);</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/>init_blk(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1a7f2c9efc6b71060e5602c8fe4464688f" kindref="member">DAG_ID</ref>);</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"></highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>textures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>.Count())</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1a06fc87d81c62e9abb8790b6e5713c55baf53833c694202e189b5e0e83b79d5d2c" kindref="member">DAG_TEXTURES</ref>);</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"></highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/><ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>.Count();</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>0xFFFF)</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"></highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;num,<sp/>2);</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[256];</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_snprintf(name,<sp/>255,<sp/><ref refid="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(<ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>[i]).c_str());</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>strlen(name);</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"></highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>name;<sp/>*s;<sp/>++s)</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*s<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*s<sp/>=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strchr(name,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_snprintf(name,<sp/>255,<sp/></highlight><highlight class="stringliteral">&quot;./%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(<ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>[i]).c_str());</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>strlen(name);</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"></highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>max_textures)</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textures[i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCHAR[256];</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>strcpy(textures[i],<sp/>name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_tcscpy(textures[i],<sp/><ref refid="expUtil_8cpp_1ac9fb07f5e9a035c1eca78f6428d9a590" kindref="member">strToWide</ref>(name).c_str());</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"></highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(name,<sp/></highlight><highlight class="stringliteral">&quot;#%d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>strlen(name);</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"></highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;l,<sp/>1);</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l)</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(name,<sp/>l);</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"></highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>s<sp/>=<sp/>tex[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>l<sp/>=<sp/>s.length<sp/>();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>l<sp/>&gt;<sp/>255<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>255;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(<sp/>int<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>l;<sp/>++j<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>s[j]<sp/>==<sp/>&apos;\\&apos;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[j]<sp/>=<sp/>&apos;/&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wr<sp/>(&amp;l,<sp/>1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>l<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wr<sp/>(<sp/>s,<sp/>l);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"></highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>materials</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a9798223a7ea40950b4f2f05d1e7e23fd" kindref="member">matIDtoMatIdx</ref>[i]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1a06fc87d81c62e9abb8790b6e5713c55baa54953b8e05322be30b25cac182c882d" kindref="member">DAG_MATER</ref>);</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].name)</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>s<sp/>=<sp/><ref refid="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].name);</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>s.length();</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&gt;<sp/>255)</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;l,<sp/>1);</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l)</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(s.c_str(),<sp/>l);</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(</highlight><highlight class="stringliteral">&quot;\0&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"></highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].m,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structDagMater" kindref="compound">DagMater</ref>));</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].classname)</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>s<sp/>=<sp/><ref refid="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].classname);</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>s.length();</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&gt;<sp/>255)</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;l,<sp/>1);</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l)</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(s.c_str(),<sp/>l);</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(</highlight><highlight class="stringliteral">&quot;\0&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"></highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].script)</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>s<sp/>=<sp/><ref refid="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>[i].script);</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>s.length();</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l)</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(s.c_str(),<sp/>l);</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"></highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>key<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a8bcbb5fb0fcf139c3b0fb37ff8a0942d" kindref="member">klabel</ref>.Count())</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1a06fc87d81c62e9abb8790b6e5713c55ba3f8a21c38be942b9a6f296ccc8bcff1e" kindref="member">DAG_KEYLABELS</ref>);</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/><ref refid="classExportENCB_1a8bcbb5fb0fcf139c3b0fb37ff8a0942d" kindref="member">klabel</ref>.Count();</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>0xFFFF)</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;num,<sp/>2);</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>(int)_tcslen(<ref refid="classExportENCB_1a8bcbb5fb0fcf139c3b0fb37ff8a0942d" kindref="member">klabel</ref>[i]);</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&gt;<sp/>255)</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;l,<sp/>1);</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l)</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(<ref refid="classExportENCB_1a8bcbb5fb0fcf139c3b0fb37ff8a0942d" kindref="member">klabel</ref>[i],<sp/>l);</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"></highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>note<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1a3e595643bf5f6eb98fd0ff3105328c87" kindref="member">ntrack</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1a06fc87d81c62e9abb8790b6e5713c55ba7ca2a5c2df3babea3f8f371e262b6478" kindref="member">DAG_NOTETRACK</ref>);</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/><ref refid="classExportENCB_1a3e595643bf5f6eb98fd0ff3105328c87" kindref="member">ntrack</ref>[i]-&gt;kl.Count();</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>num;<sp/>++j)</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDagNoteKey" kindref="compound">DagNoteKey</ref><sp/>k;</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k.<ref refid="structDagNoteKey_1a220b02b685ce75afd3f17fc37afd17e5" kindref="member">id</ref><sp/>=<sp/><ref refid="classExportENCB_1a3e595643bf5f6eb98fd0ff3105328c87" kindref="member">ntrack</ref>[i]-&gt;kl[j].id;</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k.<ref refid="structDagNoteKey_1a589fd33beed9329fad9d9265a0b06bc9" kindref="member">t</ref><sp/>=<sp/><ref refid="classExportENCB_1a3e595643bf5f6eb98fd0ff3105328c87" kindref="member">ntrack</ref>[i]-&gt;kl[j].t;</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;k,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(k));</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"></highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Tab&lt;ExpNode<sp/>*&gt;<sp/>en;</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>en.SetCount(<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count());</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>en.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>en[i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structExpNode" kindref="compound">ExpNode</ref>(i);</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(en[i]);</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structExpNode" kindref="compound">ExpNode</ref><sp/>*root<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structExpNode" kindref="compound">ExpNode</ref>(-1);</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(root);</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>pid<sp/>=<sp/><ref refid="classExportENCB_1a82ac93ea652a754c6934ee20abd1b43c" kindref="member">getnodeid</ref>(<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[i]-&gt;GetParentNode());</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid<sp/>&lt;<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count())</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>en[pid]-&gt;add_child(en[i]);</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug<sp/>(<sp/>&quot;<sp/><sp/>&lt;%s&gt;<sp/>is<sp/>linked<sp/>to<sp/>&lt;%s&gt;&quot;,<sp/>node[i]-&gt;GetName(),<sp/>node[pid]-&gt;GetName());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug<sp/>(<sp/>&quot;<sp/><sp/>&lt;%s&gt;<sp/>has<sp/>no<sp/>parent!<sp/>linked<sp/>to<sp/>root&quot;,<sp/>node[i]-&gt;GetName());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root-&gt;<ref refid="structExpNode_1a528c7bc5d56b2c958738748e4834a851" kindref="member">add_child</ref>(en[i]);</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1a06fc87d81c62e9abb8790b6e5713c55bae86c37d60258015f247e4e8b50d5bda8" kindref="member">DAG_NODE</ref>);</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1adf764cbdea00d65edcd07bb9953ad2b7a77d078c73b62a3a142315c2d21c3aecb" kindref="member">DAG_NODE_DATA</ref>);</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDagNodeData" kindref="compound">DagNodeData</ref><sp/>d;</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagNodeData_1a7f59307c5bb4e2c54998f58d83fd8101" kindref="member">id</ref><sp/>=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structDagNodeData_1a13d181080f2bec849922b5b5e255fc98" kindref="member">cnum</ref><sp/>=<sp/>root-&gt;<ref refid="structExpNode_1a14cee1ade5dd6a3e511d75bcf522a22a" kindref="member">child</ref>.Count();</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a809586e6a3f5c0b66b57d9f021bdc1f9" kindref="member">wr</ref>(&amp;d,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(d));</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root-&gt;<ref refid="structExpNode_1a14cee1ade5dd6a3e511d75bcf522a22a" kindref="member">child</ref>.Count())</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1adf764cbdea00d65edcd07bb9953ad2b7afad952e8f66ed1ca41d882b58b6e3dda" kindref="member">DAG_NODE_CHILDREN</ref>);</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>root-&gt;<ref refid="structExpNode_1a14cee1ade5dd6a3e511d75bcf522a22a" kindref="member">child</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classExportENCB_1a220be4c30ceb5db734455ba3935379a7" kindref="member">save_node</ref>(root-&gt;<ref refid="structExpNode_1a14cee1ade5dd6a3e511d75bcf522a22a" kindref="member">child</ref>[i],<sp/><ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>))</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"></highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1ad0ccfc112f913a01a897e341d93b2022" kindref="member">bblk</ref>(<ref refid="dagfmt_8h_1a06fc87d81c62e9abb8790b6e5713c55ba9063faa2c19c09b129a91162540f8dc2" kindref="member">DAG_END</ref>);</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"></highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1af72073a672fb009b5005670cb78a4598" kindref="member">eblk</ref>;</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"></highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Export<sp/>animation<sp/>in<sp/>Anim-v2<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3267" refid="structExportENCB_1_1AnimDataHeader" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structExportENCB_1_1AnimDataHeader" kindref="compound">AnimDataHeader</ref></highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structExportENCB_1_1AnimDataHeader_1a04ea1a5ad586d72e7ee7709505ca1043" kindref="member">label</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAKE4C(&apos;A&apos;,&apos;N&apos;,&apos;I&apos;,&apos;M&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structExportENCB_1_1AnimDataHeader_1a4dd3a62ff3f7b2a223339de58b7eeda4" kindref="member">ver</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structExportENCB_1_1AnimDataHeader_1adafc94160eee9c91a7259f417e02cb66" kindref="member">hdrSize</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>=sizeof(AnimDataHeader)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structExportENCB_1_1AnimDataHeader_1a51722633daa50d3f135aabe64d27f710" kindref="member">reserved</ref>;<sp/></highlight><highlight class="comment">//<sp/>0x00000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3273"><highlight class="normal"></highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structExportENCB_1_1AnimDataHeader_1a33b81f221461575e49a8532f9e9b7d95" kindref="member">namePoolSize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>name<sp/>pool,<sp/>in<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structExportENCB_1_1AnimDataHeader_1a773449cec587da9e773f57cc5c0abc3c" kindref="member">timeNum</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>entries<sp/>in<sp/>time<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structExportENCB_1_1AnimDataHeader_1aff215f4eb2cf456397ac98af86953837" kindref="member">keyPoolSize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>key<sp/>pool,<sp/>in<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structExportENCB_1_1AnimDataHeader_1a3c81a2739a3f649bda7b9cc3f195a84c" kindref="member">totalAnimLabelNum</ref>;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>keys<sp/>in<sp/>note<sp/>track<sp/>(time<sp/>labels)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structExportENCB_1_1AnimDataHeader_1ad6d4910b8e119c0426e90ba4a3566eb5" kindref="member">dataTypeNum</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>data<sp/>type<sp/>records</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3280" refid="structExportENCB_1_1DataTypeHeader" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structExportENCB_1_1DataTypeHeader" kindref="compound">DataTypeHeader</ref></highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structExportENCB_1_1DataTypeHeader_1ac4445e31ede20158538e869e971e0857" kindref="member">dataType</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>id<sp/>of<sp/>data<sp/>type,<sp/>analogue<sp/>for<sp/>channelType:<sp/>POINT3,<sp/>QUAT,<sp/>REAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structExportENCB_1_1DataTypeHeader_1aa684c8fd0527b80e5c65176c9b8d68bf" kindref="member">offsetInKeyPool</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>in<sp/>bytes<sp/>from<sp/>the<sp/>beginning<sp/>of<sp/>key<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structExportENCB_1_1DataTypeHeader_1a13f28ab1248f5f6eed832f324510dfce" kindref="member">offsetInTimePool</ref>;<sp/></highlight><highlight class="comment">//<sp/>offset<sp/>in<sp/>elements<sp/>from<sp/>the<sp/>beginning<sp/>of<sp/>time<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structExportENCB_1_1DataTypeHeader_1ac6eb5e37974aff33e1fe8ffc9ba6b80d" kindref="member">channelNum</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>channels<sp/>of<sp/>this<sp/>data<sp/>type<sp/>(see<sp/>below)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"></highlight></codeline>
<codeline lineno="3288" refid="structExportENCB_1_1ChannelParams" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structExportENCB_1_1ChannelParams" kindref="compound">ChannelParams</ref></highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structExportENCB_1_1ChannelParams_1abec959e6e10179629f4526fe5ae8da02" kindref="member">channelType</ref>;</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;unsigned&gt;<sp/><ref refid="structExportENCB_1_1ChannelParams_1ab90931e35df50bdbcd3c351675239dfd" kindref="member">keyNums</ref>;</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;int&gt;<sp/><ref refid="structExportENCB_1_1ChannelParams_1a1f94159e2528280d9a87f7686874f0ce" kindref="member">nodeNameIds</ref>;</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;float&gt;<sp/><ref refid="structExportENCB_1_1ChannelParams_1a732d77b08124253d371546578255ad8c" kindref="member">nodeWeights</ref>;</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"></highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a3190f1f55a1e0b6956f161ade3e9e391aa9f5ed9c906b1b726bb02418c5b5f800" kindref="member">DATATYPE_POINT3</ref><sp/>=<sp/>0x577084E5u,</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a3190f1f55a1e0b6956f161ade3e9e391a9b81157e2e3a8eda86dc44e35fa1e5d7" kindref="member">DATATYPE_QUAT</ref><sp/>=<sp/>0x39056464u,</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a3190f1f55a1e0b6956f161ade3e9e391a7ca948f7feaddc0e154d85651568c817" kindref="member">DATATYPE_REAL</ref><sp/>=<sp/>0xEE0BD66Au,</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"></highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ab98d903c76ffc62042bae791f692506babb547fe8d4c798e649778cd01fe8069d" kindref="member">CHTYPE_POSITION</ref><sp/>=<sp/>0xE66CF0CCu,</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ab98d903c76ffc62042bae791f692506baba7c816286e05a78ea6493f66931112b" kindref="member">CHTYPE_SCALE</ref><sp/>=<sp/>0x48D43D77u,</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ab98d903c76ffc62042bae791f692506bad4734a4dd4bc2a61c361bcfc0ce2193f" kindref="member">CHTYPE_ORIGIN_LIN_VEL</ref><sp/>=<sp/>0x31DE5F48u,</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ab98d903c76ffc62042bae791f692506ba65580c66f732cdc89f87f21e3c7a25ec" kindref="member">CHTYPE_ORIGIN_ANG_VEL</ref><sp/>=<sp/>0x09FD7093u,</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ab98d903c76ffc62042bae791f692506ba315588d8508bf38c15145af7466534c4" kindref="member">CHTYPE_ROTATION</ref><sp/>=<sp/>0x8D490AE4u,</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"></highlight></codeline>
<codeline lineno="3312" refid="structExportENCB_1_1AnimKeyQuat" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structExportENCB_1_1AnimKeyQuat" kindref="compound">AnimKeyQuat</ref></highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structExportENCB_1_1AnimKeyQuat_1a32c54a6d72163e71bf0faa9bbb931664" kindref="member">pw</ref>,<sp/><ref refid="structExportENCB_1_1AnimKeyQuat_1ab8275c8a7da882a5e70eb214a8b63130" kindref="member">bw</ref>;</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structExportENCB_1_1AnimKeyQuat_1a89c451ad947532533297de5747fdc058" kindref="member">sinpw</ref>,<sp/><ref refid="structExportENCB_1_1AnimKeyQuat_1a68d5215aeb629a8fe1862568f4e3db46" kindref="member">sinbw</ref>;</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/>Quat<sp/><ref refid="structExportENCB_1_1AnimKeyQuat_1aba761809c4adf8b20b48a459cab349d1" kindref="member">p</ref>,<sp/><ref refid="structExportENCB_1_1AnimKeyQuat_1a5b95269c26c2ad828b2dfdf950b5bdb0" kindref="member">b0</ref>,<sp/><ref refid="structExportENCB_1_1AnimKeyQuat_1acb52c6d37f367ee5f6054439511e3228" kindref="member">b1</ref>;</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3318" refid="structExportENCB_1_1AnimKeyLabel" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structExportENCB_1_1AnimKeyLabel" kindref="compound">AnimKeyLabel</ref></highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structExportENCB_1_1AnimKeyLabel_1a2bd5eec25bf769dfa63fd14f42e6f5cc" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structExportENCB_1_1AnimKeyLabel_1abf20af0b728b01d29b8c737c6b27c32c" kindref="member">idx</ref>;</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structExportENCB_1_1AnimKeyLabel_1ae0c23e0b591e69ce882031aa053978c5" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"></highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1a1396b14a97c6c6d0bf9a1f9968eaae57" kindref="member">make_postrack</ref>(<ref refid="structAnimKeyPoint3" kindref="compound">AnimKeyPoint3</ref><sp/>*k,<sp/><ref refid="structPosKey" kindref="compound">PosKey</ref><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>num<sp/>&gt;<sp/>1;<sp/>++k,<sp/>++s,<sp/>--num)</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k-&gt;<ref refid="structAnimKeyPoint3_1a1f2bc40f014af74a3031b7d8e68ed2e0" kindref="member">p</ref><sp/>=<sp/>s-&gt;p;</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k-&gt;<ref refid="structAnimKeyPoint3_1a6c2fc8d585bf30bdffd3e4bca1565a88" kindref="member">k1</ref><sp/>=<sp/>(s-&gt;o<sp/>-<sp/>s-&gt;p)<sp/>*<sp/>3;</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k-&gt;<ref refid="structAnimKeyPoint3_1ac127ab60ea8537d769c7c28b93b028b6" kindref="member">k2</ref><sp/>=<sp/>(s-&gt;p<sp/>+<sp/>s[1].i<sp/>-<sp/>s-&gt;o<sp/>*<sp/>2)<sp/>*<sp/>3;</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k-&gt;<ref refid="structAnimKeyPoint3_1a1cfcf2df0d85a3d1402c3450adcf47ae" kindref="member">k3</ref><sp/>=<sp/>(s-&gt;o<sp/>-<sp/>s[1].i)<sp/>*<sp/>3<sp/>+<sp/>s[1].<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref><sp/>-<sp/>s-&gt;p;</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/>k-&gt;<ref refid="structAnimKeyPoint3_1a1f2bc40f014af74a3031b7d8e68ed2e0" kindref="member">p</ref><sp/>=<sp/>s-&gt;<ref refid="structPosKey_1a3503f0dc950198c6ec9e937e205da997" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1acfe89a86f152a11e886b603cdf7ed01f" kindref="member">make_rottrack</ref>(AnimKeyQuat<sp/>*k,<sp/><ref refid="structRotKey" kindref="compound">RotKey</ref><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(num<sp/>*<sp/>2<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*x<sp/>=<sp/><ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref><sp/>+<sp/>num<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"></highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num<sp/>-<sp/>1;<sp/>++i)</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k[i].p<sp/>=<sp/>Conjugate(s[i].<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Quat<sp/>b0<sp/>=<sp/>Conjugate(s[i].o),<sp/>b1<sp/>=<sp/>Conjugate(s[i<sp/>+<sp/>1].i);</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Quat<sp/>sip<sp/>=<sp/>Conjugate(s[i].<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>),<sp/>sipn<sp/>=<sp/>Conjugate(s[i<sp/>+<sp/>1].<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"></highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>b0.x<sp/>*<sp/>b1.x<sp/>+<sp/>b0.y<sp/>*<sp/>b1.y<sp/>+<sp/>b0.z<sp/>*<sp/>b1.z<sp/>+<sp/>b0.w<sp/>*<sp/>b1.w;</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1<sp/>=<sp/>-b1;</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>-f;</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k[i].b0<sp/>=<sp/>b0;</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k[i].b1<sp/>=<sp/>b1;</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k[i].sinbw<sp/>=<sp/>k[i].bw<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k[i].sinbw<sp/>=<sp/>sinf(k[i].bw<sp/>=<sp/>acosf(f));</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"></highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>sip.x<sp/>*<sp/>sipn.x<sp/>+<sp/>sip.y<sp/>*<sp/>sipn.y<sp/>+<sp/>sip.z<sp/>*<sp/>sipn.z<sp/>+<sp/>sip.w<sp/>*<sp/>sipn.w;</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>[i]<sp/>=<sp/>f<sp/>&lt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k[i].pw<sp/>=<sp/>f;</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/>k[i].p<sp/>=<sp/>Conjugate(s[i].<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/>k[i].pw<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(x,<sp/>0,<sp/>num);</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"></highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num<sp/>-<sp/>1;<sp/>++i)</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>[i])</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>num<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>num<sp/>-<sp/>1;<sp/>++i)</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>[i<sp/>-<sp/>1]<sp/>&amp;&amp;<sp/><ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>[i])</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>[i<sp/>-<sp/>1]<sp/>=<sp/><ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i]<sp/>^=<sp/>1;</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>[0])</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[0]<sp/>^=<sp/>1;</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>num<sp/>-<sp/>1;<sp/>++i)</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>[i])</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>[i<sp/>-<sp/>1]<sp/>^=<sp/>1;</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i]<sp/>^=<sp/>1;</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x[i])</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k[i].p<sp/>=<sp/>-k[i].p;</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k[i].pw<sp/>=<sp/>-k[i].pw;</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k[i<sp/>-<sp/>1].pw<sp/>=<sp/>-k[i<sp/>-<sp/>1].pw;</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k[i].pw<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k[i].sinpw<sp/>=<sp/>k[i].pw<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k[i].sinpw<sp/>=<sp/>sinf(k[i].pw<sp/>=<sp/>acosf(k[i].pw));</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"></highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"></highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1ab1556565e652cd96d2715dfbbfadb201" kindref="member">save_anim2</ref>(FILE<sp/>*fp,<sp/>Interface<sp/>*ip)</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pools<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*namesPool;</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;int&gt;<sp/>originLinVelT;</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;int&gt;<sp/>originAngVelT;</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;AnimKeyPoint3&gt;<sp/>originLinVel;</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;AnimKeyPoint3&gt;<sp/>originAngVel;</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;AnimChanPoint3<sp/>*&gt;<sp/>pos;</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;AnimChanPoint3<sp/>*&gt;<sp/>scl;</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;AnimChanQuat<sp/>*&gt;<sp/>rot;</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;AnimKeyLabel&gt;<sp/>noteTrackKeys;</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"></highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>nodes<sp/>for<sp/>export</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;INode<sp/>*&gt;<sp/>exportNodes;</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a212a05425275e17313a58810e69ec95c" kindref="member">nodeExp</ref>[i])</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exportNodes.Append(1,<sp/>&amp;<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[i]);</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"></highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>data<sp/>to<sp/>prepare<sp/>for<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/>getNoteTrackKeys(exportNodes,<sp/>noteTrackKeys);</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"></highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/>getOriginVelocities(originLinVel,<sp/>originAngVel,<sp/>originLinVelT,<sp/>originAngVelT);</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"></highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;int&gt;<sp/>additionalIds;</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;char<sp/>*&gt;<sp/>additionalNames;</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linVelId<sp/>=<sp/>-1,<sp/>angVelId<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str;</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(originLinVel.Count())</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>linVelId<sp/>=<sp/>additionalNames.Append(1,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)&amp;(str<sp/>=<sp/>strdup(<ref refid="expUtil_8cpp_1abc4af7c9a5cb3f58feeab2643f6102ea" kindref="member">origin_lin_vel_node_name</ref>)));</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(originAngVel.Count())</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>angVelId<sp/>=<sp/>additionalNames.Append(1,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)&amp;(str<sp/>=<sp/>strdup(<ref refid="expUtil_8cpp_1a817cb8996a10ac6b56b0730e268ba158" kindref="member">origin_ang_vel_node_name</ref>)));</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"></highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>namePoolSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*nameIdx<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/>getNamePool(exportNodes,<sp/>noteTrackKeys,<sp/>namesPool,<sp/>nameIdx,<sp/>namePoolSize,<sp/>additionalNames,<sp/>additionalIds);</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"></highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!getAnimations(<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>,<sp/><ref refid="classExportENCB_1a212a05425275e17313a58810e69ec95c" kindref="member">nodeExp</ref>,<sp/>exportNodes,<sp/>pos,<sp/>rot,<sp/>scl))</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"></highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>keyPoolSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>timeNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>keyNum;</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nodeWeight<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"></highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Point3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>maxSizePoint3AnimKey<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/>DataTypeHeader<sp/>point3DataTypeHeader;</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/>point3DataTypeHeader.dataType<sp/>=<sp/><ref refid="classExportENCB_1a3190f1f55a1e0b6956f161ade3e9e391aa9f5ed9c906b1b726bb02418c5b5f800" kindref="member">DATATYPE_POINT3</ref>;</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/><sp/>point3DataTypeHeader.offsetInKeyPool<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/>point3DataTypeHeader.offsetInTimePool<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/>point3DataTypeHeader.channelNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"></highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/>ChannelParams<sp/>originLinVelCannelParams;</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(originLinVel.Count())</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>originLinVelCannelParams.channelType<sp/>=<sp/><ref refid="classExportENCB_1ab98d903c76ffc62042bae791f692506bad4734a4dd4bc2a61c361bcfc0ce2193f" kindref="member">CHTYPE_ORIGIN_LIN_VEL</ref>;</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>originLinVelCannelParams.keyNums.Append(1,<sp/>&amp;(keyNum<sp/>=<sp/>originLinVel.Count()));</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>originLinVelCannelParams.nodeNameIds.Append(1,<sp/>&amp;additionalIds[linVelId]);</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>originLinVelCannelParams.nodeWeights.Append(1,<sp/>&amp;nodeWeight);</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxSizePoint3AnimKey<sp/>&lt;<sp/>originLinVel.Count())</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxSizePoint3AnimKey<sp/>=<sp/>originLinVel.Count();</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>keyPoolSize<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structAnimKeyPoint3" kindref="compound">AnimKeyPoint3</ref>)<sp/>*<sp/>originLinVel.Count();</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeNum<sp/>+=<sp/>originLinVel.Count();</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++point3DataTypeHeader.channelNum;</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"></highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/>ChannelParams<sp/>originAngVelCannelParams;</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(originAngVel.Count())</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>originAngVelCannelParams.channelType<sp/>=<sp/><ref refid="classExportENCB_1ab98d903c76ffc62042bae791f692506ba65580c66f732cdc89f87f21e3c7a25ec" kindref="member">CHTYPE_ORIGIN_ANG_VEL</ref>;</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>originAngVelCannelParams.keyNums.Append(1,<sp/>&amp;(keyNum<sp/>=<sp/>originAngVel.Count()));</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>originAngVelCannelParams.nodeNameIds.Append(1,<sp/>&amp;additionalIds[angVelId]);</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>originAngVelCannelParams.nodeWeights.Append(1,<sp/>&amp;nodeWeight);</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxSizePoint3AnimKey<sp/>&lt;<sp/>originAngVel.Count())</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxSizePoint3AnimKey<sp/>=<sp/>originAngVel.Count();</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>keyPoolSize<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structAnimKeyPoint3" kindref="compound">AnimKeyPoint3</ref>)<sp/>*<sp/>originAngVel.Count();</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeNum<sp/>+=<sp/>originAngVel.Count();</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++point3DataTypeHeader.channelNum;</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"></highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/>ChannelParams<sp/>posCannelParams;</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/>ChannelParams<sp/>sclCannelParams;</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/>posCannelParams.channelType<sp/>=<sp/><ref refid="classExportENCB_1ab98d903c76ffc62042bae791f692506babb547fe8d4c798e649778cd01fe8069d" kindref="member">CHTYPE_POSITION</ref>;</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/>sclCannelParams.channelType<sp/>=<sp/><ref refid="classExportENCB_1ab98d903c76ffc62042bae791f692506baba7c816286e05a78ea6493f66931112b" kindref="member">CHTYPE_SCALE</ref>;</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>exportNodes.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((keyNum<sp/>=<sp/>pos[i]-&gt;key.Count())<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>posCannelParams.keyNums.Append(1,<sp/>&amp;keyNum);</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>posCannelParams.nodeNameIds.Append(1,<sp/>&amp;nameIdx[i]);</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>posCannelParams.nodeWeights.Append(1,<sp/>&amp;nodeWeight);</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxSizePoint3AnimKey<sp/>&lt;<sp/>keyNum)</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxSizePoint3AnimKey<sp/>=<sp/>keyNum;</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyPoolSize<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structAnimKeyPoint3" kindref="compound">AnimKeyPoint3</ref>)<sp/>*<sp/>keyNum;</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeNum<sp/>+=<sp/>keyNum;</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((keyNum<sp/>=<sp/>scl[i]-&gt;key.Count())<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sclCannelParams.keyNums.Append(1,<sp/>&amp;keyNum);</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sclCannelParams.nodeNameIds.Append(1,<sp/>&amp;nameIdx[i]);</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sclCannelParams.nodeWeights.Append(1,<sp/>&amp;nodeWeight);</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxSizePoint3AnimKey<sp/>&lt;<sp/>keyNum)</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxSizePoint3AnimKey<sp/>=<sp/>keyNum;</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyPoolSize<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structAnimKeyPoint3" kindref="compound">AnimKeyPoint3</ref>)<sp/>*<sp/>keyNum;</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeNum<sp/>+=<sp/>keyNum;</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(posCannelParams.keyNums.Count())</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++point3DataTypeHeader.channelNum;</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sclCannelParams.keyNums.Count())</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++point3DataTypeHeader.channelNum;</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"></highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Quat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>maxSizeQuatAnimKey<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/>DataTypeHeader<sp/>quatDataTypeHeader;</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/>quatDataTypeHeader.dataType<sp/>=<sp/><ref refid="classExportENCB_1a3190f1f55a1e0b6956f161ade3e9e391a9b81157e2e3a8eda86dc44e35fa1e5d7" kindref="member">DATATYPE_QUAT</ref>;</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/>quatDataTypeHeader.offsetInKeyPool<sp/>=<sp/>keyPoolSize;</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/>quatDataTypeHeader.offsetInTimePool<sp/>=<sp/>timeNum;</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/>quatDataTypeHeader.channelNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"></highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/>ChannelParams<sp/>rotCannelParams;</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/>rotCannelParams.channelType<sp/>=<sp/><ref refid="classExportENCB_1ab98d903c76ffc62042bae791f692506ba315588d8508bf38c15145af7466534c4" kindref="member">CHTYPE_ROTATION</ref>;</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>exportNodes.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((keyNum<sp/>=<sp/>rot[i]-&gt;key.Count())<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotCannelParams.keyNums.Append(1,<sp/>&amp;keyNum);</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotCannelParams.nodeNameIds.Append(1,<sp/>&amp;nameIdx[i]);</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotCannelParams.nodeWeights.Append(1,<sp/>&amp;nodeWeight);</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxSizeQuatAnimKey<sp/>&lt;<sp/>keyNum)</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxSizeQuatAnimKey<sp/>=<sp/>keyNum;</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyPoolSize<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(AnimKeyQuat)<sp/>*<sp/>keyNum;</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeNum<sp/>+=<sp/>keyNum;</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotCannelParams.keyNums.Count())</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++quatDataTypeHeader.channelNum;</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"></highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/>AnimDataHeader<sp/>hdr;</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;hdr,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hdr));</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr.label<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;MINA&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr.ver<sp/>=<sp/>0x200;</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr.hdrSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hdr);</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"></highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr.namePoolSize<sp/>=<sp/>namePoolSize;</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr.timeNum<sp/>=<sp/>timeNum;</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr.keyPoolSize<sp/>=<sp/>keyPoolSize;</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr.totalAnimLabelNum<sp/>=<sp/>noteTrackKeys.Count();</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr.dataTypeNum<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Point3,<sp/>Quot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(point3DataTypeHeader.channelNum)</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++hdr.dataTypeNum;</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(quatDataTypeHeader.channelNum)</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++hdr.dataTypeNum;</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"></highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(&amp;hdr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hdr),<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"></highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>names<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(namesPool,<sp/>hdr.namePoolSize,<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"></highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>times<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(originLinVelT.Count())</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(originLinVelT.Addr(0),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>originLinVelT.Count(),<sp/>fp);</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"></highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(originAngVelT.Count())</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(originAngVelT.Addr(0),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>originAngVelT.Count(),<sp/>fp);</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"></highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>exportNodes.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>pos[i]-&gt;key.Count();<sp/>++j)</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(&amp;pos[i]-&gt;key[j].t,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"></highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>exportNodes.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>scl[i]-&gt;key.Count();<sp/>++j)</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(&amp;scl[i]-&gt;key[j].t,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"></highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>exportNodes.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>rot[i]-&gt;key.Count();<sp/>++j)</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(&amp;rot[i]-&gt;key[j].t,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"></highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>keys<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>write<sp/>pos<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structAnimKeyPoint3" kindref="compound">AnimKeyPoint3</ref><sp/>*point3AnimKey<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structAnimKeyPoint3" kindref="compound">AnimKeyPoint3</ref>[maxSizePoint3AnimKey];</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>write<sp/>origin<sp/>velocitiy<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(originLinVel.Count())</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(originLinVel.Addr(0),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structAnimKeyPoint3" kindref="compound">AnimKeyPoint3</ref>),<sp/>originLinVel.Count(),<sp/>fp);</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"></highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(originAngVel.Count())</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(originAngVel.Addr(0),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structAnimKeyPoint3" kindref="compound">AnimKeyPoint3</ref>),<sp/>originAngVel.Count(),<sp/>fp);</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"></highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>write<sp/>per-node<sp/>pos<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>exportNodes.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pos[i]-&gt;key.Count())</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(point3AnimKey,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structAnimKeyPoint3" kindref="compound">AnimKeyPoint3</ref>)<sp/>*<sp/>maxSizePoint3AnimKey);</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a1396b14a97c6c6d0bf9a1f9968eaae57" kindref="member">make_postrack</ref>(point3AnimKey,<sp/>pos[i]-&gt;key.Addr(0),<sp/>pos[i]-&gt;key.Count());</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(point3AnimKey,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structAnimKeyPoint3" kindref="compound">AnimKeyPoint3</ref>),<sp/>pos[i]-&gt;key.Count(),<sp/>fp);</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"></highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>write<sp/>scl<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>exportNodes.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!scl[i]-&gt;key.Count())</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(point3AnimKey,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structAnimKeyPoint3" kindref="compound">AnimKeyPoint3</ref>)<sp/>*<sp/>maxSizePoint3AnimKey);</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a1396b14a97c6c6d0bf9a1f9968eaae57" kindref="member">make_postrack</ref>(point3AnimKey,<sp/>scl[i]-&gt;key.Addr(0),<sp/>scl[i]-&gt;key.Count());</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(point3AnimKey,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structAnimKeyPoint3" kindref="compound">AnimKeyPoint3</ref>),<sp/>scl[i]-&gt;key.Count(),<sp/>fp);</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>point3AnimKey;</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"></highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>write<sp/>rot<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/>AnimKeyQuat<sp/>*quatAnimKey<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnimKeyQuat[maxSizeQuatAnimKey];</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>exportNodes.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rot[i]-&gt;key.Count())</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(quatAnimKey,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(AnimKeyQuat)<sp/>*<sp/>maxSizeQuatAnimKey);</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1acfe89a86f152a11e886b603cdf7ed01f" kindref="member">make_rottrack</ref>(quatAnimKey,<sp/>rot[i]-&gt;key.Addr(0),<sp/>rot[i]-&gt;key.Count());</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(quatAnimKey,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(AnimKeyQuat),<sp/>rot[i]-&gt;key.Count(),<sp/>fp);</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>quatAnimKey;</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"></highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>note<sp/>track<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(noteTrackKeys.Count())</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>noteTrackKeys.Count();<sp/>i++)</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(&amp;noteTrackKeys[i].idx,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(&amp;noteTrackKeys[i].<ref refid="classExportENCB_1a40283f30686d7b2f9399360a8c7ee33a" kindref="member">time</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>NoteTrack<sp/>not<sp/>used\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"></highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>data<sp/>of<sp/>animation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>write<sp/>point3<sp/>data<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(&amp;point3DataTypeHeader,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(point3DataTypeHeader),<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/>writeChannel(originLinVelCannelParams,<sp/>fp);</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/>writeChannel(originAngVelCannelParams,<sp/>fp);</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/>writeChannel(posCannelParams,<sp/>fp);</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/>writeChannel(sclCannelParams,<sp/>fp);</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"></highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>write<sp/>quat<sp/>data<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(&amp;quatDataTypeHeader,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(quatDataTypeHeader),<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/>writeChannel(rotCannelParams,<sp/>fp);</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"></highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>originLinVelKeyNum=%d\r\n<sp/>originAngVelKeyNum=%d\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>originLinVelCannelParams.keyNums.Count()<sp/>?<sp/>originLinVelCannelParams.keyNums[0]<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>originAngVelCannelParams.keyNums.Count()<sp/>?<sp/>originAngVelCannelParams.keyNums[0]<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"></highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>keyPosNum=%d\r\n<sp/>keySclNum=%d\r\n<sp/>keyRotNum=%d\r\n&quot;</highlight><highlight class="normal">),<sp/>getKeyNumInChannel(posCannelParams),</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getKeyNumInChannel(sclCannelParams),<sp/>getKeyNumInChannel(rotCannelParams));</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"></highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>posNodeNum=%d\r\n<sp/>sclNodeNum=%d\r\n<sp/>rotNodeNum=%d\r\n&quot;</highlight><highlight class="normal">),<sp/>posCannelParams.keyNums.Count(),</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sclCannelParams.keyNums.Count(),<sp/>rotCannelParams.keyNums.Count());</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"></highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>namePoolSz=%d\r\n&quot;</highlight><highlight class="normal">),<sp/>namePoolSize);</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>timePoolSz=%d\r\n&quot;</highlight><highlight class="normal">),<sp/>timeNum<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>keyPoolSz=%d\r\n&quot;</highlight><highlight class="normal">),<sp/>keyPoolSize);</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"></highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>additionalNames.Count();<sp/>--i<sp/>&gt;=<sp/>0;)</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>additionalNames[i];</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>pos.Count();<sp/>--i<sp/>&gt;=<sp/>0;)</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pos[i];</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>scl.Count();<sp/>--i<sp/>&gt;=<sp/>0;)</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>scl[i];</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>rot.Count();<sp/>--i<sp/>&gt;=<sp/>0;)</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rot[i];</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>nameIdx;</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/>free(namesPool);</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"></highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"></highlight></codeline>
<codeline lineno="3696"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>wr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3697"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>bblk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3698"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>eblk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3699"><highlight class="normal"></highlight></codeline>
<codeline lineno="3700"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getNoteTrackKeys(Tab&lt;INode<sp/>*&gt;<sp/>&amp;exportNodes,<sp/>Tab&lt;AnimKeyLabel&gt;<sp/>&amp;noteTrackKeys);</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"></highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getNamePool(Tab&lt;INode<sp/>*&gt;<sp/>&amp;exportNodes,<sp/>Tab&lt;AnimKeyLabel&gt;<sp/>&amp;noteTrackKeys,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;namesPool,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*&amp;nameIdx,</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>&amp;namePoolSize,<sp/>Tab&lt;char<sp/>*&gt;<sp/>&amp;additionalNames,<sp/>Tab&lt;int&gt;<sp/>&amp;additionalIds);</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"></highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>getAnimations(Tab&lt;INode<sp/>*&gt;<sp/>&amp;<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>,<sp/>Tab&lt;bool&gt;<sp/>&amp;<ref refid="classExportENCB_1a212a05425275e17313a58810e69ec95c" kindref="member">nodeExp</ref>,<sp/>Tab&lt;INode<sp/>*&gt;<sp/>&amp;exportNodes,<sp/>Tab&lt;AnimChanPoint3<sp/>*&gt;<sp/>&amp;pos,</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;AnimChanQuat<sp/>*&gt;<sp/>&amp;rot,<sp/>Tab&lt;AnimChanPoint3<sp/>*&gt;<sp/>&amp;scl);</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"></highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getOriginVelocities(Tab&lt;AnimKeyPoint3&gt;<sp/>&amp;originLinVel,<sp/>Tab&lt;AnimKeyPoint3&gt;<sp/>&amp;originAngVel,<sp/>Tab&lt;int&gt;<sp/>&amp;originLinVelT,</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;int&gt;<sp/>&amp;originAngVelT);</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"></highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeChannel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ChannelParams<sp/>&amp;params,<sp/>FILE<sp/>*fp);</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"></highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getKeyNumInChannel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ChannelParams<sp/>&amp;params);</highlight></codeline>
<codeline lineno="3715"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"></highlight></codeline>
<codeline lineno="3717"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ExportENCB::getKeyNumInChannel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ChannelParams<sp/>&amp;params)</highlight></codeline>
<codeline lineno="3718"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>params.keyNums.Count();<sp/>--i<sp/>&gt;=<sp/>0;)</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>params.keyNums[i];</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="3723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"></highlight></codeline>
<codeline lineno="3725"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ExportENCB::getNoteTrackKeys(Tab&lt;INode<sp/>*&gt;<sp/>&amp;exportNodes,<sp/>Tab&lt;AnimKeyLabel&gt;<sp/>&amp;noteTrackKeys)</highlight></codeline>
<codeline lineno="3726"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/>DefNoteTrack<sp/>*noteTrack<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>exportNodes.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!exportNodes[i]-&gt;HasNoteTracks())</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>exportNodes[i]-&gt;NumNoteTracks();<sp/>++j)</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((noteTrack<sp/>=<sp/>(DefNoteTrack<sp/>*)exportNodes[i]-&gt;GetNoteTrack(j))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>noteTrack-&gt;keys.Count();<sp/>++k)</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NoteKey<sp/>*key<sp/>=<sp/>noteTrack-&gt;keys[k];</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca956d9e2e9bf0cfa553e275e892b79bb0" kindref="member">EXP_ARNG</ref>)<sp/>&amp;&amp;<sp/>(key-&gt;time<sp/>&lt;<sp/>util.<ref refid="classExpUtil_1a11e3343900a93370d7eb826dcc5ea98b" kindref="member">astart</ref><sp/>||<sp/>key-&gt;time<sp/>&gt;<sp/>util.<ref refid="classExpUtil_1a3b55a6b7b7eb2f628552d88a28679793" kindref="member">aend</ref>))</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AnimKeyLabel<sp/>label;</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.name<sp/>=<sp/>strdup(<ref refid="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(key-&gt;note).c_str());</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.time<sp/>=<sp/>key-&gt;time;</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noteTrackKeys.Append(1,<sp/>&amp;label,<sp/>32);</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ExportENCB::getNamePool(Tab&lt;INode<sp/>*&gt;<sp/>&amp;exportNodes,<sp/>Tab&lt;AnimKeyLabel&gt;<sp/>&amp;noteTrackKeys,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;namesPool,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*&amp;nameIdx,</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>&amp;namePoolSize,<sp/>Tab&lt;char<sp/>*&gt;<sp/>&amp;additionalNames,<sp/>Tab&lt;int&gt;<sp/>&amp;additionalIds)</highlight></codeline>
<codeline lineno="3752"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/>additionalIds.SetCount(additionalNames.Count());</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>prepare<sp/>nodes<sp/>name<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/>namePoolSize<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>exportNodes.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((len<sp/>=<sp/>exportNodes[i]-&gt;GetName()<sp/>?<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)_tcslen(exportNodes[i]-&gt;GetName())<sp/>:<sp/>0)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>namePoolSize<sp/>+=<sp/>len<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>noteTrackKeys.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((len<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)strlen(noteTrackKeys[i].name))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>namePoolSize<sp/>+=<sp/>len<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>additionalNames.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((len<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)strlen(additionalNames[i]))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>namePoolSize<sp/>+=<sp/>len<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/>namePoolSize<sp/>=<sp/>(namePoolSize<sp/>+<sp/>7)<sp/>&amp;<sp/>~7;</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"></highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/>namesPool<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(namePoolSize);</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/>nameIdx<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[exportNodes.Count()];</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/>memset(nameIdx,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>*<sp/>exportNodes.Count());</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"></highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/>namesPool[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/>namePoolSize<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>exportNodes.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/><ref refid="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(exportNodes[i]-&gt;GetName());</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((len<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)name.size())<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nameIdx[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nameIdx[i]<sp/>=<sp/>namePoolSize;</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*poolName<sp/>=<sp/>namesPool<sp/>+<sp/>namePoolSize;</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(poolName,<sp/>name.c_str());</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>namePoolSize<sp/>+=<sp/>len<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>noteTrackKeys.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>=<sp/>noteTrackKeys[i].name;</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((len<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)strlen(name))<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>noteTrackKeys[i].idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>noteTrackKeys[i].idx<sp/>=<sp/>namePoolSize;</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*poolName<sp/>=<sp/>namesPool<sp/>+<sp/>namePoolSize;</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(poolName,<sp/>name);</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>namePoolSize<sp/>+=<sp/>len<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/>free(name);</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>additionalNames.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>=<sp/>additionalNames[i];</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((len<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)strlen(name))<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>additionalIds[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>additionalIds[i]<sp/>=<sp/>namePoolSize;</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*poolName<sp/>=<sp/>namesPool<sp/>+<sp/>namePoolSize;</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(poolName,<sp/>name);</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>namePoolSize<sp/>+=<sp/>len<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"></highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/>namePoolSize<sp/>=<sp/>(namePoolSize<sp/>+<sp/>7)<sp/>&amp;<sp/>~7;</highlight></codeline>
<codeline lineno="3816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"></highlight></codeline>
<codeline lineno="3818"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ExportENCB::getAnimations(Tab&lt;INode<sp/>*&gt;<sp/>&amp;node,<sp/>Tab&lt;bool&gt;<sp/>&amp;nodeExp,<sp/>Tab&lt;INode<sp/>*&gt;<sp/>&amp;exportNodes,<sp/>Tab&lt;AnimChanPoint3<sp/>*&gt;<sp/>&amp;pos,</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/>Tab&lt;AnimChanQuat<sp/>*&gt;<sp/>&amp;rot,<sp/>Tab&lt;AnimChanPoint3<sp/>*&gt;<sp/>&amp;scl)</highlight></codeline>
<codeline lineno="3820"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>exp<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/>Tab&lt;ExpNode<sp/>*&gt;<sp/>en;</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/>en.SetCount(<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count());</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>en.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/>en[i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structExpNode" kindref="compound">ExpNode</ref>(i);</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(en[i]);</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"></highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><ref refid="structExpNode" kindref="compound">ExpNode</ref><sp/>*root<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structExpNode" kindref="compound">ExpNode</ref>(-1);</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/>assert(root);</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dagimp_8cpp_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>pid<sp/>=<sp/><ref refid="classExportENCB_1a82ac93ea652a754c6934ee20abd1b43c" kindref="member">getnodeid</ref>(<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[i]-&gt;GetParentNode());</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid<sp/>&lt;<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count())</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>en[pid]-&gt;add_child(en[i]);</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>root-&gt;<ref refid="structExpNode_1a528c7bc5d56b2c958738748e4834a851" kindref="member">add_child</ref>(en[i]);</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"></highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><ref refid="structAnimChanPoint3" kindref="compound">AnimChanPoint3</ref><sp/>*animChanPoint3;</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><ref refid="structAnimChanQuat" kindref="compound">AnimChanQuat</ref><sp/>*animChanQuat;</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exportNodeCount<sp/>=<sp/>exportNodes.Count();</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/>pos.SetCount(exportNodeCount);</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/>pos.ZeroCount();</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/>scl.SetCount(exportNodeCount);</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/>scl.ZeroCount();</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/>rot.SetCount(exportNodeCount);</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/>rot.ZeroCount();</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"></highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>animations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/>Tab&lt;ExpTMAnimCB<sp/>*&gt;<sp/>acb;</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classExportENCB_1a212a05425275e17313a58810e69ec95c" kindref="member">nodeExp</ref>[i])</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"></highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/>pos.Append(1,<sp/>&amp;(animChanPoint3<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structAnimChanPoint3" kindref="compound">AnimChanPoint3</ref>));</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/>scl.Append(1,<sp/>&amp;(animChanPoint3<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structAnimChanPoint3" kindref="compound">AnimChanPoint3</ref>));</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/>rot.Append(1,<sp/>&amp;(animChanQuat<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structAnimChanQuat" kindref="compound">AnimChanQuat</ref>));</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"></highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/>INode<sp/>*parentNode<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dagimp_8cpp_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>pid<sp/>=<sp/>en[i]-&gt;parent-&gt;id;</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid<sp/>&lt;<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count())</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parentNode<sp/>=<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[pid];</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"></highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpTMAnimCB" kindref="compound">ExpTMAnimCB</ref><sp/>*expAnim<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classMyExpTMAnimCB" kindref="compound">MyExpTMAnimCB</ref>(<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[i],<sp/>parentNode,<sp/><ref refid="classExportENCB_1a11424e241091bee00004601c9a2d26de" kindref="member">nodeOrigin</ref>);</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/>acb.Append(1,<sp/>&amp;expAnim);</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug<sp/>(<sp/>&quot;acb[%d]:<sp/>n=%p<sp/>(en[i]-&gt;id=%d)<sp/>pnode=%p<sp/>(en[i]-&gt;parent-&gt;id=%u)&quot;,<sp/>i,<sp/>n,<sp/>en[i]-&gt;id,<sp/>pnode,<sp/>en[i]-&gt;parent-&gt;id<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"></highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="expanim2_8cpp_1ae1257538fde79484270e1100e424a270" kindref="member">get_tm_anim_2</ref>(pos,<sp/>rot,<sp/>scl,<sp/>(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca956d9e2e9bf0cfa553e275e892b79bb0" kindref="member">EXP_ARNG</ref>)<sp/>?<sp/>Interval(util.<ref refid="classExpUtil_1a11e3343900a93370d7eb826dcc5ea98b" kindref="member">astart</ref>,<sp/>util.<ref refid="classExpUtil_1a3b55a6b7b7eb2f628552d88a28679793" kindref="member">aend</ref>)<sp/>:<sp/>FOREVER,<sp/>exportNodes,<sp/>acb,</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/>util.poseps,<sp/>cosf(util.roteps),<sp/>util.scleps,<sp/>cosf(HALFPI<sp/>-<sp/>util.orteps),<sp/>util.expflg);</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"></highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>acb.Count();<sp/>--i<sp/>&gt;=<sp/>0;)</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>acb[i];</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>root;</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="3880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"></highlight></codeline>
<codeline lineno="3882"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ExportENCB::getOriginVelocities(Tab&lt;AnimKeyPoint3&gt;<sp/>&amp;originLinVel,<sp/>Tab&lt;AnimKeyPoint3&gt;<sp/>&amp;originAngVel,<sp/>Tab&lt;int&gt;<sp/>&amp;originLinVelT,</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/>Tab&lt;int&gt;<sp/>&amp;originAngVelT)</highlight></codeline>
<codeline lineno="3884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>origin<sp/>velocities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/>originLinVel.ZeroCount();</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/>originAngVel.ZeroCount();</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/>originLinVelT.ZeroCount();</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/>originAngVelT.ZeroCount();</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classExportENCB_1a11424e241091bee00004601c9a2d26de" kindref="member">nodeOrigin</ref>)</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMyExpTMAnimCB" kindref="compound">MyExpTMAnimCB</ref><sp/>*cb<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classMyExpTMAnimCB" kindref="compound">MyExpTMAnimCB</ref>(<ref refid="classExportENCB_1a11424e241091bee00004601c9a2d26de" kindref="member">nodeOrigin</ref>,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="expanim2_8cpp_1acc100143ff47c9ca807a72a2077fc96a" kindref="member">get_node_vel</ref>(originLinVel,<sp/>originAngVel,<sp/>originLinVelT,<sp/>originAngVelT,</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca956d9e2e9bf0cfa553e275e892b79bb0" kindref="member">EXP_ARNG</ref>)<sp/>?<sp/>Interval(util.<ref refid="classExpUtil_1a11e3343900a93370d7eb826dcc5ea98b" kindref="member">astart</ref>,<sp/>util.<ref refid="classExpUtil_1a3b55a6b7b7eb2f628552d88a28679793" kindref="member">aend</ref>)<sp/>:<sp/>FOREVER,<sp/>*cb,<sp/>util.poseps2,<sp/>cosf(util.roteps2),<sp/>util.expflg))</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>get<sp/>velocity<sp/>of<sp/>origin\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="debug_8cpp_1ad66a73f3673f2879326899cf57fd8d2e" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;cannot<sp/>get<sp/>velocity<sp/>of<sp/>origin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>originLinVel.ZeroCount();</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>originAngVel.ZeroCount();</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>originLinVelT.ZeroCount();</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>originAngVelT.ZeroCount();</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cb;</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"></highlight></codeline>
<codeline lineno="3907"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ExportENCB::writeChannel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ChannelParams<sp/>&amp;params,<sp/>FILE<sp/>*fp)</highlight></codeline>
<codeline lineno="3908"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nodeNum<sp/>=<sp/>params.keyNums.Count();</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nodeNum)</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(&amp;params.channelType,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">),<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(&amp;nodeNum,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">),<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(params.keyNums.Addr(0),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">),<sp/>params.keyNums.Count(),<sp/>fp);</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(params.nodeNameIds.Addr(0),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>params.nodeNameIds.Count(),<sp/>fp);</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(params.nodeWeights.Addr(0),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<sp/>params.nodeWeights.Count(),<sp/>fp);</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"></highlight></codeline>
<codeline lineno="3920"><highlight class="normal"></highlight></codeline>
<codeline lineno="3921"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a23ccbd104c1d2ae07dabfde193bb0ede" kindref="member">ExpUtil::errorMessage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*msg)</highlight></codeline>
<codeline lineno="3922"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>-&gt;DisplayTempPrompt(msg,<sp/><ref refid="expUtil_8cpp_1a398da37e411bb2d829f85232480defea" kindref="member">ERRMSG_DELAY</ref>);</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"></highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classExpUtil_1a9c812ede9a27d6f648d285dddb655f51" kindref="member">suppressPrompts</ref>)</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/>MessageBox(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>-&gt;GetMAXHWnd(),<sp/>msg,<sp/>_T<sp/>(</highlight><highlight class="stringliteral">&quot;Error&quot;</highlight><highlight class="normal">),<sp/>MB_OK<sp/>|<sp/>MB_ICONSTOP);</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"></highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a6d1a7ff230ef43fa67f30777cf3fc315" kindref="member">explogError</ref>(_T(</highlight><highlight class="stringliteral">&quot;ERROR!<sp/>%s\r\n&quot;</highlight><highlight class="normal">),<sp/>msg);</highlight></codeline>
<codeline lineno="3929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"></highlight></codeline>
<codeline lineno="3931"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1ad3cb4f47443771f59b653941df73972c" kindref="member">ExpUtil::warningMessage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*title)</highlight></codeline>
<codeline lineno="3932"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(title<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/>title<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;Warning&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"></highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classExpUtil_1a9c812ede9a27d6f648d285dddb655f51" kindref="member">suppressPrompts</ref>)</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/>MessageBox(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>-&gt;GetMAXHWnd(),<sp/>msg,<sp/>title,<sp/>MB_OK<sp/>|<sp/>MB_ICONSTOP);</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"></highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T(</highlight><highlight class="stringliteral">&quot;WARNING!<sp/>%s\r\n&quot;</highlight><highlight class="normal">),<sp/>msg);</highlight></codeline>
<codeline lineno="3940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"></highlight></codeline>
<codeline lineno="3942"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R13)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3943"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trail_stricmp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*str2)</highlight></codeline>
<codeline lineno="3944"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>_tcslen(str),<sp/>l2<sp/>=<sp/>_tcslen(str2);</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(l<sp/>&gt;=<sp/>l2)<sp/>?<sp/>_tcsncicmp(str<sp/>+<sp/>l<sp/>-<sp/>l2,<sp/>str2,<sp/>l2)<sp/>==<sp/>0<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"></highlight></codeline>
<codeline lineno="3949"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>find_co_layers(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*fname,<sp/>Tab&lt;const<sp/>TCHAR<sp/>*&gt;<sp/>&amp;fnames)</highlight></codeline>
<codeline lineno="3950"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!trail_stricmp(fname,<sp/>_T(</highlight><highlight class="stringliteral">&quot;.lod00.dag&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base_len<sp/>=<sp/>int(_tcslen(fname)<sp/>-<sp/>_tcslen(_T(</highlight><highlight class="stringliteral">&quot;.lod00.dag&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"></highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/>ILayerManager<sp/>*manager<sp/>=<sp/>GetCOREInterface13()-&gt;GetLayerManager();</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/>ILayer<sp/>*l<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"></highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[2];</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/>TCHAR<sp/>str_buf[512];</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;LOD%02d&quot;</highlight><highlight class="normal">),<sp/>i);</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(str_buf));</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!l)</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;lod%02d&quot;</highlight><highlight class="normal">),<sp/>i);</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(str_buf));</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!l)</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Lod%02d&quot;</highlight><highlight class="normal">),<sp/>i);</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(str_buf));</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&amp;&amp;<sp/>l-&gt;HasObjects())</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[0]<sp/>=<sp/>_tcsdup(str_buf);</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;%.*s.lod%02d.dag&quot;</highlight><highlight class="normal">),<sp/>base_len,<sp/>fname,<sp/>i);</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[1]<sp/>=<sp/>_tcsdup(str_buf);</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fnames.Append(2,<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"></highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[0]<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;DESTR&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!l)</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[0]<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;destr&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"></highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&amp;&amp;<sp/>l-&gt;HasObjects())</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[0]<sp/>=<sp/>_tcsdup(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[0]);</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;%.*s_destr.lod00.dag&quot;</highlight><highlight class="normal">),<sp/>base_len,<sp/>fname);</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[1]<sp/>=<sp/>_tcsdup(str_buf);</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/>fnames.Append(2,<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"></highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(base_len<sp/>&gt;<sp/>2<sp/>&amp;&amp;<sp/>_tcsncmp(&amp;fname[base_len-2],<sp/>_T(&quot;_a&quot;),<sp/>2)==0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>base_len<sp/>-=<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3997"><highlight class="normal"></highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[0]<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;DM&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!l)</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[0]<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;dm&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!l)</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[0]<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;Dm&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&amp;&amp;<sp/>l-&gt;HasObjects())</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[0]<sp/>=<sp/>_tcsdup(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[0]);</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;%.*s_dm.dag&quot;</highlight><highlight class="normal">),<sp/>base_len,<sp/>fname);</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[1]<sp/>=<sp/>_tcsdup(str_buf);</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/>fnames.Append(2,<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"></highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;DMG_LOD%02d&quot;</highlight><highlight class="normal">),<sp/>i);</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(str_buf));</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!l)</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;dmg_lod%02d&quot;</highlight><highlight class="normal">),<sp/>i);</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(str_buf));</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!l)</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Dmg_lod%02d&quot;</highlight><highlight class="normal">),<sp/>i);</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(str_buf));</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&amp;&amp;<sp/>l-&gt;HasObjects())</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[0]<sp/>=<sp/>_tcsdup(str_buf);</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;%.*s_dmg.lod%02d.dag&quot;</highlight><highlight class="normal">),<sp/>base_len,<sp/>fname,<sp/>i);</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[1]<sp/>=<sp/>_tcsdup(str_buf);</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fnames.Append(2,<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"></highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;DMG2_LOD%02d&quot;</highlight><highlight class="normal">),<sp/>i);</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(str_buf));</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!l)</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;dmg2_lod%02d&quot;</highlight><highlight class="normal">),<sp/>i);</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(str_buf));</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!l)</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Dmg2_lod%02d&quot;</highlight><highlight class="normal">),<sp/>i);</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(str_buf));</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&amp;&amp;<sp/>l-&gt;HasObjects())</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[0]<sp/>=<sp/>_tcsdup(str_buf);</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;%.*s_dmg2.lod%02d.dag&quot;</highlight><highlight class="normal">),<sp/>base_len,<sp/>fname,<sp/>i);</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[1]<sp/>=<sp/>_tcsdup(str_buf);</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fnames.Append(2,<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"></highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;EXPL_LOD%02d&quot;</highlight><highlight class="normal">),<sp/>i);</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(str_buf));</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!l)</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;expl_lod%02d&quot;</highlight><highlight class="normal">),<sp/>i);</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(str_buf));</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!l)</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Expl_lod%02d&quot;</highlight><highlight class="normal">),<sp/>i);</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(str_buf));</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&amp;&amp;<sp/>l-&gt;HasObjects())</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[0]<sp/>=<sp/>_tcsdup(str_buf);</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;%.*s_expl.lod%02d.dag&quot;</highlight><highlight class="normal">),<sp/>base_len,<sp/>fname,<sp/>i);</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[1]<sp/>=<sp/>_tcsdup(str_buf);</highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fnames.Append(2,<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"></highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[0]<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;XRAY&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!l)</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[0]<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;xray&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"></highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&amp;&amp;<sp/>l-&gt;HasObjects())</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[0]<sp/>=<sp/>_tcsdup(<ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[0]);</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/><sp/><sp/>_stprintf(str_buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;%.*s_xray.dag&quot;</highlight><highlight class="normal">),<sp/>base_len,<sp/>fname);</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>[1]<sp/>=<sp/>_tcsdup(str_buf);</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/>fnames.Append(2,<sp/><ref refid="polyBumpUtil_8cpp_1aaa1ebe818ec1c763a776cc580551f3e6" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"></highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fnames.Count()<sp/>/<sp/>2<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"></highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fnames.Count();<sp/>i++)</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)fnames[i]);</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/>fnames.ZeroCount();</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4103"><highlight class="normal"></highlight></codeline>
<codeline lineno="4104"><highlight class="normal">BOOL<sp/><ref refid="classExpUtil_1a57fe73c0502686d0215c4fe0ddabf49a" kindref="member">ExpUtil::export_dag</ref>(TCHAR<sp/>**textures,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_textures,<sp/>TCHAR<sp/>*default_material)</highlight></codeline>
<codeline lineno="4105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R13)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><ref refid="classDagorLogWindowAutoShower" kindref="compound">DagorLogWindowAutoShower</ref><sp/>logWindowAutoShower(</highlight><highlight class="comment">/*clear_log<sp/>=<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"></highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/>Tab&lt;const<sp/>TCHAR<sp/>*&gt;<sp/>fnames;</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/>Tab&lt;bool&gt;<sp/>isHidden;</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"></highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!find_co_layers(<ref refid="classExpUtil_1a3751f0176ca3e72f41e949bd7ab926aa" kindref="member">exp_fname</ref>,<sp/>fnames))</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1ad58eb39df2700603f66a9ac20054a22b" kindref="member">export_one_dag</ref>(<ref refid="classExpUtil_1a3751f0176ca3e72f41e949bd7ab926aa" kindref="member">exp_fname</ref>,<sp/>textures,<sp/>max_textures,<sp/>default_material);</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"></highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TCHAR<sp/>buf[8192];</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/>_stprintf(buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Export<sp/>layers<sp/>to<sp/>%d<sp/>separate<sp/>files?\n&quot;</highlight><highlight class="normal">),<sp/>fnames.Count()<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fnames.Count();<sp/>i<sp/>+=<sp/>2)</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_tcslen(buf)<sp/>&lt;<sp/>(7<sp/>&lt;&lt;<sp/>10))</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fn_len<sp/>=<sp/>(int)_tcslen(fnames[i<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(buf<sp/>+<sp/>_tcslen(buf),<sp/>_T(</highlight><highlight class="stringliteral">&quot;%s<sp/>-&gt;<sp/>%s%s\n&quot;</highlight><highlight class="normal">),<sp/>fnames[i],<sp/>fn_len<sp/>&gt;<sp/>64<sp/>?<sp/>_T(</highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">)<sp/>:<sp/>_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_len<sp/>&gt;<sp/>48<sp/>?<sp/>fnames[i<sp/>+<sp/>1]<sp/>+<sp/>fn_len<sp/>-<sp/>48<sp/>:<sp/>fnames[i<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"></highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MessageBox(GetFocus(),<sp/>buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;Export<sp/>layered<sp/>DAGs&quot;</highlight><highlight class="normal">),<sp/>MB_YESNO<sp/>|<sp/>MB_ICONQUESTION)<sp/>!=<sp/>IDYES)</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fnames.Count();<sp/>i++)</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)fnames[i]);</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1ad58eb39df2700603f66a9ac20054a22b" kindref="member">export_one_dag</ref>(<ref refid="classExpUtil_1a3751f0176ca3e72f41e949bd7ab926aa" kindref="member">exp_fname</ref>,<sp/>textures,<sp/>max_textures,<sp/>default_material);</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"></highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/>ILayerManager<sp/>*manager<sp/>=<sp/>GetCOREInterface13()-&gt;GetLayerManager();</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/>isHidden.SetCount(fnames.Count()<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fnames.Count();<sp/>i<sp/>+=<sp/>2)</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/>ILayer<sp/>*l<sp/>=<sp/>manager-&gt;GetLayer(TSTR(fnames[i]));</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/>isHidden[i<sp/>/<sp/>2]<sp/>=<sp/>l-&gt;IsHidden();</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/>l-&gt;Hide(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fnames.Count();<sp/>i<sp/>+=<sp/>2)</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/>TSTR<sp/>lnm(fnames[i]);</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/>ILayer<sp/>*l<sp/>=<sp/>manager-&gt;GetLayer(lnm);</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/>manager-&gt;SetCurrentLayer(lnm);</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/>l-&gt;Hide(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"></highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1ad58eb39df2700603f66a9ac20054a22b" kindref="member">export_one_dag</ref>(fnames[i<sp/>+<sp/>1],<sp/>textures,<sp/>max_textures,<sp/>default_material);</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/><sp/><sp/>l-&gt;Hide(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fnames.Count();<sp/>i<sp/>+=<sp/>2)</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isHidden[i<sp/>/<sp/>2])</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>manager-&gt;GetLayer(TSTR(fnames[i]))-&gt;Hide(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)fnames[i]);</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)fnames[i<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/>manager-&gt;SetCurrentLayer();</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"></highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1ad58eb39df2700603f66a9ac20054a22b" kindref="member">export_one_dag</ref>(<ref refid="classExpUtil_1a3751f0176ca3e72f41e949bd7ab926aa" kindref="member">exp_fname</ref>,<sp/>textures,<sp/>max_textures,<sp/>default_material);</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"></highlight></codeline>
<codeline lineno="4165"><highlight class="normal">BOOL<sp/><ref refid="classExpUtil_1ad58eb39df2700603f66a9ac20054a22b" kindref="member">ExpUtil::export_one_dag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*exp_fn,<sp/>TCHAR<sp/>**textures,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_textures,<sp/>TCHAR<sp/>*default_material)</highlight></codeline>
<codeline lineno="4166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><ref refid="classExportENCB" kindref="compound">ExportENCB</ref><sp/>cb(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>-&gt;GetTime(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/>cb.default_material<sp/>=<sp/>default_material;</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><ref refid="enumnode_8h_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>-&gt;GetRootNode(),<sp/>&amp;cb);</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"></highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cb.<ref refid="classMyExpTMAnimCB_1ae9af307fed577fea40d66a51bf087352" kindref="member">node</ref>.Count())</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a23ccbd104c1d2ae07dabfde193bb0ede" kindref="member">errorMessage</ref>(_T(</highlight><highlight class="stringliteral">&quot;There<sp/>are<sp/>no<sp/>nodes.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"></highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a7213d1d4cf45d2bee678b9a7f253b5d0" kindref="member">export_one_dag_cb</ref>(cb,<sp/>exp_fn,<sp/>textures,<sp/>max_textures,<sp/>default_material);</highlight></codeline>
<codeline lineno="4178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"></highlight></codeline>
<codeline lineno="4180"><highlight class="normal">BOOL<sp/><ref refid="classExpUtil_1a7213d1d4cf45d2bee678b9a7f253b5d0" kindref="member">ExpUtil::export_one_dag_cb</ref>(<ref refid="classExportENCB" kindref="compound">ExportENCB</ref><sp/>&amp;cb,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*exp_fn,<sp/>TCHAR<sp/>**textures,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_textures,<sp/>TCHAR<sp/>*default_material)</highlight></codeline>
<codeline lineno="4181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/>INamedSelectionSetManager<sp/>*<ref refid="objonsrf_8cpp_1ac8a1ffc6c93d76daeb8355d730b16d23" kindref="member">IPNSS</ref><sp/>=<sp/>INamedSelectionSetManager::GetInstance();</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"></highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a96e84d22def812865afea0c96b0b5366" kindref="member">checkDupesAndSpaces</ref>(cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>);</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"></highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/>FILE<sp/>*<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref><sp/>=<sp/>_tfopen(exp_fn,<sp/>_T<sp/>(</highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>)</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a23ccbd104c1d2ae07dabfde193bb0ede" kindref="member">errorMessage</ref>(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1afc7d82127662b10bfb79dda48db6237f" kindref="member">IDS_FILE_CREATE_ERR</ref>));</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cb.<ref refid="classExportENCB_1a34b244b1bb7a38b5f8f66cf62c1a01ce" kindref="member">save</ref>(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>,<sp/><ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>,<sp/>textures,<sp/>max_textures))</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a23ccbd104c1d2ae07dabfde193bb0ede" kindref="member">errorMessage</ref>(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1afc1e85ae1b27eea6b77abef5c81970f2" kindref="member">IDS_FILE_WRITE_ERR</ref>));</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aed5a458133572985ccc7fc10a3159f6b" kindref="member">fclose</ref>(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aed5a458133572985ccc7fc10a3159f6b" kindref="member">fclose</ref>(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;%d<sp/>pos<sp/>keys<sp/>max\r\n&quot;</highlight><highlight class="normal">),<sp/>cb.<ref refid="classExportENCB_1ae11b6df0abdc0946ce4f4e5805794591" kindref="member">max_pkeys</ref>);</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb.<ref refid="classExportENCB_1a9b89aa734b4bc0b483d362533a7fcf94" kindref="member">max_pkeys_n</ref>)</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>for<sp/>\&quot;%s\&quot;\r\n&quot;</highlight><highlight class="normal">),<sp/>cb.<ref refid="classExportENCB_1a9b89aa734b4bc0b483d362533a7fcf94" kindref="member">max_pkeys_n</ref>-&gt;GetName());</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;%d<sp/>rot<sp/>keys<sp/>max\r\n&quot;</highlight><highlight class="normal">),<sp/>cb.<ref refid="classExportENCB_1ad3db7127424d6cf1389a10da416ef3a7" kindref="member">max_rkeys</ref>);</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb.<ref refid="classExportENCB_1a282ee8289b7875304df23fe8e7003293" kindref="member">max_rkeys_n</ref>)</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>for<sp/>\&quot;%s\&quot;\r\n&quot;</highlight><highlight class="normal">),<sp/>cb.<ref refid="classExportENCB_1a282ee8289b7875304df23fe8e7003293" kindref="member">max_rkeys_n</ref>-&gt;GetName());</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;%d<sp/>scl<sp/>keys<sp/>max\r\n&quot;</highlight><highlight class="normal">),<sp/>cb.<ref refid="classExportENCB_1a74a42c2cf36b768eac48cf42308cc61c" kindref="member">max_skeys</ref>);</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb.<ref refid="classExportENCB_1a7421f55dc83e6d06ddf9a815c926520f" kindref="member">max_skeys_n</ref>)</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>for<sp/>\&quot;%s\&quot;\r\n&quot;</highlight><highlight class="normal">),<sp/>cb.<ref refid="classExportENCB_1a7421f55dc83e6d06ddf9a815c926520f" kindref="member">max_skeys_n</ref>-&gt;GetName());</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;%d<sp/>nodes\r\n&quot;</highlight><highlight class="normal">),<sp/>cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count());</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;%d<sp/>materials\r\n&quot;</highlight><highlight class="normal">),<sp/>cb.<ref refid="classExportENCB_1ade52d93e7d1099a6d2046bde7e5698f2" kindref="member">mat</ref>.Count());</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;%d<sp/>textures\r\n&quot;</highlight><highlight class="normal">),<sp/>cb.<ref refid="classExportENCB_1a3c5f522e5c2650d1932840a9e4f057d0" kindref="member">tex</ref>.Count());</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;%d<sp/>key<sp/>labels\r\n&quot;</highlight><highlight class="normal">),<sp/>cb.<ref refid="classExportENCB_1a8bcbb5fb0fcf139c3b0fb37ff8a0942d" kindref="member">klabel</ref>.Count());</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;%d<sp/>note<sp/>tracks\r\n&quot;</highlight><highlight class="normal">),<sp/>cb.<ref refid="classExportENCB_1a3e595643bf5f6eb98fd0ff3105328c87" kindref="member">ntrack</ref>.Count());</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/>MSTR<sp/>nonortn<sp/>=<sp/>TSTR(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a86b0282f11df5d46af38330a0268a9ee" kindref="member">IDS_NONORT_SELSET</ref>));</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb.<ref refid="classExportENCB_1a727f2b5fac19fa93ccea3c2ff888877c" kindref="member">nonort</ref>)</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1ad3cb4f47443771f59b653941df73972c" kindref="member">warningMessage</ref>(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1ae4f4061350b7a4e0908bf5b90429200f" kindref="member">IDS_NONORT_ANIM</ref>));</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="objonsrf_8cpp_1ac8a1ffc6c93d76daeb8355d730b16d23" kindref="member">IPNSS</ref>-&gt;AddNewNamedSelSet(cb.<ref refid="classExportENCB_1a34eeca1eb50b92257fe7ddff0bab055a" kindref="member">nonort_nodes</ref>,<sp/>nonortn);</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;%d<sp/>nodes<sp/>with<sp/>bad<sp/>animation\r\n&quot;</highlight><highlight class="normal">),<sp/>cb.<ref refid="classExportENCB_1a34eeca1eb50b92257fe7ddff0bab055a" kindref="member">nonort_nodes</ref>.Count());</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="objonsrf_8cpp_1ac8a1ffc6c93d76daeb8355d730b16d23" kindref="member">IPNSS</ref>-&gt;RemoveNamedSelSet(nonortn);</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb.<ref refid="classExportENCB_1a8b78ce658a6310287b03e50695ad7c3b" kindref="member">nofaces</ref>)</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1ad3cb4f47443771f59b653941df73972c" kindref="member">warningMessage</ref>(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a7511e6798f186fb38f85145c86b79df5" kindref="member">IDS_NOFACES_NODES</ref>));</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb.<ref refid="classExportENCB_1a205f7c37a8d7a345a547c1c90e41f934" kindref="member">hasDegenerateTriangles</ref>)</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1ad3cb4f47443771f59b653941df73972c" kindref="member">warningMessage</ref>(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1ad33d8f5a5949e38a39a0e218c7b278b7" kindref="member">IDS_DEGENERATE_TRIANGLES</ref>));</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"></highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb.<ref refid="classExportENCB_1a3e3d3180776915ef242696002bfb9517" kindref="member">hasNoSmoothing</ref>)</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1ad3cb4f47443771f59b653941df73972c" kindref="member">warningMessage</ref>(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1adefafb3c1b2801998850b30cc29d3159" kindref="member">IDS_NO_SMOOTHING</ref>));</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb.<ref refid="classExportENCB_1a50db4d5bda845ec5acef359790621f97" kindref="member">hasBigMeshes</ref>)</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1ad3cb4f47443771f59b653941df73972c" kindref="member">warningMessage</ref>(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1ae929d8874fbd1ca2f8a7156082fdd9e8" kindref="member">IDS_BIG_MESHES</ref>));</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb.<ref refid="classExportENCB_1aa9d58fd2ad394c6815d296cad63a4abd" kindref="member">hasNonDagorMaterials</ref>)</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1ad3cb4f47443771f59b653941df73972c" kindref="member">warningMessage</ref>(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1a98bca9a26153b4940e40c4dbd4fe13a5" kindref="member">IDS_NON_DAGOR_MATERIALS</ref>));</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb.<ref refid="classExportENCB_1ad0a531b60722deba581396d9ac32423d" kindref="member">hasSubSubMaterials</ref>)</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1ad3cb4f47443771f59b653941df73972c" kindref="member">warningMessage</ref>(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1aaff52ba17450f5a4485d5cc7c96a9b26" kindref="member">IDS_SUB_SUB_MATERIALS</ref>));</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb.<ref refid="classExportENCB_1ae53cc35aa929caffa9d3f1c7a3b56a77" kindref="member">hasAbsolutePaths</ref>)</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TSTR<sp/>title<sp/>=<sp/>GetString<sp/>(IDS_WARNING);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MessageBox<sp/>(ip-&gt;GetMAXHWnd<sp/>(),<sp/>GetString<sp/>(IDS_ABSOLUTE_PATHS),<sp/>title,<sp/>MB_OK<sp/>|<sp/>MB_ICONSTOP);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4252"><highlight class="normal"></highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4255"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a74c1bbf62427141225ba6564b30c2436" kindref="member">ExpUtil::export_anim_v2</ref>()</highlight></codeline>
<codeline lineno="4256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><ref refid="classDagorLogWindowAutoShower" kindref="compound">DagorLogWindowAutoShower</ref><sp/>logWindowAutoShower(</highlight><highlight class="comment">/*clear_log<sp/>=<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;Exporting<sp/>Anim<sp/>v2<sp/>to<sp/>file<sp/>&lt;%s&gt;...\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="classExpUtil_1a574065a40555a0055242667cda0716f3" kindref="member">exp_anim2_fname</ref>);</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0<sp/>=<sp/>timeGetTime();</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"></highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><ref refid="classExportENCB" kindref="compound">ExportENCB</ref><sp/>cb(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>-&gt;GetTime(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><ref refid="enumnode_8h_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>-&gt;GetRootNode(),<sp/>&amp;cb);</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/>t0<sp/>=<sp/>timeGetTime()<sp/>-<sp/>t0;</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/>enum<sp/>node:<sp/>%d<sp/>ms\r\n&quot;</highlight><highlight class="normal">),<sp/>t0);</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"></highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/><ref refid="classExpUtil_1a96e84d22def812865afea0c96b0b5366" kindref="member">checkDupesAndSpaces</ref>(cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>);</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"></highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>save_anim2<sp/>function<sp/>is<sp/>not<sp/>fast<sp/>but<sp/>writes<sp/>the<sp/>file<sp/>directly<sp/>as<sp/>it<sp/>goes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>saving<sp/>an<sp/>a2d<sp/>opened<sp/>in<sp/>AssetViewer<sp/>we<sp/>are<sp/>highly<sp/>likely<sp/>to<sp/>crash<sp/>because<sp/>AV<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>trigger<sp/>on<sp/>first<sp/>file<sp/>flush,<sp/>try<sp/>to<sp/>read<sp/>not<sp/>yet<sp/>fully<sp/>written<sp/>file<sp/>and<sp/>fail.<sp/>To<sp/>avoid<sp/>this<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>export<sp/>to<sp/>a<sp/>temp<sp/>file<sp/>and<sp/>then<sp/>copy<sp/>it<sp/>to<sp/>the<sp/>final<sp/>destination.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copying<sp/>does<sp/>not<sp/>produce<sp/>partial<sp/>file<sp/>and<sp/>avoids<sp/>the<sp/>crash.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>path[MAX_PATH];</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/>GetTempFileName(L</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;a2d&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>path);</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/>FILE<sp/>*tmpFile<sp/>=<sp/>_tfopen(path,<sp/>_T<sp/>(</highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"></highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmpFile)</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a23ccbd104c1d2ae07dabfde193bb0ede" kindref="member">errorMessage</ref>(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1afc7d82127662b10bfb79dda48db6237f" kindref="member">IDS_FILE_CREATE_ERR</ref>));</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/>t0<sp/>=<sp/>timeGetTime();</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cb.<ref refid="classExportENCB_1ab1556565e652cd96d2715dfbbfadb201" kindref="member">save_anim2</ref>(tmpFile,<sp/><ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>))</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a23ccbd104c1d2ae07dabfde193bb0ede" kindref="member">errorMessage</ref>(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1afc1e85ae1b27eea6b77abef5c81970f2" kindref="member">IDS_FILE_WRITE_ERR</ref>));</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aed5a458133572985ccc7fc10a3159f6b" kindref="member">fclose</ref>(tmpFile);</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"></highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aed5a458133572985ccc7fc10a3159f6b" kindref="member">fclose</ref>(tmpFile);</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/>CopyFile(path,<sp/><ref refid="classExpUtil_1a574065a40555a0055242667cda0716f3" kindref="member">exp_anim2_fname</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/>DeleteFile(path);</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"></highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/>t0<sp/>=<sp/>timeGetTime()<sp/>-<sp/>t0;</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/>save<sp/>anim2:<sp/>%d<sp/>ms\r\n&quot;</highlight><highlight class="normal">),<sp/>t0);</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"></highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/>%d<sp/>nodes\r\n&quot;</highlight><highlight class="normal">),<sp/>cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count());</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;Success!\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R19_PREVIEW)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R19_PREVIEW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4301"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FolderOpenDialog(TCHAR<sp/>*path,<sp/>HWND)</highlight></codeline>
<codeline lineno="4302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/>IFileDialog<sp/>*pfd;</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/>HRESULT<sp/>hr<sp/>=<sp/>CoCreateInstance(CLSID_FileOpenDialog,<sp/>NULL,<sp/>CLSCTX_INPROC_SERVER,<sp/>IID_PPV_ARGS(&amp;pfd));</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SUCCEEDED(hr))</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"></highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/>DWORD<sp/>dwFlags;</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/>hr<sp/>=<sp/>pfd-&gt;GetOptions(&amp;dwFlags);</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SUCCEEDED(hr))</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/>pfd-&gt;Release();</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/>hr<sp/>=<sp/>pfd-&gt;SetOptions(dwFlags<sp/>|<sp/>FOS_FORCEFILESYSTEM<sp/>|<sp/>FOS_PICKFOLDERS);</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SUCCEEDED(hr))</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/>pfd-&gt;Release();</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"></highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/>hr<sp/>=<sp/>pfd-&gt;Show(NULL);</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SUCCEEDED(hr))</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"><sp/><sp/><sp/><sp/>pfd-&gt;Release();</highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"></highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/>IShellItem<sp/>*psiResult<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/>hr<sp/>=<sp/>pfd-&gt;GetResult(&amp;psiResult);</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SUCCEEDED(hr))</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/><sp/><sp/>pfd-&gt;Release();</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"></highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/>PWSTR<sp/>pszFilePath<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/>hr<sp/>=<sp/>psiResult-&gt;GetDisplayName(SIGDN_FILESYSPATH,<sp/>&amp;pszFilePath);</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pszFilePath)</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/><sp/>_tcscpy(path,<sp/>pszFilePath);</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><sp/><sp/>CoTaskMemFree(pszFilePath);</highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/>psiResult-&gt;Release();</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/>pfd-&gt;Release();</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SUCCEEDED(hr);</highlight></codeline>
<codeline lineno="4347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4349"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FolderOpenDialog(TCHAR<sp/>*path,<sp/>HWND<sp/>hPanel)</highlight></codeline>
<codeline lineno="4350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/>BROWSEINFO<sp/>bi;</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/>bi.hwndOwner<sp/>=<sp/>hPanel;</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/>bi.iImage<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/>bi.lParam<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/>bi.lpfn<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/>bi.lpszTitle<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;Browse<sp/>for<sp/>folder&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/>bi.pidlRoot<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/>bi.pszDisplayName<sp/>=<sp/>path;</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/>bi.ulFlags<sp/>=<sp/>BIF_NEWDIALOGSTYLE;</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/>PCIDLIST_ABSOLUTE<sp/>pidl<sp/>=<sp/>::SHBrowseForFolder(&amp;bi);</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pidl)</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/>return<sp/>::SHGetPathFromIDList(pidl,<sp/>path);</highlight></codeline>
<codeline lineno="4364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4366"><highlight class="normal"></highlight></codeline>
<codeline lineno="4367"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ExpUtil::exportObjectsAsDagsInternal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*folder,<sp/>INode<sp/>&amp;node)</highlight></codeline>
<codeline lineno="4368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childrenCount<sp/>=<sp/>node.NumberOfChildren();</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>childrenCount;<sp/>++i)</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/><sp/><sp/>INode<sp/>*childNode<sp/>=<sp/>node.GetChildNode(i);</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"></highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cac93b52a68dc3b54c1ad6d4f92faa7cb8" kindref="member">EXP_SEL</ref>)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>childNode-&gt;Selected()<sp/>==<sp/>0)<sp/>||<sp/>((util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca6b7267d63b63440a7aa60ef3a099e71b" kindref="member">EXP_HID</ref>)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>childNode-&gt;IsHidden()))</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exportObjectsAsDagsInternal(folder,<sp/>*childNode);</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"></highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB" kindref="compound">ExportENCB</ref><sp/>cb(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>-&gt;GetTime(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"></highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(childNode-&gt;IsGroupHead())</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="enumnode_8h_1ae35c7235ed4f8cfd7c6d5c7530ebaea1" kindref="member">enum_nodes_by_node</ref>(childNode,<sp/>&amp;cb);</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb.<ref refid="classExportENCB_1a727d0043d1b0ca8432e492868ef29631" kindref="member">proc</ref>(childNode);</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"></highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>node<sp/>as<sp/>origin<sp/>instead<sp/>of<sp/>the<sp/>scene.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb.<ref refid="classExportENCB_1a77aa44ec1356ee83d4127c059808f5b1" kindref="member">useIdentityTransformForNode</ref><sp/>=<sp/>childNode;</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"></highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>path;</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path.printf(_T(</highlight><highlight class="stringliteral">&quot;%s\\%s.dag&quot;</highlight><highlight class="normal">),<sp/>folder,<sp/>childNode-&gt;GetName());</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"></highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;Exporting<sp/>node<sp/>\&quot;%s\&quot;<sp/>to<sp/>file<sp/>\&quot;%s\&quot;\r\n&quot;</highlight><highlight class="normal">),<sp/>childNode-&gt;GetName(),<sp/>path.data());</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a7213d1d4cf45d2bee678b9a7f253b5d0" kindref="member">export_one_dag_cb</ref>(cb,<sp/>path);</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T(</highlight><highlight class="stringliteral">&quot;Skipping<sp/>node<sp/>&apos;%s&apos;.<sp/>It<sp/>does<sp/>no<sp/>match<sp/>the<sp/>export<sp/>settings<sp/>(beside<sp/>\&quot;sel\&quot;<sp/>and<sp/>\&quot;hid\&quot;).\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childNode-&gt;GetName());</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"></highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>a<sp/>group<sp/>then<sp/>there<sp/>is<sp/>no<sp/>need<sp/>to<sp/>descend<sp/>further<sp/>because<sp/>groups<sp/>are<sp/>exported<sp/>as<sp/>a<sp/>single<sp/>dag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!childNode-&gt;IsGroupHead())</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exportObjectsAsDagsInternal(folder,<sp/>*childNode);</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"></highlight></codeline>
<codeline lineno="4411"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ExpUtil::exportObjectsAsDags()</highlight></codeline>
<codeline lineno="4412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><ref refid="classDagorLogWindowAutoShower" kindref="compound">DagorLogWindowAutoShower</ref><sp/>logWindowAutoShower(</highlight><highlight class="comment">/*clear_log<sp/>=<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"></highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PATH_MAX<sp/>=<sp/>512;</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/>TCHAR<sp/>folder[PATH_MAX];</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!FolderOpenDialog(folder,<sp/><ref refid="classExpUtil_1a1e17af3c62062a6c3a2e6f5e16f3204c" kindref="member">hExpDag</ref>))</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"></highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/>INode<sp/>*rootNode<sp/>=<sp/>GetCOREInterface13()-&gt;GetRootNode();</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rootNode)</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a6d1a7ff230ef43fa67f30777cf3fc315" kindref="member">explogError</ref>(_T(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>the<sp/>root<sp/>node.\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a6d1a7ff230ef43fa67f30777cf3fc315" kindref="member">explogError</ref>(_T(</highlight><highlight class="stringliteral">&quot;Aborting<sp/>export.\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"></highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/>exportObjectsAsDagsInternal(folder,<sp/>*rootNode);</highlight></codeline>
<codeline lineno="4429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"></highlight></codeline>
<codeline lineno="4431"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ExpUtil::exportLayerAsDag(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*folder,<sp/>ILayer<sp/>&amp;layer)</highlight></codeline>
<codeline lineno="4432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;sel&quot;<sp/>only<sp/>affects<sp/>the<sp/>layers<sp/>we<sp/>work<sp/>with,<sp/>so<sp/>do<sp/>not<sp/>use<sp/>it<sp/>when<sp/>processing<sp/>the<sp/>nodes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldExpSel<sp/>=<sp/>util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cac93b52a68dc3b54c1ad6d4f92faa7cb8" kindref="member">EXP_SEL</ref>;</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/>util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;=<sp/>~EXP_SEL;</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"></highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/>ILayerProperties<sp/>*layerProperties<sp/>=<sp/>(ILayerProperties<sp/>*)layer.GetInterface(LAYERPROPERTIES_INTERFACE);</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layerProperties)</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB" kindref="compound">ExportENCB</ref><sp/>cb(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>-&gt;GetTime(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"></highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ILayerProperties::Nodes<sp/>returns<sp/>with<sp/>all<sp/>nodes<sp/>belonging<sp/>to<sp/>a<sp/>layer,<sp/>regardless<sp/>of<sp/>the<sp/>hierarchy,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>there<sp/>is<sp/>no<sp/>need<sp/>to<sp/>call<sp/>enum_nodes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/>Tab&lt;INode<sp/>*&gt;<sp/>nodes;</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/>layerProperties-&gt;Nodes(nodes);</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nodes.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb.<ref refid="classExportENCB_1a727d0043d1b0ca8432e492868ef29631" kindref="member">proc</ref>(nodes[i]);</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"></highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>path;</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path.printf(_T(</highlight><highlight class="stringliteral">&quot;%s\\%s.dag&quot;</highlight><highlight class="normal">),<sp/>folder,<sp/>layer.GetName().data());</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"></highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;Exporting<sp/>layer<sp/>\&quot;%s\&quot;<sp/>to<sp/>file<sp/>\&quot;%s\&quot;\r\n&quot;</highlight><highlight class="normal">),<sp/>layer.GetName().data(),<sp/>path.data());</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a7213d1d4cf45d2bee678b9a7f253b5d0" kindref="member">export_one_dag_cb</ref>(cb,<sp/>path);</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T(</highlight><highlight class="stringliteral">&quot;Skipping<sp/>layer<sp/>&apos;%s&apos;.<sp/>It<sp/>has<sp/>no<sp/>nodes<sp/>to<sp/>export<sp/>that<sp/>matches<sp/>the<sp/>export<sp/>settings.\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer.GetName().data());</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a6d1a7ff230ef43fa67f30777cf3fc315" kindref="member">explogError</ref>(_T(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>get<sp/>the<sp/>layer<sp/>properties<sp/>for<sp/>layer<sp/>&apos;%s&apos;.\r\n&quot;</highlight><highlight class="normal">),<sp/>layer.GetName().data());</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"></highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/>util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>|=<sp/>oldExpSel;</highlight></codeline>
<codeline lineno="4470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4471"><highlight class="normal"></highlight></codeline>
<codeline lineno="4472"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ExpUtil::exportLayersAsDagsInternal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*folder,<sp/>ILayer<sp/>&amp;layer)</highlight></codeline>
<codeline lineno="4473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R19)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matchesVisibilityFilter<sp/>=<sp/>(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca6b7267d63b63440a7aa60ef3a099e71b" kindref="member">EXP_HID</ref>)<sp/>!=<sp/>0<sp/>||<sp/>!layer.IsHidden(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matchesVisibilityFilter<sp/>=<sp/>(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca6b7267d63b63440a7aa60ef3a099e71b" kindref="member">EXP_HID</ref>)<sp/>!=<sp/>0<sp/>||<sp/>!layer.IsHidden();</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4479"><highlight class="normal"></highlight></codeline>
<codeline lineno="4480"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R17)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childLayerCount<sp/>=<sp/>layer.GetNumOfChildLayers();</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"></highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(childLayerCount<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matchesVisibilityFilter)</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;Layer<sp/>&apos;%s&apos;<sp/>has<sp/>child<sp/>layer(s),<sp/>it<sp/>will<sp/>not<sp/>be<sp/>exported.\r\n&quot;</highlight><highlight class="normal">),<sp/>layer.GetName().data());</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"></highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>childLayerCount;<sp/>++i)</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exportLayersAsDagsInternal(folder,<sp/>*layer.GetChildLayer(i));</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4492"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matchesVisibilityFilter)</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/><sp/><sp/>exportLayerAsDag(folder,<sp/>layer);</highlight></codeline>
<codeline lineno="4495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"></highlight></codeline>
<codeline lineno="4497"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ExpUtil::exportLayersAsDags()</highlight></codeline>
<codeline lineno="4498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><ref refid="classDagorLogWindowAutoShower" kindref="compound">DagorLogWindowAutoShower</ref><sp/>logWindowAutoShower(</highlight><highlight class="comment">/*clear_log<sp/>=<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"></highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PATH_MAX<sp/>=<sp/>512;</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/>TCHAR<sp/>folder[PATH_MAX];</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!FolderOpenDialog(folder,<sp/><ref refid="classExpUtil_1a1e17af3c62062a6c3a2e6f5e16f3204c" kindref="member">hExpDag</ref>))</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"></highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/>ILayerManager<sp/>*manager<sp/>=<sp/>GetCOREInterface13()-&gt;GetLayerManager();</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!manager)</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a6d1a7ff230ef43fa67f30777cf3fc315" kindref="member">explogError</ref>(_T(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>the<sp/>layer<sp/>manager.\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a6d1a7ff230ef43fa67f30777cf3fc315" kindref="member">explogError</ref>(_T(</highlight><highlight class="stringliteral">&quot;Aborting<sp/>export.\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"></highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cac93b52a68dc3b54c1ad6d4f92faa7cb8" kindref="member">EXP_SEL</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>layerCount<sp/>=<sp/>manager-&gt;GetLayerCount();</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>layerIndex<sp/>=<sp/>0;<sp/>layerIndex<sp/>&lt;<sp/>layerCount;<sp/>++layerIndex)</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R14)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ILayer<sp/>*layer<sp/>=<sp/>manager-&gt;GetLayer(layerIndex);</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ILayer<sp/>*layer<sp/>=<sp/>manager-&gt;GetLayer(manager-&gt;GetSavedLayer(layerIndex));</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4524"><highlight class="normal"></highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>non-top<sp/>level<sp/>layers,<sp/>we<sp/>will<sp/>enumerate<sp/>them<sp/>hierarchially.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4526"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R17)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layer-&gt;GetParentLayer())</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4530"><highlight class="normal"></highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>default<sp/>layer<sp/>itself<sp/>is<sp/>not<sp/>exported<sp/>(except<sp/>when<sp/>&quot;sel&quot;<sp/>is<sp/>enabled<sp/>and<sp/>it<sp/>is<sp/>the<sp/>active<sp/>layer),<sp/>only<sp/>its<sp/>children.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="expUtil_8cpp_1a533d4977a8bf8ddfd90a918427945e3f" kindref="member">is_default_layer</ref>(*layer))</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R17)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childLayerCount<sp/>=<sp/>layer-&gt;GetNumOfChildLayers();</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childLayerIndex<sp/>=<sp/>0;<sp/>childLayerIndex<sp/>&lt;<sp/>childLayerCount;<sp/>++childLayerIndex)</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exportLayersAsDagsInternal(folder,<sp/>*layer-&gt;GetChildLayer(childLayerIndex));</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exportLayersAsDagsInternal(folder,<sp/>*layer);</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/><sp/>ILayer<sp/>*currentLayer<sp/>=<sp/>manager-&gt;GetCurrentLayer();</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!currentLayer)</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a6d1a7ff230ef43fa67f30777cf3fc315" kindref="member">explogError</ref>(_T(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>the<sp/>current<sp/>layer.\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a6d1a7ff230ef43fa67f30777cf3fc315" kindref="member">explogError</ref>(_T(</highlight><highlight class="stringliteral">&quot;Aborting<sp/>export.\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"></highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/>exportLayersAsDagsInternal(folder,<sp/>*currentLayer);</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4557"><highlight class="normal"></highlight></codeline>
<codeline lineno="4558" refid="classCameraNodeEnumerator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCameraNodeEnumerator" kindref="compound">CameraNodeEnumerator</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classENodeCB" kindref="compound">ENodeCB</ref></highlight></codeline>
<codeline lineno="4559"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/>Interface<sp/>*<ref refid="classCameraNodeEnumerator_1a34e12a9eec8dbbe65eda4c06b4893235" kindref="member">ip</ref>;</highlight></codeline>
<codeline lineno="4562" refid="structCameraNodeEnumerator_1_1Cam" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structCameraNodeEnumerator_1_1Cam" kindref="compound">Cam</ref></highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/>INode<sp/>*<ref refid="structCameraNodeEnumerator_1_1Cam_1aa7f742ee653a247ab1fc03ced297220b" kindref="member">cameraNode</ref>;</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraObject<sp/>*<ref refid="structCameraNodeEnumerator_1_1Cam_1a905e243d97395eeecef3e195ae3dd1d2" kindref="member">camera</ref>;</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/><sp/>INode<sp/>*<ref refid="structCameraNodeEnumerator_1_1Cam_1afee3ca0760ce18951e8c0c10f44381f6" kindref="member">hero</ref>;</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structCameraNodeEnumerator_1_1Cam_1ae878de56076e5950c8b05a95618b4fa4" kindref="member">keyNum</ref>;</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structCameraNodeEnumerator_1_1Cam_1aa28c3d3a3a52c38e12f0d642de0419e0" kindref="member">animated</ref>;</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/>Tab&lt;Cam&gt;<sp/><ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>;</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCameraNodeEnumerator_1a846a06c49b2e4233ff7253388de225db" kindref="member">keyNum</ref>;</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"></highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/><ref refid="classCameraNodeEnumerator" kindref="compound">CameraNodeEnumerator</ref>(Interface<sp/>*_ip)<sp/>:<sp/><ref refid="classCameraNodeEnumerator_1a34e12a9eec8dbbe65eda4c06b4893235" kindref="member">ip</ref>(_ip),<sp/><ref refid="classCameraNodeEnumerator_1a846a06c49b2e4233ff7253388de225db" kindref="member">keyNum</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><ref refid="classCameraNodeEnumerator_1a33ab464d29448020d0caf4a8ab0b0650" kindref="member">~CameraNodeEnumerator</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"></highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCameraNodeEnumerator_1a089cb25fff1321f7de656609a098e858" kindref="member">proc</ref>(INode<sp/>*node)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="4577"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;IsHidden())</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"></highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/><sp/>Object<sp/>*obj<sp/>=<sp/>node-&gt;GetObjectRef();</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!obj)</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"></highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj-&gt;SuperClassID()<sp/>!=<sp/>CAMERA_CLASS_ID)</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"></highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/>s[1024];</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"></highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/><sp/>_stprintf(s,<sp/>_T(</highlight><highlight class="stringliteral">&quot;%s_hero&quot;</highlight><highlight class="normal">),<sp/>node-&gt;GetName());</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"></highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/><sp/>Cam<sp/>c;</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/><sp/>c.cameraNode<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/><sp/>c.camera<sp/>=<sp/>(CameraObject<sp/>*)obj;</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/>c.hero<sp/>=<sp/><ref refid="classCameraNodeEnumerator_1a34e12a9eec8dbbe65eda4c06b4893235" kindref="member">ip</ref>-&gt;GetINodeByName(s);</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><sp/>c.keyNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/>c.animated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug<sp/>(<sp/>&quot;%s:<sp/>%p:%p:%p<sp/>(%s)&quot;,<sp/>(char*)node-&gt;GetName(),<sp/>c.cameraNode,<sp/>c.camera,<sp/>c.hero,<sp/>s<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4600"><highlight class="normal"></highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;HasNoteTracks())</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.keyNum<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>node-&gt;NumNoteTracks();<sp/>j++)</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DefNoteTrack<sp/>*_nt<sp/>=<sp/>(DefNoteTrack<sp/>*)node-&gt;GetNoteTrack(j);</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_nt)</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.keyNum<sp/>+=<sp/>_nt-&gt;keys.Count();</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.keyNum<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.animated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.keyNum<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.keyNum<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"></highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCameraNodeEnumerator_1a846a06c49b2e4233ff7253388de225db" kindref="member">keyNum</ref><sp/>+=<sp/>c.keyNum;</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"></highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>.Append(1,<sp/>&amp;c);</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enumnode_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da450653c77f802d8ef4279939698a86da" kindref="member">ECB_CONT</ref>;</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"></highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCameraNodeEnumerator_1af5a6325b3ba319c2d027d90e6693ac8c" kindref="member">export_cameras</ref>(FILE<sp/>*fp)</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">AdvCameraFileHdr</highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>label;</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ver;</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>hdrSize;</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>cameraNum;</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>namePoolSz;</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>keyPoolSz;</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">AdvCameraDataRec</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nameIdx;</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>keyNum;</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>keyIdx;</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"></highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F_Animated<sp/>=<sp/>0x0001</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">AdvCameraKey</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Quat<sp/>rot;</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>pos;</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Point3<sp/>heroPos;</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w,<sp/>fov,<sp/>wFollow;</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/>AdvCameraFileHdr<sp/>hdr;</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/>AdvCameraDataRec<sp/>*data;</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/><sp/>AdvCameraKey<sp/>*key;</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"></highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr.label<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;MACa&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr.ver<sp/>=<sp/>0x100;</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr.hdrSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hdr);</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr.cameraNum<sp/>=<sp/><ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>.Count();</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr.namePoolSz<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr.keyPoolSz<sp/>=<sp/><ref refid="classCameraNodeEnumerator_1a846a06c49b2e4233ff7253388de225db" kindref="member">keyNum</ref>;</highlight></codeline>
<codeline lineno="4665"><highlight class="normal"></highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hdr.cameraNum;<sp/>i++)</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hdr.namePoolSz<sp/>+=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)_tcslen(<ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].cameraNode-&gt;GetName())<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"></highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nmpool_used<sp/>=<sp/>hdr.namePoolSz;</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr.namePoolSz<sp/>=<sp/>(hdr.namePoolSz<sp/>+<sp/>7)<sp/>&amp;<sp/>~7;</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"></highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(&amp;hdr,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hdr),<sp/>fp);</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"></highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AdvCameraDataRec[hdr.cameraNum];</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/>key<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AdvCameraKey[hdr.keyPoolSz];</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"></highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hdr.cameraNum;<sp/>i++)</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>s<sp/>=<sp/><ref refid="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(<ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].cameraNode-&gt;GetName());</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(s.c_str(),<sp/>1,<sp/>s.length()<sp/>+<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>nmpool_used;<sp/>i<sp/>&lt;<sp/>hdr.namePoolSz;<sp/>i++)</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(</highlight><highlight class="stringliteral">&quot;\0&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"></highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>structures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr.namePoolSz<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCameraNodeEnumerator_1a846a06c49b2e4233ff7253388de225db" kindref="member">keyNum</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hdr.cameraNum;<sp/>i++)</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AdvCameraDataRec<sp/>&amp;drec<sp/>=<sp/>data[i];</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drec.nameIdx<sp/>=<sp/>hdr.namePoolSz;</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drec.keyNum<sp/>=<sp/><ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].keyNum;</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drec.keyIdx<sp/>=<sp/><ref refid="classCameraNodeEnumerator_1a846a06c49b2e4233ff7253388de225db" kindref="member">keyNum</ref>;</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drec.flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"></highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hdr.namePoolSz<sp/>+=<sp/>(int)_tcslen(<ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].cameraNode-&gt;GetName())<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCameraNodeEnumerator_1a846a06c49b2e4233ff7253388de225db" kindref="member">keyNum</ref><sp/>+=<sp/><ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].keyNum;</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"></highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].animated)</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>drec.keyIdx;</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drec.flags<sp/>|=<sp/>AdvCameraDataRec::F_Animated;</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"></highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].cameraNode-&gt;NumNoteTracks();<sp/>j++)</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DefNoteTrack<sp/>*_nt<sp/>=<sp/>(DefNoteTrack<sp/>*)<ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].cameraNode-&gt;GetNoteTrack(j);</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_nt)</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>_nt-&gt;keys.Count();<sp/>k++)</highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdvCameraKey<sp/>&amp;krec<sp/>=<sp/>key[idx];</highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NoteKey<sp/>*nk<sp/>=<sp/>_nt-&gt;keys[k];</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>wnote<sp/>=<sp/><ref refid="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(nk-&gt;note);</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"></highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*wt<sp/>=<sp/>strchr(wnote.c_str(),<sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wt)</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt++;</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"></highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCameraNodeEnumerator_1a654b1f7fde49742b53e5e09b5c7476f4" kindref="member">getRotPos</ref>(<ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].cameraNode,<sp/>krec.pos,<sp/>krec.rot,<sp/>nk-&gt;time);</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].hero)</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCameraNodeEnumerator_1ae6f0bb1e5e8a5bbb059c413defccf99c" kindref="member">getPos</ref>(<ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].hero,<sp/><ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].cameraNode-&gt;GetParentNode(),<sp/>krec.heroPos,<sp/>nk-&gt;time);</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>krec.heroPos<sp/>=<sp/>Point3(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"></highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wt)</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>krec.w<sp/>=<sp/>atof(wt);</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>krec.w<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>krec.fov<sp/>=<sp/>1.0<sp/>/<sp/>tan(<ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].camera-&gt;GetFOV(nk-&gt;time)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="debug_8cpp_1ad66a73f3673f2879326899cf57fd8d2e" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;krec.fov=%.3f<sp/>(%.3f<sp/>deg)&quot;</highlight><highlight class="normal">,<sp/>krec.fov,<sp/><ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].camera-&gt;GetFOV(nk-&gt;time)<sp/>*<sp/>180<sp/>/<sp/>PI);</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"></highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(wnote.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;follow&quot;</highlight><highlight class="normal">,<sp/>6)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>krec.wFollow<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(wnote.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;still&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>krec.wFollow<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"></highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug<sp/>(<sp/>&quot;note:<sp/>%s<sp/>krec.wFollow=%.3f<sp/>wt=%.3f&quot;,<sp/>(char*)nk-&gt;note,<sp/>krec.wFollow,<sp/>krec.w<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx++;</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>-<sp/>drec.keyIdx<sp/>!=<sp/>drec.keyNum)</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="debug_8cpp_1ad66a73f3673f2879326899cf57fd8d2e" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;node<sp/>%s:<sp/>idx=%d<sp/>drec.keyIdx=%d<sp/>drec.keyNum=%d&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].cameraNode-&gt;GetName(),<sp/>idx,<sp/>drec.keyIdx,<sp/>drec.keyNum);</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdvCameraKey<sp/>&amp;krec<sp/>=<sp/>key[drec.keyIdx];</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCameraNodeEnumerator_1a654b1f7fde49742b53e5e09b5c7476f4" kindref="member">getRotPos</ref>(<ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].cameraNode,<sp/>krec.pos,<sp/>krec.rot,<sp/>0);</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].hero)</highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCameraNodeEnumerator_1ae6f0bb1e5e8a5bbb059c413defccf99c" kindref="member">getPos</ref>(<ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].hero,<sp/><ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].cameraNode-&gt;GetParentNode(),<sp/>krec.pos,<sp/>0);</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>krec.heroPos<sp/>=<sp/>Point3(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>krec.w<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>krec.fov<sp/>=<sp/>1.0<sp/>/<sp/>tan(<ref refid="classCameraNodeEnumerator_1a27ea9f53f7ac6f70a72fbd4a63882379" kindref="member">cam</ref>[i].camera-&gt;GetFOV(0)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>krec.wFollow<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"></highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(key,<sp/>hdr.keyPoolSz,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(AdvCameraKey),<sp/>fp);</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"></highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>cameras</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="polyBumpUtil_8cpp_1a0c923945d48565c5146d14e14bb094c3" kindref="member">fwrite</ref>(data,<sp/>hdr.cameraNum,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(AdvCameraDataRec),<sp/>fp);</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"></highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data)</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>data;</highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key)</highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>key;</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4770"><highlight class="normal"></highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCameraNodeEnumerator_1ae6f0bb1e5e8a5bbb059c413defccf99c" kindref="member">getPos</ref>(INode<sp/>*node,<sp/>INode<sp/>*parent,<sp/>Point3<sp/>&amp;pos,<sp/>TimeValue<sp/>t)</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix3<sp/>m;</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCameraNodeEnumerator_1a685143e821977721795fc86b9036ad66" kindref="member">interp_tm</ref>(node,<sp/>parent,<sp/>t,<sp/>m);</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>m.GetRow(3);</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug<sp/>(<sp/>&quot;%s:<sp/>%d:<sp/>pos=(%.3f,%.3f,%.3f)&quot;,<sp/>(char*)node-&gt;GetName(),<sp/>t,<sp/>pos.x,<sp/>pos.y,<sp/>pos.z<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCameraNodeEnumerator_1a654b1f7fde49742b53e5e09b5c7476f4" kindref="member">getRotPos</ref>(INode<sp/>*node,<sp/>Point3<sp/>&amp;pos,<sp/>Quat<sp/>&amp;rot,<sp/>TimeValue<sp/>t)</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix3<sp/>m;</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCameraNodeEnumerator_1a685143e821977721795fc86b9036ad66" kindref="member">interp_tm</ref>(node,<sp/>t,<sp/>m);</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4783"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug<sp/>(<sp/>&quot;%s:<sp/>%d:<sp/>(%.3f,%.3f,%.3f)<sp/>(%.3f,%.3f,%.3f)<sp/>(%.3f,%.3f,%.3f)<sp/>(%.3f,%.3f,%.3f)&quot;,<sp/>(char*)node-&gt;GetName(),<sp/>t,</highlight></codeline>
<codeline lineno="4784"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.GetRow(0).x,<sp/>m.GetRow(0).y,<sp/>m.GetRow(0).z,<sp/>m.GetRow(1).x,<sp/>m.GetRow(1).y,<sp/>m.GetRow(1).z,</highlight></codeline>
<codeline lineno="4785"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.GetRow(2).x,<sp/>m.GetRow(2).y,<sp/>m.GetRow(2).z,<sp/>m.GetRow(3).x,<sp/>m.GetRow(3).y,<sp/>m.GetRow(3).z<sp/>);</highlight></codeline>
<codeline lineno="4786"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>ax<sp/>=<sp/>m.GetRow(0),<sp/>ay<sp/>=<sp/>m.GetRow(1),<sp/>az<sp/>=<sp/>m.GetRow(2);</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>m.GetRow(3);</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lx<sp/>=<sp/>Length(ax),<sp/>ly<sp/>=<sp/>Length(ay),<sp/>lz<sp/>=<sp/>Length(az);</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.Parity())</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lz<sp/>=<sp/>-lz;</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lx<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.SetRow(0,<sp/>ax<sp/>/=<sp/>lx);</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ly<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.SetRow(1,<sp/>ay<sp/>/=<sp/>ly);</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lz<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.SetRow(2,<sp/>az<sp/>/=<sp/>lz);</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m.SetRow(3,Point3(0,0,0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m.SetIdentFlags(POS_IDENT|SCL_IDENT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><sp/><sp/>rot<sp/>=<sp/>Quat(m);</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/><sp/><sp/>rot<sp/>=<sp/>Conjugate(rot);</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCameraNodeEnumerator_1a685143e821977721795fc86b9036ad66" kindref="member">interp_tm</ref>(INode<sp/>*node,<sp/>TimeValue<sp/>t,<sp/>Matrix3<sp/>&amp;m)</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/>INode<sp/>*pnode<sp/>=<sp/>node-&gt;GetParentNode();</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix3<sp/>ntm<sp/>=<sp/><ref refid="dagor_8h_1a0ab0a5c17c8fed4cac0335e19af84ef7" kindref="member">get_scaled_stretch_node_tm</ref>(node,<sp/>t);</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix3<sp/>ptm;</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"></highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/><sp/><sp/>adjwtm(ntm);</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pnode)</highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptm<sp/>=<sp/><ref refid="dagor_8h_1a0ab0a5c17c8fed4cac0335e19af84ef7" kindref="member">get_scaled_stretch_node_tm</ref>(pnode,<sp/>t);</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pnode-&gt;IsRootNode())</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjwtm(ptm);</highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>ntm<sp/>*<sp/>Inverse(ptm);</highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>ntm;</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCameraNodeEnumerator_1a685143e821977721795fc86b9036ad66" kindref="member">interp_tm</ref>(INode<sp/>*node,<sp/>INode<sp/>*pnode,<sp/>TimeValue<sp/>t,<sp/>Matrix3<sp/>&amp;m)</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix3<sp/>ntm<sp/>=<sp/><ref refid="dagor_8h_1a0ab0a5c17c8fed4cac0335e19af84ef7" kindref="member">get_scaled_stretch_node_tm</ref>(node,<sp/>t);</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix3<sp/>ptm;</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"></highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/><sp/><sp/>adjwtm(ntm);</highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pnode)</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptm<sp/>=<sp/><ref refid="dagor_8h_1a0ab0a5c17c8fed4cac0335e19af84ef7" kindref="member">get_scaled_stretch_node_tm</ref>(pnode,<sp/>t);</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pnode-&gt;IsRootNode())</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjwtm(ptm);</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>ntm<sp/>*<sp/>Inverse(ptm);</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>ntm;</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4836"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4837"><highlight class="normal"></highlight></codeline>
<codeline lineno="4838"><highlight class="normal"></highlight></codeline>
<codeline lineno="4839"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1ae0f155f8dbbc7b7d793bfe5e0f0cf9d1" kindref="member">ExpUtil::export_camera_v1</ref>()</highlight></codeline>
<codeline lineno="4840"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/><ref refid="classDagorLogWindowAutoShower" kindref="compound">DagorLogWindowAutoShower</ref><sp/>logWindowAutoShower(</highlight><highlight class="comment">/*clear_log<sp/>=<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;Exporting<sp/>Adv.<sp/>Camera<sp/>file<sp/>&lt;%s&gt;...\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="classExpUtil_1a887f9b0d80416214d28b608275052a5b" kindref="member">exp_camera_fname</ref>);</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0;</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"></highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/><ref refid="classCameraNodeEnumerator" kindref="compound">CameraNodeEnumerator</ref><sp/>cne(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>);</highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/><ref refid="enumnode_8h_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>-&gt;GetRootNode(),<sp/>&amp;cne);</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"></highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/>FILE<sp/>*<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref><sp/>=<sp/>_tfopen(<ref refid="classExpUtil_1a887f9b0d80416214d28b608275052a5b" kindref="member">exp_camera_fname</ref>,<sp/>_T<sp/>(</highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>)</highlight></codeline>
<codeline lineno="4850"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4851"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a23ccbd104c1d2ae07dabfde193bb0ede" kindref="member">errorMessage</ref>(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1afc7d82127662b10bfb79dda48db6237f" kindref="member">IDS_FILE_CREATE_ERR</ref>));</highlight></codeline>
<codeline lineno="4852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/>t0<sp/>=<sp/>timeGetTime();</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"><sp/><sp/>cne.export_cameras(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"><sp/><sp/>t0<sp/>=<sp/>timeGetTime()<sp/>-<sp/>t0;</highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/>save<sp/>adv.camera:<sp/>%d<sp/>ms\r\n&quot;</highlight><highlight class="normal">),<sp/>t0);</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"></highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;Success!\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aed5a458133572985ccc7fc10a3159f6b" kindref="member">fclose</ref>(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="4861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4862"><highlight class="normal"></highlight></codeline>
<codeline lineno="4863"><highlight class="normal"></highlight></codeline>
<codeline lineno="4864"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a3df5005e61a1aa2a841fb1e4a4ead059" kindref="member">ExpUtil::exportPhysics</ref>()</highlight></codeline>
<codeline lineno="4865"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/><ref refid="classDagorLogWindowAutoShower" kindref="compound">DagorLogWindowAutoShower</ref><sp/>logWindowAutoShower(</highlight><highlight class="comment">/*clear_log<sp/>=<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;Exporting<sp/>physics<sp/>file<sp/>&lt;%s&gt;...\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="classExpUtil_1ad4108e9533c4dd517034af21ef39795f" kindref="member">exp_phys_fname</ref>);</highlight></codeline>
<codeline lineno="4868"><highlight class="normal"></highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca8ec676346ed8c63ceb28bc171bd35c3a" kindref="member">EXP_DONT_CALC_MOMJ</ref>))</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;Updating<sp/>masses<sp/>and<sp/>momjs...\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1a5cbf6c1604baf4ace0e13d64bbb72f9e" kindref="member">::calc_momjs</ref>(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>);</highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4874"><highlight class="normal"></highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/>FILE<sp/>*<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref><sp/>=<sp/>_tfopen(<ref refid="classExpUtil_1ad4108e9533c4dd517034af21ef39795f" kindref="member">exp_phys_fname</ref>,<sp/>_T<sp/>(</highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>)</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a23ccbd104c1d2ae07dabfde193bb0ede" kindref="member">errorMessage</ref>(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1afc7d82127662b10bfb79dda48db6237f" kindref="member">IDS_FILE_CREATE_ERR</ref>));</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4881"><highlight class="normal"></highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1af55e3469ac33a4cc57e44b31f0fca1b0" kindref="member">::export_physics</ref>(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>,<sp/><ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>);</highlight></codeline>
<codeline lineno="4883"><highlight class="normal"></highlight></codeline>
<codeline lineno="4884"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;Success!\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aed5a458133572985ccc7fc10a3159f6b" kindref="member">fclose</ref>(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="4886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"></highlight></codeline>
<codeline lineno="4888"><highlight class="normal"></highlight></codeline>
<codeline lineno="4889"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a7b73360afda994312cf13615d5dc8a4c" kindref="member">ExpUtil::calcMomj</ref>()</highlight></codeline>
<codeline lineno="4890"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/><ref refid="classDagorLogWindowAutoShower" kindref="compound">DagorLogWindowAutoShower</ref><sp/>logWindowAutoShower(</highlight><highlight class="comment">/*clear_log<sp/>=<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;Updating<sp/>masses<sp/>and<sp/>momjs...\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"></highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a5cbf6c1604baf4ace0e13d64bbb72f9e" kindref="member">::calc_momjs</ref>(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>);</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"></highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;Success!\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"></highlight></codeline>
<codeline lineno="4899"><highlight class="normal"></highlight></codeline>
<codeline lineno="4900"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1a96e84d22def812865afea0c96b0b5366" kindref="member">ExpUtil::checkDupesAndSpaces</ref>(Tab&lt;INode<sp/>*&gt;<sp/>&amp;node_list)</highlight></codeline>
<codeline lineno="4901"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasDupes<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasSpaces<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasEmptyNames<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>node_list.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca6b7267d63b63440a7aa60ef3a099e71b" kindref="member">EXP_HID</ref>)<sp/>&amp;&amp;<sp/>node_list[i]-&gt;IsNodeHidden())</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"></highlight></codeline>
<codeline lineno="4910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cac93b52a68dc3b54c1ad6d4f92faa7cb8" kindref="member">EXP_SEL</ref>)<sp/>&amp;&amp;<sp/>!node_list[i]-&gt;Selected())</highlight></codeline>
<codeline lineno="4911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"></highlight></codeline>
<codeline lineno="4913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node_list[i]-&gt;GetName()[0]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T(</highlight><highlight class="stringliteral">&quot;node<sp/>with<sp/>empty<sp/>name\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hasEmptyNames<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4918"><highlight class="normal"></highlight></codeline>
<codeline lineno="4919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_tcschr(node_list[i]-&gt;GetName(),<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>explog(_T(&quot;node<sp/>name<sp/>\&quot;%s\&quot;<sp/>contains<sp/>spaces\r\n&quot;),<sp/>node_list[i]-&gt;GetName());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hasSpaces<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4924"><highlight class="normal"></highlight></codeline>
<codeline lineno="4925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i<sp/>+<sp/>1;<sp/>j<sp/>&lt;<sp/>node_list.Count();<sp/>++j)</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca6b7267d63b63440a7aa60ef3a099e71b" kindref="member">EXP_HID</ref>)<sp/>&amp;&amp;<sp/>node_list[j]-&gt;IsNodeHidden())</highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4929"><highlight class="normal"></highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cac93b52a68dc3b54c1ad6d4f92faa7cb8" kindref="member">EXP_SEL</ref>)<sp/>&amp;&amp;<sp/>!node_list[j]-&gt;Selected())</highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4932"><highlight class="normal"></highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node_list[i]-&gt;GetName()<sp/>==<sp/>node_list[j]-&gt;GetName())</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T<sp/>(</highlight><highlight class="stringliteral">&quot;duplicate<sp/>node<sp/>name<sp/>\&quot;%s\&quot;\r\n&quot;</highlight><highlight class="normal">),<sp/>node_list[i]-&gt;GetName());</highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasDupes<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"></highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasDupes)</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>-&gt;DisplayTempPrompt(_T(</highlight><highlight class="stringliteral">&quot;There<sp/>are<sp/>duplicate<sp/>node<sp/>names.&quot;</highlight><highlight class="normal">),<sp/><ref refid="expUtil_8cpp_1a398da37e411bb2d829f85232480defea" kindref="member">ERRMSG_DELAY</ref>);</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1ad3cb4f47443771f59b653941df73972c" kindref="member">warningMessage</ref>(_T(</highlight><highlight class="stringliteral">&quot;There<sp/>are<sp/>nodes<sp/>with<sp/>the<sp/>same<sp/>names.\n<sp/>See<sp/>log<sp/>for<sp/>details.&quot;</highlight><highlight class="normal">),<sp/>_T(</highlight><highlight class="stringliteral">&quot;Duplicate<sp/>names&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"></highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasSpaces)</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ip-&gt;DisplayTempPrompt<sp/>(_T(&quot;There<sp/>are<sp/>node<sp/>names<sp/>with<sp/>spaces.&quot;),<sp/>ERRMSG_DELAY);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MessageBox<sp/>(ip-&gt;GetMAXHWnd<sp/>(),<sp/>_T(&quot;There<sp/>are<sp/>node<sp/>names<sp/>with<sp/>spaces.\n<sp/>Spaces<sp/>will<sp/>NOT<sp/>be<sp/>replaced<sp/>with<sp/>&apos;_&apos;<sp/>right<sp/>now.\n<sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>press<sp/>&apos;Convert<sp/>spaces&apos;<sp/>button\n<sp/>on<sp/>the<sp/>&apos;Dagor<sp/>Utility&apos;<sp/>rollout<sp/>to<sp/>convert<sp/>names.\n<sp/>See<sp/>log<sp/>for<sp/>details.&quot;),<sp/>_T<sp/>(&quot;Names<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>spaces&quot;),<sp/>MB_OK<sp/>|<sp/>MB_ICONSTOP);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"></highlight></codeline>
<codeline lineno="4955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasEmptyNames)</highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>-&gt;DisplayTempPrompt(_T(</highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>a<sp/>node<sp/>with<sp/>empty<sp/>name.&quot;</highlight><highlight class="normal">),<sp/><ref refid="expUtil_8cpp_1a398da37e411bb2d829f85232480defea" kindref="member">ERRMSG_DELAY</ref>);</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1ad3cb4f47443771f59b653941df73972c" kindref="member">warningMessage</ref>(_T(</highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>a<sp/>node<sp/>with<sp/>empty<sp/>name.\n<sp/>See<sp/>log<sp/>for<sp/>details.&quot;</highlight><highlight class="normal">),<sp/>_T(</highlight><highlight class="stringliteral">&quot;Empty<sp/>name&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"></highlight></codeline>
<codeline lineno="4962"><highlight class="normal"></highlight></codeline>
<codeline lineno="4963"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classExpUtil_1afa2aec6461f400b682bfc31d29a4658a" kindref="member">ExpUtil::export_instances</ref>()</highlight></codeline>
<codeline lineno="4964"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/><ref refid="classDagorLogWindowAutoShower" kindref="compound">DagorLogWindowAutoShower</ref><sp/>logWindowAutoShower(</highlight><highlight class="comment">/*clear_log<sp/>=<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;Exporting<sp/>instances<sp/>placement<sp/>file<sp/>&lt;%s&gt;...\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="classExpUtil_1a56fd79b5d613e82d43dc4bffe039bcb4" kindref="member">exp_instances_fname</ref>);</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"></highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/><ref refid="classExportENCB" kindref="compound">ExportENCB</ref><sp/>cb(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>-&gt;GetTime(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"><sp/><sp/><ref refid="enumnode_8h_1a21ec496f2d47311f5a23a9575be288d7" kindref="member">enum_nodes</ref>(<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>-&gt;GetRootNode(),<sp/>&amp;cb);</highlight></codeline>
<codeline lineno="4970"><highlight class="normal"></highlight></codeline>
<codeline lineno="4971"><highlight class="normal"><sp/><sp/>FILE<sp/>*<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref><sp/>=<sp/>_tfopen(<ref refid="classExpUtil_1a56fd79b5d613e82d43dc4bffe039bcb4" kindref="member">exp_instances_fname</ref>,<sp/>_T(</highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>)</highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a23ccbd104c1d2ae07dabfde193bb0ede" kindref="member">errorMessage</ref>(<ref refid="common_8cpp_1aeb87de5dfb5d632579574b4bc8709019" kindref="member">GetString</ref>(<ref refid="resource_8h_1afc7d82127662b10bfb79dda48db6237f" kindref="member">IDS_FILE_CREATE_ERR</ref>));</highlight></codeline>
<codeline lineno="4975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"></highlight></codeline>
<codeline lineno="4978"><highlight class="normal"></highlight></codeline>
<codeline lineno="4979"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>base<sp/>ground<sp/>plane.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4980"><highlight class="normal"></highlight></codeline>
<codeline lineno="4981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>planeOffsetX<sp/>=<sp/>1e20f;</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>planeOffsetZ<sp/>=<sp/>1e20f;</highlight></codeline>
<codeline lineno="4983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>planeSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numTexturesWidth<sp/>=<sp/>0,<sp/>numTexturesHeight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasFound<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodeNo<sp/>=<sp/>0;<sp/>nodeNo<sp/>&lt;<sp/>cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count();<sp/>nodeNo++)</highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[nodeNo]-&gt;GetParentNode()<sp/>||<sp/>!cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[nodeNo]-&gt;GetParentNode()-&gt;IsRootNode())</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"></highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_tcsncicmp(cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[nodeNo]-&gt;GetName(),<sp/>_T(</highlight><highlight class="stringliteral">&quot;GroundPlane&quot;</highlight><highlight class="normal">),<sp/>_tcslen(_T(</highlight><highlight class="stringliteral">&quot;GroundPlane&quot;</highlight><highlight class="normal">))))</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"></highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newPlaneOffsetX;</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[nodeNo]-&gt;GetUserPropFloat(_T(</highlight><highlight class="stringliteral">&quot;PlaneOffsetX:r&quot;</highlight><highlight class="normal">),<sp/>newPlaneOffsetX))</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TCHAR<sp/>buf[1000];</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;&apos;%s&apos;:<sp/>invalid<sp/>PlaneOffsetX:r&quot;</highlight><highlight class="normal">),<sp/>cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[nodeNo]-&gt;GetName());</highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a23ccbd104c1d2ae07dabfde193bb0ede" kindref="member">errorMessage</ref>(buf);</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"></highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newPlaneOffsetZ;</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[nodeNo]-&gt;GetUserPropFloat(_T(</highlight><highlight class="stringliteral">&quot;PlaneOffsetZ:r&quot;</highlight><highlight class="normal">),<sp/>newPlaneOffsetZ))</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TCHAR<sp/>buf[1000];</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;&apos;%s&apos;:<sp/>invalid<sp/>PlaneOffsetZ:r&quot;</highlight><highlight class="normal">),<sp/>cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[nodeNo]-&gt;GetName());</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a23ccbd104c1d2ae07dabfde193bb0ede" kindref="member">errorMessage</ref>(buf);</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5011"><highlight class="normal"></highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newPlaneOffsetX<sp/>&lt;=<sp/>planeOffsetX<sp/>||<sp/>newPlaneOffsetZ<sp/>&lt;=<sp/>planeOffsetZ)</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>planeOffsetX<sp/>=<sp/>newPlaneOffsetX;</highlight></codeline>
<codeline lineno="5015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>planeOffsetZ<sp/>=<sp/>newPlaneOffsetZ;</highlight></codeline>
<codeline lineno="5016"><highlight class="normal"></highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[nodeNo]-&gt;GetUserPropFloat(_T(</highlight><highlight class="stringliteral">&quot;PlaneSize:r&quot;</highlight><highlight class="normal">),<sp/>planeSize))</highlight></codeline>
<codeline lineno="5018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCHAR<sp/>buf[1000];</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_stprintf(buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;&apos;%s&apos;:<sp/>invalid<sp/>PlaneSize:r&quot;</highlight><highlight class="normal">),<sp/>cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[nodeNo]-&gt;GetName());</highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a23ccbd104c1d2ae07dabfde193bb0ede" kindref="member">errorMessage</ref>(buf);</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5024"><highlight class="normal"></highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[nodeNo]-&gt;GetUserPropInt(_T(</highlight><highlight class="stringliteral">&quot;numTexturesWidth:i&quot;</highlight><highlight class="normal">),<sp/>numTexturesWidth))</highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numTexturesWidth<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="5027"><highlight class="normal"></highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[nodeNo]-&gt;GetUserPropInt(_T(</highlight><highlight class="stringliteral">&quot;numTexturesHeight:i&quot;</highlight><highlight class="normal">),<sp/>numTexturesHeight))</highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numTexturesHeight<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"></highlight></codeline>
<codeline lineno="5031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wasFound<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5032"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5034"><highlight class="normal"></highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wasFound)</highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExpUtil_1a23ccbd104c1d2ae07dabfde193bb0ede" kindref="member">errorMessage</ref>(_T(</highlight><highlight class="stringliteral">&quot;GroundPlane<sp/>not<sp/>found&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5040"><highlight class="normal"></highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>offsetX<sp/>=<sp/>planeOffsetX<sp/>-<sp/>0.5f<sp/>*<sp/>numTexturesWidth<sp/>*<sp/>planeSize;</highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>offsetZ<sp/>=<sp/>planeOffsetZ<sp/>-<sp/>0.5f<sp/>*<sp/>numTexturesHeight<sp/>*<sp/>planeSize;</highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>planeNo<sp/>=</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)floorf(planeOffsetZ<sp/>/<sp/>planeSize<sp/>+<sp/>0.5f)<sp/>*<sp/>numTexturesWidth<sp/>+<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)floorf(planeOffsetX<sp/>/<sp/>planeSize<sp/>+<sp/>0.5f);</highlight></codeline>
<codeline lineno="5045"><highlight class="normal"></highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>,</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Version:i=20070810\r\nPlaneOffsetX:r=%f\r\nPlaneOffsetZ:r=%f\r\nPlaneSize:r=%f\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;numTexturesWidth:i=%d\r\nnumTexturesHeight:i=%d\r\n\r\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/><sp/><sp/>planeOffsetX,<sp/>planeOffsetZ,<sp/>planeSize,<sp/>numTexturesWidth,<sp/>numTexturesHeight);</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"></highlight></codeline>
<codeline lineno="5051"><highlight class="normal"></highlight></codeline>
<codeline lineno="5052"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Export<sp/>nodes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5053"><highlight class="normal"></highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numExportedNodes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodeNo<sp/>=<sp/>0;<sp/>nodeNo<sp/>&lt;<sp/>cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>.Count();<sp/>nodeNo++)</highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[nodeNo]-&gt;GetParentNode()<sp/>||<sp/>!cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[nodeNo]-&gt;GetParentNode()-&gt;IsRootNode())</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"></highlight></codeline>
<codeline lineno="5060"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/><ref refid="expUtil_8cpp_1a9247db5a252f97c6442d08793a38a1d4" kindref="member">wideToStr</ref>(cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[nodeNo]-&gt;GetName());</highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strnicmp(name.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;GroundPlane&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;GroundPlane&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5063"><highlight class="normal"></highlight></codeline>
<codeline lineno="5064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(name.length()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>isdigit((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)name[name.length()<sp/>-<sp/>1]))</highlight></codeline>
<codeline lineno="5065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name.erase(name.length()<sp/>-<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"></highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.length()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>name[name.length()<sp/>-<sp/>1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name.erase(name.length()<sp/>-<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="5069"><highlight class="normal"></highlight></codeline>
<codeline lineno="5070"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R24)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>masterScale<sp/>=<sp/>(float)GetSystemUnitScale(UNITS_METERS);</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>masterScale<sp/>=<sp/>(float)GetMasterScale(UNITS_METERS);</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix3<sp/>tm<sp/>=<sp/>cb.<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>[nodeNo]-&gt;GetNodeTM(0);</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"><sp/><sp/><sp/><sp/>tm.SetTrans(tm.GetTrans()<sp/>*<sp/>masterScale<sp/>+<sp/>Point3(offsetX,<sp/>offsetZ,<sp/>0.f));</highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Matrix3<sp/>m<sp/>=<sp/>tm;</highlight></codeline>
<codeline lineno="5078"><highlight class="normal"></highlight></codeline>
<codeline lineno="5079"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>,</highlight></codeline>
<codeline lineno="5080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;object{\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>name:t=\&quot;%s\&quot;\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>numericName:t=\&quot;%s<sp/>%u\&quot;\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>matrix:m=[[%f,<sp/>%f,<sp/>%f]<sp/>[%f,<sp/>%f,<sp/>%f]<sp/>[%f,<sp/>%f,<sp/>%f]<sp/>[%f,<sp/>%f,<sp/>%f]]\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;}\r\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name.c_str(),<sp/>name.c_str(),<sp/>planeNo<sp/>*<sp/>100000<sp/>+<sp/>numExportedNodes,<sp/>m[0][0],<sp/>m[0][2],<sp/>m[0][1],<sp/>m[2][0],<sp/>m[2][2],<sp/>m[2][1],<sp/>m[1][0],</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m[1][2],<sp/>m[1][1],<sp/>m[3][0],<sp/>m[3][2],<sp/>m[3][1]);</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"></highlight></codeline>
<codeline lineno="5088"><highlight class="normal"><sp/><sp/><sp/><sp/>numExportedNodes++;</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5090"><highlight class="normal"></highlight></codeline>
<codeline lineno="5091"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a3549262578d22175ff81844aa70de312" kindref="member">explog</ref>(_T(</highlight><highlight class="stringliteral">&quot;Success!\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="5092"><highlight class="normal"><sp/><sp/><ref refid="polyBumpUtil_8cpp_1aed5a458133572985ccc7fc10a3159f6b" kindref="member">fclose</ref>(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="5093"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5094"><highlight class="normal"></highlight></codeline>
<codeline lineno="5095"><highlight class="normal"></highlight></codeline>
<codeline lineno="5096"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classExportENCB_1ad4afceccbf53faab95cbb8a60b360465" kindref="member">ExportENCB::checkDegenerateTriangle</ref>(INode<sp/>*node,<sp/>Matrix3<sp/>&amp;applied_transform,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index1,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index2,</highlight></codeline>
<codeline lineno="5097"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index3,<sp/>Point3<sp/>&amp;vertex1,<sp/>Point3<sp/>&amp;vertex2,<sp/>Point3<sp/>&amp;vertex3)</highlight></codeline>
<codeline lineno="5098"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5099"><highlight class="normal"><sp/><sp/>Point3<sp/>*degenerateAt<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5100"><highlight class="normal"></highlight></codeline>
<codeline lineno="5101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index1<sp/>==<sp/>index2)</highlight></codeline>
<codeline lineno="5102"><highlight class="normal"><sp/><sp/><sp/><sp/>degenerateAt<sp/>=<sp/>&amp;vertex1;</highlight></codeline>
<codeline lineno="5103"><highlight class="normal"></highlight></codeline>
<codeline lineno="5104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index1<sp/>==<sp/>index3)</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/><sp/><sp/>degenerateAt<sp/>=<sp/>&amp;vertex1;</highlight></codeline>
<codeline lineno="5106"><highlight class="normal"></highlight></codeline>
<codeline lineno="5107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index2<sp/>==<sp/>index3)</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/><sp/><sp/>degenerateAt<sp/>=<sp/>&amp;vertex2;</highlight></codeline>
<codeline lineno="5109"><highlight class="normal"></highlight></codeline>
<codeline lineno="5110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dagor_8h_1aa0d2949c6948162a2012fad86d181f69" kindref="member">is_equal_point</ref>(vertex1,<sp/>vertex2,<sp/><ref refid="dagor_8h_1acd02686cc7a7382c7c98ac719753ba8e" kindref="member">DEGENERATE_VERTEX_DELTA</ref>))</highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/><sp/><sp/>degenerateAt<sp/>=<sp/>&amp;vertex1;</highlight></codeline>
<codeline lineno="5112"><highlight class="normal"></highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dagor_8h_1aa0d2949c6948162a2012fad86d181f69" kindref="member">is_equal_point</ref>(vertex1,<sp/>vertex3,<sp/><ref refid="dagor_8h_1acd02686cc7a7382c7c98ac719753ba8e" kindref="member">DEGENERATE_VERTEX_DELTA</ref>))</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/><sp/><sp/>degenerateAt<sp/>=<sp/>&amp;vertex1;</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"></highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dagor_8h_1aa0d2949c6948162a2012fad86d181f69" kindref="member">is_equal_point</ref>(vertex2,<sp/>vertex3,<sp/><ref refid="dagor_8h_1acd02686cc7a7382c7c98ac719753ba8e" kindref="member">DEGENERATE_VERTEX_DELTA</ref>))</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/><sp/><sp/>degenerateAt<sp/>=<sp/>&amp;vertex2;</highlight></codeline>
<codeline lineno="5118"><highlight class="normal"></highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/>Point3<sp/>diff<sp/>=<sp/>vertex3<sp/>-<sp/>vertex1;</highlight></codeline>
<codeline lineno="5120"><highlight class="normal"><sp/><sp/>Point3<sp/>dir<sp/>=<sp/>vertex2<sp/>-<sp/>vertex1;</highlight></codeline>
<codeline lineno="5121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sqrlen<sp/>=<sp/>dir.LengthSquared();</highlight></codeline>
<codeline lineno="5122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>DotProd(diff,<sp/>dir)<sp/>/<sp/>sqrlen;</highlight></codeline>
<codeline lineno="5123"><highlight class="normal"><sp/><sp/>diff<sp/>-=<sp/>t<sp/>*<sp/>dir;</highlight></codeline>
<codeline lineno="5124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>linedist<sp/>=<sp/>diff.Length();</highlight></codeline>
<codeline lineno="5125"><highlight class="normal"></highlight></codeline>
<codeline lineno="5126"><highlight class="normal"><sp/><sp/>Point3<sp/>center;</highlight></codeline>
<codeline lineno="5127"><highlight class="normal"></highlight></codeline>
<codeline lineno="5128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linedist<sp/>&lt;<sp/><ref refid="dagor_8h_1acd02686cc7a7382c7c98ac719753ba8e" kindref="member">DEGENERATE_VERTEX_DELTA</ref>)</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5130"><highlight class="normal"><sp/><sp/><sp/><sp/>center<sp/>=<sp/>(vertex1<sp/>+<sp/>vertex2<sp/>+<sp/>vertex3)<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/><sp/><sp/>degenerateAt<sp/>=<sp/>&amp;center;</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5133"><highlight class="normal"></highlight></codeline>
<codeline lineno="5134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(degenerateAt)</highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MAX_RELEASE_R24)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5137"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>transformedPoint<sp/>=<sp/>(*degenerateAt)<sp/>/<sp/>(float)GetSystemUnitScale(UNITS_METERS);</highlight></codeline>
<codeline lineno="5138"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/><sp/><sp/>Point3<sp/>transformedPoint<sp/>=<sp/>(*degenerateAt)<sp/>/<sp/>(float)GetMasterScale(UNITS_METERS);</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/><sp/><sp/>transformedPoint<sp/>=<sp/>Inverse(applied_transform)<sp/>*<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>-&gt;GetObjTMAfterWSM(0)<sp/>*<sp/>transformedPoint;</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"></highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="expUtil_8cpp_1adcf4a770409ba70954a0b6adf20deebb" kindref="member">explogWarning</ref>(_T(<sp/></highlight><highlight class="stringliteral">&quot;&apos;%s&apos;<sp/>has<sp/>degenerate<sp/>triangle<sp/>at<sp/>(%g,<sp/>%g,<sp/>%g)<sp/>(in<sp/>units)\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>-&gt;GetName(),<sp/>transformedPoint.x,</highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>transformedPoint.y,<sp/>transformedPoint.z);</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"></highlight></codeline>
<codeline lineno="5146"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Highlight<sp/>degenerates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5148"><highlight class="normal"></highlight></codeline>
<codeline lineno="5149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Object<sp/>*obj<sp/>=<sp/>(Object*)util.<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>-&gt;CreateInstance(</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GEOMOBJECT_CLASS_ID,</highlight></codeline>
<codeline lineno="5151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Class_ID(BOXOBJ_CLASS_ID,0));</highlight></codeline>
<codeline lineno="5152"><highlight class="normal"></highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IParamArray<sp/>*pParams<sp/>=<sp/>obj-&gt;GetParamBlock();</highlight></codeline>
<codeline lineno="5154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(pParams);</highlight></codeline>
<codeline lineno="5155"><highlight class="normal"></highlight></codeline>
<codeline lineno="5156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>obj-&gt;GetParamBlockIndex(BOXOBJ_LENGTH);</highlight></codeline>
<codeline lineno="5157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pParams-&gt;SetValue(l,TimeValue(0),<sp/>0.01f);</highlight></codeline>
<codeline lineno="5158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>obj-&gt;GetParamBlockIndex(BOXOBJ_WIDTH);</highlight></codeline>
<codeline lineno="5159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pParams-&gt;SetValue(w,TimeValue(0),<sp/>0.01f);</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref><sp/>=<sp/>obj-&gt;GetParamBlockIndex(BOXOBJ_HEIGHT);</highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pParams-&gt;SetValue(<ref refid="polyBumpUtil_8cpp_1a48d03c7323d95df49ef19db24dcb5c71" kindref="member">h</ref>,TimeValue(0),<sp/>0.01f);</highlight></codeline>
<codeline lineno="5162"><highlight class="normal"></highlight></codeline>
<codeline lineno="5163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>INode<sp/>*<ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref><sp/>=<sp/>util.<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>-&gt;CreateObjectNode(obj);</highlight></codeline>
<codeline lineno="5164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TSTR<sp/>name(_T(</highlight><highlight class="stringliteral">&quot;Degenerate&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>util.<ref refid="classExpUtil_1a76c9be1e2852162613c12f9bf5423b9a" kindref="member">ip</ref>-&gt;MakeNameUnique(name);</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>-&gt;SetName(name);</highlight></codeline>
<codeline lineno="5167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>-&gt;SetWireColor(RGB(255,<sp/>64,<sp/>64));</highlight></codeline>
<codeline lineno="5168"><highlight class="normal"></highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1a5ca954fd089f989d7efb4e064a038309" kindref="member">node</ref>-&gt;SetNodeTM(0,<sp/>TransMatrix(transformedPoint));</highlight></codeline>
<codeline lineno="5170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5172"><highlight class="normal"></highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>degenerateAt<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="5174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"></highlight></codeline>
<codeline lineno="5176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1a8036daeeff4e66e0424a344a3ed8da70" kindref="member">update_export_mode</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_legacy_import)</highlight></codeline>
<codeline lineno="5177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><sp/><sp/>util.<ref refid="classExpUtil_1a33454b89fd841b5b1fee1de4ac57e850" kindref="member">exportMode</ref><sp/>=<sp/>use_legacy_import<sp/>?<sp/><ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71a3d6de23c17caebe5e1069e9d8162f68e" kindref="member">ExpUtil::ExportMode::Standard</ref><sp/>:<sp/><ref refid="classExpUtil_1a96d3da2a9ad3fc0511b17476803eaa71a1a84d00dd5e6f917c72da626b5760a7e" kindref="member">ExpUtil::ExportMode::LayersAsDags</ref>;</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"><sp/><sp/>util.<ref refid="classExpUtil_1a4f6f9a090dba0a8b63e4662a9acbf244" kindref="member">update_ui_dag</ref>(util.<ref refid="classExpUtil_1a1e17af3c62062a6c3a2e6f5e16f3204c" kindref="member">hExpDag</ref>);</highlight></codeline>
<codeline lineno="5180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5181"><highlight class="normal"></highlight></codeline>
<codeline lineno="5182"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*<ref refid="classExportENCB_1ab1549f0686ca5197b59443ed1679ac22" kindref="member">ExportENCB::makeCheckedRelPath</ref>(INode<sp/>*node,<sp/>Mtl<sp/>*mtl,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*absolute_path)</highlight></codeline>
<codeline lineno="5183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*relative_path<sp/>=<sp/><ref refid="dagor_8h_1ad6c7097e82be93eaca64c248fd4e8024" kindref="member">make_path_rel</ref>(absolute_path);</highlight></codeline>
<codeline lineno="5185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(absolute_path<sp/>&amp;&amp;<sp/>absolute_path[0]<sp/>&amp;&amp;<sp/>relative_path<sp/>==<sp/>absolute_path)<sp/></highlight><highlight class="comment">//<sp/>Pointer<sp/>comparison<sp/>is<sp/>valid<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5186"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>explog(&quot;&apos;%s&apos;<sp/>has<sp/>material<sp/>&apos;%s&apos;<sp/>with<sp/>absolute<sp/>texture<sp/>path<sp/>&apos;%s&apos;\r\n&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>node-&gt;GetName(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>mtl-&gt;GetName(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>absolute_path);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5191"><highlight class="normal"></highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classExportENCB_1ae53cc35aa929caffa9d3f1c7a3b56a77" kindref="member">hasAbsolutePaths</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"></highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>relative_path;</highlight></codeline>
<codeline lineno="5196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5197"><highlight class="normal"></highlight></codeline>
<codeline lineno="5198"><highlight class="normal"></highlight></codeline>
<codeline lineno="5199"><highlight class="normal"></highlight><highlight class="comment">//==========================================================================//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5200"><highlight class="normal"></highlight></codeline>
<codeline lineno="5201"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="expUtil_8cpp_1a63446b230c177c997637df55fe9df08a" kindref="member">ExpOps</ref></highlight></codeline>
<codeline lineno="5202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/><ref refid="expUtil_8cpp_1a63446b230c177c997637df55fe9df08aa1d2c95c28c53e6ea88888ceeb07c4395" kindref="member">fun_export</ref></highlight></codeline>
<codeline lineno="5204"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"></highlight></codeline>
<codeline lineno="5206" refid="classIDagorExportUtil" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classIDagorExportUtil" kindref="compound">IDagorExportUtil</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FPStaticInterface</highlight></codeline>
<codeline lineno="5207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5208"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5209"><highlight class="normal"><sp/><sp/>DECLARE_DESCRIPTOR(<ref refid="classIDagorExportUtil" kindref="compound">IDagorExportUtil</ref>)</highlight></codeline>
<codeline lineno="5210"><highlight class="normal"><sp/><sp/>BEGIN_FUNCTION_MAP<sp/><ref refid="classIDagorExportUtil_1a7fa6073a698e3333033fe2e203f3de8c" kindref="member">FN_4</ref>(<ref refid="expUtil_8cpp_1a63446b230c177c997637df55fe9df08aa1d2c95c28c53e6ea88888ceeb07c4395" kindref="member">fun_export</ref>,<sp/>TYPE_BOOL,<sp/>export_dag,<sp/>TYPE_STRING,<sp/>TYPE_INTERVAL,<sp/>TYPE_BOOL,<sp/>TYPE_BOOL)<sp/>END_FUNCTION_MAP</highlight></codeline>
<codeline lineno="5211"><highlight class="normal"></highlight></codeline>
<codeline lineno="5212"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>export_dag(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*fn,<sp/>Interval<sp/><ref refid="classIDagorExportUtil_1a5262b50a656ed9eed46d6b1ca9d1f919" kindref="member">ival</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIDagorExportUtil_1a80e18beda3af2743c58aaaed97c899c9" kindref="member">selectedOnly</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIDagorExportUtil_1a836057b978a9f9ea4d3a93b83d030fb5" kindref="member">suppressPrompts</ref>)</highlight></codeline>
<codeline lineno="5213"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIDagorExportUtil_1a5262b50a656ed9eed46d6b1ca9d1f919" kindref="member">ival</ref>.Empty())</highlight></codeline>
<codeline lineno="5215"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;=<sp/>~EXP_ARNG;</highlight></codeline>
<codeline lineno="5217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>|=<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06ca956d9e2e9bf0cfa553e275e892b79bb0" kindref="member">EXP_ARNG</ref>;</highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>util.<ref refid="classExpUtil_1a11e3343900a93370d7eb826dcc5ea98b" kindref="member">astart</ref><sp/>=<sp/><ref refid="classIDagorExportUtil_1a5262b50a656ed9eed46d6b1ca9d1f919" kindref="member">ival</ref>.Start();</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>util.<ref refid="classExpUtil_1a3b55a6b7b7eb2f628552d88a28679793" kindref="member">aend</ref><sp/>=<sp/><ref refid="classIDagorExportUtil_1a5262b50a656ed9eed46d6b1ca9d1f919" kindref="member">ival</ref>.End();</highlight></codeline>
<codeline lineno="5223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"></highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIDagorExportUtil_1a80e18beda3af2743c58aaaed97c899c9" kindref="member">selectedOnly</ref>)</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>|=<sp/><ref refid="dagor_8h_1adc29c2ff13d900c2f185ee95427fb06cac93b52a68dc3b54c1ad6d4f92faa7cb8" kindref="member">EXP_SEL</ref>;</highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>util.<ref refid="classExpUtil_1a15b14c2ed61b0b57c8981b21bd2c7530" kindref="member">expflg</ref><sp/>&amp;=<sp/>~EXP_SEL;</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"></highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/><sp/><sp/>util.<ref refid="classExpUtil_1a9c812ede9a27d6f648d285dddb655f51" kindref="member">suppressPrompts</ref><sp/>=<sp/><ref refid="classIDagorExportUtil_1a836057b978a9f9ea4d3a93b83d030fb5" kindref="member">suppressPrompts</ref>;</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"></highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/><sp/><sp/>util.<ref refid="classExpUtil_1a3751f0176ca3e72f41e949bd7ab926aa" kindref="member">exp_fname</ref><sp/>=<sp/>fn;</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/><sp/><sp/>util.<ref refid="classExpUtil_1a39aec5f75bfc81bf561fa7aa8851f158" kindref="member">update_ui</ref>();</highlight></codeline>
<codeline lineno="5234"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/><ref refid="classIDagorExportUtil_1ab90366a6a340ad5ccbfbe80c78cb0239" kindref="member">result</ref><sp/>=<sp/>util.<ref refid="classExpUtil_1a57fe73c0502686d0215c4fe0ddabf49a" kindref="member">export_dag</ref>();</highlight></codeline>
<codeline lineno="5235"><highlight class="normal"></highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/><sp/><sp/>util.<ref refid="classExpUtil_1a9c812ede9a27d6f648d285dddb655f51" kindref="member">suppressPrompts</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5237"><highlight class="normal"></highlight></codeline>
<codeline lineno="5238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIDagorExportUtil_1ab90366a6a340ad5ccbfbe80c78cb0239" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="5239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5240"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5241"><highlight class="normal"></highlight></codeline>
<codeline lineno="5242"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classIDagorExportUtil" kindref="compound">IDagorExportUtil</ref><sp/>dagorexputiliface(Interface_ID(0x18da32ce,<sp/>0x739f1b15),<sp/>_T<sp/>(</highlight><highlight class="stringliteral">&quot;dagorExport&quot;</highlight><highlight class="normal">),<sp/><ref refid="resource_8h_1a20bfaf5a057d282168e3664b056ebc25" kindref="member">IDS_DAGOR_EXPORT_IFACE</ref>,<sp/>NULL,</highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/>FP_CORE,<sp/><ref refid="expUtil_8cpp_1a63446b230c177c997637df55fe9df08aa1d2c95c28c53e6ea88888ceeb07c4395" kindref="member">fun_export</ref>,<sp/>_T<sp/>(</highlight><highlight class="stringliteral">&quot;export&quot;</highlight><highlight class="normal">),<sp/>-1,<sp/>TYPE_BOOL,<sp/>0,<sp/>4,<sp/>_T<sp/>(</highlight><highlight class="stringliteral">&quot;filename&quot;</highlight><highlight class="normal">),<sp/>-1,<sp/>TYPE_STRING,<sp/>_T<sp/>(</highlight><highlight class="stringliteral">&quot;range&quot;</highlight><highlight class="normal">),<sp/>-1,<sp/>TYPE_INTERVAL,</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>f_keyArgDefault<sp/>marks<sp/>an<sp/>optional<sp/>keyArg<sp/>param.<sp/>The<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>that<sp/>is<sp/>its<sp/>default<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/>_T<sp/>(</highlight><highlight class="stringliteral">&quot;selectedOnly&quot;</highlight><highlight class="normal">),<sp/>-1,<sp/>TYPE_BOOL,<sp/>f_keyArgDefault,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>_T<sp/>(</highlight><highlight class="stringliteral">&quot;suppressPrompts&quot;</highlight><highlight class="normal">),<sp/>-1,<sp/>TYPE_BOOL,<sp/>f_keyArgDefault,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5247"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>defined(MAX_RELEASE_R15)<sp/>&amp;&amp;<sp/>MAX_RELEASE<sp/>&gt;=<sp/>MAX_RELEASE_R15</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/>p_end</highlight></codeline>
<codeline lineno="5249"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/>end</highlight></codeline>
<codeline lineno="5251"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="5252"><highlight class="normal">);</highlight></codeline>
    </programlisting>
    <location file="expUtil.cpp"/>
  </compounddef>
</doxygen>
