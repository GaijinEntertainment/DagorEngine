<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="dag__serialIntBuffer_8h" kind="file" language="C++">
    <compoundname>dag_serialIntBuffer.h</compoundname>
    <innerclass refid="structserial__buffer_1_1SerialBufferUsage" prot="public">serial_buffer::SerialBufferUsage</innerclass>
    <innerclass refid="structserial__buffer_1_1SerialBufferCounter" prot="public">serial_buffer::SerialBufferCounter</innerclass>
    <innernamespace refid="namespaceserial__buffer">serial_buffer</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dagor<sp/>Engine<sp/>6.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>to<sp/>workaround<sp/>DX11<sp/>inability<sp/>to<sp/>make<sp/>multridrawindirect<sp/>with<sp/>passing<sp/>_something_<sp/>to<sp/>each<sp/>subsequent<sp/>draw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>basically,<sp/>this<sp/>is<sp/>vertex<sp/>buffer<sp/>with<sp/>serial<sp/>ints<sp/>[0<sp/>...<sp/>count),<sp/>which<sp/>you<sp/>can<sp/>set<sp/>as<sp/>a<sp/>instanced<sp/>stream<sp/>(also<sp/>requires<sp/>changing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vdecl)<sp/>that<sp/>is<sp/>much<sp/>slower<sp/>on<sp/>GPU<sp/>than<sp/>all<sp/>normal<sp/>APIs<sp/>which<sp/>_pass_<sp/>baseInstanceId<sp/>in<sp/>indirect<sp/>args<sp/>to<sp/>drawcall<sp/>yet<sp/>that<sp/>is<sp/>THE<sp/>ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>way<sp/>on<sp/>DX11<sp/>right<sp/>now,<sp/>on<sp/>DX12<sp/>there<sp/>is<sp/>also<sp/>no<sp/>reasonable<sp/>implementation.<sp/>But<sp/>DX12<sp/>allows<sp/>changing<sp/>root<sp/>constant<sp/>between<sp/>draws,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>make<sp/>it<sp/>working<sp/>better</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="namespaceserial__buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceserial__buffer" kindref="compound">serial_buffer</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15" refid="namespaceserial__buffer_1a6bcb9f35736f5f7188e97c78c67f1b63" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceserial__buffer_1a6bcb9f35736f5f7188e97c78c67f1b63" kindref="member">init_serial</ref>(uint32_t<sp/>count);<sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>paired<sp/>with<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="namespaceserial__buffer_1af94a7000d49e2c471ec196591eb06568" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceserial__buffer_1af94a7000d49e2c471ec196591eb06568" kindref="member">term_serial</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="namespaceserial__buffer_1a2cf538b686464759d70c6c700cb7f4a5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Sbuffer<sp/>*<ref refid="namespaceserial__buffer_1a2cf538b686464759d70c6c700cb7f4a5" kindref="member">start_use_serial</ref>(uint32_t<sp/>count);</highlight></codeline>
<codeline lineno="20" refid="namespaceserial__buffer_1a7e74b586ebb83602075990cab470379c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceserial__buffer_1a7e74b586ebb83602075990cab470379c" kindref="member">stop_use_serial</ref>(Sbuffer<sp/>*);</highlight></codeline>
<codeline lineno="21" refid="structserial__buffer_1_1SerialBufferUsage" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structserial__buffer_1_1SerialBufferUsage" kindref="compound">SerialBufferUsage</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23" refid="structserial__buffer_1_1SerialBufferUsage_1a9fcc94381f736fb8331774420340ca0f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structserial__buffer_1_1SerialBufferUsage_1a9fcc94381f736fb8331774420340ca0f" kindref="member">SerialBufferUsage</ref>(<ref refid="structserial__buffer_1_1SerialBufferUsage" kindref="compound">SerialBufferUsage</ref><sp/>&amp;&amp;s)<sp/>:<sp/>sb(s.sb)<sp/>{<sp/>s.sb<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="24" refid="structserial__buffer_1_1SerialBufferUsage_1ac3ded832f07d3593e80ad75c6e8b89fe" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structserial__buffer_1_1SerialBufferUsage_1ac3ded832f07d3593e80ad75c6e8b89fe" kindref="member">SerialBufferUsage</ref>(uint32_t<sp/>count<sp/>=<sp/>0)<sp/>:<sp/>sb(count<sp/>?<sp/><ref refid="namespaceserial__buffer_1a2cf538b686464759d70c6c700cb7f4a5" kindref="member">start_use_serial</ref>(count)<sp/>:<sp/>nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="25" refid="structserial__buffer_1_1SerialBufferUsage_1a0442c37c4edce4ed91c4ed2f2d65fa8d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structserial__buffer_1_1SerialBufferUsage_1a0442c37c4edce4ed91c4ed2f2d65fa8d" kindref="member">~SerialBufferUsage</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sb)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceserial__buffer_1a7e74b586ebb83602075990cab470379c" kindref="member">stop_use_serial</ref>(sb);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30" refid="structserial__buffer_1_1SerialBufferUsage_1a2c383c915e065619456285ae187605fe" refkind="member"><highlight class="normal"><sp/><sp/>Sbuffer<sp/>*<ref refid="structserial__buffer_1_1SerialBufferUsage_1a2c383c915e065619456285ae187605fe" kindref="member">get</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sb;<sp/>}</highlight></codeline>
<codeline lineno="31" refid="structserial__buffer_1_1SerialBufferUsage_1a7b23f6984d4da0de6a90c73d87df7000" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>Sbuffer<sp/>*()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sb;<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>Sbuffer<sp/>*sb<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="structserial__buffer_1_1SerialBufferUsage" kindref="compound">SerialBufferUsage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structserial__buffer_1_1SerialBufferUsage" kindref="compound">SerialBufferUsage</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="structserial__buffer_1_1SerialBufferUsage" kindref="compound">SerialBufferUsage</ref><sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structserial__buffer_1_1SerialBufferUsage" kindref="compound">SerialBufferUsage</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38" refid="structserial__buffer_1_1SerialBufferCounter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structserial__buffer_1_1SerialBufferCounter" kindref="compound">SerialBufferCounter</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40" refid="structserial__buffer_1_1SerialBufferCounter_1ab45e61be10b1504ec70653b8e3d5e2d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structserial__buffer_1_1SerialBufferCounter_1ab45e61be10b1504ec70653b8e3d5e2d1" kindref="member">init</ref>(uint32_t<sp/>count_)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structserial__buffer_1_1SerialBufferCounter_1a40924e2191a0593c2bdf34431e23dde1" kindref="member">count</ref>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceserial__buffer_1af94a7000d49e2c471ec196591eb06568" kindref="member">term_serial</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structserial__buffer_1_1SerialBufferCounter_1a40924e2191a0593c2bdf34431e23dde1" kindref="member">count</ref><sp/>=<sp/>count_;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceserial__buffer_1a6bcb9f35736f5f7188e97c78c67f1b63" kindref="member">init_serial</ref>(<ref refid="structserial__buffer_1_1SerialBufferCounter_1a40924e2191a0593c2bdf34431e23dde1" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47" refid="structserial__buffer_1_1SerialBufferCounter_1ab5be0db885efba6b24469f95b1702bdd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structserial__buffer_1_1SerialBufferCounter_1ab5be0db885efba6b24469f95b1702bdd" kindref="member">SerialBufferCounter</ref>(uint32_t<sp/>count_)<sp/>:<sp/><ref refid="structserial__buffer_1_1SerialBufferCounter_1a40924e2191a0593c2bdf34431e23dde1" kindref="member">count</ref>(count_)<sp/>{<sp/><ref refid="namespaceserial__buffer_1a6bcb9f35736f5f7188e97c78c67f1b63" kindref="member">init_serial</ref>(<ref refid="structserial__buffer_1_1SerialBufferCounter_1a40924e2191a0593c2bdf34431e23dde1" kindref="member">count</ref>);<sp/>}</highlight></codeline>
<codeline lineno="48" refid="structserial__buffer_1_1SerialBufferCounter_1a9795210d6be8c753d82facb5a80472cd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structserial__buffer_1_1SerialBufferCounter_1a9795210d6be8c753d82facb5a80472cd" kindref="member">SerialBufferCounter</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49" refid="structserial__buffer_1_1SerialBufferCounter_1a5d4b2d393393d9c244f037e8683dfc9e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structserial__buffer_1_1SerialBufferCounter_1a5d4b2d393393d9c244f037e8683dfc9e" kindref="member">SerialBufferCounter</ref>(<ref refid="structserial__buffer_1_1SerialBufferCounter" kindref="compound">SerialBufferCounter</ref><sp/>&amp;&amp;a)<sp/>:<sp/><ref refid="structserial__buffer_1_1SerialBufferCounter_1a40924e2191a0593c2bdf34431e23dde1" kindref="member">count</ref>(a.<ref refid="structserial__buffer_1_1SerialBufferCounter_1a40924e2191a0593c2bdf34431e23dde1" kindref="member">count</ref>)<sp/>{<sp/>a.count<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="50" refid="structserial__buffer_1_1SerialBufferCounter_1a90512420010dcc5f1bec9d8eb28f3e4f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structserial__buffer_1_1SerialBufferCounter" kindref="compound">SerialBufferCounter</ref><sp/>&amp;<ref refid="structserial__buffer_1_1SerialBufferCounter_1a90512420010dcc5f1bec9d8eb28f3e4f" kindref="member">operator=</ref>(<ref refid="structserial__buffer_1_1SerialBufferCounter" kindref="compound">SerialBufferCounter</ref><sp/>&amp;&amp;a)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>t<sp/>=<sp/><ref refid="structserial__buffer_1_1SerialBufferCounter_1a40924e2191a0593c2bdf34431e23dde1" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structserial__buffer_1_1SerialBufferCounter_1a40924e2191a0593c2bdf34431e23dde1" kindref="member">count</ref><sp/>=<sp/>a.count;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>a.count<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57" refid="structserial__buffer_1_1SerialBufferCounter_1abb2fe14469c3bcaa5a82ca3e035dc982" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structserial__buffer_1_1SerialBufferUsage" kindref="compound">SerialBufferUsage</ref><sp/><ref refid="structserial__buffer_1_1SerialBufferCounter_1abb2fe14469c3bcaa5a82ca3e035dc982" kindref="member">get</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structserial__buffer_1_1SerialBufferUsage" kindref="compound">SerialBufferUsage</ref>(<ref refid="structserial__buffer_1_1SerialBufferCounter_1a40924e2191a0593c2bdf34431e23dde1" kindref="member">count</ref>);<sp/>}</highlight></codeline>
<codeline lineno="58" refid="structserial__buffer_1_1SerialBufferCounter_1ad03435e65f91dc26d3cc1049671ed67d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structserial__buffer_1_1SerialBufferCounter_1ad03435e65f91dc26d3cc1049671ed67d" kindref="member">~SerialBufferCounter</ref>()</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structserial__buffer_1_1SerialBufferCounter_1a40924e2191a0593c2bdf34431e23dde1" kindref="member">count</ref>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceserial__buffer_1af94a7000d49e2c471ec196591eb06568" kindref="member">term_serial</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65" refid="structserial__buffer_1_1SerialBufferCounter_1a40924e2191a0593c2bdf34431e23dde1" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structserial__buffer_1_1SerialBufferCounter_1a40924e2191a0593c2bdf34431e23dde1" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>serial_buffer</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="dag_serialIntBuffer.h"/>
  </compounddef>
</doxygen>
