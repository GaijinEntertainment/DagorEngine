<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="dag__resPtr_8h" kind="file" language="C++">
    <compoundname>dag_resPtr.h</compoundname>
    <includes refid="dag__resMgr_8h" local="yes">dag_resMgr.h</includes>
    <includes refid="dag__texMgr_8h" local="yes">dag_texMgr.h</includes>
    <includes local="no">drv/3d/dag_renderTarget.h</includes>
    <includes local="no">drv/3d/dag_vertexIndexBuffer.h</includes>
    <includes local="no">drv/3d/dag_heap.h</includes>
    <includes local="no">drv/3d/dag_texture.h</includes>
    <includes local="no">drv/3d/dag_driver.h</includes>
    <includes local="no">drv/3d/dag_commands.h</includes>
    <includes local="no">drv/3d/dag_buffers.h</includes>
    <includes local="no">shaders/dag_shaders.h</includes>
    <includes local="no">gameRes/dag_gameResources.h</includes>
    <includes local="no">debug/dag_assert.h</includes>
    <includes local="no">EASTL/algorithm.h</includes>
    <includes local="no">EASTL/type_traits.h</includes>
    <includes local="no">util/dag_preprocessor.h</includes>
    <includes local="no">generic/dag_fixedMoveOnlyFunction.h</includes>
    <includedby refid="dag__indirectDrawcallsBuffer_8h" local="no">dag_indirectDrawcallsBuffer.h</includedby>
    <includedby refid="dag__multidrawContext_8h" local="no">dag_multidrawContext.h</includedby>
    <includedby refid="dag__resizableTex_8h" local="yes">dag_resizableTex.h</includedby>
    <includedby refid="dag__ringDynBuf_8h" local="no">dag_ringDynBuf.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>dag_resMgr.h</label>
        <link refid="dag__resMgr_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>dag_resPtr.h</label>
        <link refid="dag__resPtr_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>dag_texMgr.h</label>
        <link refid="dag__texMgr_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>EASTL/algorithm.h</label>
      </node>
      <node id="23">
        <label>EASTL/type_traits.h</label>
      </node>
      <node id="21">
        <label>debug/dag_assert.h</label>
      </node>
      <node id="18">
        <label>drv/3d/dag_buffers.h</label>
      </node>
      <node id="17">
        <label>drv/3d/dag_commands.h</label>
      </node>
      <node id="3">
        <label>drv/3d/dag_d3dResource.h</label>
      </node>
      <node id="16">
        <label>drv/3d/dag_driver.h</label>
      </node>
      <node id="14">
        <label>drv/3d/dag_heap.h</label>
      </node>
      <node id="12">
        <label>drv/3d/dag_renderTarget.h</label>
      </node>
      <node id="4">
        <label>drv/3d/dag_resId.h</label>
      </node>
      <node id="10">
        <label>drv/3d/dag_samplerHandle.h</label>
      </node>
      <node id="15">
        <label>drv/3d/dag_texture.h</label>
      </node>
      <node id="13">
        <label>drv/3d/dag_vertexIndexBuffer.h</label>
      </node>
      <node id="20">
        <label>gameRes/dag_gameResources.h</label>
      </node>
      <node id="25">
        <label>generic/dag_fixedMoveOnlyFunction.h</label>
      </node>
      <node id="11">
        <label>generic/dag_tabFwd.h</label>
      </node>
      <node id="5">
        <label>osApiWrappers/dag_atomic.h</label>
      </node>
      <node id="19">
        <label>shaders/dag_shaders.h</label>
      </node>
      <node id="7">
        <label>startup/dag_globalSettings.h</label>
      </node>
      <node id="24">
        <label>util/dag_preprocessor.h</label>
      </node>
      <node id="6">
        <label>util/dag_stdint.h</label>
      </node>
      <node id="9">
        <label>util/dag_texMetaData.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>dag_indirectDrawcallsBuffer.h</label>
        <link refid="dag__indirectDrawcallsBuffer_8h"/>
      </node>
      <node id="3">
        <label>dag_multidrawContext.h</label>
        <link refid="dag__multidrawContext_8h"/>
      </node>
      <node id="1">
        <label>dag_resPtr.h</label>
        <link refid="dag__resPtr_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>dag_resizableTex.h</label>
        <link refid="dag__resizableTex_8h"/>
      </node>
      <node id="5">
        <label>dag_ringDynBuf.h</label>
        <link refid="dag__ringDynBuf_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structresptr__detail_1_1Helper" prot="public">resptr_detail::Helper</innerclass>
    <innerclass refid="structresptr__detail_1_1Helper_3_01Sbuffer_01_4" prot="public">resptr_detail::Helper&lt; Sbuffer &gt;</innerclass>
    <innerclass refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4" prot="public">resptr_detail::Helper&lt; BaseTexture &gt;</innerclass>
    <innerclass refid="structresptr__detail_1_1ExternalTexWrapper" prot="public">resptr_detail::ExternalTexWrapper</innerclass>
    <innerclass refid="structresptr__detail_1_1Helper_3_01ExternalTexWrapper_01_4" prot="public">resptr_detail::Helper&lt; ExternalTexWrapper &gt;</innerclass>
    <innerclass refid="structresptr__detail_1_1ExternalBufWrapper" prot="public">resptr_detail::ExternalBufWrapper</innerclass>
    <innerclass refid="structresptr__detail_1_1Helper_3_01ExternalBufWrapper_01_4" prot="public">resptr_detail::Helper&lt; ExternalBufWrapper &gt;</innerclass>
    <innerclass refid="structresptr__detail_1_1PrivateDataGetter" prot="public">resptr_detail::PrivateDataGetter</innerclass>
    <innerclass refid="classresptr__detail_1_1TextureGetter" prot="public">resptr_detail::TextureGetter</innerclass>
    <innerclass refid="classresptr__detail_1_1BufferGetter" prot="public">resptr_detail::BufferGetter</innerclass>
    <innerclass refid="classresptr__detail_1_1MoveAssignable" prot="public">resptr_detail::MoveAssignable</innerclass>
    <innerclass refid="classresptr__detail_1_1WeakMoveAssignable" prot="public">resptr_detail::WeakMoveAssignable</innerclass>
    <innerclass refid="classresptr__detail_1_1ResFactory" prot="public">resptr_detail::ResFactory</innerclass>
    <innerclass refid="classresptr__detail_1_1ResPtr" prot="public">resptr_detail::ResPtr</innerclass>
    <innerclass refid="classresptr__detail_1_1ManagedRes" prot="public">resptr_detail::ManagedRes</innerclass>
    <innerclass refid="classresptr__detail_1_1UniqueRes" prot="public">resptr_detail::UniqueRes</innerclass>
    <innerclass refid="classresptr__detail_1_1SharedRes" prot="public">resptr_detail::SharedRes</innerclass>
    <innerclass refid="classresptr__detail_1_1ManagedResView" prot="public">resptr_detail::ManagedResView</innerclass>
    <innerclass refid="classresptr__detail_1_1ManagedResHolder" prot="public">resptr_detail::ManagedResHolder</innerclass>
    <innerclass refid="classresptr__detail_1_1ConcreteResHolder" prot="public">resptr_detail::ConcreteResHolder</innerclass>
    <innernamespace refid="namespaceresptr__detail">resptr_detail</innernamespace>
    <innernamespace refid="namespacedag">dag</innernamespace>
    <innernamespace refid="namespacedag_1_1buffers">dag::buffers</innernamespace>
    <innernamespace refid="namespaced3d_1_1buffers">d3d::buffers</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="dag__resPtr_8h_1a4ec766b47362e54c83adbb67887b6336" prot="public" static="no">
        <name>ENABLE_MOVING_BEHAVIOR</name>
        <param><defname>Class</defname></param>
        <initializer>  Class() = default;                                                                                                   \
  Class(Class &amp;&amp;other) noexcept { this-&gt;swap(other); }                                                                 \
  Class &amp;operator=(Class &amp;&amp;other)                                                                                      \
  {                                                                                                                    \
    G_ASSERTF(Class::isValidForMoveAssignment(*this, other), &quot;Invalid for move assignment. Call close() before this&quot;); \
    Class(eastl::move(other)).swap(*this);                                                                             \
    return *this;                                                                                                      \
  }                                                                                                                    \
  void close() { *this = Class(); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="248" column="9" bodyfile="dag_resPtr.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dag__resPtr_8h_1ad104e6770b6ee56df86515f82e366c26" prot="public" static="no">
        <name>ASSIGNMENT_FROM_RESPTR</name>
        <param><defname>Class</defname></param>
        <initializer>  Class &amp;operator=(<ref refid="dag__resPtr_8h_1af13d5309226952facc3df5cdac5f4572" kindref="member">ResPtr</ref>&lt;ResType&gt; &amp;&amp;res)   \
  {                                         \
    close();                                \
    return *this = Class(eastl::move(res)); \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="259" column="9" bodyfile="dag_resPtr.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dag__resPtr_8h_1a88a51dbdf6d14e3689a04740609908b1" prot="public" static="no">
        <name>ASSIGNMENT_FROM_RESFACTORY</name>
        <param><defname>Class</defname></param>
        <initializer>  Class &amp;operator=(<ref refid="dag__resPtr_8h_1a8b11f131afcc2fb9c7151f974c09e9bd" kindref="member">ResFactory</ref>&lt;ResType&gt; &amp;&amp;factory)                       \
  {                                                                     \
    close();                                                            \
    return *this = Class(eastl::move(ResPtrFactory(factory.create()))); \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="266" column="9" bodyfile="dag_resPtr.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dag__resPtr_8h_1af9183d4e44beeb1267a3f14dbb5c680d" prot="public" static="no">
        <name>SCOPED_SET_TEXTURE</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>auto DAG_CONCAT(scopedSharedTexGuard, __LINE__) = dag::set_texture(a, b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="859" column="9" bodyfile="dag_resPtr.h" bodystart="859" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dag__resPtr_8h_1a92423268894b5112e8c69af699f1616d" prot="public" static="no">
        <name>SCOPED_SET_BUFFER</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>auto DAG_CONCAT(scopedSharedBufGuard, __LINE__) = dag::set_buffer(a, b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="860" column="9" bodyfile="dag_resPtr.h" bodystart="860" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dag__resPtr_8h_1a13de3f546ea49a108ad2506ed9d49e35" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename ResType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classresptr__detail_1_1ManagedRes" kindref="compound">resptr_detail::ManagedRes</ref>&lt; ResType &gt;</type>
        <definition>using ManagedRes =  resptr_detail::ManagedRes&lt;ResType&gt;</definition>
        <argsstring></argsstring>
        <name>ManagedRes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="594" column="1" bodyfile="dag_resPtr.h" bodystart="594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1ac986aa4688b6117c5d04919cfe9afa54" prot="public" static="no">
        <type><ref refid="dag__resPtr_8h_1a13de3f546ea49a108ad2506ed9d49e35" kindref="member">ManagedRes</ref>&lt; BaseTexture &gt;</type>
        <definition>using ManagedTex =  ManagedRes&lt;BaseTexture&gt;</definition>
        <argsstring></argsstring>
        <name>ManagedTex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="595" column="1" bodyfile="dag_resPtr.h" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1ae72b38b1ea74f870989bca6526a42cd5" prot="public" static="no">
        <type><ref refid="dag__resPtr_8h_1a13de3f546ea49a108ad2506ed9d49e35" kindref="member">ManagedRes</ref>&lt; Sbuffer &gt;</type>
        <definition>using ManagedBuf =  ManagedRes&lt;Sbuffer&gt;</definition>
        <argsstring></argsstring>
        <name>ManagedBuf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="596" column="1" bodyfile="dag_resPtr.h" bodystart="596" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1ab662ff5ab42be6ae7aff0027d663dffd" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename ManagedResType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">resptr_detail::UniqueRes</ref>&lt; ManagedResType &gt;</type>
        <definition>using UniqueRes =  resptr_detail::UniqueRes&lt;ManagedResType&gt;</definition>
        <argsstring></argsstring>
        <name>UniqueRes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="599" column="1" bodyfile="dag_resPtr.h" bodystart="599" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1a549f1580b5fd99196d05fca55598bc4d" prot="public" static="no">
        <type><ref refid="dag__resPtr_8h_1ab662ff5ab42be6ae7aff0027d663dffd" kindref="member">UniqueRes</ref>&lt; <ref refid="dag__resPtr_8h_1ac986aa4688b6117c5d04919cfe9afa54" kindref="member">ManagedTex</ref> &gt;</type>
        <definition>using UniqueTex =  UniqueRes&lt;ManagedTex&gt;</definition>
        <argsstring></argsstring>
        <name>UniqueTex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="600" column="1" bodyfile="dag_resPtr.h" bodystart="600" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1aeb45b68a26629ad747c4a58e8b528a4c" prot="public" static="no">
        <type><ref refid="dag__resPtr_8h_1ab662ff5ab42be6ae7aff0027d663dffd" kindref="member">UniqueRes</ref>&lt; <ref refid="dag__resPtr_8h_1ae72b38b1ea74f870989bca6526a42cd5" kindref="member">ManagedBuf</ref> &gt;</type>
        <definition>using UniqueBuf =  UniqueRes&lt;ManagedBuf&gt;</definition>
        <argsstring></argsstring>
        <name>UniqueBuf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="601" column="1" bodyfile="dag_resPtr.h" bodystart="601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1aeb059912bdbd3b989796f4003002f667" prot="public" static="no">
        <type><ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">resptr_detail::UniqueRes</ref>&lt; <ref refid="dag__resPtr_8h_1ac986aa4688b6117c5d04919cfe9afa54" kindref="member">ManagedTex</ref>, <ref refid="structresptr__detail_1_1Helper" kindref="compound">resptr_detail::Helper</ref>&lt; <ref refid="structresptr__detail_1_1ExternalTexWrapper" kindref="compound">resptr_detail::ExternalTexWrapper</ref> &gt; &gt;</type>
        <definition>using ExternalTex =  resptr_detail::UniqueRes&lt;ManagedTex, resptr_detail::Helper&lt;resptr_detail::ExternalTexWrapper&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>ExternalTex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="603" column="1" bodyfile="dag_resPtr.h" bodystart="603" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1ae8f046c3c2400842187560a183674f5e" prot="public" static="no">
        <type><ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">resptr_detail::UniqueRes</ref>&lt; <ref refid="dag__resPtr_8h_1ae72b38b1ea74f870989bca6526a42cd5" kindref="member">ManagedBuf</ref>, <ref refid="structresptr__detail_1_1Helper" kindref="compound">resptr_detail::Helper</ref>&lt; <ref refid="structresptr__detail_1_1ExternalBufWrapper" kindref="compound">resptr_detail::ExternalBufWrapper</ref> &gt; &gt;</type>
        <definition>using ExternalBuf =  resptr_detail::UniqueRes&lt;ManagedBuf, resptr_detail::Helper&lt;resptr_detail::ExternalBufWrapper&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>ExternalBuf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="604" column="1" bodyfile="dag_resPtr.h" bodystart="604" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1ac4c053c9d789d58a6edf56475c4c6f55" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename ManagedResType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classresptr__detail_1_1ManagedResView" kindref="compound">resptr_detail::ManagedResView</ref>&lt; ManagedResType &gt;</type>
        <definition>using ManagedResView =  resptr_detail::ManagedResView&lt;ManagedResType&gt;</definition>
        <argsstring></argsstring>
        <name>ManagedResView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="607" column="1" bodyfile="dag_resPtr.h" bodystart="607" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1aecc8a26fa4e4e25a6ed68c5ccf3c7025" prot="public" static="no">
        <type><ref refid="dag__resPtr_8h_1ac4c053c9d789d58a6edf56475c4c6f55" kindref="member">ManagedResView</ref>&lt; <ref refid="dag__resPtr_8h_1ac986aa4688b6117c5d04919cfe9afa54" kindref="member">ManagedTex</ref> &gt;</type>
        <definition>using ManagedTexView =  ManagedResView&lt;ManagedTex&gt;</definition>
        <argsstring></argsstring>
        <name>ManagedTexView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="608" column="1" bodyfile="dag_resPtr.h" bodystart="608" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1a7e076c2f2d910b8b8b2527e6206d5425" prot="public" static="no">
        <type><ref refid="dag__resPtr_8h_1ac4c053c9d789d58a6edf56475c4c6f55" kindref="member">ManagedResView</ref>&lt; <ref refid="dag__resPtr_8h_1ae72b38b1ea74f870989bca6526a42cd5" kindref="member">ManagedBuf</ref> &gt;</type>
        <definition>using ManagedBufView =  ManagedResView&lt;ManagedBuf&gt;</definition>
        <argsstring></argsstring>
        <name>ManagedBufView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="609" column="1" bodyfile="dag_resPtr.h" bodystart="609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1acddaabb0b170d781ac70ca9490e10d43" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename ManagedResType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classresptr__detail_1_1SharedRes" kindref="compound">resptr_detail::SharedRes</ref>&lt; ManagedResType &gt;</type>
        <definition>using SharedRes =  resptr_detail::SharedRes&lt;ManagedResType&gt;</definition>
        <argsstring></argsstring>
        <name>SharedRes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="612" column="1" bodyfile="dag_resPtr.h" bodystart="612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1ab28fd7dade0b33bc070404898de4be17" prot="public" static="no">
        <type><ref refid="dag__resPtr_8h_1acddaabb0b170d781ac70ca9490e10d43" kindref="member">SharedRes</ref>&lt; <ref refid="dag__resPtr_8h_1ac986aa4688b6117c5d04919cfe9afa54" kindref="member">ManagedTex</ref> &gt;</type>
        <definition>using SharedTex =  SharedRes&lt;ManagedTex&gt;</definition>
        <argsstring></argsstring>
        <name>SharedTex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="613" column="1" bodyfile="dag_resPtr.h" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1a108c31bad537ef78159f53be8d3a5ab1" prot="public" static="no">
        <type><ref refid="dag__resPtr_8h_1acddaabb0b170d781ac70ca9490e10d43" kindref="member">SharedRes</ref>&lt; <ref refid="dag__resPtr_8h_1ae72b38b1ea74f870989bca6526a42cd5" kindref="member">ManagedBuf</ref> &gt;</type>
        <definition>using SharedBuf =  SharedRes&lt;ManagedBuf&gt;</definition>
        <argsstring></argsstring>
        <name>SharedBuf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="614" column="1" bodyfile="dag_resPtr.h" bodystart="614" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1a7ccc919fac589f54e11e39b99ad4bbd6" prot="public" static="no">
        <type><ref refid="classresptr__detail_1_1ManagedResHolder" kindref="compound">resptr_detail::ManagedResHolder</ref>&lt; <ref refid="dag__resPtr_8h_1ac986aa4688b6117c5d04919cfe9afa54" kindref="member">ManagedTex</ref> &gt;</type>
        <definition>using ManagedTexHolder =  resptr_detail::ManagedResHolder&lt;ManagedTex&gt;</definition>
        <argsstring></argsstring>
        <name>ManagedTexHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="616" column="1" bodyfile="dag_resPtr.h" bodystart="616" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1a56db2d3c727f64fe504f544e366c5145" prot="public" static="no">
        <type><ref refid="classresptr__detail_1_1ManagedResHolder" kindref="compound">resptr_detail::ManagedResHolder</ref>&lt; <ref refid="dag__resPtr_8h_1ae72b38b1ea74f870989bca6526a42cd5" kindref="member">ManagedBuf</ref> &gt;</type>
        <definition>using ManagedBufHolder =  resptr_detail::ManagedResHolder&lt;ManagedBuf&gt;</definition>
        <argsstring></argsstring>
        <name>ManagedBufHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="617" column="1" bodyfile="dag_resPtr.h" bodystart="617" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1a104d6f097f4f62715adfefb84ea0e191" prot="public" static="no">
        <type><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">resptr_detail::ConcreteResHolder</ref>&lt; <ref refid="dag__resPtr_8h_1a549f1580b5fd99196d05fca55598bc4d" kindref="member">UniqueTex</ref> &gt;</type>
        <definition>using UniqueTexHolder =  resptr_detail::ConcreteResHolder&lt;UniqueTex&gt;</definition>
        <argsstring></argsstring>
        <name>UniqueTexHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="618" column="1" bodyfile="dag_resPtr.h" bodystart="618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1ab16e69a73a91abc6e5cfa1e583364868" prot="public" static="no">
        <type><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">resptr_detail::ConcreteResHolder</ref>&lt; <ref refid="dag__resPtr_8h_1aeb45b68a26629ad747c4a58e8b528a4c" kindref="member">UniqueBuf</ref> &gt;</type>
        <definition>using UniqueBufHolder =  resptr_detail::ConcreteResHolder&lt;UniqueBuf&gt;</definition>
        <argsstring></argsstring>
        <name>UniqueBufHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="619" column="1" bodyfile="dag_resPtr.h" bodystart="619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1a8eb35782ace8ba87a5bd6f718a26dd1a" prot="public" static="no">
        <type><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">resptr_detail::ConcreteResHolder</ref>&lt; <ref refid="dag__resPtr_8h_1ab28fd7dade0b33bc070404898de4be17" kindref="member">SharedTex</ref> &gt;</type>
        <definition>using SharedTexHolder =  resptr_detail::ConcreteResHolder&lt;SharedTex&gt;</definition>
        <argsstring></argsstring>
        <name>SharedTexHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="620" column="1" bodyfile="dag_resPtr.h" bodystart="620" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1ac689eb60b3c3bba692f665ac19ea719b" prot="public" static="no">
        <type><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">resptr_detail::ConcreteResHolder</ref>&lt; <ref refid="dag__resPtr_8h_1a108c31bad537ef78159f53be8d3a5ab1" kindref="member">SharedBuf</ref> &gt;</type>
        <definition>using SharedBufHolder =  resptr_detail::ConcreteResHolder&lt;SharedBuf&gt;</definition>
        <argsstring></argsstring>
        <name>SharedBufHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="621" column="1" bodyfile="dag_resPtr.h" bodystart="621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1af13d5309226952facc3df5cdac5f4572" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename ResType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classresptr__detail_1_1ResPtr" kindref="compound">resptr_detail::ResPtr</ref>&lt; ResType &gt;</type>
        <definition>using ResPtr =  resptr_detail::ResPtr&lt;ResType&gt;</definition>
        <argsstring></argsstring>
        <name>ResPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="624" column="1" bodyfile="dag_resPtr.h" bodystart="624" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1a8b11f131afcc2fb9c7151f974c09e9bd" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename ResType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">resptr_detail::ResFactory</ref>&lt; ResType &gt;</type>
        <definition>using ResFactory =  resptr_detail::ResFactory&lt;ResType&gt;</definition>
        <argsstring></argsstring>
        <name>ResFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="626" column="1" bodyfile="dag_resPtr.h" bodystart="626" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1a2843cb879e1e856fec571a07af43ac59" prot="public" static="no">
        <type><ref refid="dag__resPtr_8h_1af13d5309226952facc3df5cdac5f4572" kindref="member">ResPtr</ref>&lt; BaseTexture &gt;</type>
        <definition>using TexPtr =  ResPtr&lt;BaseTexture&gt;</definition>
        <argsstring></argsstring>
        <name>TexPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="627" column="1" bodyfile="dag_resPtr.h" bodystart="627" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__resPtr_8h_1a838549d8088520396237d6807e24fabe" prot="public" static="no">
        <type><ref refid="dag__resPtr_8h_1af13d5309226952facc3df5cdac5f4572" kindref="member">ResPtr</ref>&lt; Sbuffer &gt;</type>
        <definition>using BufPtr =  ResPtr&lt;Sbuffer&gt;</definition>
        <argsstring></argsstring>
        <name>BufPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resPtr.h" line="628" column="1" bodyfile="dag_resPtr.h" bodystart="628" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dagor<sp/>Engine<sp/>6.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dag__resMgr_8h" kindref="compound">dag_resMgr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dag__texMgr_8h" kindref="compound">dag_texMgr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drv/3d/dag_renderTarget.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drv/3d/dag_vertexIndexBuffer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drv/3d/dag_heap.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drv/3d/dag_texture.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drv/3d/dag_driver.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drv/3d/dag_commands.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drv/3d/dag_buffers.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;shaders/dag_shaders.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gameRes/dag_gameResources.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;debug/dag_assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/algorithm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/type_traits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/dag_preprocessor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;generic/dag_fixedMoveOnlyFunction.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DAGOR_DBGLEVEL<sp/>&gt;<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/unordered_set.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>header<sp/>contains<sp/>several<sp/>useful<sp/>RAII<sp/>classes<sp/>for<sp/>working<sp/>with<sp/>resources</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/>-------------------<sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------------------<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>UniqueRes<sp/><sp/><sp/><sp/>|------&gt;|<sp/><sp/><sp/><sp/>ManagedRes<sp/><sp/><sp/><sp/>|&lt;------|<sp/><sp/><sp/><sp/>SharedRes<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/>-------------------<sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------------------<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>^</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/>-------------------<sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------------------<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/>|<sp/>UniqueResHolder<sp/>|------&gt;|<sp/>ManagedResHolder<sp/>|&lt;------|<sp/>SharedResHolder<sp/>|</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/>-------------------<sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------------------<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------</highlight></codeline>
<codeline lineno="38"><highlight class="comment"></highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/>The<sp/>`ManagedRes`<sp/>owns<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>resource<sp/>and<sp/>a<sp/>registered<sp/>resource<sp/>id.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/>And<sp/>the<sp/>`ManagedResHolder`<sp/>also<sp/>contains<sp/>the<sp/>shader<sp/>variable<sp/>id.<sp/>You<sp/>cannot</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/>create<sp/>an<sp/>instance<sp/>for<sp/>`ManagedRes`<sp/>and<sp/>`ManagedResHolder`.<sp/>They<sp/>don&apos;t<sp/>know</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/>anything<sp/>about<sp/>how<sp/>exactly<sp/>ownership<sp/>of<sp/>the<sp/>resource<sp/>was<sp/>obtained<sp/>and<sp/>cannot</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/>release<sp/>it.<sp/>These<sp/>classes<sp/>can<sp/>be<sp/>used<sp/>to<sp/>pass<sp/>to<sp/>functions<sp/>by<sp/>const<sp/>reference</highlight></codeline>
<codeline lineno="44"><highlight class="comment"></highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/>The<sp/>`UniqueRes`<sp/>and<sp/>`UniqueResHolder`<sp/>classes<sp/>are<sp/>needed<sp/>for<sp/>the<sp/>unique</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/>ownership<sp/>of<sp/>the<sp/>resource<sp/>and<sp/>can<sp/>be<sp/>created<sp/>using<sp/>the<sp/>family<sp/>of<sp/>functions</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/>`dag::create_tex()`,<sp/>For<sp/>example:</highlight></codeline>
<codeline lineno="48"><highlight class="comment"></highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/>UniqueTex<sp/>tex<sp/>=<sp/>dag::create_tex(...,<sp/>&quot;tex_name&quot;);</highlight></codeline>
<codeline lineno="50"><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/>&quot;tex_name&quot;<sp/>will<sp/>be<sp/>used<sp/>both<sp/>for<sp/>the<sp/>texture<sp/>name<sp/>and<sp/>for<sp/>registration<sp/>in</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/>the<sp/>resource<sp/>manager.<sp/>If<sp/>you<sp/>need<sp/>a<sp/>texture<sp/>name<sp/>other<sp/>than<sp/>the<sp/>name<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/>registration<sp/>in<sp/>the<sp/>manager,<sp/>then<sp/>you<sp/>can<sp/>use<sp/>this:</highlight></codeline>
<codeline lineno="54"><highlight class="comment"></highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/>UniqueTex<sp/>tex<sp/>=<sp/>UniqueTex(dag::create_tex(...,<sp/>&quot;tex_name&quot;),<sp/>&quot;mgr_name&quot;);</highlight></codeline>
<codeline lineno="56"><highlight class="comment"></highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/>The<sp/>`UniqueResHolder`<sp/>is<sp/>created<sp/>in<sp/>the<sp/>same<sp/>way<sp/>as<sp/>the<sp/>`UniqueRes`:</highlight></codeline>
<codeline lineno="58"><highlight class="comment"></highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/>UniqueResHolder<sp/>tex<sp/>=<sp/>dag::create_tex(...,<sp/>&quot;tex_name&quot;);</highlight></codeline>
<codeline lineno="60"><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/>In<sp/>this<sp/>case,<sp/>the<sp/>&quot;tex_name&quot;<sp/>will<sp/>also<sp/>be<sp/>used<sp/>as<sp/>a<sp/>shader<sp/>variable<sp/>name,<sp/>but</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/>if<sp/>you<sp/>need<sp/>a<sp/>shader<sp/>variable<sp/>name<sp/>other<sp/>than<sp/>the<sp/>texture<sp/>name,<sp/>then<sp/>use<sp/>this:</highlight></codeline>
<codeline lineno="63"><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/>UniqueResHolder<sp/>tex<sp/>=<sp/>UniqueResHolder(dag::create_tex(...,<sp/>&quot;tex_name&quot;),<sp/>&quot;var_name&quot;);</highlight></codeline>
<codeline lineno="65"><highlight class="comment"></highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/>If<sp/>you<sp/>need<sp/>to<sp/>bind<sp/>a<sp/>resource<sp/>to<sp/>another<sp/>shader<sp/>variable,<sp/>then<sp/>use<sp/>this:</highlight></codeline>
<codeline lineno="67"><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/>tex.setVar(&quot;another_var_name&quot;);</highlight></codeline>
<codeline lineno="69"><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/>The<sp/>`SharedRes`<sp/>and<sp/>`SharedResHolder`<sp/>are<sp/>needed<sp/>for<sp/>shared<sp/>ownership<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/>resource.<sp/>For<sp/>example,<sp/>they<sp/>can<sp/>be<sp/>used<sp/>to<sp/>own<sp/>game<sp/>resources:</highlight></codeline>
<codeline lineno="72"><highlight class="comment"></highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/>SharedTex<sp/>res<sp/>=<sp/>dag::get_tex_gameres(&quot;res_name&quot;);</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/>SharedTexHolder<sp/>res_holder<sp/>=<sp/>dag::get_tex_gameres(&quot;res_name&quot;,<sp/>&quot;var_name&quot;);</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/>SharedTexHolder<sp/>other_res_holder(eastl::move(res),<sp/>&quot;var_name&quot;);</highlight></codeline>
<codeline lineno="76"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceresptr__detail" kindref="compound">resptr_detail</ref></highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ResType&gt;</highlight></codeline>
<codeline lineno="82" refid="structresptr__detail_1_1Helper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper</ref></highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84" refid="structresptr__detail_1_1Helper_1af525791f1802a8ec65f8141af67544a6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structresptr__detail_1_1Helper_1af525791f1802a8ec65f8141af67544a6" kindref="member">resid_t</ref><sp/>=<sp/>D3DRESID;</highlight></codeline>
<codeline lineno="85" refid="structresptr__detail_1_1Helper_1ad50a6f67486c3c840b2f1d30e188b0ab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_1af525791f1802a8ec65f8141af67544a6" kindref="member">resid_t</ref><sp/><ref refid="structresptr__detail_1_1Helper_1ad50a6f67486c3c840b2f1d30e188b0ab" kindref="member">BAD_ID</ref><sp/>=<sp/>D3DRESID(D3DRESID::INVALID_ID);</highlight></codeline>
<codeline lineno="86" refid="structresptr__detail_1_1Helper_1a47c1969e2c15ae710a68bcf863113a33" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_1af525791f1802a8ec65f8141af67544a6" kindref="member">resid_t</ref><sp/><ref refid="structresptr__detail_1_1Helper_1a47c1969e2c15ae710a68bcf863113a33" kindref="member">registerRes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>ResType<sp/>*res)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__resMgr_8h_1a7256c5226f06bf195aec1bdc24a73fd2" kindref="member">register_managed_res</ref>(name,<sp/>res);<sp/>}</highlight></codeline>
<codeline lineno="87" refid="structresptr__detail_1_1Helper_1aa1b3a4dfdd1c6232cdb3892849125941" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ResType<sp/>*<ref refid="structresptr__detail_1_1Helper_1aa1b3a4dfdd1c6232cdb3892849125941" kindref="member">acquire</ref>(<ref refid="structresptr__detail_1_1Helper_1af525791f1802a8ec65f8141af67544a6" kindref="member">resid_t</ref><sp/>resId)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__resMgr_8h_1a5b61f3428d070652a6b848214bbc2255" kindref="member">acquire_managed_res</ref>(resId);<sp/>}</highlight></codeline>
<codeline lineno="88" refid="structresptr__detail_1_1Helper_1aab06b9e870de7d5829200027fc25a9fc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_1aab06b9e870de7d5829200027fc25a9fc" kindref="member">release</ref>(<ref refid="structresptr__detail_1_1Helper_1af525791f1802a8ec65f8141af67544a6" kindref="member">resid_t</ref><sp/>&amp;resId,<sp/>ResType<sp/>*res)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__resMgr_8h_1a21ccc1c9589538a79ae900f963820c44" kindref="member">release_managed_res_verified</ref>(resId,<sp/>res);<sp/>}</highlight></codeline>
<codeline lineno="89" refid="structresptr__detail_1_1Helper_1a622baf98dc34b7c8f50f727a8c3b54fb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_1a622baf98dc34b7c8f50f727a8c3b54fb" kindref="member">isManagedFactorySet</ref>(<ref refid="structresptr__detail_1_1Helper_1af525791f1802a8ec65f8141af67544a6" kindref="member">resid_t</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="90" refid="structresptr__detail_1_1Helper_1a1e6302014516ebdbf2aa1cb8e74b1414" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_1a1e6302014516ebdbf2aa1cb8e74b1414" kindref="member">getManagedRefCount</ref>(<ref refid="structresptr__detail_1_1Helper_1af525791f1802a8ec65f8141af67544a6" kindref="member">resid_t</ref><sp/>resId)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__resMgr_8h_1ae30a8b0240bc0b61cd2001469c426869" kindref="member">get_managed_res_refcount</ref>(resId);<sp/>}</highlight></codeline>
<codeline lineno="91" refid="structresptr__detail_1_1Helper_1a5a1cedef815e8da840d01fb0f5ff09c9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structresptr__detail_1_1Helper_1a5a1cedef815e8da840d01fb0f5ff09c9" kindref="member">getName</ref>(ResType<sp/>*)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="92" refid="structresptr__detail_1_1Helper_1a5329906c772617310ed58e537d68a92e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structresptr__detail_1_1Helper_1a5329906c772617310ed58e537d68a92e" kindref="member">getNameById</ref>(<ref refid="structresptr__detail_1_1Helper_1af525791f1802a8ec65f8141af67544a6" kindref="member">resid_t</ref><sp/>resId)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__resMgr_8h_1aa8a5be3115e2c52c668fb2b8a5905fc2" kindref="member">get_managed_res_name</ref>(resId);<sp/>}</highlight></codeline>
<codeline lineno="93" refid="structresptr__detail_1_1Helper_1ad741a272c4be71921e37d697205647cb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_1ad741a272c4be71921e37d697205647cb" kindref="member">setVar</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="structresptr__detail_1_1Helper_1af525791f1802a8ec65f8141af67544a6" kindref="member">resid_t</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="94" refid="structresptr__detail_1_1Helper_1a4ecfd0b2967326207108721a5061b1c1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_1a4ecfd0b2967326207108721a5061b1c1" kindref="member">can_bind</ref>(ResType<sp/>*)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="98" refid="structresptr__detail_1_1Helper_3_01Sbuffer_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper</ref>&lt;Sbuffer&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper</ref>&lt;D3dResource&gt;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100" refid="structresptr__detail_1_1Helper_3_01Sbuffer_01_4_1acb92074568547de6d27581bb74e5f3f6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Sbuffer<sp/>*<ref refid="structresptr__detail_1_1Helper_3_01Sbuffer_01_4_1acb92074568547de6d27581bb74e5f3f6" kindref="member">acquire</ref>(<ref refid="structresptr__detail_1_1Helper_1af525791f1802a8ec65f8141af67544a6" kindref="member">resid_t</ref><sp/>resId)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__resMgr_8h_1a16e91952778a123d7822b54275fed096" kindref="member">acquire_managed_buf</ref>(resId);<sp/>}</highlight></codeline>
<codeline lineno="101" refid="structresptr__detail_1_1Helper_3_01Sbuffer_01_4_1a80e7ecf256e43bf470ec3c5f55b6a0e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_3_01Sbuffer_01_4_1a80e7ecf256e43bf470ec3c5f55b6a0e4" kindref="member">release</ref>(<ref refid="structresptr__detail_1_1Helper_1af525791f1802a8ec65f8141af67544a6" kindref="member">resid_t</ref><sp/>&amp;resId,<sp/>Sbuffer<sp/>*res)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>release_managed_buf_verified(resId,<sp/>res);<sp/>}</highlight></codeline>
<codeline lineno="102" refid="structresptr__detail_1_1Helper_3_01Sbuffer_01_4_1a7f265f02204f0095485a351f8eb592d5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structresptr__detail_1_1Helper_3_01Sbuffer_01_4_1a7f265f02204f0095485a351f8eb592d5" kindref="member">getName</ref>(Sbuffer<sp/>*res)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res<sp/>?<sp/>res-&gt;getBufName()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="103" refid="structresptr__detail_1_1Helper_3_01Sbuffer_01_4_1ab5b5f537d702fd71d2f133dfb2abb14e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_3_01Sbuffer_01_4_1ab5b5f537d702fd71d2f133dfb2abb14e" kindref="member">setVar</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>varId,<sp/><ref refid="structresptr__detail_1_1Helper_1af525791f1802a8ec65f8141af67544a6" kindref="member">resid_t</ref><sp/>resId)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ShaderGlobal::set_buffer(varId,<sp/>resId);<sp/>}</highlight></codeline>
<codeline lineno="104" refid="structresptr__detail_1_1Helper_3_01Sbuffer_01_4_1aa908020a4d56025f9d28a1f624d141b2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>valid_use_mask<sp/>=<sp/>SBCF_BIND_SHADER_RES<sp/>|<sp/>SBCF_BIND_UNORDERED<sp/>|<sp/>SBCF_BIND_CONSTANT;</highlight></codeline>
<codeline lineno="105" refid="structresptr__detail_1_1Helper_3_01Sbuffer_01_4_1a6edbd8490d33bae5772455601b0ea763" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_3_01Sbuffer_01_4_1a6edbd8490d33bae5772455601b0ea763" kindref="member">can_bind</ref>(Sbuffer<sp/>*res)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!res<sp/>||<sp/>(res-&gt;getFlags()<sp/>&amp;<sp/>valid_use_mask);<sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="109" refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper</ref>&lt;BaseTexture&gt;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111" refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1ae22048ac7fac9e338a55acf6f5d4f74c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1ae22048ac7fac9e338a55acf6f5d4f74c" kindref="member">resid_t</ref><sp/>=<sp/>TEXTUREID;</highlight></codeline>
<codeline lineno="112" refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1aa0d6706ea279db553b779520082c7c6e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1ae22048ac7fac9e338a55acf6f5d4f74c" kindref="member">resid_t</ref><sp/><ref refid="structresptr__detail_1_1Helper_1ad50a6f67486c3c840b2f1d30e188b0ab" kindref="member">BAD_ID</ref><sp/>=<sp/>D3DRESID(D3DRESID::INVALID_ID);</highlight></codeline>
<codeline lineno="113" refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1aba51278009aeb1485b1c7fb7f0694795" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1ae22048ac7fac9e338a55acf6f5d4f74c" kindref="member">resid_t</ref><sp/><ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1aba51278009aeb1485b1c7fb7f0694795" kindref="member">registerRes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>BaseTexture<sp/>*res)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__texMgr_8h_1a330118e2ff774cf30e8d7f358164f1b3" kindref="member">register_managed_tex</ref>(name,<sp/>res);<sp/>}</highlight></codeline>
<codeline lineno="114" refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1acf8850e84736b2ec08b52fdc1a2cd80b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BaseTexture<sp/>*<ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1acf8850e84736b2ec08b52fdc1a2cd80b" kindref="member">acquire</ref>(<ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1ae22048ac7fac9e338a55acf6f5d4f74c" kindref="member">resid_t</ref><sp/>resId)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__resMgr_8h_1a27cb03a9e18d577ab6f0e46d3cd36492" kindref="member">acquire_managed_tex</ref>(resId);<sp/>}</highlight></codeline>
<codeline lineno="115" refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1ae1e708057fd2cb6e4b9b10672d2f21ed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1ae1e708057fd2cb6e4b9b10672d2f21ed" kindref="member">release</ref>(<ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1ae22048ac7fac9e338a55acf6f5d4f74c" kindref="member">resid_t</ref><sp/>&amp;resId,<sp/>BaseTexture<sp/>*res)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>release_managed_tex_verified(resId,<sp/>res);<sp/>}</highlight></codeline>
<codeline lineno="116" refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1aaa16231e0dee536147915988c3bf7db4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1aaa16231e0dee536147915988c3bf7db4" kindref="member">isManagedFactorySet</ref>(<ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1ae22048ac7fac9e338a55acf6f5d4f74c" kindref="member">resid_t</ref><sp/>resId)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_managed_tex_factory_set(resId);<sp/>}</highlight></codeline>
<codeline lineno="117" refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1a9998caa6ab696ee9ba435b6935e778a3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1a9998caa6ab696ee9ba435b6935e778a3" kindref="member">getManagedRefCount</ref>(<ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1ae22048ac7fac9e338a55acf6f5d4f74c" kindref="member">resid_t</ref><sp/>resId)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_managed_texture_refcount(resId);<sp/>}</highlight></codeline>
<codeline lineno="118" refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1a68d1d7c33a5ee0ef56710e40438e94b9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1a68d1d7c33a5ee0ef56710e40438e94b9" kindref="member">getName</ref>(BaseTexture<sp/>*res)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res<sp/>?<sp/>res-&gt;getTexName()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="119" refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1a8bffe963ca5a8ff74fdb65efc8b7dc49" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1a8bffe963ca5a8ff74fdb65efc8b7dc49" kindref="member">getNameById</ref>(<ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1ae22048ac7fac9e338a55acf6f5d4f74c" kindref="member">resid_t</ref><sp/>resId)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_managed_texture_name(resId);<sp/>}</highlight></codeline>
<codeline lineno="120" refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1ad92bbfd45cf55405b7512b4e5755af08" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1ad92bbfd45cf55405b7512b4e5755af08" kindref="member">setVar</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>varId,<sp/><ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1ae22048ac7fac9e338a55acf6f5d4f74c" kindref="member">resid_t</ref><sp/>resId)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ShaderGlobal::set_texture(varId,<sp/>resId);<sp/>}</highlight></codeline>
<codeline lineno="121" refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1ab5eb476379bc0864a212342ddd646c8a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1ab5eb476379bc0864a212342ddd646c8a" kindref="member">can_bind</ref>(BaseTexture<sp/>*)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal">};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="structresptr__detail_1_1ExternalTexWrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structresptr__detail_1_1ExternalTexWrapper" kindref="compound">ExternalTexWrapper</ref></highlight></codeline>
<codeline lineno="125"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="128" refid="structresptr__detail_1_1Helper_3_01ExternalTexWrapper_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper</ref>&lt;<ref refid="structresptr__detail_1_1ExternalTexWrapper" kindref="compound">ExternalTexWrapper</ref>&gt;<sp/>:<sp/><ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper</ref>&lt;BaseTexture&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130" refid="structresptr__detail_1_1Helper_3_01ExternalTexWrapper_01_4_1a3787a90c8aac73cef0fab0ce3a69e1be" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_3_01ExternalTexWrapper_01_4_1a3787a90c8aac73cef0fab0ce3a69e1be" kindref="member">release</ref>(<ref refid="structresptr__detail_1_1Helper_3_01BaseTexture_01_4_1ae22048ac7fac9e338a55acf6f5d4f74c" kindref="member">resid_t</ref><sp/>&amp;res_id,<sp/>BaseTexture<sp/>*)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res_id<sp/>==<sp/><ref refid="structresptr__detail_1_1Helper_1ad50a6f67486c3c840b2f1d30e188b0ab" kindref="member">BAD_ID</ref>)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>this<sp/>prevents<sp/>resMgr<sp/>from<sp/>deleting<sp/>the<sp/>resource</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="dag__texMgr_8h_1a65e77b79df17550d7ff4ccf5f8ffab6c" kindref="member">change_managed_texture</ref>(res_id,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>release_managed_tex(res_id);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal">};</highlight></codeline>
<codeline lineno="141" refid="structresptr__detail_1_1ExternalBufWrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structresptr__detail_1_1ExternalBufWrapper" kindref="compound">ExternalBufWrapper</ref></highlight></codeline>
<codeline lineno="142"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="144" refid="structresptr__detail_1_1Helper_3_01ExternalBufWrapper_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper</ref>&lt;<ref refid="structresptr__detail_1_1ExternalBufWrapper" kindref="compound">ExternalBufWrapper</ref>&gt;<sp/>:<sp/><ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper</ref>&lt;Sbuffer&gt;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146" refid="structresptr__detail_1_1Helper_3_01ExternalBufWrapper_01_4_1ac715528c0950d752d389c8d6e226f1a8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_3_01ExternalBufWrapper_01_4_1ac715528c0950d752d389c8d6e226f1a8" kindref="member">release</ref>(<ref refid="structresptr__detail_1_1Helper_1af525791f1802a8ec65f8141af67544a6" kindref="member">resid_t</ref><sp/>&amp;res_id,<sp/>Sbuffer<sp/>*)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res_id<sp/>==<sp/><ref refid="structresptr__detail_1_1Helper_1ad50a6f67486c3c840b2f1d30e188b0ab" kindref="member">BAD_ID</ref>)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>this<sp/>prevents<sp/>resMgr<sp/>from<sp/>deleting<sp/>the<sp/>resource</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="dag__resMgr_8h_1ab6017cf83e8de7f63f9767a262c78d67" kindref="member">change_managed_res</ref>(res_id,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dag__resMgr_8h_1ab8d423d447df4e5459d92230a91e2609" kindref="member">release_managed_res</ref>(res_id);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal">};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isVoltex(D3dResource<sp/>*res)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!res<sp/>||<sp/>res-&gt;getType()<sp/>==<sp/>D3DResourceType::VOLTEX;<sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isArrtex(D3dResource<sp/>*res)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!res<sp/>||<sp/>res-&gt;getType()<sp/>==<sp/>D3DResourceType::ARRTEX<sp/>||<sp/>res-&gt;getType()<sp/>==<sp/>D3DResourceType::CUBEARRTEX;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isCubetex(D3dResource<sp/>*res)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!res<sp/>||<sp/>res-&gt;getType()<sp/>==<sp/>D3DResourceType::CUBETEX<sp/>||<sp/>res-&gt;getType()<sp/>==<sp/>D3DResourceType::CUBEARRTEX;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTex2d(D3dResource<sp/>*res)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!res<sp/>||<sp/>res-&gt;getType()<sp/>==<sp/>D3DResourceType::TEX;<sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isBuf(D3dResource<sp/>*res)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!res<sp/>||<sp/>res-&gt;getType()<sp/>==<sp/>D3DResourceType::SBUF;<sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="structresptr__detail_1_1PrivateDataGetter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structresptr__detail_1_1PrivateDataGetter" kindref="compound">PrivateDataGetter</ref></highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="173" refid="structresptr__detail_1_1PrivateDataGetter_1ab7e79701f6088e9c46d3bc7a6023755e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::derived_t::resource_t<sp/>*<ref refid="structresptr__detail_1_1PrivateDataGetter_1ab7e79701f6088e9c46d3bc7a6023755e" kindref="member">getResource</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*that)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">typename<sp/>T::derived_t<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(that)-&gt;mResource;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="179" refid="structresptr__detail_1_1PrivateDataGetter_1adb6a9710f527454ecc4e14359792046c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::derived_t::resid_t<sp/><ref refid="structresptr__detail_1_1PrivateDataGetter_1adb6a9710f527454ecc4e14359792046c" kindref="member">getResId</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*that)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">typename<sp/>T::derived_t<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(that)-&gt;mResId;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal">};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DerivedType&gt;</highlight></codeline>
<codeline lineno="186" refid="classresptr__detail_1_1TextureGetter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1TextureGetter" kindref="compound">TextureGetter</ref></highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="189" refid="classresptr__detail_1_1TextureGetter_1afe9aebab39b89f3d21f4d1a40d7d8a97" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1TextureGetter_1afe9aebab39b89f3d21f4d1a40d7d8a97" kindref="member">derived_t</ref><sp/>=<sp/>DerivedType;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="classresptr__detail_1_1TextureGetter_1aa54d43ddd48c2472c88dce54059f76a3" refkind="member"><highlight class="normal"><sp/><sp/>BaseTexture<sp/>*<ref refid="classresptr__detail_1_1TextureGetter_1aa54d43ddd48c2472c88dce54059f76a3" kindref="member">getBaseTex</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1PrivateDataGetter_1ab7e79701f6088e9c46d3bc7a6023755e" kindref="member">PrivateDataGetter::getResource</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="192" refid="classresptr__detail_1_1TextureGetter_1a58e0b31910d052d69cba9340db5436f3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__occlusionSystem_8h_1a37ee2859ee04a3f5c750a5b5e3684c1d" kindref="member">Texture</ref><sp/>*<ref refid="classresptr__detail_1_1TextureGetter_1a58e0b31910d052d69cba9340db5436f3" kindref="member">getTex2D</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="193"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isTex2d(<ref refid="structresptr__detail_1_1PrivateDataGetter_1ab7e79701f6088e9c46d3bc7a6023755e" kindref="member">PrivateDataGetter::getResource</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">))<sp/>?<sp/>(<ref refid="dag__occlusionSystem_8h_1a37ee2859ee04a3f5c750a5b5e3684c1d" kindref="member">Texture</ref><sp/>*)<ref refid="structresptr__detail_1_1PrivateDataGetter_1ab7e79701f6088e9c46d3bc7a6023755e" kindref="member">PrivateDataGetter::getResource</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196" refid="classresptr__detail_1_1TextureGetter_1a00fa93c3936c08666e0fae90d375f6d9" refkind="member"><highlight class="normal"><sp/><sp/>ArrayTexture<sp/>*<ref refid="classresptr__detail_1_1TextureGetter_1a00fa93c3936c08666e0fae90d375f6d9" kindref="member">getArrayTex</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="197"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isArrtex(<ref refid="structresptr__detail_1_1PrivateDataGetter_1ab7e79701f6088e9c46d3bc7a6023755e" kindref="member">PrivateDataGetter::getResource</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">))<sp/>?<sp/>(ArrayTexture<sp/>*)<ref refid="structresptr__detail_1_1PrivateDataGetter_1ab7e79701f6088e9c46d3bc7a6023755e" kindref="member">PrivateDataGetter::getResource</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200" refid="classresptr__detail_1_1TextureGetter_1a64abc8ef84d2d2d1376898949ddedeec" refkind="member"><highlight class="normal"><sp/><sp/>CubeTexture<sp/>*<ref refid="classresptr__detail_1_1TextureGetter_1a64abc8ef84d2d2d1376898949ddedeec" kindref="member">getCubeTex</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="201"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isCubetex(<ref refid="structresptr__detail_1_1PrivateDataGetter_1ab7e79701f6088e9c46d3bc7a6023755e" kindref="member">PrivateDataGetter::getResource</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">))<sp/>?<sp/>(CubeTexture<sp/>*)<ref refid="structresptr__detail_1_1PrivateDataGetter_1ab7e79701f6088e9c46d3bc7a6023755e" kindref="member">PrivateDataGetter::getResource</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204" refid="classresptr__detail_1_1TextureGetter_1a2a25372dde12265e40d63cb531cd24ff" refkind="member"><highlight class="normal"><sp/><sp/>VolTexture<sp/>*<ref refid="classresptr__detail_1_1TextureGetter_1a2a25372dde12265e40d63cb531cd24ff" kindref="member">getVolTex</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="205"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isVoltex(<ref refid="structresptr__detail_1_1PrivateDataGetter_1ab7e79701f6088e9c46d3bc7a6023755e" kindref="member">PrivateDataGetter::getResource</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">))<sp/>?<sp/>(VolTexture<sp/>*)<ref refid="structresptr__detail_1_1PrivateDataGetter_1ab7e79701f6088e9c46d3bc7a6023755e" kindref="member">PrivateDataGetter::getResource</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208" refid="classresptr__detail_1_1TextureGetter_1a2f769c467304a4df7eeb5a4924ea9503" refkind="member"><highlight class="normal"><sp/><sp/>TEXTUREID<sp/><ref refid="classresptr__detail_1_1TextureGetter_1a2f769c467304a4df7eeb5a4924ea9503" kindref="member">getTexId</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1PrivateDataGetter_1adb6a9710f527454ecc4e14359792046c" kindref="member">PrivateDataGetter::getResId</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal">};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DerivedType&gt;</highlight></codeline>
<codeline lineno="212" refid="classresptr__detail_1_1BufferGetter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1BufferGetter" kindref="compound">BufferGetter</ref></highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="215" refid="classresptr__detail_1_1BufferGetter_1aecbbdb4d94bbc8e14e7e29dd8493a2e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1BufferGetter_1aecbbdb4d94bbc8e14e7e29dd8493a2e4" kindref="member">derived_t</ref><sp/>=<sp/>DerivedType;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="classresptr__detail_1_1BufferGetter_1a1abf511e210234922beddbc39cf6a1cc" refkind="member"><highlight class="normal"><sp/><sp/>Sbuffer<sp/>*<ref refid="classresptr__detail_1_1BufferGetter_1a1abf511e210234922beddbc39cf6a1cc" kindref="member">getBuf</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="218"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERT(isBuf(<ref refid="structresptr__detail_1_1PrivateDataGetter_1ab7e79701f6088e9c46d3bc7a6023755e" kindref="member">PrivateDataGetter::getResource</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Sbuffer<sp/>*)<ref refid="structresptr__detail_1_1PrivateDataGetter_1ab7e79701f6088e9c46d3bc7a6023755e" kindref="member">PrivateDataGetter::getResource</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222" refid="classresptr__detail_1_1BufferGetter_1af1aaeb0c8854fa5fc2e922eca2fd0a59" refkind="member"><highlight class="normal"><sp/><sp/>D3DRESID<sp/><ref refid="classresptr__detail_1_1BufferGetter_1af1aaeb0c8854fa5fc2e922eca2fd0a59" kindref="member">getBufId</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1PrivateDataGetter_1adb6a9710f527454ecc4e14359792046c" kindref="member">PrivateDataGetter::getResId</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal">};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ResType&gt;</highlight></codeline>
<codeline lineno="226" refid="namespaceresptr__detail_1a3a7261d5d1d7a5aa62e04fbcaa4c784f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespaceresptr__detail_1a3a7261d5d1d7a5aa62e04fbcaa4c784f" kindref="member">ResourceGetter</ref><sp/>=<sp/>eastl::conditional_t&lt;eastl::is_same_v&lt;ResType,<sp/>Sbuffer&gt;,<sp/><ref refid="classresptr__detail_1_1BufferGetter" kindref="compound">BufferGetter&lt;Type&gt;</ref>,<sp/><ref refid="classresptr__detail_1_1TextureGetter" kindref="compound">TextureGetter&lt;Type&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="classresptr__detail_1_1MoveAssignable" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1MoveAssignable" kindref="compound">MoveAssignable</ref></highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;</highlight></codeline>
<codeline lineno="232" refid="classresptr__detail_1_1MoveAssignable_1adc2200080aa2d0473c528d9f96f9fa6c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1MoveAssignable_1adc2200080aa2d0473c528d9f96f9fa6c" kindref="member">isValidForMoveAssignment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Type<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Type<sp/>&amp;)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal">};</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classresptr__detail_1_1WeakMoveAssignable" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1WeakMoveAssignable" kindref="compound">WeakMoveAssignable</ref></highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;</highlight></codeline>
<codeline lineno="242" refid="classresptr__detail_1_1WeakMoveAssignable_1ab6af4cdd799f3fa49395ea369342133f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1WeakMoveAssignable_1ab6af4cdd799f3fa49395ea369342133f" kindref="member">isValidForMoveAssignment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Type<sp/>&amp;left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Type<sp/>&amp;right)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!left<sp/>||<sp/>(<ref refid="structresptr__detail_1_1PrivateDataGetter_1adb6a9710f527454ecc4e14359792046c" kindref="member">PrivateDataGetter::getResId</ref>(&amp;left)<sp/>!=<sp/><ref refid="structresptr__detail_1_1PrivateDataGetter_1adb6a9710f527454ecc4e14359792046c" kindref="member">PrivateDataGetter::getResId</ref>(&amp;right));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal">};</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="dag__resPtr_8h_1a4ec766b47362e54c83adbb67887b6336" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENABLE_MOVING_BEHAVIOR(Class)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"><sp/><sp/>Class()<sp/>=<sp/>default;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"><sp/><sp/>Class(Class<sp/>&amp;&amp;other)<sp/>noexcept<sp/>{<sp/>this-&gt;swap(other);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"><sp/><sp/>Class<sp/>&amp;operator=(Class<sp/>&amp;&amp;other)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>G_ASSERTF(Class::isValidForMoveAssignment(*this,<sp/>other),<sp/>&quot;Invalid<sp/>for<sp/>move<sp/>assignment.<sp/>Call<sp/>close()<sp/>before<sp/>this&quot;</highlight><highlight class="normal">);<sp/>\</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>Class(eastl::move(other)).swap(*this);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>*this;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>void<sp/>close()<sp/>{<sp/>*this<sp/>=<sp/>Class();<sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="dag__resPtr_8h_1ad104e6770b6ee56df86515f82e366c26" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSIGNMENT_FROM_RESPTR(Class)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/>Class<sp/>&amp;operator=(ResPtr&lt;ResType&gt;<sp/>&amp;&amp;res)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>close();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>*this<sp/>=<sp/>Class(eastl::move(res));<sp/>\</highlight></codeline>
<codeline lineno="264"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="dag__resPtr_8h_1a88a51dbdf6d14e3689a04740609908b1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSIGNMENT_FROM_RESFACTORY(Class)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"><sp/><sp/>Class<sp/>&amp;operator=(ResFactory&lt;ResType&gt;<sp/>&amp;&amp;factory)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>close();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>*this<sp/>=<sp/>Class(eastl::move(ResPtrFactory(factory.create())));<sp/>\</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ResType&gt;</highlight></codeline>
<codeline lineno="274" refid="classresptr__detail_1_1ResFactory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory</ref></highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="277" refid="classresptr__detail_1_1ResFactory_1a11f3779e929e191ebb80c2b4b5d5442a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ResFactory_1a11f3779e929e191ebb80c2b4b5d5442a" kindref="member">CreateFunction</ref><sp/>=<sp/>dag::FixedMoveOnlyFunction&lt;128,<sp/>ResType<sp/>*()&gt;;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="classresptr__detail_1_1ResFactory_1a8270ecb75c5d88c6f75515167c993690" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory_1a8270ecb75c5d88c6f75515167c993690" kindref="member">ResFactory</ref>(<ref refid="classresptr__detail_1_1ResFactory_1a11f3779e929e191ebb80c2b4b5d5442a" kindref="member">CreateFunction</ref><sp/>&amp;&amp;create_callback)<sp/>:<sp/>createCallback{eastl::move(create_callback)}<sp/>{}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="classresptr__detail_1_1ResFactory_1a3954c28471f15863cb9bd7a1215f8517" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1ResFactory_1a3954c28471f15863cb9bd7a1215f8517" kindref="member">ResFactory</ref>(<ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282" refid="classresptr__detail_1_1ResFactory_1a87ed0da9145e0c13606d0d7f4bd65243" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1ResFactory_1a87ed0da9145e0c13606d0d7f4bd65243" kindref="member">ResFactory</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="classresptr__detail_1_1ResFactory_1a8988a590fe07bf8873ee30f21b657237" refkind="member"><highlight class="normal"><sp/><sp/>ResType<sp/>*<ref refid="classresptr__detail_1_1ResFactory_1a8988a590fe07bf8873ee30f21b657237" kindref="member">create</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>createCallback();<sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1ResFactory_1a11f3779e929e191ebb80c2b4b5d5442a" kindref="member">CreateFunction</ref><sp/>createCallback;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">};</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ResType&gt;</highlight></codeline>
<codeline lineno="291" refid="classresptr__detail_1_1ResPtr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ResPtr" kindref="compound">ResPtr</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1MoveAssignable" kindref="compound">MoveAssignable</ref></highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>ResType<sp/>*mResource<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swap(<ref refid="classresptr__detail_1_1ResPtr" kindref="compound">ResPtr</ref><sp/>&amp;other)<sp/>{<sp/>eastl::swap(mResource,<sp/>other.mResource);<sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1ResPtr_1ac06a278928dabfa117bd0b0a3977ecac" kindref="member">ResPtr</ref>(ResType<sp/>*res)<sp/>:<sp/>mResource(res)<sp/>{}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;</highlight></codeline>
<codeline lineno="300" refid="classresptr__detail_1_1ResPtr_1ad72cc568c84f13d6eb1bc7c207ab3204" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResPtr" kindref="compound">ResPtr&lt;Type&gt;</ref><sp/><ref refid="classresptr__detail_1_1ResPtr_1ad72cc568c84f13d6eb1bc7c207ab3204" kindref="member">ResPtrFactory</ref>(Type<sp/>*res);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="303" refid="classresptr__detail_1_1ResPtr_1a59f3af4b3bf01172fa7f76430867927d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__resPtr_8h_1a4ec766b47362e54c83adbb67887b6336" kindref="member">ENABLE_MOVING_BEHAVIOR</ref>(<ref refid="classresptr__detail_1_1ResPtr" kindref="compound">ResPtr</ref>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="classresptr__detail_1_1ResPtr_1a065e4e8c6f006e9899553757c43cafb8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1ResPtr_1a065e4e8c6f006e9899553757c43cafb8" kindref="member">ResPtr</ref>(<ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;ResType&gt;</ref><sp/>&amp;&amp;res)<sp/>{<sp/>mResource<sp/>=<sp/>res.create();<sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="classresptr__detail_1_1ResPtr_1a2911694709546b21a7524e17ece5cad4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1ResPtr" kindref="compound">ResPtr</ref><sp/>&amp;<ref refid="classresptr__detail_1_1ResPtr_1a2911694709546b21a7524e17ece5cad4" kindref="member">operator=</ref>(<ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;ResType&gt;</ref><sp/>&amp;&amp;res)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mResource)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mResource-&gt;destroy();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>mResource<sp/>=<sp/>res.create();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="classresptr__detail_1_1ResPtr_1af19aff4b835792f9a8d17d93ca4a3ef8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1ResPtr_1af19aff4b835792f9a8d17d93ca4a3ef8" kindref="member">~ResPtr</ref>()</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mResource)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mResource-&gt;destroy();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="classresptr__detail_1_1ResPtr_1a9b5f0048967d93d8cc71ec449d1306e7" refkind="member"><highlight class="normal"><sp/><sp/>ResType<sp/>*<ref refid="classresptr__detail_1_1ResPtr_1a9b5f0048967d93d8cc71ec449d1306e7" kindref="member">release</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>ResType<sp/>*resource<sp/>=<sp/>mResource;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>mResource<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resource;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="classresptr__detail_1_1ResPtr_1ad70de7e1f15f0fac0e4aa43cb92e327d" refkind="member"><highlight class="normal"><sp/><sp/>ResType<sp/>*<ref refid="classresptr__detail_1_1ResPtr_1ad70de7e1f15f0fac0e4aa43cb92e327d" kindref="member">get</ref>()<sp/>const<sp/>&amp;<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mResource;<sp/>}</highlight></codeline>
<codeline lineno="331" refid="classresptr__detail_1_1ResPtr_1a2d478df53df70928c26143ea24f78b20" refkind="member"><highlight class="normal"><sp/><sp/>ResType<sp/>*<ref refid="classresptr__detail_1_1ResPtr_1a2d478df53df70928c26143ea24f78b20" kindref="member">operator-&gt;</ref>()<sp/>const<sp/>&amp;<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mResource;<sp/>}</highlight></codeline>
<codeline lineno="332" refid="classresptr__detail_1_1ResPtr_1a9d8b6722d6deaa78c0683fa6cb86147e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool()<sp/>const<sp/>&amp;<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mResource;<sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal">};</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ResType&gt;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResPtr" kindref="compound">ResPtr&lt;ResType&gt;</ref><sp/>ResPtrFactory(ResType<sp/>*res)</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{res};</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ResType&gt;</highlight></codeline>
<codeline lineno="342" refid="classresptr__detail_1_1ManagedRes" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ManagedRes" kindref="compound">ManagedRes</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="namespaceresptr__detail_1a3a7261d5d1d7a5aa62e04fbcaa4c784f" kindref="member">ResourceGetter</ref>&lt;ManagedRes&lt;ResType&gt;,<sp/>ResType&gt;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="345" refid="classresptr__detail_1_1ManagedRes_1a001deffa988dfbb9cad7260375202ddb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ManagedRes_1a001deffa988dfbb9cad7260375202ddb" kindref="member">resource_t</ref><sp/>=<sp/>ResType;</highlight></codeline>
<codeline lineno="346" refid="classresptr__detail_1_1ManagedRes_1a961addbf9bc419d8ce5330b6d28e2a7d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ManagedRes_1a961addbf9bc419d8ce5330b6d28e2a7d" kindref="member">resid_t</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_1af525791f1802a8ec65f8141af67544a6" kindref="member">Helper&lt;ResType&gt;::resid_t</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="349" refid="classresptr__detail_1_1ManagedRes_1a1bc73c3c24c0175853b227531ed9cad6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ManagedRes_1a1bc73c3c24c0175853b227531ed9cad6" kindref="member">PrivateDataGetter</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="classresptr__detail_1_1ManagedRes_1a1a983a6801e83f76dc2aba7916f2c4d6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1ManagedRes_1a961addbf9bc419d8ce5330b6d28e2a7d" kindref="member">resid_t</ref><sp/><ref refid="classresptr__detail_1_1ManagedRes_1a1a983a6801e83f76dc2aba7916f2c4d6" kindref="member">mResId</ref><sp/>=<sp/><ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper&lt;ResType&gt;::BAD_ID</ref>;</highlight></codeline>
<codeline lineno="352" refid="classresptr__detail_1_1ManagedRes_1a15f373fbfb4bba15870bb9213a20f17b" refkind="member"><highlight class="normal"><sp/><sp/>ResType<sp/>*<ref refid="classresptr__detail_1_1ManagedRes_1a15f373fbfb4bba15870bb9213a20f17b" kindref="member">mResource</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="classresptr__detail_1_1ManagedRes_1a9feed595d9973d71f23a7c0de6887c8f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ManagedRes_1a9feed595d9973d71f23a7c0de6887c8f" kindref="member">swap</ref>(<ref refid="classresptr__detail_1_1ManagedRes" kindref="compound">ManagedRes</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>eastl::swap(<ref refid="classresptr__detail_1_1ManagedRes_1a1a983a6801e83f76dc2aba7916f2c4d6" kindref="member">mResId</ref>,<sp/>other.<ref refid="classresptr__detail_1_1ManagedRes_1a1a983a6801e83f76dc2aba7916f2c4d6" kindref="member">mResId</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>eastl::swap(<ref refid="classresptr__detail_1_1ManagedRes_1a15f373fbfb4bba15870bb9213a20f17b" kindref="member">mResource</ref>,<sp/>other.<ref refid="classresptr__detail_1_1ManagedRes_1a15f373fbfb4bba15870bb9213a20f17b" kindref="member">mResource</ref>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="classresptr__detail_1_1ManagedRes_1ab13b7fdadf748f7648a0dcfb9062bace" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1ManagedRes_1ab13b7fdadf748f7648a0dcfb9062bace" kindref="member">ManagedRes</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="363" refid="classresptr__detail_1_1ManagedRes_1a231af0b8226ebfde92f8bd76e6e3cb2c" refkind="member"><highlight class="normal"><sp/><sp/>ResType<sp/>*<ref refid="classresptr__detail_1_1ManagedRes_1a231af0b8226ebfde92f8bd76e6e3cb2c" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ManagedRes_1a15f373fbfb4bba15870bb9213a20f17b" kindref="member">mResource</ref>;<sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="classresptr__detail_1_1ManagedRes_1a0b05c8dd898c8597b05befff8acda242" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ManagedRes_1a15f373fbfb4bba15870bb9213a20f17b" kindref="member">mResource</ref><sp/>&amp;&amp;<sp/><ref refid="classresptr__detail_1_1ManagedRes_1a1a983a6801e83f76dc2aba7916f2c4d6" kindref="member">mResId</ref><sp/>!=<sp/><ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper&lt;ResType&gt;::BAD_ID</ref>;<sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal">};</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ManagedResType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Deleter<sp/>=<sp/>Helper&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ManagedResType::resource_t&gt;&gt;</highlight></codeline>
<codeline lineno="369" refid="classresptr__detail_1_1UniqueRes" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">UniqueRes</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ManagedResType,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1WeakMoveAssignable" kindref="compound">WeakMoveAssignable</ref></highlight></codeline>
<codeline lineno="370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="372" refid="classresptr__detail_1_1UniqueRes_1a03529350bb9154296fe385268f08581a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1WeakMoveAssignable" kindref="compound">move_assignable_t</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1WeakMoveAssignable" kindref="compound">WeakMoveAssignable</ref>;</highlight></codeline>
<codeline lineno="373" refid="classresptr__detail_1_1UniqueRes_1ae547c0129fcb7bf4b949bc1d527253bf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1UniqueRes_1ae547c0129fcb7bf4b949bc1d527253bf" kindref="member">BaseType</ref><sp/>=<sp/>ManagedResType;</highlight></codeline>
<codeline lineno="374" refid="classresptr__detail_1_1UniqueRes_1aca7593481930522cd0b3c65480be3815" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1UniqueRes_1aca7593481930522cd0b3c65480be3815" kindref="member">ResType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseType::resource_t;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="classresptr__detail_1_1UniqueRes_1a0e4b3abd6528dd033ee1338d39d7926d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__resPtr_8h_1a4ec766b47362e54c83adbb67887b6336" kindref="member">ENABLE_MOVING_BEHAVIOR</ref>(<ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">UniqueRes</ref>);</highlight></codeline>
<codeline lineno="377" refid="classresptr__detail_1_1UniqueRes_1a9bafa532cd2fcf5b526c6fcc26fcc3c8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__resPtr_8h_1ad104e6770b6ee56df86515f82e366c26" kindref="member">ASSIGNMENT_FROM_RESPTR</ref>(<ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">UniqueRes</ref>);</highlight></codeline>
<codeline lineno="378" refid="classresptr__detail_1_1UniqueRes_1a148fcdc5bdea01888ecfb7c7164a9523" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__resPtr_8h_1a88a51dbdf6d14e3689a04740609908b1" kindref="member">ASSIGNMENT_FROM_RESFACTORY</ref>(<ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">UniqueRes</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="classresptr__detail_1_1UniqueRes_1aff4f4ce47532e7514840e8ea21a13cc9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1UniqueRes_1aff4f4ce47532e7514840e8ea21a13cc9" kindref="member">UniqueRes</ref>(<ref refid="classresptr__detail_1_1ResPtr" kindref="compound">ResPtr&lt;ResType&gt;</ref><sp/>&amp;&amp;res,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*managed_name<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!managed_name)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>managed_name<sp/>=<sp/><ref refid="structresptr__detail_1_1Helper_1a5a1cedef815e8da840d01fb0f5ff09c9" kindref="member">Helper&lt;ResType&gt;::getName</ref>(res.get());</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;mResId<sp/>=<sp/><ref refid="structresptr__detail_1_1Helper_1a47c1969e2c15ae710a68bcf863113a33" kindref="member">Helper&lt;ResType&gt;::registerRes</ref>(managed_name,<sp/>res.get());</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;mResource<sp/>=<sp/>eastl::move(res).release();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="classresptr__detail_1_1UniqueRes_1a019ba364e2035a8b54eb3c5bc1a852f4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1UniqueRes_1a019ba364e2035a8b54eb3c5bc1a852f4" kindref="member">UniqueRes</ref>(<ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;ResType&gt;</ref><sp/>&amp;&amp;res,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*managed_name<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>:</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">UniqueRes</ref>(eastl::move(ResPtrFactory(res.create())),<sp/>managed_name)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="classresptr__detail_1_1UniqueRes_1a826944d326c203b3e4a0d8b0d5d8db21" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1UniqueRes_1a826944d326c203b3e4a0d8b0d5d8db21" kindref="member">changeResource</ref>(<ref refid="classresptr__detail_1_1ResPtr" kindref="compound">ResPtr&lt;ResType&gt;</ref><sp/>&amp;&amp;res)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;mResource<sp/>=<sp/>eastl::move(res).release();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dag__resMgr_8h_1ab6017cf83e8de7f63f9767a262c78d67" kindref="member">change_managed_res</ref>(this-&gt;mResId,<sp/>this-&gt;mResource);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="classresptr__detail_1_1UniqueRes_1a1b5786fef008748a2081dabc130c8176" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1UniqueRes_1a1b5786fef008748a2081dabc130c8176" kindref="member">~UniqueRes</ref>()<sp/>{<sp/><ref refid="classresptr__detail_1_1UniqueRes_1ad13d8398a7176707d364df4bd5df9f9f" kindref="member">release</ref>(this-&gt;mResId,<sp/>this-&gt;mResource);<sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="classresptr__detail_1_1UniqueRes_1ad13d8398a7176707d364df4bd5df9f9f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1UniqueRes_1ad13d8398a7176707d364df4bd5df9f9f" kindref="member">release</ref>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_1af525791f1802a8ec65f8141af67544a6" kindref="member">Helper&lt;ResType&gt;::resid_t</ref><sp/>&amp;res_id,<sp/><ref refid="classresptr__detail_1_1UniqueRes_1aca7593481930522cd0b3c65480be3815" kindref="member">ResType</ref><sp/>*res)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper&lt;ResType&gt;::getManagedRefCount</ref>(res_id)<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ShaderGlobal::reset_from_vars(res_id);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERTF(res_id<sp/>==<sp/><ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper&lt;ResType&gt;::BAD_ID</ref><sp/>||<sp/><ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper&lt;ResType&gt;::getManagedRefCount</ref>(res_id)<sp/>==<sp/>1,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;resource_name<sp/>=<sp/>&apos;%s&apos;<sp/>res_id=0x%x<sp/>refCount=%d&quot;</highlight><highlight class="normal">,<sp/>res<sp/>?<sp/>res-&gt;<ref refid="structresptr__detail_1_1Helper_1a5a1cedef815e8da840d01fb0f5ff09c9" kindref="member">getName</ref>()<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>res_id,<sp/><ref refid="structresptr__detail_1_1Helper_1a1e6302014516ebdbf2aa1cb8e74b1414" kindref="member">Helper&lt;ResType&gt;::getManagedRefCount</ref>(res_id));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>Deleter::release(res_id,<sp/>res);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal">};</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ManagedResType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Deleter<sp/>=<sp/>Helper&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ManagedResType::resource_t&gt;&gt;</highlight></codeline>
<codeline lineno="412" refid="classresptr__detail_1_1SharedRes" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1SharedRes" kindref="compound">SharedRes</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ManagedResType,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1MoveAssignable" kindref="compound">MoveAssignable</ref></highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="415" refid="classresptr__detail_1_1SharedRes_1a92543874f567f361c83a23114adf04f2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1MoveAssignable" kindref="compound">move_assignable_t</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1MoveAssignable" kindref="compound">MoveAssignable</ref>;</highlight></codeline>
<codeline lineno="416" refid="classresptr__detail_1_1SharedRes_1a80ca1333d830140f2e82362355f678c9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1SharedRes_1a80ca1333d830140f2e82362355f678c9" kindref="member">BaseType</ref><sp/>=<sp/>ManagedResType;</highlight></codeline>
<codeline lineno="417" refid="classresptr__detail_1_1SharedRes_1a068f9e3939faec80fcaab60058ed5fc8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1SharedRes_1a068f9e3939faec80fcaab60058ed5fc8" kindref="member">ResType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseType::resource_t;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="classresptr__detail_1_1SharedRes_1a917886ba2d55ca7a4562051dd51dba9d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__resPtr_8h_1a4ec766b47362e54c83adbb67887b6336" kindref="member">ENABLE_MOVING_BEHAVIOR</ref>(<ref refid="classresptr__detail_1_1SharedRes" kindref="compound">SharedRes</ref>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="classresptr__detail_1_1SharedRes_1a817a98442ee0140305da587bfea17a0e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1SharedRes_1a817a98442ee0140305da587bfea17a0e" kindref="member">SharedRes</ref>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_1af525791f1802a8ec65f8141af67544a6" kindref="member">Helper&lt;ResType&gt;::resid_t</ref><sp/>res_id)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;mResId<sp/>=<sp/>res_id;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;mResource<sp/>=<sp/><ref refid="structresptr__detail_1_1Helper_1aa1b3a4dfdd1c6232cdb3892849125941" kindref="member">Helper&lt;ResType&gt;::acquire</ref>(res_id);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="classresptr__detail_1_1SharedRes_1a54fcc4ce70d958bf45b73dc01c4434d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1SharedRes_1a54fcc4ce70d958bf45b73dc01c4434d3" kindref="member">SharedRes</ref>(<ref refid="classresptr__detail_1_1ResPtr" kindref="compound">ResPtr&lt;ResType&gt;</ref><sp/>&amp;&amp;res)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;mResource<sp/>=<sp/>eastl::move(res).release();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;mResId<sp/>=<sp/><ref refid="structresptr__detail_1_1Helper_1a47c1969e2c15ae710a68bcf863113a33" kindref="member">Helper&lt;ResType&gt;::registerRes</ref>(<ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper&lt;ResType&gt;::getName</ref>(this-&gt;mResource),<sp/>this-&gt;mResource);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="classresptr__detail_1_1SharedRes_1a4e9500e048eb75c279d991a2d43e51f3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1SharedRes_1a4e9500e048eb75c279d991a2d43e51f3" kindref="member">SharedRes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1SharedRes" kindref="compound">SharedRes</ref><sp/>&amp;other)<sp/>:<sp/><ref refid="classresptr__detail_1_1SharedRes" kindref="compound">SharedRes</ref>(other.mResId)<sp/>{}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="classresptr__detail_1_1SharedRes_1a306e30a54061bd9c264e81fe9c34ec50" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1SharedRes" kindref="compound">SharedRes</ref><sp/>&amp;<ref refid="classresptr__detail_1_1SharedRes_1a306e30a54061bd9c264e81fe9c34ec50" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1SharedRes" kindref="compound">SharedRes</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classresptr__detail_1_1SharedRes_1a9c5560593bd734463c84ead31e914fa0" kindref="member">SharedRes</ref>(other).swap(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="classresptr__detail_1_1SharedRes_1a20d8356d11fb5ed1473e78cc778fe5e0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1SharedRes_1a20d8356d11fb5ed1473e78cc778fe5e0" kindref="member">~SharedRes</ref>()<sp/>{<sp/><ref refid="classresptr__detail_1_1SharedRes_1ad7e442848f96b200f006e12d9135bdb5" kindref="member">release</ref>(this-&gt;mResId,<sp/>this-&gt;mResource);<sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="classresptr__detail_1_1SharedRes_1ad7e442848f96b200f006e12d9135bdb5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1SharedRes_1ad7e442848f96b200f006e12d9135bdb5" kindref="member">release</ref>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structresptr__detail_1_1Helper_1af525791f1802a8ec65f8141af67544a6" kindref="member">Helper&lt;ResType&gt;::resid_t</ref><sp/>&amp;res_id,<sp/><ref refid="classresptr__detail_1_1SharedRes_1a068f9e3939faec80fcaab60058ed5fc8" kindref="member">ResType</ref><sp/>*res)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>Deleter::release(res_id,<sp/>res);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper&lt;ResType&gt;::getManagedRefCount</ref>(res_id)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dag__texMgr_8h_1aa748cb1de7974cc6bd4d20d8eeac9f5e" kindref="member">evict_managed_tex_id</ref>(res_id);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal">};</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ManagedResType&gt;</highlight></codeline>
<codeline lineno="452" refid="classresptr__detail_1_1ManagedResView" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ManagedResView" kindref="compound">ManagedResView</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ManagedResType</highlight></codeline>
<codeline lineno="453"><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="455" refid="classresptr__detail_1_1ManagedResView_1ab8d7adeb5cffbe0a1ec4e5891b631e09" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ManagedResView_1ab8d7adeb5cffbe0a1ec4e5891b631e09" kindref="member">BaseType</ref><sp/>=<sp/>ManagedResType;</highlight></codeline>
<codeline lineno="456" refid="classresptr__detail_1_1ManagedResView_1a480235980a6c20dd102a50a3caaccc59" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ManagedResView_1a480235980a6c20dd102a50a3caaccc59" kindref="member">ResType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseType::resource_t;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="classresptr__detail_1_1ManagedResView_1a10f515515dfd9a3e54acd008776e5243" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1ManagedResView_1a10f515515dfd9a3e54acd008776e5243" kindref="member">ManagedResView</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459" refid="classresptr__detail_1_1ManagedResView_1ad80a1d4e9e60411d5b9e357fbc15c1d1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1ManagedResView_1ad80a1d4e9e60411d5b9e357fbc15c1d1" kindref="member">ManagedResView</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ManagedResType<sp/>&amp;res)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;mResId<sp/>=<sp/><ref refid="structresptr__detail_1_1PrivateDataGetter_1adb6a9710f527454ecc4e14359792046c" kindref="member">PrivateDataGetter::getResId</ref>(&amp;res);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;mResource<sp/>=<sp/><ref refid="structresptr__detail_1_1PrivateDataGetter_1ab7e79701f6088e9c46d3bc7a6023755e" kindref="member">PrivateDataGetter::getResource</ref>(&amp;res);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="464" refid="classresptr__detail_1_1ManagedResView_1a086c6233dbbae6a895137885b2814247" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1ManagedResView_1a086c6233dbbae6a895137885b2814247" kindref="member">ManagedResView</ref>(ManagedResType<sp/>&amp;&amp;res)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal">};</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DAGOR_DBGLEVEL<sp/>&gt;<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>trick<sp/>to<sp/>create<sp/>a<sp/>global<sp/>variable<sp/>in<sp/>the<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Despite<sp/>the<sp/>fact<sp/>that<sp/>this<sp/>header<sp/>will<sp/>be<sp/>included<sp/>to<sp/>different<sp/>cpp,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>linker<sp/>will<sp/>leave<sp/>only<sp/>one<sp/>copy<sp/>of<sp/>this<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="472"><highlight class="normal">eastl::unordered_set&lt;int&gt;<sp/>gUsedShaderVarIds;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>acquireShaderVarId(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_id)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_id<sp/>!=<sp/>VariableMap::BAD_ID<sp/>&amp;&amp;<sp/>!gUsedShaderVarIds&lt;&gt;.emplace(new_id).second)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>DAG_FATAL(</highlight><highlight class="stringliteral">&quot;You<sp/>are<sp/>trying<sp/>to<sp/>bind<sp/>resource<sp/>to<sp/>a<sp/>shaderVar<sp/>with<sp/>id<sp/>=<sp/>%d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>which<sp/>another<sp/>resource<sp/>is<sp/>already<sp/>bound,<sp/>this<sp/>can<sp/>lead<sp/>to<sp/>unpredictable<sp/>bugs&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_id);</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>releaseShaderVarId(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>VariableMap::BAD_ID)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>gUsedShaderVarIds&lt;&gt;.erase(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>G_ASSERT(count<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>acquireShaderVarId(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>releaseShaderVarId(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ManagedResType&gt;</highlight></codeline>
<codeline lineno="496" refid="classresptr__detail_1_1ManagedResHolder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ManagedResHolder" kindref="compound">ManagedResHolder</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ManagedResType</highlight></codeline>
<codeline lineno="497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ResType<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ManagedResType::resource_t;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="501" refid="classresptr__detail_1_1ManagedResHolder_1a357fad680cca7d48d632b31c2f9e8d54" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ManagedResHolder_1a357fad680cca7d48d632b31c2f9e8d54" kindref="member">mShaderVarId</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503" refid="classresptr__detail_1_1ManagedResHolder_1aa6d32fa8912f504a4d08f415d82fda25" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ManagedResHolder_1aa6d32fa8912f504a4d08f415d82fda25" kindref="member">swap</ref>(<ref refid="classresptr__detail_1_1ManagedResHolder" kindref="compound">ManagedResHolder</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>ManagedResType::swap(other);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>eastl::swap(<ref refid="classresptr__detail_1_1ManagedResHolder_1a357fad680cca7d48d632b31c2f9e8d54" kindref="member">mShaderVarId</ref>,<sp/>other.<ref refid="classresptr__detail_1_1ManagedResHolder_1a357fad680cca7d48d632b31c2f9e8d54" kindref="member">mShaderVarId</ref>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="classresptr__detail_1_1ManagedResHolder_1a07fe4bd986384a4c8843f07afbf8889a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1ManagedResHolder_1a07fe4bd986384a4c8843f07afbf8889a" kindref="member">ManagedResHolder</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="512" refid="classresptr__detail_1_1ManagedResHolder_1a41c7e0053c58260947a9dc51bac57ccc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ManagedResHolder_1a41c7e0053c58260947a9dc51bac57ccc" kindref="member">getVarId</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ManagedResHolder_1a357fad680cca7d48d632b31c2f9e8d54" kindref="member">mShaderVarId</ref>;<sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514" refid="classresptr__detail_1_1ManagedResHolder_1a31e9999423935ef5b8decd88fe0bb84a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ManagedResHolder_1a31e9999423935ef5b8decd88fe0bb84a" kindref="member">setVar</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="515"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classresptr__detail_1_1ManagedResHolder_1a357fad680cca7d48d632b31c2f9e8d54" kindref="member">mShaderVarId</ref><sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresptr__detail_1_1Helper_1ad741a272c4be71921e37d697205647cb" kindref="member">Helper&lt;ResType&gt;::setVar</ref>(<ref refid="classresptr__detail_1_1ManagedResHolder_1a357fad680cca7d48d632b31c2f9e8d54" kindref="member">mShaderVarId</ref>,<sp/>this-&gt;mResId);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="classresptr__detail_1_1ManagedResHolder_1ac6c47350fb7e48a894b0abd8fa90e801" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ManagedResHolder_1ac6c47350fb7e48a894b0abd8fa90e801" kindref="member">setVarId</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>var_id)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>releaseShaderVarId(<ref refid="classresptr__detail_1_1ManagedResHolder_1a357fad680cca7d48d632b31c2f9e8d54" kindref="member">mShaderVarId</ref>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>acquireShaderVarId(var_id);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classresptr__detail_1_1ManagedResHolder_1a357fad680cca7d48d632b31c2f9e8d54" kindref="member">mShaderVarId</ref><sp/>=<sp/>var_id;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal">};</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ManagedResType&gt;</highlight></codeline>
<codeline lineno="529" refid="classresptr__detail_1_1ConcreteResHolder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">ConcreteResHolder</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ManagedResHolder" kindref="compound">ManagedResHolder</ref>&lt;typename<sp/>ManagedResType::BaseType&gt;,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ManagedResType::move_assignable_t</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ResType<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ManagedResType::resource_t;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="534" refid="classresptr__detail_1_1ConcreteResHolder_1a5a467f78fdb21488f822a54633e46273" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__resPtr_8h_1a4ec766b47362e54c83adbb67887b6336" kindref="member">ENABLE_MOVING_BEHAVIOR</ref>(<ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">ConcreteResHolder</ref>);</highlight></codeline>
<codeline lineno="535" refid="classresptr__detail_1_1ConcreteResHolder_1a51fbc438e456e1748a4d159cd5438dee" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__resPtr_8h_1ad104e6770b6ee56df86515f82e366c26" kindref="member">ASSIGNMENT_FROM_RESPTR</ref>(<ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">ConcreteResHolder</ref>);</highlight></codeline>
<codeline lineno="536" refid="classresptr__detail_1_1ConcreteResHolder_1aecde1c48ec0dd88b1ba23ba2974eb3fa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__resPtr_8h_1a88a51dbdf6d14e3689a04740609908b1" kindref="member">ASSIGNMENT_FROM_RESFACTORY</ref>(<ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">ConcreteResHolder</ref>);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="classresptr__detail_1_1ConcreteResHolder_1a96111ec9deced48c00c0596d36a92cbf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1ConcreteResHolder_1a96111ec9deced48c00c0596d36a92cbf" kindref="member">ConcreteResHolder</ref>(ManagedResType<sp/>&amp;&amp;resource,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*shader_var_name<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>ManagedResType::BaseType::swap(resource);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;mResId<sp/>==<sp/><ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper&lt;ResType&gt;::BAD_ID</ref>)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ConcreteResHolder<sp/>constructor<sp/>failed.<sp/>mResId<sp/>is<sp/>equal<sp/>to<sp/>BAD_ID&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shader_var_name)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logerr(errString);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logwarn(</highlight><highlight class="stringliteral">&quot;%s<sp/>(shader_var_name:<sp/>%s)&quot;</highlight><highlight class="normal">,<sp/>errString,<sp/>shader_var_name);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shader_var_name)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader_var_name<sp/>=<sp/><ref refid="structresptr__detail_1_1Helper_1a5329906c772617310ed58e537d68a92e" kindref="member">Helper&lt;ResType&gt;::getNameById</ref>(this-&gt;mResId);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classresptr__detail_1_1ManagedResHolder_1ac6c47350fb7e48a894b0abd8fa90e801" kindref="member">setVarId</ref>(get_shader_variable_id(shader_var_name));</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper&lt;ResType&gt;::can_bind</ref>(this-&gt;mResource))</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classresptr__detail_1_1ManagedResHolder_1a31e9999423935ef5b8decd88fe0bb84a" kindref="member">setVar</ref>();</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561" refid="classresptr__detail_1_1ConcreteResHolder_1a54adb59ad70de0ff690130a0d30ff4c0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1ConcreteResHolder_1a54adb59ad70de0ff690130a0d30ff4c0" kindref="member">ConcreteResHolder</ref>(ManagedResType<sp/>&amp;&amp;resource,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>var_id)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>ManagedResType::BaseType::swap(resource);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classresptr__detail_1_1ManagedResHolder_1ac6c47350fb7e48a894b0abd8fa90e801" kindref="member">setVarId</ref>(var_id);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper&lt;ResType&gt;::can_bind</ref>(this-&gt;mResource))</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classresptr__detail_1_1ManagedResHolder_1a31e9999423935ef5b8decd88fe0bb84a" kindref="member">setVar</ref>();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570" refid="classresptr__detail_1_1ConcreteResHolder_1a8d171cfb8bb841025025307b7cb77b7b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1ConcreteResHolder_1a8d171cfb8bb841025025307b7cb77b7b" kindref="member">ConcreteResHolder</ref>(<ref refid="classresptr__detail_1_1ResPtr" kindref="compound">ResPtr&lt;ResType&gt;</ref><sp/>&amp;&amp;res,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*shader_var_name<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>:</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">ConcreteResHolder</ref>(ManagedResType(eastl::move(res)),<sp/>shader_var_name)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574" refid="classresptr__detail_1_1ConcreteResHolder_1a3d581e90169727a72af9e63068a39677" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1ConcreteResHolder_1a3d581e90169727a72af9e63068a39677" kindref="member">ConcreteResHolder</ref>(<ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;ResType&gt;</ref><sp/>&amp;&amp;res,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*shader_var_name<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>:</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">ConcreteResHolder</ref>(ManagedResType(eastl::move(res)),<sp/>shader_var_name)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578" refid="classresptr__detail_1_1ConcreteResHolder_1a0d8d49325f56930ae3964b0da49cd0e9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classresptr__detail_1_1ConcreteResHolder_1a0d8d49325f56930ae3964b0da49cd0e9" kindref="member">~ConcreteResHolder</ref>()</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>releaseShaderVarId(this-&gt;<ref refid="classresptr__detail_1_1ManagedResHolder_1a357fad680cca7d48d632b31c2f9e8d54" kindref="member">mShaderVarId</ref>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>ManagedResType::release(this-&gt;mResId,<sp/>this-&gt;mResource);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classresptr__detail_1_1ManagedResHolder_1a357fad680cca7d48d632b31c2f9e8d54" kindref="member">mShaderVarId</ref><sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresptr__detail_1_1Helper_1ad741a272c4be71921e37d697205647cb" kindref="member">Helper&lt;ResType&gt;::setVar</ref>(this-&gt;<ref refid="classresptr__detail_1_1ManagedResHolder_1a357fad680cca7d48d632b31c2f9e8d54" kindref="member">mShaderVarId</ref>,<sp/><ref refid="structresptr__detail_1_1Helper" kindref="compound">Helper&lt;ResType&gt;::BAD_ID</ref>);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal">};</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ENABLE_MOVING_BEHAVIOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ASSIGNMENT_FROM_RESPTR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ASSIGNMENT_FROM_RESFACTORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>resptr_detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ResType&gt;</highlight></codeline>
<codeline lineno="594" refid="dag__resPtr_8h_1a13de3f546ea49a108ad2506ed9d49e35" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ManagedRes" kindref="compound">ManagedRes</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1ManagedRes" kindref="compound">resptr_detail::ManagedRes&lt;ResType&gt;</ref>;</highlight></codeline>
<codeline lineno="595" refid="dag__resPtr_8h_1ac986aa4688b6117c5d04919cfe9afa54" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ManagedRes" kindref="compound">ManagedTex</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1ManagedRes" kindref="compound">ManagedRes&lt;BaseTexture&gt;</ref>;</highlight></codeline>
<codeline lineno="596" refid="dag__resPtr_8h_1ae72b38b1ea74f870989bca6526a42cd5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ManagedRes" kindref="compound">ManagedBuf</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1ManagedRes" kindref="compound">ManagedRes&lt;Sbuffer&gt;</ref>;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ManagedResType&gt;</highlight></codeline>
<codeline lineno="599" refid="dag__resPtr_8h_1ab662ff5ab42be6ae7aff0027d663dffd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">UniqueRes</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">resptr_detail::UniqueRes&lt;ManagedResType&gt;</ref>;</highlight></codeline>
<codeline lineno="600" refid="dag__resPtr_8h_1a549f1580b5fd99196d05fca55598bc4d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">UniqueTex</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">UniqueRes&lt;ManagedTex&gt;</ref>;</highlight></codeline>
<codeline lineno="601" refid="dag__resPtr_8h_1aeb45b68a26629ad747c4a58e8b528a4c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">UniqueBuf</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">UniqueRes&lt;ManagedBuf&gt;</ref>;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="dag__resPtr_8h_1aeb059912bdbd3b989796f4003002f667" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">ExternalTex</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">resptr_detail::UniqueRes&lt;ManagedTex, resptr_detail::Helper&lt;resptr_detail::ExternalTexWrapper&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="604" refid="dag__resPtr_8h_1ae8f046c3c2400842187560a183674f5e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">ExternalBuf</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">resptr_detail::UniqueRes&lt;ManagedBuf, resptr_detail::Helper&lt;resptr_detail::ExternalBufWrapper&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ManagedResType&gt;</highlight></codeline>
<codeline lineno="607" refid="dag__resPtr_8h_1ac4c053c9d789d58a6edf56475c4c6f55" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ManagedResView" kindref="compound">ManagedResView</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1ManagedResView" kindref="compound">resptr_detail::ManagedResView&lt;ManagedResType&gt;</ref>;</highlight></codeline>
<codeline lineno="608" refid="dag__resPtr_8h_1aecc8a26fa4e4e25a6ed68c5ccf3c7025" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ManagedResView" kindref="compound">ManagedTexView</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1ManagedResView" kindref="compound">ManagedResView&lt;ManagedTex&gt;</ref>;</highlight></codeline>
<codeline lineno="609" refid="dag__resPtr_8h_1a7e076c2f2d910b8b8b2527e6206d5425" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ManagedResView" kindref="compound">ManagedBufView</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1ManagedResView" kindref="compound">ManagedResView&lt;ManagedBuf&gt;</ref>;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ManagedResType&gt;</highlight></codeline>
<codeline lineno="612" refid="dag__resPtr_8h_1acddaabb0b170d781ac70ca9490e10d43" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1SharedRes" kindref="compound">SharedRes</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1SharedRes" kindref="compound">resptr_detail::SharedRes&lt;ManagedResType&gt;</ref>;</highlight></codeline>
<codeline lineno="613" refid="dag__resPtr_8h_1ab28fd7dade0b33bc070404898de4be17" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1SharedRes" kindref="compound">SharedTex</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1SharedRes" kindref="compound">SharedRes&lt;ManagedTex&gt;</ref>;</highlight></codeline>
<codeline lineno="614" refid="dag__resPtr_8h_1a108c31bad537ef78159f53be8d3a5ab1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1SharedRes" kindref="compound">SharedBuf</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1SharedRes" kindref="compound">SharedRes&lt;ManagedBuf&gt;</ref>;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616" refid="dag__resPtr_8h_1a7ccc919fac589f54e11e39b99ad4bbd6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ManagedResHolder" kindref="compound">ManagedTexHolder</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1ManagedResHolder" kindref="compound">resptr_detail::ManagedResHolder&lt;ManagedTex&gt;</ref>;</highlight></codeline>
<codeline lineno="617" refid="dag__resPtr_8h_1a56db2d3c727f64fe504f544e366c5145" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ManagedResHolder" kindref="compound">ManagedBufHolder</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1ManagedResHolder" kindref="compound">resptr_detail::ManagedResHolder&lt;ManagedBuf&gt;</ref>;</highlight></codeline>
<codeline lineno="618" refid="dag__resPtr_8h_1a104d6f097f4f62715adfefb84ea0e191" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">UniqueTexHolder</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">resptr_detail::ConcreteResHolder&lt;UniqueTex&gt;</ref>;</highlight></codeline>
<codeline lineno="619" refid="dag__resPtr_8h_1ab16e69a73a91abc6e5cfa1e583364868" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">UniqueBufHolder</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">resptr_detail::ConcreteResHolder&lt;UniqueBuf&gt;</ref>;</highlight></codeline>
<codeline lineno="620" refid="dag__resPtr_8h_1a8eb35782ace8ba87a5bd6f718a26dd1a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">SharedTexHolder</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">resptr_detail::ConcreteResHolder&lt;SharedTex&gt;</ref>;</highlight></codeline>
<codeline lineno="621" refid="dag__resPtr_8h_1ac689eb60b3c3bba692f665ac19ea719b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">SharedBufHolder</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">resptr_detail::ConcreteResHolder&lt;SharedBuf&gt;</ref>;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ResType&gt;</highlight></codeline>
<codeline lineno="624" refid="dag__resPtr_8h_1af13d5309226952facc3df5cdac5f4572" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ResPtr" kindref="compound">ResPtr</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1ResPtr" kindref="compound">resptr_detail::ResPtr&lt;ResType&gt;</ref>;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ResType&gt;</highlight></codeline>
<codeline lineno="626" refid="dag__resPtr_8h_1a8b11f131afcc2fb9c7151f974c09e9bd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">resptr_detail::ResFactory&lt;ResType&gt;</ref>;</highlight></codeline>
<codeline lineno="627" refid="dag__resPtr_8h_1a2843cb879e1e856fec571a07af43ac59" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ResPtr" kindref="compound">TexPtr</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1ResPtr" kindref="compound">ResPtr&lt;BaseTexture&gt;</ref>;</highlight></codeline>
<codeline lineno="628" refid="dag__resPtr_8h_1a838549d8088520396237d6807e24fabe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classresptr__detail_1_1ResPtr" kindref="compound">BufPtr</ref><sp/>=<sp/><ref refid="classresptr__detail_1_1ResPtr" kindref="compound">ResPtr&lt;Sbuffer&gt;</ref>;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630" refid="namespacedag" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedag" kindref="compound">dag</ref></highlight></codeline>
<codeline lineno="631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;BaseTexture&gt;</ref><sp/>create_tex(TexImage32<sp/>*img,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>levels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;BaseTexture&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::create_tex(img,<sp/>w,<sp/>h,<sp/>flg,<sp/>levels,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;CubeTexture&gt;</ref><sp/>create_cubetex(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>levels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;CubeTexture&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::create_cubetex(size,<sp/>flg,<sp/>levels,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;VolTexture&gt;</ref><sp/>create_voltex(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>levels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;VolTexture&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::create_voltex(w,<sp/>h,<sp/>d,<sp/>flg,<sp/>levels,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;ArrayTexture&gt;</ref><sp/>create_array_tex(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>levels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;ArrayTexture&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::create_array_tex(w,<sp/>h,<sp/>d,<sp/>flg,<sp/>levels,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;ArrayTexture&gt;</ref><sp/>create_cube_array_tex(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>side,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>levels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;ArrayTexture&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::create_cube_array_tex(side,<sp/>d,<sp/>flg,<sp/>levels,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResPtr" kindref="compound">TexPtr</ref><sp/>create_ddsx_tex(IGenLoad<sp/>&amp;crd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quality_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>levels<sp/>=<sp/>0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resptr_detail::ResPtrFactory(d3d::create_ddsx_tex(crd,<sp/>flg,<sp/>quality_id,<sp/>levels,<sp/>name));</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResPtr" kindref="compound">TexPtr</ref><sp/>alias_tex(BaseTexture<sp/>*base_tex,<sp/>TexImage32<sp/>*img,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>levels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="658"><highlight class="normal">{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resptr_detail::ResPtrFactory(d3d::alias_tex(base_tex,<sp/>img,<sp/>w,<sp/>h,<sp/>flg,<sp/>levels,<sp/>name));</highlight></codeline>
<codeline lineno="660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResPtr" kindref="compound">TexPtr</ref><sp/>alias_cubetex(BaseTexture<sp/>*base_tex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>side,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>levels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resptr_detail::ResPtrFactory(d3d::alias_cubetex(base_tex,<sp/>side,<sp/>flg,<sp/>levels,<sp/>name));</highlight></codeline>
<codeline lineno="664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResPtr" kindref="compound">TexPtr</ref><sp/>alias_voltex(BaseTexture<sp/>*base_tex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>levels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resptr_detail::ResPtrFactory(d3d::alias_voltex(base_tex,<sp/>w,<sp/>h,<sp/>d,<sp/>flg,<sp/>levels,<sp/>name));</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResPtr" kindref="compound">TexPtr</ref><sp/>alias_array_tex(BaseTexture<sp/>*base_tex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>levels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="670"><highlight class="normal">{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resptr_detail::ResPtrFactory(d3d::alias_array_tex(base_tex,<sp/>w,<sp/>h,<sp/>d,<sp/>flg,<sp/>levels,<sp/>name));</highlight></codeline>
<codeline lineno="672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResPtr" kindref="compound">TexPtr</ref><sp/>alias_cube_array_tex(BaseTexture<sp/>*base_tex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>side,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>levels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resptr_detail::ResPtrFactory(d3d::alias_cube_array_tex(base_tex,<sp/>side,<sp/>d,<sp/>flg,<sp/>levels,<sp/>name));</highlight></codeline>
<codeline lineno="676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Vbuffer&gt;</ref><sp/>create_vb(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="679"><highlight class="normal">{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Vbuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::create_vb(sz,<sp/>f,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Ibuffer&gt;</ref><sp/>create_ib(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size_bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Ibuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::create_ib(size_bytes,<sp/>flags,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/>create_sbuffer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>struct_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>elements,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>texfmt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::create_sbuffer(struct_size,<sp/>elements,<sp/>flags,<sp/>texfmt,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="namespacedag_1_1buffers" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">buffers</highlight></codeline>
<codeline lineno="692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">d3d::buffers;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Such<sp/>buffers<sp/>could<sp/>be<sp/>updated<sp/>from<sp/>time<sp/>to<sp/>time<sp/>and<sp/>its<sp/>content<sp/>will<sp/>be<sp/>automatically<sp/>restored<sp/>on<sp/>device<sp/>reset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697" refid="namespacedag_1_1buffers_1a176c2ac9df1ffedf2641dc2f62beaee3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/><ref refid="namespacedag_1_1buffers_1a176c2ac9df1ffedf2641dc2f62beaee3" kindref="member">create_persistent_cb</ref>(uint32_t<sp/>registers_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="698"><highlight class="normal">{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::buffers::create_persistent_cb(registers_count,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Such<sp/>buffers<sp/>must<sp/>be<sp/>updated<sp/>every<sp/>frame.<sp/>Because<sp/>of<sp/>that<sp/>we<sp/>don&apos;t<sp/>care<sp/>about<sp/>its<sp/>content<sp/>on<sp/>device<sp/>reset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702" refid="namespacedag_1_1buffers_1a35d5586287a30b347ab0fe46cb1b06d9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/><ref refid="namespacedag_1_1buffers_1a35d5586287a30b347ab0fe46cb1b06d9" kindref="member">create_one_frame_cb</ref>(uint32_t<sp/>registers_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="703"><highlight class="normal">{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::buffers::create_one_frame_cb(registers_count,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(RW)ByteAddressBuffer<sp/>in<sp/>shader.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708" refid="namespacedag_1_1buffers_1a4469621b058d3c7b1a3edc0b28553470" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/><ref refid="namespacedag_1_1buffers_1a4469621b058d3c7b1a3edc0b28553470" kindref="member">create_ua_sr_byte_address</ref>(uint32_t<sp/>size_in_dwords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>Init<sp/>buffer_init<sp/>=<sp/>Init::No)</highlight></codeline>
<codeline lineno="709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::buffers::create_ua_sr_byte_address(size_in_dwords,<sp/>name,<sp/>buffer_init);<sp/>});</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(RW)StructuredBuffer<sp/>in<sp/>shader.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="namespacedag_1_1buffers_1ab21c187e88f156d58521854c66b0b014" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/><ref refid="namespacedag_1_1buffers_1ab21c187e88f156d58521854c66b0b014" kindref="member">create_ua_sr_structured</ref>(uint32_t<sp/>structure_size,<sp/>uint32_t<sp/>elements_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>Init<sp/>buffer_init<sp/>=<sp/>Init::No)</highlight></codeline>
<codeline lineno="715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::buffers::create_ua_sr_structured(structure_size,<sp/>elements_count,<sp/>name,<sp/>buffer_init);<sp/>});</highlight></codeline>
<codeline lineno="717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RWByteAddressBuffer<sp/>in<sp/>shader.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720" refid="namespacedag_1_1buffers_1a058dea5b77dc84fb39d28b9761ed9efa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/><ref refid="namespacedag_1_1buffers_1a058dea5b77dc84fb39d28b9761ed9efa" kindref="member">create_ua_byte_address</ref>(uint32_t<sp/>size_in_dwords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::buffers::create_ua_byte_address(size_in_dwords,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RWStructuredBuffer<sp/>in<sp/>shader.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725" refid="namespacedag_1_1buffers_1aca6fcd4229be5f4e78bfb974bc9066ee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/><ref refid="namespacedag_1_1buffers_1aca6fcd4229be5f4e78bfb974bc9066ee" kindref="member">create_ua_structured</ref>(uint32_t<sp/>structure_size,<sp/>uint32_t<sp/>elements_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="726"><highlight class="normal">{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::buffers::create_ua_structured(structure_size,<sp/>elements_count,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>same<sp/>as<sp/>create_ua_byte_address<sp/>but<sp/>its<sp/>content<sp/>can<sp/>be<sp/>read<sp/>on<sp/>CPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731" refid="namespacedag_1_1buffers_1acba7678e2df1e58d2278bf5057dde97f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/><ref refid="namespacedag_1_1buffers_1acba7678e2df1e58d2278bf5057dde97f" kindref="member">create_ua_byte_address_readback</ref>(uint32_t<sp/>size_in_dwords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>Init<sp/>buffer_init<sp/>=<sp/>Init::No)</highlight></codeline>
<codeline lineno="732"><highlight class="normal">{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::buffers::create_ua_byte_address_readback(size_in_dwords,<sp/>name,<sp/>buffer_init);<sp/>});</highlight></codeline>
<codeline lineno="734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>same<sp/>as<sp/>create_ua_structured<sp/>but<sp/>its<sp/>content<sp/>can<sp/>be<sp/>read<sp/>on<sp/>CPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736" refid="namespacedag_1_1buffers_1abef38aafeaa7acdab2793cf638b40143" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/><ref refid="namespacedag_1_1buffers_1abef38aafeaa7acdab2793cf638b40143" kindref="member">create_ua_structured_readback</ref>(uint32_t<sp/>structure_size,<sp/>uint32_t<sp/>elements_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>Init<sp/>buffer_init<sp/>=<sp/>Init::No)</highlight></codeline>
<codeline lineno="738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>(</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::buffers::create_ua_structured_readback(structure_size,<sp/>elements_count,<sp/>name,<sp/>buffer_init);<sp/>});</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Indirect<sp/>buffer<sp/>filled<sp/>on<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744" refid="namespacedag_1_1buffers_1aa92616fea8b898c5746e1224e9928d56" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/><ref refid="namespacedag_1_1buffers_1aa92616fea8b898c5746e1224e9928d56" kindref="member">create_ua_indirect</ref>(Indirect<sp/>indirect_type,<sp/>uint32_t<sp/>records_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="745"><highlight class="normal">{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::buffers::create_ua_indirect(indirect_type,<sp/>records_count,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Indirect<sp/>buffer<sp/>filled<sp/>on<sp/>CPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749" refid="namespacedag_1_1buffers_1a59d131308280758d6ce31888142c2177" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/><ref refid="namespacedag_1_1buffers_1a59d131308280758d6ce31888142c2177" kindref="member">create_indirect</ref>(Indirect<sp/>indirect_type,<sp/>uint32_t<sp/>records_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::buffers::create_indirect(indirect_type,<sp/>records_count,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>buffer<sp/>for<sp/>data<sp/>transfer<sp/>on<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755" refid="namespacedag_1_1buffers_1ac7b66e3239abd53f1fe479148915942f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/><ref refid="namespacedag_1_1buffers_1ac7b66e3239abd53f1fe479148915942f" kindref="member">create_staging</ref>(uint32_t<sp/>size_in_bytes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::buffers::create_staging(size_in_bytes,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760" refid="namespacedag_1_1buffers_1aeadac0efa2ae92b2caada013e0545bdb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/><ref refid="namespacedag_1_1buffers_1aeadac0efa2ae92b2caada013e0545bdb" kindref="member">create_persistent_sr_tbuf</ref>(uint32_t<sp/>elements_count,<sp/>uint32_t<sp/>format,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>Init<sp/>buffer_init<sp/>=<sp/>Init::No)</highlight></codeline>
<codeline lineno="762"><highlight class="normal">{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::buffers::create_persistent_sr_tbuf(elements_count,<sp/>format,<sp/>name,<sp/>buffer_init);<sp/>});</highlight></codeline>
<codeline lineno="764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766" refid="namespacedag_1_1buffers_1a1f1eb8f6378d715b2e695f47dbf66337" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/><ref refid="namespacedag_1_1buffers_1a1f1eb8f6378d715b2e695f47dbf66337" kindref="member">create_persistent_sr_byte_address</ref>(uint32_t<sp/>size_in_dwords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>Init<sp/>buffer_init<sp/>=<sp/>Init::No)</highlight></codeline>
<codeline lineno="767"><highlight class="normal">{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::buffers::create_persistent_sr_byte_address(size_in_dwords,<sp/>name,<sp/>buffer_init);<sp/>});</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771" refid="namespacedag_1_1buffers_1ae897dfc12692c9bce912da20b86dfa61" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/><ref refid="namespacedag_1_1buffers_1ae897dfc12692c9bce912da20b86dfa61" kindref="member">create_persistent_sr_structured</ref>(uint32_t<sp/>structure_size,<sp/>uint32_t<sp/>elements_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>Init<sp/>buffer_init<sp/>=<sp/>Init::No)</highlight></codeline>
<codeline lineno="773"><highlight class="normal">{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>(</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::buffers::create_persistent_sr_structured(structure_size,<sp/>elements_count,<sp/>name,<sp/>buffer_init);<sp/>});</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778" refid="namespacedag_1_1buffers_1a36ad7b277ded319c3024aa97d44ee562" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/><ref refid="namespacedag_1_1buffers_1a36ad7b277ded319c3024aa97d44ee562" kindref="member">create_one_frame_sr_tbuf</ref>(uint32_t<sp/>elements_count,<sp/>uint32_t<sp/>format,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="779"><highlight class="normal">{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::buffers::create_one_frame_sr_tbuf(elements_count,<sp/>format,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783" refid="namespacedag_1_1buffers_1af00d09a844e7693403a49f64657d3f72" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/><ref refid="namespacedag_1_1buffers_1af00d09a844e7693403a49f64657d3f72" kindref="member">create_one_frame_sr_byte_address</ref>(uint32_t<sp/>size_in_dwords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="784"><highlight class="normal">{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::buffers::create_one_frame_sr_byte_address(size_in_dwords,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788" refid="namespacedag_1_1buffers_1a9e015fa00f9dc496cf51f1fb2cc54681" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/><ref refid="namespacedag_1_1buffers_1a9e015fa00f9dc496cf51f1fb2cc54681" kindref="member">create_one_frame_sr_structured</ref>(uint32_t<sp/>structure_size,<sp/>uint32_t<sp/>elements_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="789"><highlight class="normal">{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::buffers::create_one_frame_sr_structured(structure_size,<sp/>elements_count,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793" refid="namespacedag_1_1buffers_1aa398e723d23770b04294157bdfb8a4d6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/><ref refid="namespacedag_1_1buffers_1aa398e723d23770b04294157bdfb8a4d6" kindref="member">create_raytrace_scratch_buffer</ref>(uint32_t<sp/>size_in_bytes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="794"><highlight class="normal">{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>([=]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::buffers::create_raytrace_scratch_buffer(size_in_bytes,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1SharedRes" kindref="compound">SharedTex</ref><sp/>get_tex_gameres(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*resname)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__resPtr_8h_1ab28fd7dade0b33bc070404898de4be17" kindref="member">SharedTex</ref>(::get_tex_gameres(resname,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">SharedTexHolder</ref><sp/>get_tex_gameres(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*resname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*varname)</highlight></codeline>
<codeline lineno="802"><highlight class="normal">{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__resPtr_8h_1a8eb35782ace8ba87a5bd6f718a26dd1a" kindref="member">SharedTexHolder</ref>(dag::get_tex_gameres(resname),<sp/>varname);</highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1SharedRes" kindref="compound">SharedTex</ref><sp/>add_managed_array_texture(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>dag::ConstSpan&lt;const<sp/>char<sp/>*&gt;<sp/>tex_slice_nm)</highlight></codeline>
<codeline lineno="806"><highlight class="normal">{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__resPtr_8h_1ab28fd7dade0b33bc070404898de4be17" kindref="member">SharedTex</ref>(::add_managed_array_texture(name,<sp/>tex_slice_nm));</highlight></codeline>
<codeline lineno="808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">SharedTexHolder</ref><sp/>add_managed_array_texture(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>dag::ConstSpan&lt;const<sp/>char<sp/>*&gt;<sp/>tex_slice_nm,</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*varname)</highlight></codeline>
<codeline lineno="811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__resPtr_8h_1a8eb35782ace8ba87a5bd6f718a26dd1a" kindref="member">SharedTexHolder</ref>(dag::add_managed_array_texture(name,<sp/>tex_slice_nm),<sp/>varname);</highlight></codeline>
<codeline lineno="813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;BaseTexture&gt;</ref><sp/>place_texture_in_resource_heap(ResourceHeap<sp/>*heap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ResourceDescription<sp/>&amp;desc,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ResourceAllocationProperties<sp/>&amp;alloc_info,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="816"><highlight class="normal">{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;BaseTexture&gt;</ref>(</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>[heap,<sp/>desc,<sp/>offset,<sp/>alloc_info,<sp/>name]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::place_texture_in_resource_heap(heap,<sp/>desc,<sp/>offset,<sp/>alloc_info,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="819"><highlight class="normal">}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref><sp/>place_buffer_in_resource_heap(ResourceHeap<sp/>*heap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ResourceDescription<sp/>&amp;desc,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset,</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ResourceAllocationProperties<sp/>&amp;alloc_info,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;Sbuffer&gt;</ref>(</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>[heap,<sp/>desc,<sp/>offset,<sp/>alloc_info,<sp/>name]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3d::place_buffer_in_resource_heap(heap,<sp/>desc,<sp/>offset,<sp/>alloc_info,<sp/>name);<sp/>});</highlight></codeline>
<codeline lineno="826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">ExternalTex</ref><sp/>get_backbuffer()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__resPtr_8h_1aeb059912bdbd3b989796f4003002f667" kindref="member">ExternalTex</ref>(resptr_detail::ResPtrFactory(d3d::get_backbuffer_tex()));<sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1UniqueRes" kindref="compound">ExternalTex</ref><sp/>get_secondary_backbuffer()<sp/></highlight><highlight class="comment">//<sp/>Supposed<sp/>to<sp/>be<sp/>used<sp/>on<sp/>Xbox<sp/>only<sp/>(autoGameDvr=off<sp/>mode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal">{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__resPtr_8h_1aeb059912bdbd3b989796f4003002f667" kindref="member">ExternalTex</ref>(resptr_detail::ResPtrFactory(d3d::get_secondary_backbuffer_tex()));</highlight></codeline>
<codeline lineno="832"><highlight class="normal">}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;BaseTexture&gt;</ref><sp/>make_texture_raw(Drv3dMakeTextureParams<sp/>&amp;makeParams)</highlight></codeline>
<codeline lineno="835"><highlight class="normal">{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ResFactory" kindref="compound">ResFactory&lt;BaseTexture&gt;</ref>([=]<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dag__occlusionSystem_8h_1a37ee2859ee04a3f5c750a5b5e3684c1d" kindref="member">Texture</ref><sp/>*wrappedTexture;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>d3d::driver_command(Drv3dCommand::MAKE_TEXTURE,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;makeParams,<sp/>&amp;wrappedTexture);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wrappedTexture;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">SharedTexHolder</ref><sp/>set_texture(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>var_id,<sp/><ref refid="classresptr__detail_1_1SharedRes" kindref="compound">SharedTex</ref><sp/>tex)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__resPtr_8h_1a8eb35782ace8ba87a5bd6f718a26dd1a" kindref="member">SharedTexHolder</ref>(eastl::move(tex),<sp/>var_id);<sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">SharedBufHolder</ref><sp/>set_buffer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>var_id,<sp/><ref refid="classresptr__detail_1_1SharedRes" kindref="compound">SharedBuf</ref><sp/>buf)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__resPtr_8h_1ac689eb60b3c3bba692f665ac19ea719b" kindref="member">SharedBufHolder</ref>(eastl::move(buf),<sp/>var_id);<sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">SharedTexHolder</ref><sp/>set_texture(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>var_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">SharedTexHolder</ref><sp/>&amp;tex)</highlight></codeline>
<codeline lineno="848"><highlight class="normal">{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__resPtr_8h_1a8eb35782ace8ba87a5bd6f718a26dd1a" kindref="member">SharedTexHolder</ref>(<ref refid="dag__resPtr_8h_1ab28fd7dade0b33bc070404898de4be17" kindref="member">SharedTex</ref>(tex.getTexId()),<sp/>var_id);</highlight></codeline>
<codeline lineno="850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">SharedBufHolder</ref><sp/>set_buffer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>var_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classresptr__detail_1_1ConcreteResHolder" kindref="compound">SharedBufHolder</ref><sp/>&amp;buf)</highlight></codeline>
<codeline lineno="853"><highlight class="normal">{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__resPtr_8h_1ac689eb60b3c3bba692f665ac19ea719b" kindref="member">SharedBufHolder</ref>(<ref refid="dag__resPtr_8h_1a108c31bad537ef78159f53be8d3a5ab1" kindref="member">SharedBuf</ref>(buf.getBufId()),<sp/>var_id);</highlight></codeline>
<codeline lineno="855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859" refid="dag__resPtr_8h_1af9183d4e44beeb1267a3f14dbb5c680d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCOPED_SET_TEXTURE(a,<sp/>b)<sp/>auto<sp/>DAG_CONCAT(scopedSharedTexGuard,<sp/>__LINE__)<sp/>=<sp/>dag::set_texture(a,<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860" refid="dag__resPtr_8h_1a92423268894b5112e8c69af699f1616d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCOPED_SET_BUFFER(a,<sp/>b)<sp/><sp/>auto<sp/>DAG_CONCAT(scopedSharedBufGuard,<sp/>__LINE__)<sp/>=<sp/>dag::set_buffer(a,<sp/>b)</highlight></codeline>
    </programlisting>
    <location file="dag_resPtr.h"/>
  </compounddef>
</doxygen>
