<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="dag__bindposeBufferManager_8h" kind="file" language="C++">
    <compoundname>dag_bindposeBufferManager.h</compoundname>
    <includes refid="dag__linearMatrixBufferAllocator_8h" local="no">shaders/dag_linearMatrixBufferAllocator.h</includes>
    <includes local="no">memory/dag_linearHeapAllocator.h</includes>
    <includes local="no">generic/dag_DObject.h</includes>
    <includes local="no">generic/dag_ptrTab.h</includes>
    <includedby refid="dag__dynSceneRes_8h" local="no">dag_dynSceneRes.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>dag_bindposeBufferManager.h</label>
        <link refid="dag__bindposeBufferManager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>shaders/dag_linearMatrixBufferAllocator.h</label>
        <link refid="dag__linearMatrixBufferAllocator_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>shaders/dag_linearSbufferAllocator.h</label>
        <link refid="dag__linearSbufferAllocator_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>3d/dag_resPtr.h</label>
      </node>
      <node id="4">
        <label>EASTL/string.h</label>
      </node>
      <node id="6">
        <label>drv/3d/dag_info.h</label>
      </node>
      <node id="10">
        <label>generic/dag_DObject.h</label>
      </node>
      <node id="11">
        <label>generic/dag_ptrTab.h</label>
      </node>
      <node id="8">
        <label>generic/dag_tab.h</label>
      </node>
      <node id="7">
        <label>math/dag_TMatrix.h</label>
      </node>
      <node id="9">
        <label>memory/dag_linearHeapAllocator.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>dag_bindposeBufferManager.h</label>
        <link refid="dag__bindposeBufferManager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>dag_dynSceneRes.h</label>
        <link refid="dag__dynSceneRes_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classBindPoseElem" prot="public">BindPoseElem</innerclass>
    <innerclass refid="classBindPoseBufferManager" prot="public">BindPoseBufferManager</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dagor<sp/>Engine<sp/>6.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;shaders/dag_linearMatrixBufferAllocator.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory/dag_linearHeapAllocator.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;generic/dag_DObject.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;generic/dag_ptrTab.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classBindPoseBufferManager" kindref="compound">BindPoseBufferManager</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classBindPoseElem" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classBindPoseElem" kindref="compound">BindPoseElem</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DObject</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classBindPoseBufferManager" kindref="compound">BindPoseBufferManager</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Region<sp/>=<sp/>LinearHeapAllocatorMatrixBuffer::Region;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">RegionId<sp/>=<sp/>LinearHeapAllocatorMatrixBuffer::RegionId;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="classBindPoseElem" kindref="compound">BindPoseElem</ref>(<ref refid="classBindPoseBufferManager" kindref="compound">BindPoseBufferManager</ref><sp/>&amp;manager,<sp/>RegionId<sp/>region_id);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="classBindPoseElem" kindref="compound">BindPoseElem</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBindPoseElem" kindref="compound">BindPoseElem</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="classBindPoseElem" kindref="compound">~BindPoseElem</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getBufferOffset()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cachedRegionOffset;<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkBindPoseArr(dag::ConstSpan&lt;TMatrix&gt;<sp/>target_bind_pose_arr)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>RegionId<sp/>regionId;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cachedRegionOffset<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>updated<sp/>after<sp/>defrag<sp/>(not<sp/>used<sp/>now)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="classBindPoseBufferManager" kindref="compound">BindPoseBufferManager</ref><sp/>*manager;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classBindPoseBufferManager" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classBindPoseBufferManager" kindref="compound">BindPoseBufferManager</ref></highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Region<sp/>=<sp/>LinearHeapAllocatorMatrixBuffer::Region;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">RegionId<sp/>=<sp/>LinearHeapAllocatorMatrixBuffer::RegionId;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="classBindPoseBufferManager" kindref="compound">BindPoseBufferManager</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>Ptr&lt;BindPoseElem&gt;<sp/>createOrGetBindposeElem(dag::ConstSpan&lt;TMatrix&gt;<sp/>target_bind_pose_arr);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>closeElem(RegionId<sp/>region_id);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>Region<sp/>getRegion(RegionId<sp/>region_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkBindPoseArr(RegionId<sp/>region_id,<sp/>dag::ConstSpan&lt;TMatrix&gt;<sp/>target_bind_pose_arr)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>closeHeap()<sp/>{<sp/>bindposeAllocator.getHeap().buffer.close();<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resizeIncrement(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>min_size_increment);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="structLinearHeapAllocator" kindref="compound">LinearHeapAllocatorMatrixBuffer</ref><sp/>bindposeAllocator;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>PtrTab&lt;BindPoseElem&gt;<sp/>bindposeElemArr;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="dag_bindposeBufferManager.h"/>
  </compounddef>
</doxygen>
