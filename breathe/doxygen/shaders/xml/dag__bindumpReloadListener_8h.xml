<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="dag__bindumpReloadListener_8h" kind="file" language="C++">
    <compoundname>dag_bindumpReloadListener.h</compoundname>
    <includedby refid="dag__shaderBlock_8h" local="no">dag_shaderBlock.h</includedby>
    <includedby refid="dag__shaderVariableInfo_8h" local="no">dag_shaderVariableInfo.h</includedby>
    <invincdepgraph>
      <node id="6">
        <label>dag_DebugPrimitivesVbuffer.h</label>
        <link refid="dag__DebugPrimitivesVbuffer_8h_source"/>
      </node>
      <node id="7">
        <label>dag_DynamicShaderHelper.h</label>
        <link refid="dag__DynamicShaderHelper_8h_source"/>
      </node>
      <node id="8">
        <label>dag_DynamicShadersBuffer.h</label>
        <link refid="dag__DynamicShadersBuffer_8h_source"/>
      </node>
      <node id="1">
        <label>dag_bindumpReloadListener.h</label>
        <link refid="dag__bindumpReloadListener_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>dag_dynSceneRes.h</label>
        <link refid="dag__dynSceneRes_8h_source"/>
      </node>
      <node id="9">
        <label>dag_dynShaderBuf.h</label>
        <link refid="dag__dynShaderBuf_8h_source"/>
      </node>
      <node id="17">
        <label>dag_instShaderMeshRes.h</label>
        <link refid="dag__instShaderMeshRes_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>dag_linkedListOfShadervars.h</label>
        <link refid="dag__linkedListOfShadervars_8h_source"/>
      </node>
      <node id="15">
        <label>dag_rendInstRes.h</label>
        <link refid="dag__rendInstRes_8h_source"/>
      </node>
      <node id="11">
        <label>dag_renderScene.h</label>
        <link refid="dag__renderScene_8h_source"/>
      </node>
      <node id="12">
        <label>dag_shSkinMesh.h</label>
        <link refid="dag__shSkinMesh_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>dag_shaderBlock.h</label>
        <link refid="dag__shaderBlock_8h_source"/>
      </node>
      <node id="16">
        <label>dag_shaderMesh.h</label>
        <link refid="dag__shaderMesh_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>dag_shaderResUnitedData.h</label>
        <link refid="dag__shaderResUnitedData_8h_source"/>
      </node>
      <node id="4">
        <label>dag_shaderVar.h</label>
        <link refid="dag__shaderVar_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>dag_shaderVariableInfo.h</label>
        <link refid="dag__shaderVariableInfo_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>dag_shaders.h</label>
        <link refid="dag__shaders_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>dag_shadersRes.h</label>
        <link refid="dag__shadersRes_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classIShaderBindumpReloadListener" prot="public">IShaderBindumpReloadListener</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dagor<sp/>Engine<sp/>6.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="classIShaderBindumpReloadListener" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classIShaderBindumpReloadListener" kindref="compound">IShaderBindumpReloadListener</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><ref refid="classIShaderBindumpReloadListener" kindref="compound">IShaderBindumpReloadListener</ref><sp/>*next<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><ref refid="classIShaderBindumpReloadListener" kindref="compound">IShaderBindumpReloadListener</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>:<sp/>next(head),<sp/>tag(tag_)<sp/>{<sp/>head<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><ref refid="classIShaderBindumpReloadListener" kindref="compound">IShaderBindumpReloadListener</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIShaderBindumpReloadListener" kindref="compound">IShaderBindumpReloadListener</ref><sp/>&amp;other)<sp/>:<sp/>next(head),<sp/>tag(other.tag)<sp/>{<sp/>head<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><ref refid="classIShaderBindumpReloadListener" kindref="compound">IShaderBindumpReloadListener</ref><sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIShaderBindumpReloadListener" kindref="compound">IShaderBindumpReloadListener</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>tag<sp/>=<sp/>other.tag;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classIShaderBindumpReloadListener" kindref="compound">~IShaderBindumpReloadListener</ref>()</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>are<sp/>already<sp/>in<sp/>head,<sp/>which<sp/>is<sp/>likely<sp/>if<sp/>destructor<sp/>is<sp/>called<sp/>in<sp/>reversed<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deleteFromLinkedList();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*getTag()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tag;<sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setEnabled(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resolveAll();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Cb&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forEach(Cb<sp/>cb)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*i<sp/>=<sp/>head;<sp/>i;<sp/>i<sp/>=<sp/>i-&gt;next)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb(i);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resolve()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classIShaderBindumpReloadListener" kindref="compound">IShaderBindumpReloadListener</ref><sp/>*head;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deleteFromLinkedList();</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="dag_bindumpReloadListener.h"/>
  </compounddef>
</doxygen>
