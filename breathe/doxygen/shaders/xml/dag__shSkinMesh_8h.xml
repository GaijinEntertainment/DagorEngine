<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="dag__shSkinMesh_8h" kind="file" language="C++">
    <compoundname>dag_shSkinMesh.h</compoundname>
    <includes local="no">generic/dag_tab.h</includes>
    <includes local="no">generic/dag_DObject.h</includes>
    <includes refid="dag__shaders_8h" local="no">shaders/dag_shaders.h</includes>
    <includes refid="dag__shaderMesh_8h" local="no">shaders/dag_shaderMesh.h</includes>
    <includes local="no">math/dag_TMatrix.h</includes>
    <includedby refid="dag__shadersRes_8h" local="no">dag_shadersRes.h</includedby>
    <incdepgraph>
      <node id="14">
        <label>shaders/dag_bindumpReloadListener.h</label>
        <link refid="dag__bindumpReloadListener_8h_source"/>
      </node>
      <node id="1">
        <label>dag_shSkinMesh.h</label>
        <link refid="dag__shSkinMesh_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>shaders/dag_shaderCommon.h</label>
        <link refid="dag__shaderCommon_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>shaders/dag_shaderMesh.h</label>
        <link refid="dag__shaderMesh_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>shaders/dag_shaderVar.h</label>
        <link refid="dag__shaderVar_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>shaders/dag_shaderVarType.h</label>
        <link refid="dag__shaderVarType_8h_source"/>
      </node>
      <node id="13">
        <label>shaders/dag_shaderVariableInfo.h</label>
        <link refid="dag__shaderVariableInfo_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>shaders/dag_shaders.h</label>
        <link refid="dag__shaders_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>shaders/dag_stcode.h</label>
        <link refid="dag__stcode_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>3d/dag_texMgr.h</label>
      </node>
      <node id="5">
        <label>EASTL/fixed_function.h</label>
      </node>
      <node id="26">
        <label>EASTL/optional.h</label>
      </node>
      <node id="24">
        <label>EASTL/string.h</label>
      </node>
      <node id="25">
        <label>EASTL/string_view.h</label>
      </node>
      <node id="33">
        <label>drv/3d/dag_buffers.h</label>
      </node>
      <node id="8">
        <label>drv/3d/dag_consts.h</label>
      </node>
      <node id="23">
        <label>drv/3d/dag_d3dResource.h</label>
      </node>
      <node id="31">
        <label>drv/3d/dag_draw.h</label>
      </node>
      <node id="32">
        <label>drv/3d/dag_driver.h</label>
      </node>
      <node id="12">
        <label>drv/3d/dag_samplerHandle.h</label>
      </node>
      <node id="3">
        <label>generic/dag_DObject.h</label>
      </node>
      <node id="27">
        <label>generic/dag_fixedMoveOnlyFunction.h</label>
      </node>
      <node id="34">
        <label>generic/dag_patchTab.h</label>
      </node>
      <node id="35">
        <label>generic/dag_smallTab.h</label>
      </node>
      <node id="9">
        <label>generic/dag_span.h</label>
      </node>
      <node id="2">
        <label>generic/dag_tab.h</label>
      </node>
      <node id="19">
        <label>math/dag_Point2.h</label>
      </node>
      <node id="37">
        <label>math/dag_TMatrix.h</label>
      </node>
      <node id="16">
        <label>math/dag_check_nan.h</label>
      </node>
      <node id="20">
        <label>math/dag_dxmath_forward.h</label>
      </node>
      <node id="18">
        <label>math/integer/dag_IPoint4.h</label>
      </node>
      <node id="28">
        <label>memory/dag_mem.h</label>
      </node>
      <node id="15">
        <label>stdint.h</label>
      </node>
      <node id="29">
        <label>util/dag_globDef.h</label>
      </node>
      <node id="36">
        <label>util/dag_stdint.h</label>
      </node>
      <node id="21">
        <label>util/dag_string.h</label>
      </node>
      <node id="17">
        <label>vecmath/dag_vecMathDecl.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>dag_dynSceneRes.h</label>
        <link refid="dag__dynSceneRes_8h_source"/>
      </node>
      <node id="4">
        <label>dag_rendInstRes.h</label>
        <link refid="dag__rendInstRes_8h_source"/>
      </node>
      <node id="1">
        <label>dag_shSkinMesh.h</label>
        <link refid="dag__shSkinMesh_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>dag_shadersRes.h</label>
        <link refid="dag__shadersRes_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classShaderSkinnedMesh" prot="public">ShaderSkinnedMesh</innerclass>
    <innerclass refid="structShaderSkinnedMesh_1_1BoneForElem" prot="public">ShaderSkinnedMesh::BoneForElem</innerclass>
    <innerclass refid="structShaderSkinnedMesh_1_1WorkData" prot="private">ShaderSkinnedMesh::WorkData</innerclass>
    <innerclass refid="structShaderSkinnedMesh_1_1MaterialDesc" prot="private">ShaderSkinnedMesh::MaterialDesc</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dagor<sp/>Engine<sp/>6.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>shader<sp/>skinned<sp/>mesh<sp/>-<sp/>interface<sp/>classes</highlight></codeline>
<codeline lineno="9"><highlight class="comment">************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;generic/dag_tab.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;generic/dag_DObject.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;shaders/dag_shaders.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;shaders/dag_shaderMesh.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math/dag_TMatrix.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//*<sp/>forwards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classDynamicRenderableSceneInstance" kindref="compound">DynamicRenderableSceneInstance</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">IGenLoad;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*********************************</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>class<sp/>ShaderSkinnedMesh</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*********************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classShaderSkinnedMesh" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classShaderSkinnedMesh" kindref="compound">ShaderSkinnedMesh</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>DAG_DECLARE_NEW(midmem)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structShaderSkinnedMesh_1_1BoneForElem" refkind="compound"><highlight class="normal"><sp/><sp/>struct<sp/><ref refid="structShaderSkinnedMesh_1_1BoneForElem" kindref="compound">BoneForElem</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>TMatrix<sp/>origTm;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodeId;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="classShaderSkinnedMesh" kindref="compound">~ShaderSkinnedMesh</ref>()<sp/>{<sp/>clearData();<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>patch<sp/>mesh<sp/>data<sp/>after<sp/>loading<sp/>from<sp/>dump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>patchData(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*base,<sp/><ref refid="classShaderMatVdata" kindref="compound">ShaderMatVdata</ref><sp/>&amp;smvd);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rebase<sp/>and<sp/>clone<sp/>data<sp/>(useful<sp/>for<sp/>data<sp/>copies)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rebaseAndClone(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*new_base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*old_base);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>explicit<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearData();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>render<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>render();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>render_trans();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>render_distortion();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>bones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>recalcBones(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDynamicRenderableSceneInstance" kindref="compound">DynamicRenderableSceneInstance</ref><sp/>&amp;cb,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TMatrix<sp/>*render_space_tm<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>duplicateMaterial(TEXTUREID<sp/>tex_id,<sp/>Tab&lt;ShaderMaterial<sp/>*&gt;<sp/>&amp;old_mat,<sp/>Tab&lt;ShaderMaterial<sp/>*&gt;<sp/>&amp;new_mat);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>duplicateMat(<ref refid="classShaderMaterial" kindref="compound">ShaderMaterial</ref><sp/>*prev_m,<sp/>Tab&lt;ShaderMaterial<sp/>*&gt;<sp/>&amp;old_mat,<sp/>Tab&lt;ShaderMaterial<sp/>*&gt;<sp/>&amp;new_mat);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateShaderElems()<sp/>{<sp/>shaderMesh.updateShaderElems();<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>internal<sp/>shader<sp/>mesh<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classShaderMesh" kindref="compound">ShaderMesh</ref><sp/>&amp;getShaderMesh()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shaderMesh;<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classShaderMesh" kindref="compound">ShaderMesh</ref><sp/>&amp;getShaderMesh()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shaderMesh;<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getBonesForElem(<ref refid="classShaderElement" kindref="compound">ShaderElement</ref><sp/>*elem,<sp/>Tab&lt;BoneForElem&gt;<sp/>&amp;out_bones)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bonesCount()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boneOrgTm.size();<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasBone(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bone_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matchBetterBoneIdxAndItmForPoint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point3<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;bone_idx,<sp/>TMatrix<sp/>&amp;bone_itm,<sp/><ref refid="classDynamicRenderableSceneInstance" kindref="compound">DynamicRenderableSceneInstance</ref><sp/>&amp;cb)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getBoneForNode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_idx)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>uint32_t<sp/>getNodeForBone(uint32_t<sp/>bone_idx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="76"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>G_FAST_ASSERT(bone_idx<sp/>&lt;<sp/>bonesCount());</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boneNodeId[bone_idx];</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>dag::ConstSpan&lt;int16_t&gt;<sp/>getBoneNodeIds()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_span_const(boneNodeId.get(),<sp/>bonesCount());<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TMatrix<sp/>&amp;getBoneOrgTm(uint32_t<sp/>bone_idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boneOrgTm[bone_idx];<sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>dag::ConstSpan&lt;TMatrix&gt;<sp/>getBoneOrgTmArr()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_span_const(boneOrgTm.data(),<sp/>bonesCount());<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>allocateWorkData();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">WorkData</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>SmallTab&lt;TMatrix,<sp/>MidmemAlloc&gt;<sp/>tm;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>parallel<sp/>to<sp/>boneOrgTm[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>SmallTab&lt;dag::Span&lt;Color4&gt;,<sp/>MidmemAlloc&gt;<sp/>matTabVprArray;<sp/></highlight><highlight class="comment">//&lt;<sp/>parallel<sp/>to<sp/>matTab[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>SmallTab&lt;Color4,<sp/>MidmemAlloc&gt;<sp/>vprArrayStor;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MaterialDesc</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>PatchableTab&lt;uint8_t&gt;<sp/>boneIndices;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>PatchableTab&lt;TMatrix&gt;<sp/>boneOrgTm;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>PatchableTab&lt;MaterialDesc&gt;<sp/>matTab;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>PatchablePtr&lt;int16_t&gt;<sp/>boneNodeId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>parallel<sp/>to<sp/>boneOrgTm[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>PatchablePtr&lt;PatchablePtr&lt;ShaderMaterial&gt;&gt;<sp/>shMat;<sp/></highlight><highlight class="comment">//&lt;<sp/>parallel<sp/>to<sp/>matTab[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>PatchablePtr&lt;WorkData&gt;<sp/>workData;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="classShaderMesh" kindref="compound">ShaderMesh</ref><sp/>shaderMesh;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>ShaderSkinnedMesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="dag_shSkinMesh.h"/>
  </compounddef>
</doxygen>
