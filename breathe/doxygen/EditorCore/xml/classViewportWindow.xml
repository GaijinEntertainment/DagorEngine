<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="classViewportWindow" kind="class" language="C++" prot="public">
    <compoundname>ViewportWindow</compoundname>
    <basecompoundref refid="classIGenViewportWnd" prot="public" virt="non-virtual">IGenViewportWnd</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">PropPanel::IMenuEventHandler</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">PropPanel::IDelayedCallbackHandler</basecompoundref>
    <includes refid="ec__ViewportWindow_8h" local="no">ec_ViewportWindow.h</includes>
    <innerclass refid="structViewportWindow_1_1DelayedMouseEvent" prot="protected">ViewportWindow::DelayedMouseEvent</innerclass>
    <innerclass refid="structViewportWindow_1_1Input" prot="public">ViewportWindow::Input</innerclass>
      <sectiondef kind="user-defined">
      <header>Stat3D routine</header>
      <memberdef kind="variable" id="classViewportWindow_1a41275d25dd6c34f8c82fc70a2bb39164" prot="public" static="yes" mutable="no">
        <type>unsigned</type>
        <definition>unsigned ViewportWindow::restoreFlags</definition>
        <argsstring></argsstring>
        <name>restoreFlags</name>
        <qualifiedname>ViewportWindow::restoreFlags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="336" column="19" bodyfile="ec_ViewportWindow.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1ab93141e9cd7da908e7b9a270d6db1feb" prot="public" static="yes" mutable="no">
        <type>Tab&lt; <ref refid="structViewportParams" kindref="compound">ViewportParams</ref> &gt;</type>
        <definition>Tab&lt;ViewportParams&gt; ViewportWindow::viewportsParams</definition>
        <argsstring></argsstring>
        <name>viewportsParams</name>
        <qualifiedname>ViewportWindow::viewportsParams</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="337" column="14" bodyfile="ec_ViewportWindow.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1ac00d063233f11dd6b420b8b7b4c68eaa" prot="protected" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t ViewportWindow::prevMousePositionX</definition>
        <argsstring></argsstring>
        <name>prevMousePositionX</name>
        <qualifiedname>ViewportWindow::prevMousePositionX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="372" column="11" bodyfile="ec_ViewportWindow.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a356fc4571583e98b39a3d14187f8e6c6" prot="protected" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t ViewportWindow::prevMousePositionY</definition>
        <argsstring></argsstring>
        <name>prevMousePositionY</name>
        <qualifiedname>ViewportWindow::prevMousePositionY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="373" column="11" bodyfile="ec_ViewportWindow.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1aba82764692a1c5a38eb1e96bee2591a1" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::isMoveRotateAllowed</definition>
        <argsstring></argsstring>
        <name>isMoveRotateAllowed</name>
        <qualifiedname>ViewportWindow::isMoveRotateAllowed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="374" column="8" bodyfile="ec_ViewportWindow.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a75cf6a64c0db65ab9b3d7561f0b893e4" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::isXLocked</definition>
        <argsstring></argsstring>
        <name>isXLocked</name>
        <qualifiedname>ViewportWindow::isXLocked</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="375" column="8" bodyfile="ec_ViewportWindow.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1af1c4c3a169ab2fdf0e1b6500e6b4a24c" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::isYLocked</definition>
        <argsstring></argsstring>
        <name>isYLocked</name>
        <qualifiedname>ViewportWindow::isYLocked</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="376" column="8" bodyfile="ec_ViewportWindow.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a35212493ebe1d496c3fdfcd102fb89a5" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::orthogonalProjection</definition>
        <argsstring></argsstring>
        <name>orthogonalProjection</name>
        <qualifiedname>ViewportWindow::orthogonalProjection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="377" column="8" bodyfile="ec_ViewportWindow.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1ad0bafc2e612ca8cbe233963332ccd8ed" prot="protected" static="no" mutable="no">
        <type>real</type>
        <definition>real ViewportWindow::projectionFov</definition>
        <argsstring></argsstring>
        <name>projectionFov</name>
        <qualifiedname>ViewportWindow::projectionFov</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="378" column="8" bodyfile="ec_ViewportWindow.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1aa87b6105c50d16d2d7d4b4346685bf72" prot="protected" static="no" mutable="no">
        <type>real</type>
        <definition>real ViewportWindow::projectionFarPlane</definition>
        <argsstring></argsstring>
        <name>projectionFarPlane</name>
        <qualifiedname>ViewportWindow::projectionFarPlane</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="379" column="8" bodyfile="ec_ViewportWindow.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a4fc3eda805af116e7911bb7cddb06c62" prot="protected" static="no" mutable="no">
        <type>real</type>
        <definition>real ViewportWindow::projectionNearPlane</definition>
        <argsstring></argsstring>
        <name>projectionNearPlane</name>
        <qualifiedname>ViewportWindow::projectionNearPlane</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="380" column="8" bodyfile="ec_ViewportWindow.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1af276711a88247207f6d4e839093b3321" prot="protected" static="no" mutable="no">
        <type>real</type>
        <definition>real ViewportWindow::orthogonalZoom</definition>
        <argsstring></argsstring>
        <name>orthogonalZoom</name>
        <qualifiedname>ViewportWindow::orthogonalZoom</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="381" column="8" bodyfile="ec_ViewportWindow.h" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a2de25e88c93e7ff1d9115d614dc8a88f" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int ViewportWindow::currentProjection</definition>
        <argsstring></argsstring>
        <name>currentProjection</name>
        <qualifiedname>ViewportWindow::currentProjection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="382" column="16" bodyfile="ec_ViewportWindow.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1af03215bc127b366635acc416102330dd" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::updatePluginCamera</definition>
        <argsstring></argsstring>
        <name>updatePluginCamera</name>
        <qualifiedname>ViewportWindow::updatePluginCamera</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="383" column="8" bodyfile="ec_ViewportWindow.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a5e8cfc6d6ab7bd40202aba18df9c26a9" prot="protected" static="no" mutable="no">
        <type><ref refid="classICustomCameras" kindref="compound">ICustomCameras</ref> *</type>
        <definition>ICustomCameras* ViewportWindow::customCameras</definition>
        <argsstring></argsstring>
        <name>customCameras</name>
        <qualifiedname>ViewportWindow::customCameras</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="384" column="18" bodyfile="ec_ViewportWindow.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1af782a5592084f47a34881d50d4450e1a" prot="protected" static="no" mutable="no">
        <type>PropPanel::IMenu *</type>
        <definition>PropPanel::IMenu* ViewportWindow::popupMenu</definition>
        <argsstring></argsstring>
        <name>popupMenu</name>
        <qualifiedname>ViewportWindow::popupMenu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="385" column="20" bodyfile="ec_ViewportWindow.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1abff06190cc43adde2ebc56388e1d9a8e" prot="protected" static="no" mutable="no">
        <type>PropPanel::IMenu *</type>
        <definition>PropPanel::IMenu* ViewportWindow::selectionMenu</definition>
        <argsstring></argsstring>
        <name>selectionMenu</name>
        <qualifiedname>ViewportWindow::selectionMenu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="386" column="20" bodyfile="ec_ViewportWindow.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1ab23eb2e870fb1ae0626378484d50ff32" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::wireframeOverlay</definition>
        <argsstring></argsstring>
        <name>wireframeOverlay</name>
        <qualifiedname>ViewportWindow::wireframeOverlay</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="387" column="8" bodyfile="ec_ViewportWindow.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1aa2e36ae1fe8194702f8c85bd29520909" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::showViewportAxis</definition>
        <argsstring></argsstring>
        <name>showViewportAxis</name>
        <qualifiedname>ViewportWindow::showViewportAxis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="388" column="8" bodyfile="ec_ViewportWindow.h" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1ada06aa3354471e956f069ea01595acce" prot="protected" static="no" mutable="no">
        <type><ref refid="ec__viewportAxisId_8h_1a4acff20fd3f2d85d62c924ce892d82e3" kindref="member">ViewportAxisId</ref></type>
        <definition>ViewportAxisId ViewportWindow::highlightedViewportAxisId</definition>
        <argsstring></argsstring>
        <name>highlightedViewportAxisId</name>
        <qualifiedname>ViewportWindow::highlightedViewportAxisId</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="389" column="18" bodyfile="ec_ViewportWindow.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a76b91768eb633f77ccc6bcfafce16db9" prot="protected" static="no" mutable="no">
        <type><ref refid="ec__viewportAxisId_8h_1a4acff20fd3f2d85d62c924ce892d82e3" kindref="member">ViewportAxisId</ref></type>
        <definition>ViewportAxisId ViewportWindow::mouseDownOnViewportAxis</definition>
        <argsstring></argsstring>
        <name>mouseDownOnViewportAxis</name>
        <qualifiedname>ViewportWindow::mouseDownOnViewportAxis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="390" column="18" bodyfile="ec_ViewportWindow.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a77c3dd2108cb53638a0ef20ff0ee6148" prot="protected" static="no" mutable="no">
        <type>TMatrix</type>
        <definition>TMatrix ViewportWindow::cameraTransitionLastViewMatrix</definition>
        <argsstring></argsstring>
        <name>cameraTransitionLastViewMatrix</name>
        <qualifiedname>ViewportWindow::cameraTransitionLastViewMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="391" column="11" bodyfile="ec_ViewportWindow.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a1605f628eb8b0639894664ed5b8ea4bc" prot="protected" static="no" mutable="no">
        <type>Quat</type>
        <definition>Quat ViewportWindow::cameraTransitionStartQuaternion</definition>
        <argsstring></argsstring>
        <name>cameraTransitionStartQuaternion</name>
        <qualifiedname>ViewportWindow::cameraTransitionStartQuaternion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="392" column="8" bodyfile="ec_ViewportWindow.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a8e58ab5503c8c93446f1dbfe03e3021c" prot="protected" static="no" mutable="no">
        <type>Quat</type>
        <definition>Quat ViewportWindow::cameraTransitionEndQuaternion</definition>
        <argsstring></argsstring>
        <name>cameraTransitionEndQuaternion</name>
        <qualifiedname>ViewportWindow::cameraTransitionEndQuaternion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="393" column="8" bodyfile="ec_ViewportWindow.h" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1ae2b79f2d0cf1ab086af77c630a740eb7" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float ViewportWindow::cameraTransitionElapsedTime</definition>
        <argsstring></argsstring>
        <name>cameraTransitionElapsedTime</name>
        <qualifiedname>ViewportWindow::cameraTransitionElapsedTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="394" column="9" bodyfile="ec_ViewportWindow.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1aa8de085344fe14ed8b8a349d45fdb045" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::cameraTransitioning</definition>
        <argsstring></argsstring>
        <name>cameraTransitioning</name>
        <qualifiedname>ViewportWindow::cameraTransitioning</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="395" column="8" bodyfile="ec_ViewportWindow.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1aab60da533e39b279dc8ef5295947c6fc" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::allowPopupMenu</definition>
        <argsstring></argsstring>
        <name>allowPopupMenu</name>
        <qualifiedname>ViewportWindow::allowPopupMenu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="397" column="8" bodyfile="ec_ViewportWindow.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a1b23d8a12874e6ce467e55aeb1167ee7" prot="protected" static="no" mutable="no">
        <type>struct <ref refid="classViewportWindow" kindref="compound">ViewportWindow</ref></type>
        <definition>struct ViewportWindow ViewportWindow::rectSelect</definition>
        <argsstring></argsstring>
        <name>rectSelect</name>
        <qualifiedname>ViewportWindow::rectSelect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="404" column="14"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a3eb400ebf058e611b80b465133265d1e" prot="protected" static="no" mutable="no">
        <type><ref refid="classIGenEventHandler" kindref="compound">IGenEventHandler</ref> *</type>
        <definition>IGenEventHandler* ViewportWindow::curEH</definition>
        <argsstring></argsstring>
        <name>curEH</name>
        <qualifiedname>ViewportWindow::curEH</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="406" column="20" bodyfile="ec_ViewportWindow.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a6e05fa6f59de559c5ad1262aef44f3c0" prot="protected" static="no" mutable="no">
        <type>IMenuEventHandler *</type>
        <definition>IMenuEventHandler* ViewportWindow::curMEH</definition>
        <argsstring></argsstring>
        <name>curMEH</name>
        <qualifiedname>ViewportWindow::curMEH</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="407" column="21" bodyfile="ec_ViewportWindow.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1ad9112801ebe1cacfdee5cbe3f077520b" prot="protected" static="no" mutable="no">
        <type>RenderViewport *</type>
        <definition>RenderViewport* ViewportWindow::viewport</definition>
        <argsstring></argsstring>
        <name>viewport</name>
        <qualifiedname>ViewportWindow::viewport</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="408" column="18" bodyfile="ec_ViewportWindow.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a86286145fa74bc1c5ceab8e736cb6774" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int ViewportWindow::vpId</definition>
        <argsstring></argsstring>
        <name>vpId</name>
        <qualifiedname>ViewportWindow::vpId</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="409" column="7" bodyfile="ec_ViewportWindow.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1ae26cdd85bbce74f5bf86e1d2a4ac3d4a" prot="protected" static="no" mutable="no">
        <type>SimpleString</type>
        <definition>SimpleString ViewportWindow::viewText</definition>
        <argsstring></argsstring>
        <name>viewText</name>
        <qualifiedname>ViewportWindow::viewText</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="410" column="16" bodyfile="ec_ViewportWindow.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a7c3de94db44fe58926d8176ca23ca61c" prot="protected" static="no" mutable="no">
        <type>hdpi::Px</type>
        <definition>hdpi::Px ViewportWindow::nextStat3dLineY</definition>
        <argsstring></argsstring>
        <name>nextStat3dLineY</name>
        <qualifiedname>ViewportWindow::nextStat3dLineY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="411" column="12" bodyfile="ec_ViewportWindow.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a12c86e264f31fcbb57f88711daf365e2" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::showStats</definition>
        <argsstring></argsstring>
        <name>showStats</name>
        <qualifiedname>ViewportWindow::showStats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="412" column="8" bodyfile="ec_ViewportWindow.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1aa909c817a25f4c658a6b48672a8a54e0" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::calcStat3d</definition>
        <argsstring></argsstring>
        <name>calcStat3d</name>
        <qualifiedname>ViewportWindow::calcStat3d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="413" column="8" bodyfile="ec_ViewportWindow.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a9b5067efe2accb7100cd505f8148e93a" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::opaqueStat3d</definition>
        <argsstring></argsstring>
        <name>opaqueStat3d</name>
        <qualifiedname>ViewportWindow::opaqueStat3d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="413" column="19" bodyfile="ec_ViewportWindow.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a9c21c4f0ce7c1589e882fa9c50a480f7" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::showCameraStats</definition>
        <argsstring></argsstring>
        <name>showCameraStats</name>
        <qualifiedname>ViewportWindow::showCameraStats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="414" column="8" bodyfile="ec_ViewportWindow.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a4a10456c926a085bc2023c109bfae82f" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::showCameraPos</definition>
        <argsstring></argsstring>
        <name>showCameraPos</name>
        <qualifiedname>ViewportWindow::showCameraPos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="415" column="8" bodyfile="ec_ViewportWindow.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1aee46e5a209848e71ba604501907aa607" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::showCameraDist</definition>
        <argsstring></argsstring>
        <name>showCameraDist</name>
        <qualifiedname>ViewportWindow::showCameraDist</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="416" column="8" bodyfile="ec_ViewportWindow.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a0d560b3611bd091a3e54d91eb5815784" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::showCameraFov</definition>
        <argsstring></argsstring>
        <name>showCameraFov</name>
        <qualifiedname>ViewportWindow::showCameraFov</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="417" column="8" bodyfile="ec_ViewportWindow.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a127072eb8575ba118ed47066c34950d2" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::showCameraSpeed</definition>
        <argsstring></argsstring>
        <name>showCameraSpeed</name>
        <qualifiedname>ViewportWindow::showCameraSpeed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="418" column="8" bodyfile="ec_ViewportWindow.h" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1afc7970b8491df6e91711a468ac87b9f0" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::showCameraTurboSpeed</definition>
        <argsstring></argsstring>
        <name>showCameraTurboSpeed</name>
        <qualifiedname>ViewportWindow::showCameraTurboSpeed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="419" column="8" bodyfile="ec_ViewportWindow.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1aa53d573aabfd8552c24f440a374ccb88" prot="protected" static="no" mutable="no">
        <type><ref refid="classViewportWindowStatSettingsDialog" kindref="compound">ViewportWindowStatSettingsDialog</ref> *</type>
        <definition>ViewportWindowStatSettingsDialog* ViewportWindow::statSettingsDialog</definition>
        <argsstring></argsstring>
        <name>statSettingsDialog</name>
        <qualifiedname>ViewportWindow::statSettingsDialog</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="420" column="36" bodyfile="ec_ViewportWindow.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a13935ff5b6397158b96ccb17c0ed6aeb" prot="protected" static="no" mutable="no">
        <type>IPoint2</type>
        <definition>IPoint2 ViewportWindow::restoreCursorAt</definition>
        <argsstring></argsstring>
        <name>restoreCursorAt</name>
        <qualifiedname>ViewportWindow::restoreCursorAt</qualifiedname>
        <initializer>= IPoint2(0, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="423" column="11" bodyfile="ec_ViewportWindow.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a6206db0530d068250dc80805f507561e" prot="protected" static="no" mutable="no">
        <type><ref refid="structViewportWindow_1_1Input" kindref="compound">Input</ref></type>
        <definition>Input ViewportWindow::input</definition>
        <argsstring></argsstring>
        <name>input</name>
        <qualifiedname>ViewportWindow::input</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="425" column="9" bodyfile="ec_ViewportWindow.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a702e8ebcaf7fcfc7b8bb2c81668233d6" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::mIsCursorVisible</definition>
        <argsstring></argsstring>
        <name>mIsCursorVisible</name>
        <qualifiedname>ViewportWindow::mIsCursorVisible</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="491" column="8" bodyfile="ec_ViewportWindow.h" bodystart="491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a51d8eb337adafc0914b3c496e04450ec" prot="protected" static="no" mutable="no">
        <type>TextureIDHolder</type>
        <definition>TextureIDHolder ViewportWindow::viewportTexture</definition>
        <argsstring></argsstring>
        <name>viewportTexture</name>
        <qualifiedname>ViewportWindow::viewportTexture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="494" column="19" bodyfile="ec_ViewportWindow.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a1bcf6c3540fa34bf5be72a089141c76d" prot="protected" static="no" mutable="no">
        <type>IPoint2</type>
        <definition>IPoint2 ViewportWindow::viewportTextureSize</definition>
        <argsstring></argsstring>
        <name>viewportTextureSize</name>
        <qualifiedname>ViewportWindow::viewportTextureSize</qualifiedname>
        <initializer>= IPoint2(0, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="495" column="11" bodyfile="ec_ViewportWindow.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1abe669fdf1f72161e26f0a1d82549ef28" prot="protected" static="no" mutable="no">
        <type>IPoint2</type>
        <definition>IPoint2 ViewportWindow::requestedViewportTextureSize</definition>
        <argsstring></argsstring>
        <name>requestedViewportTextureSize</name>
        <qualifiedname>ViewportWindow::requestedViewportTextureSize</qualifiedname>
        <initializer>= IPoint2(0, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="496" column="11" bodyfile="ec_ViewportWindow.h" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a0ec9f8168b433020b43f7a96d21a8a8d" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::mouseButtonDown[mouseButtonDownArraySize]</definition>
        <argsstring>[mouseButtonDownArraySize]</argsstring>
        <name>mouseButtonDown</name>
        <qualifiedname>ViewportWindow::mouseButtonDown</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="499" column="8" bodyfile="ec_ViewportWindow.h" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1aee87b2b21eeb47448cdd1e528486e81a" prot="protected" static="no" mutable="no">
        <type>IPoint2</type>
        <definition>IPoint2 ViewportWindow::lastMousePosition</definition>
        <argsstring></argsstring>
        <name>lastMousePosition</name>
        <qualifiedname>ViewportWindow::lastMousePosition</qualifiedname>
        <initializer>= IPoint2(0, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="501" column="11" bodyfile="ec_ViewportWindow.h" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1ac71662f91ae582dc9317dbfc8acb3643" prot="protected" static="no" mutable="no">
        <type>dag::Vector&lt; <ref refid="structViewportWindow_1_1DelayedMouseEvent" kindref="compound">DelayedMouseEvent</ref> * &gt;</type>
        <definition>dag::Vector&lt;DelayedMouseEvent *&gt; ViewportWindow::delayedMouseEvents</definition>
        <argsstring></argsstring>
        <name>delayedMouseEvents</name>
        <qualifiedname>ViewportWindow::delayedMouseEvents</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="506" column="15" bodyfile="ec_ViewportWindow.h" bodystart="506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1acdc5787a7657b5df6b094415929b522a" prot="protected" static="no" mutable="no">
        <type>eastl::optional&lt; Point3 &gt;</type>
        <definition>eastl::optional&lt;Point3&gt; ViewportWindow::lastValidCamPanAnchorPoint</definition>
        <argsstring></argsstring>
        <name>lastValidCamPanAnchorPoint</name>
        <qualifiedname>ViewportWindow::lastValidCamPanAnchorPoint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="508" column="19" bodyfile="ec_ViewportWindow.h" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a3e7c984f45dc9a45afdbdc041daf6a43" prot="protected" static="no" mutable="no">
        <type>eastl::optional&lt; Point3 &gt;</type>
        <definition>eastl::optional&lt;Point3&gt; ViewportWindow::cameraPanAnchorPoint</definition>
        <argsstring></argsstring>
        <name>cameraPanAnchorPoint</name>
        <qualifiedname>ViewportWindow::cameraPanAnchorPoint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="509" column="19" bodyfile="ec_ViewportWindow.h" bodystart="509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a8886c49cfe64e25e49a7d0dab4dae16e" prot="protected" static="no" mutable="no">
        <type>eastl::optional&lt; Point2 &gt;</type>
        <definition>eastl::optional&lt;Point2&gt; ViewportWindow::screenshotSize</definition>
        <argsstring></argsstring>
        <name>screenshotSize</name>
        <qualifiedname>ViewportWindow::screenshotSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="511" column="19" bodyfile="ec_ViewportWindow.h" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a09d7d9cd521a40fbe55c19773a8f007c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::active</definition>
        <argsstring></argsstring>
        <name>active</name>
        <qualifiedname>ViewportWindow::active</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="401" column="10" bodyfile="ec_ViewportWindow.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a9eb2cc58ec4735bbd9c2ed0e501a54b6" prot="protected" static="yes" mutable="no">
        <type><ref refid="classGizmoSettingsDialog" kindref="compound">GizmoSettingsDialog</ref> *</type>
        <definition>GizmoSettingsDialog* ViewportWindow::gizmoSettingsDialog</definition>
        <argsstring></argsstring>
        <name>gizmoSettingsDialog</name>
        <qualifiedname>ViewportWindow::gizmoSettingsDialog</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="421" column="30" bodyfile="ec_ViewportWindow.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a82935935de874d22fddce8ef96c0340c" prot="protected" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int ViewportWindow::mouseButtonDownArraySize</definition>
        <argsstring></argsstring>
        <name>mouseButtonDownArraySize</name>
        <qualifiedname>ViewportWindow::mouseButtonDownArraySize</qualifiedname>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="498" column="20" bodyfile="ec_ViewportWindow.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1ad5753c5d2ead2178269e2151c3f82c82" prot="protected" static="yes" mutable="no">
        <type><ref refid="classGridEditDialog" kindref="compound">GridEditDialog</ref> *</type>
        <definition>GridEditDialog* ViewportWindow::gridSettingsDialog</definition>
        <argsstring></argsstring>
        <name>gridSettingsDialog</name>
        <qualifiedname>ViewportWindow::gridSettingsDialog</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="504" column="25" bodyfile="ec_ViewportWindow.h" bodystart="504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1add55ab8de5edac11ba742e4438bcadc7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ViewportWindow::needStat3d</definition>
        <argsstring>() const</argsstring>
        <name>needStat3d</name>
        <qualifiedname>ViewportWindow::needStat3d</qualifiedname>
        <briefdescription>
<para>Returns true if viewport have to show its 3D statistics. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="306" column="8" bodyfile="ec_ViewportWindow.h" bodystart="306" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a13146a2b8dd9cb735cca7e05930f7ec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::drawStat3d</definition>
        <argsstring>()</argsstring>
        <name>drawStat3d</name>
        <qualifiedname>ViewportWindow::drawStat3d</qualifiedname>
        <briefdescription>
<para>Draws statistics in viewport window. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="308" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a74c9dabf13246c5ba57e1e9e5d0400c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::drawText</definition>
        <argsstring>(int x, int y, const String &amp;text) override</argsstring>
        <name>drawText</name>
        <qualifiedname>ViewportWindow::drawText</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a4783747045aaf3812f49db97dabc2edd">drawText</reimplements>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Draw statistics/debug texts in the viewport area. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="312" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a84010136ddc0b3d1621b9ff9d2a465fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ViewportWindow::wireframeOverlayEnabled</definition>
        <argsstring>() const</argsstring>
        <name>wireframeOverlayEnabled</name>
        <qualifiedname>ViewportWindow::wireframeOverlayEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="314" column="8" bodyfile="ec_ViewportWindow.h" bodystart="314" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1ae80dab76b9a3425481d6cc5b396ac3ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::setMenuEventHandler</definition>
        <argsstring>(PropPanel::IMenuEventHandler *meh) override</argsstring>
        <name>setMenuEventHandler</name>
        <qualifiedname>ViewportWindow::setMenuEventHandler</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a852a67c2a0546dbd9e84fc24c66392b6">setMenuEventHandler</reimplements>
        <param>
          <type>PropPanel::IMenuEventHandler *</type>
          <declname>meh</declname>
        </param>
        <briefdescription>
<para>Set secondary menu event handler of viewport. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="317" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1aa59014c84760fb38ac60a36bfdbd3345" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>PropPanel::IMenu *</type>
        <definition>PropPanel::IMenu * ViewportWindow::getContextMenu</definition>
        <argsstring>() override</argsstring>
        <name>getContextMenu</name>
        <qualifiedname>ViewportWindow::getContextMenu</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1ae240f2b9ea244ed57508698e8c3f331c">getContextMenu</reimplements>
        <briefdescription>
<para>Retrieves the custom context menu of the viewport if it&apos;s active/open. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="320" column="20" bodyfile="ec_ViewportWindow.h" bodystart="320" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a809561ab1c756cf379fe3d46778de011" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ViewportWindow::paint</definition>
        <argsstring>(int w, int h)</argsstring>
        <name>paint</name>
        <qualifiedname>ViewportWindow::paint</qualifiedname>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Render viewport gui. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="323" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a8a48698ad21bcc6daa4fb585dc9854fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool ViewportWindow::onDropFiles</definition>
        <argsstring>(const dag::Vector&lt; String &gt; &amp;files)</argsstring>
        <name>onDropFiles</name>
        <qualifiedname>ViewportWindow::onDropFiles</qualifiedname>
        <param>
          <type>const dag::Vector&lt; String &gt; &amp;</type>
          <declname>files</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="327" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1aa7a30bf83197ea06e8b855541c993c9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::showGridSettingsDialog</definition>
        <argsstring>()</argsstring>
        <name>showGridSettingsDialog</name>
        <qualifiedname>ViewportWindow::showGridSettingsDialog</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="329" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a1da22aa1156d92d160b14992e81b2a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::showStatSettingsDialog</definition>
        <argsstring>()</argsstring>
        <name>showStatSettingsDialog</name>
        <qualifiedname>ViewportWindow::showStatSettingsDialog</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="330" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a2bf17b98504b0023813d414fd0e9f1d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::showGizmoSettingsDialog</definition>
        <argsstring>()</argsstring>
        <name>showGizmoSettingsDialog</name>
        <qualifiedname>ViewportWindow::showGizmoSettingsDialog</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="331" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a36cf11bc8f9c92b86befdbbb52298623" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ViewportWindow::handleStatSettingsDialogChange</definition>
        <argsstring>(int pcb_id, bool value)</argsstring>
        <name>handleStatSettingsDialogChange</name>
        <qualifiedname>ViewportWindow::handleStatSettingsDialogChange</qualifiedname>
        <param>
          <type>int</type>
          <declname>pcb_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para><ref refid="classViewportWindowStatSettingsDialog" kindref="compound">ViewportWindowStatSettingsDialog</ref> uses this to forward its onChange notification. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="334" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a4e557d802c46778dd85de89afcfd4463" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TMatrix</type>
        <definition>TMatrix ViewportWindow::getViewTm</definition>
        <argsstring>() const</argsstring>
        <name>getViewTm</name>
        <qualifiedname>ViewportWindow::getViewTm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="339" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a832a57892625051be5b46912d7d16bf1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TMatrix4</type>
        <definition>TMatrix4 ViewportWindow::getProjTm</definition>
        <argsstring>() const</argsstring>
        <name>getProjTm</name>
        <qualifiedname>ViewportWindow::getProjTm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="340" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a4ba65bdb29232eba9c062744397fef9c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structViewportWindow_1_1Input" kindref="compound">Input</ref> &amp;</type>
        <definition>const Input &amp; ViewportWindow::getInput</definition>
        <argsstring>() const</argsstring>
        <name>getInput</name>
        <qualifiedname>ViewportWindow::getInput</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="350" column="15" bodyfile="ec_ViewportWindow.h" bodystart="350" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a51912ca18288853b103e5e1b41471c56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::registerViewportAccelerators</definition>
        <argsstring>(IWndManager &amp;wnd_manager)</argsstring>
        <name>registerViewportAccelerators</name>
        <qualifiedname>ViewportWindow::registerViewportAccelerators</qualifiedname>
        <param>
          <type><ref refid="classIWndManager" kindref="compound">IWndManager</ref> &amp;</type>
          <declname>wnd_manager</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="352" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a67f59fb2c4e989f2abc26393b8714639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ViewportWindow::handleViewportAcceleratorCommand</definition>
        <argsstring>(unsigned id)</argsstring>
        <name>handleViewportAcceleratorCommand</name>
        <qualifiedname>ViewportWindow::handleViewportAcceleratorCommand</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="355" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a466ba6aa3588d529a5f96c0a49110d28" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ViewportWindow::isViewportTextureReady</definition>
        <argsstring>() const</argsstring>
        <name>isViewportTextureReady</name>
        <qualifiedname>ViewportWindow::isViewportTextureReady</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="357" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a09b3e736829a5099501498f531d47b68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::copyTextureToViewportTexture</definition>
        <argsstring>(BaseTexture &amp;source_texture, int source_width, int source_height)</argsstring>
        <name>copyTextureToViewportTexture</name>
        <qualifiedname>ViewportWindow::copyTextureToViewportTexture</qualifiedname>
        <param>
          <type>BaseTexture &amp;</type>
          <declname>source_texture</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source_height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="358" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1ac3a9bbdb96db83fc0dab943298a0c8be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::updateImgui</definition>
        <argsstring>(ImGuiID canvas_id, const Point2 &amp;size, float item_spacing, bool vr_mode=false)</argsstring>
        <name>updateImgui</name>
        <qualifiedname>ViewportWindow::updateImgui</qualifiedname>
        <param>
          <type><ref refid="ec__ViewportWindow_8h_1a1785c9b6f4e16406764a85f32582236f" kindref="member">ImGuiID</ref></type>
          <declname>canvas_id</declname>
        </param>
        <param>
          <type>const Point2 &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float</type>
          <declname>item_spacing</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>vr_mode</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="360" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1ad43697a6b78915340b37a87d3e57b744" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::setScreenshotMode</definition>
        <argsstring>(Point2 size) override</argsstring>
        <name>setScreenshotMode</name>
        <qualifiedname>ViewportWindow::setScreenshotMode</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a7eb13a71cd75c8026705c76b7abf5387">setScreenshotMode</reimplements>
        <param>
          <type>Point2</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="362" column="8" bodyfile="ec_ViewportWindow.h" bodystart="362" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a5db9d222466073805c7c6a284aebb608" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::resetScreenshotMode</definition>
        <argsstring>() override</argsstring>
        <name>resetScreenshotMode</name>
        <qualifiedname>ViewportWindow::resetScreenshotMode</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1ae8ae07803a6c481511bfdb451651a7ab">resetScreenshotMode</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="363" column="8" bodyfile="ec_ViewportWindow.h" bodystart="363" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a2516cd0c4b224d0dad65538ac80de67f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ViewportWindow::fillStatSettingsDialog</definition>
        <argsstring>(ViewportWindowStatSettingsDialog &amp;dialog)</argsstring>
        <name>fillStatSettingsDialog</name>
        <qualifiedname>ViewportWindow::fillStatSettingsDialog</qualifiedname>
        <param>
          <type><ref refid="classViewportWindowStatSettingsDialog" kindref="compound">ViewportWindowStatSettingsDialog</ref> &amp;</type>
          <declname>dialog</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="366" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a33ec48d4f3484165b05b268660476ab2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::onImguiDelayedCallback</definition>
        <argsstring>(void *user_data) override</argsstring>
        <name>onImguiDelayedCallback</name>
        <qualifiedname>ViewportWindow::onImguiDelayedCallback</qualifiedname>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="368" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a5f95e134568d5bc63ab8f06bb030361f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::drawText</definition>
        <argsstring>(hdpi::Px x, hdpi::Px y, const String &amp;text)</argsstring>
        <name>drawText</name>
        <qualifiedname>ViewportWindow::drawText</qualifiedname>
        <param>
          <type>hdpi::Px</type>
          <declname>x</declname>
        </param>
        <param>
          <type>hdpi::Px</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="427" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a241eea14d5f3a0d2827223b5abe17b72" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::paintRect</definition>
        <argsstring>()</argsstring>
        <name>paintRect</name>
        <qualifiedname>ViewportWindow::paintRect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="429" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a5587babc8368a7ac22fea74b705a9be3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::paintSelectionRect</definition>
        <argsstring>()</argsstring>
        <name>paintSelectionRect</name>
        <qualifiedname>ViewportWindow::paintSelectionRect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="430" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1abb7401d76022d1829e3aca5695f80ede" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::processRectangularSelectionMouseMove</definition>
        <argsstring>(int mouse_x, int mouse_y)</argsstring>
        <name>processRectangularSelectionMouseMove</name>
        <qualifiedname>ViewportWindow::processRectangularSelectionMouseMove</qualifiedname>
        <param>
          <type>int</type>
          <declname>mouse_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mouse_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="432" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a94ae4de9b74ed82bdb301ac94804ef6d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::processMouseMoveInfluence</definition>
        <argsstring>(real &amp;deltaX, real &amp;deltaY, int mouse_x, int mouse_y)</argsstring>
        <name>processMouseMoveInfluence</name>
        <qualifiedname>ViewportWindow::processMouseMoveInfluence</qualifiedname>
        <param>
          <type>real &amp;</type>
          <declname>deltaX</declname>
        </param>
        <param>
          <type>real &amp;</type>
          <declname>deltaY</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mouse_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mouse_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="433" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a6bbed01ec0139de169aaf04a99bee216" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::OnChangePosition</definition>
        <argsstring>()</argsstring>
        <name>OnChangePosition</name>
        <qualifiedname>ViewportWindow::OnChangePosition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="435" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a2de914acd78c028cdc8c01be2bf7b5d9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::OnDestroy</definition>
        <argsstring>()</argsstring>
        <name>OnDestroy</name>
        <qualifiedname>ViewportWindow::OnDestroy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="436" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a14c514af3e8f112a21396734cd0b3a86" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::OnChangeState</definition>
        <argsstring>()</argsstring>
        <name>OnChangeState</name>
        <qualifiedname>ViewportWindow::OnChangeState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="437" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1acd697a7d662b09c3eb214b0ca68b15fa" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::OnCameraChanged</definition>
        <argsstring>()</argsstring>
        <name>OnCameraChanged</name>
        <qualifiedname>ViewportWindow::OnCameraChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="438" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a06064c300a4ca46d004cac7adacf3f45" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::setCameraViewText</definition>
        <argsstring>()</argsstring>
        <name>setCameraViewText</name>
        <qualifiedname>ViewportWindow::setCameraViewText</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="439" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a0da28042dcedc2f59e7240e9b74bf88d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ViewportWindow::viewportCommandToName</definition>
        <argsstring>(int id) const</argsstring>
        <name>viewportCommandToName</name>
        <qualifiedname>ViewportWindow::viewportCommandToName</qualifiedname>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="441" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1aee1abf9676ce7b2703ec074fd889493c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ViewportWindow::viewportNameToCommand</definition>
        <argsstring>(const char *name)</argsstring>
        <name>viewportNameToCommand</name>
        <qualifiedname>ViewportWindow::viewportNameToCommand</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="442" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a892d13666a15abbc41da6a6599db45f1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::clientToZeroLevelPlane</definition>
        <argsstring>(int x, int y, Point3 &amp;world)</argsstring>
        <name>clientToZeroLevelPlane</name>
        <qualifiedname>ViewportWindow::clientToZeroLevelPlane</qualifiedname>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>Point3 &amp;</type>
          <declname>world</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="443" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a5b674e6baac5af146ff9e196b7aba4f6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ViewportWindow::fillPopupMenu</definition>
        <argsstring>(PropPanel::IMenu &amp;menu)</argsstring>
        <name>fillPopupMenu</name>
        <qualifiedname>ViewportWindow::fillPopupMenu</qualifiedname>
        <param>
          <type>PropPanel::IMenu &amp;</type>
          <declname>menu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="445" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1af78ba9c319fb1daf644f8a088893f69a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::fillStat3dStatSettings</definition>
        <argsstring>(ViewportWindowStatSettingsDialog &amp;dialog)</argsstring>
        <name>fillStat3dStatSettings</name>
        <qualifiedname>ViewportWindow::fillStat3dStatSettings</qualifiedname>
        <param>
          <type><ref refid="classViewportWindowStatSettingsDialog" kindref="compound">ViewportWindowStatSettingsDialog</ref> &amp;</type>
          <declname>dialog</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="446" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1acf6045b42fad78f5597fd8212c8522b3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::handleStat3dStatSettingsDialogChange</definition>
        <argsstring>(int pcb_id, bool value)</argsstring>
        <name>handleStat3dStatSettingsDialogChange</name>
        <qualifiedname>ViewportWindow::handleStat3dStatSettingsDialogChange</qualifiedname>
        <param>
          <type>int</type>
          <declname>pcb_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="447" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1aea7f0f5a1ba4dd116533416d991c715d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool ViewportWindow::canStartInteractionWithViewport</definition>
        <argsstring>()</argsstring>
        <name>canStartInteractionWithViewport</name>
        <qualifiedname>ViewportWindow::canStartInteractionWithViewport</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="449" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a428b52b2cd81d4367c076afb9918d438" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ViewportWindow::canRouteMessagesToExternalEventHandler</definition>
        <argsstring>() const</argsstring>
        <name>canRouteMessagesToExternalEventHandler</name>
        <qualifiedname>ViewportWindow::canRouteMessagesToExternalEventHandler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="450" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1af420ea8d61da6e9b8c05da6911f6f3f6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::handleViewportAxisMouseLButtonDown</definition>
        <argsstring>()</argsstring>
        <name>handleViewportAxisMouseLButtonDown</name>
        <qualifiedname>ViewportWindow::handleViewportAxisMouseLButtonDown</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="452" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1aa254a3be3554afa1117725c7c0750571" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::handleViewportAxisMouseLButtonUp</definition>
        <argsstring>()</argsstring>
        <name>handleViewportAxisMouseLButtonUp</name>
        <qualifiedname>ViewportWindow::handleViewportAxisMouseLButtonUp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="453" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a476bb728c9f76b06cccc39f5954040a5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::processViewportAxisCameraRotation</definition>
        <argsstring>(int mouse_x, int mouse_y)</argsstring>
        <name>processViewportAxisCameraRotation</name>
        <qualifiedname>ViewportWindow::processViewportAxisCameraRotation</qualifiedname>
        <param>
          <type>int</type>
          <declname>mouse_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mouse_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="454" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a444fa6b3bb75b353ad841e8bb93ff336" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::setViewportAxisTransitionEndDirection</definition>
        <argsstring>(const Point3 &amp;forward, const Point3 &amp;up)</argsstring>
        <name>setViewportAxisTransitionEndDirection</name>
        <qualifiedname>ViewportWindow::setViewportAxisTransitionEndDirection</qualifiedname>
        <param>
          <type>const Point3 &amp;</type>
          <declname>forward</declname>
        </param>
        <param>
          <type>const Point3 &amp;</type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="455" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a7d417b95d10116a34950c13243680173" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::processCameraMouseMove</definition>
        <argsstring>(CCameraElem *camera_elem, int mouse_x, int mouse_y)</argsstring>
        <name>processCameraMouseMove</name>
        <qualifiedname>ViewportWindow::processCameraMouseMove</qualifiedname>
        <param>
          <type><ref refid="classCCameraElem" kindref="compound">CCameraElem</ref> *</type>
          <declname>camera_elem</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mouse_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mouse_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="457" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a36db48377f9998cd3055b849172224ff" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::processCameraMouseWheel</definition>
        <argsstring>(CCameraElem *camera_elem, int delta)</argsstring>
        <name>processCameraMouseWheel</name>
        <qualifiedname>ViewportWindow::processCameraMouseWheel</qualifiedname>
        <param>
          <type><ref refid="classCCameraElem" kindref="compound">CCameraElem</ref> *</type>
          <declname>camera_elem</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="458" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a1f41f26a58cbe09cc7db1a3abe6cfd4a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::processMaxCameraMouseMButtonDown</definition>
        <argsstring>(int mouse_x, int mouse_y)</argsstring>
        <name>processMaxCameraMouseMButtonDown</name>
        <qualifiedname>ViewportWindow::processMaxCameraMouseMButtonDown</qualifiedname>
        <param>
          <type>int</type>
          <declname>mouse_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mouse_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="460" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1aa982b9c096b74d8b3237f550220750b8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::processMaxCameraMouseMButtonUp</definition>
        <argsstring>()</argsstring>
        <name>processMaxCameraMouseMButtonUp</name>
        <qualifiedname>ViewportWindow::processMaxCameraMouseMButtonUp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="461" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a231ddc4a4c274e40fff09e65180c8016" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::processMaxCameraMouseMove</definition>
        <argsstring>(int mouse_x, int mouse_y, bool m_button_down)</argsstring>
        <name>processMaxCameraMouseMove</name>
        <qualifiedname>ViewportWindow::processMaxCameraMouseMove</qualifiedname>
        <param>
          <type>int</type>
          <declname>mouse_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mouse_y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>m_button_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="462" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a55a1f279461f0bc1ca16aea507c2e7ec" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::processMaxCameraMouseWheel</definition>
        <argsstring>(int multiplied_delta)</argsstring>
        <name>processMaxCameraMouseWheel</name>
        <qualifiedname>ViewportWindow::processMaxCameraMouseWheel</qualifiedname>
        <param>
          <type>int</type>
          <declname>multiplied_delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="463" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a532fdd0399e5fff42d1232295574c1d2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::processMouseLButtonPress</definition>
        <argsstring>(int mouse_x, int mouse_y)</argsstring>
        <name>processMouseLButtonPress</name>
        <qualifiedname>ViewportWindow::processMouseLButtonPress</qualifiedname>
        <param>
          <type>int</type>
          <declname>mouse_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mouse_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="465" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1affb2c120246654a48a3b86c93d9f42c4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::processMouseLButtonRelease</definition>
        <argsstring>(int mouse_x, int mouse_y)</argsstring>
        <name>processMouseLButtonRelease</name>
        <qualifiedname>ViewportWindow::processMouseLButtonRelease</qualifiedname>
        <param>
          <type>int</type>
          <declname>mouse_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mouse_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="466" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a715fe0a76ac08f70205a5983edbdadb8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::processMouseLButtonDoubleClick</definition>
        <argsstring>(int mouse_x, int mouse_y)</argsstring>
        <name>processMouseLButtonDoubleClick</name>
        <qualifiedname>ViewportWindow::processMouseLButtonDoubleClick</qualifiedname>
        <param>
          <type>int</type>
          <declname>mouse_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mouse_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="467" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a33dc9d0c869b25fc537244e8186a26cd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::processMouseMButtonPress</definition>
        <argsstring>(int mouse_x, int mouse_y)</argsstring>
        <name>processMouseMButtonPress</name>
        <qualifiedname>ViewportWindow::processMouseMButtonPress</qualifiedname>
        <param>
          <type>int</type>
          <declname>mouse_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mouse_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="468" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a41f5c7de26811cc1ce53ae4530d276a0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::processMouseMButtonRelease</definition>
        <argsstring>(int mouse_x, int mouse_y)</argsstring>
        <name>processMouseMButtonRelease</name>
        <qualifiedname>ViewportWindow::processMouseMButtonRelease</qualifiedname>
        <param>
          <type>int</type>
          <declname>mouse_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mouse_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="469" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a9db5027734a53c5a3bc6c2e3e795bf45" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::processMouseRButtonPress</definition>
        <argsstring>(int mouse_x, int mouse_y)</argsstring>
        <name>processMouseRButtonPress</name>
        <qualifiedname>ViewportWindow::processMouseRButtonPress</qualifiedname>
        <param>
          <type>int</type>
          <declname>mouse_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mouse_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="470" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a308c79308639595495d87de1a3d355aa" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::processMouseRButtonRelease</definition>
        <argsstring>(int mouse_x, int mouse_y)</argsstring>
        <name>processMouseRButtonRelease</name>
        <qualifiedname>ViewportWindow::processMouseRButtonRelease</qualifiedname>
        <param>
          <type>int</type>
          <declname>mouse_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mouse_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="471" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a616fd3f789d3704e9e428ecd6bdf560f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::processMouseMove</definition>
        <argsstring>(int mouse_x, int mouse_y)</argsstring>
        <name>processMouseMove</name>
        <qualifiedname>ViewportWindow::processMouseMove</qualifiedname>
        <param>
          <type>int</type>
          <declname>mouse_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mouse_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="472" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1ae965aee8ea8835dea69b34c2e527a6f5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::processMouseWheel</definition>
        <argsstring>(int mouse_x, int mouse_y, int multiplied_delta)</argsstring>
        <name>processMouseWheel</name>
        <qualifiedname>ViewportWindow::processMouseWheel</qualifiedname>
        <param>
          <type>int</type>
          <declname>mouse_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mouse_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>multiplied_delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="473" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1af804c41ed744dc767ab93c8746967735" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * ViewportWindow::getMainHwnd</definition>
        <argsstring>()</argsstring>
        <name>getMainHwnd</name>
        <qualifiedname>ViewportWindow::getMainHwnd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="475" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a284b271d25b51db6df29e0479b65b25d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::resizeViewportTexture</definition>
        <argsstring>()</argsstring>
        <name>resizeViewportTexture</name>
        <qualifiedname>ViewportWindow::resizeViewportTexture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="477" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a0694ed3e954652a4072eaf1208bf69e9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Point3</type>
        <definition>Point3 ViewportWindow::getCameraPanAnchorPoint</definition>
        <argsstring>()</argsstring>
        <name>getCameraPanAnchorPoint</name>
        <qualifiedname>ViewportWindow::getCameraPanAnchorPoint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="479" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a28a4f3ae813512dc13ced19f06d38650" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>BaseTexture *</type>
        <definition>virtual BaseTexture * ViewportWindow::getDepthBuffer</definition>
        <argsstring>()</argsstring>
        <name>getDepthBuffer</name>
        <qualifiedname>ViewportWindow::getDepthBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="480" column="23" bodyfile="ec_ViewportWindow.h" bodystart="480" bodyend="480"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods to set / get viewport parameters.</header>
      <memberdef kind="function" id="classViewportWindow_1ae489ed4564f03f71ab20d4febb9b4713" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::setProjection</definition>
        <argsstring>(bool orthogonal, real fov, real near_plane, real far_plane) override</argsstring>
        <name>setProjection</name>
        <qualifiedname>ViewportWindow::setProjection</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a53bd17e37d3dd817fd6bf223bfb9736f">setProjection</reimplements>
        <param>
          <type>bool</type>
          <declname>orthogonal</declname>
        </param>
        <param>
          <type>real</type>
          <declname>fov</declname>
        </param>
        <param>
          <type>real</type>
          <declname>near_plane</declname>
        </param>
        <param>
          <type>real</type>
          <declname>far_plane</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set viewport projection parameters <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">orthogonal</parametername>
</parameternamelist>
<parameterdescription>
<para>- if <bold>true</bold> the view will be orthogonal, if <bold>false</bold> - perspective </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fov</parametername>
</parameternamelist>
<parameterdescription>
<para>- camera&apos;s <bold>F</bold>ield <bold>O</bold>f <bold>V</bold>iew (in radians) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">near_plane</parametername>
</parameternamelist>
<parameterdescription>
<para>- z-near, a distance to nearest visible parts of scene (all parts more close to camera will be invisible) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">far_plane</parametername>
</parameternamelist>
<parameterdescription>
<para>- z-far, a distance to the farthest visible parts of scene (all parts more distant from camera will be invisible) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="80" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a559112555ee9b6e3ff1102e108c7b14e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::setFov</definition>
        <argsstring>(real fov) override</argsstring>
        <name>setFov</name>
        <qualifiedname>ViewportWindow::setFov</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a4e734f3ffad867748b1cc5411a01b5e5">setFov</reimplements>
        <param>
          <type>real</type>
          <declname>fov</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set camera&apos;s FOV (<bold>F</bold>ield <bold>O</bold>f <bold>V</bold>iew). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fov</parametername>
</parameternamelist>
<parameterdescription>
<para>- camera&apos;s angle of view (in radians) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="84" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a602b90d38493d11d3efa6b389ebd61c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>real</type>
        <definition>real ViewportWindow::getFov</definition>
        <argsstring>() override</argsstring>
        <name>getFov</name>
        <qualifiedname>ViewportWindow::getFov</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a0bf6a8efd7b75c62bb00acdebfd37664">getFov</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get camera&apos;s FOV (<bold>F</bold>ield <bold>O</bold>f <bold>V</bold>iew). <simplesect kind="return"><para>fov (in radians) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="88" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1adb723d94a5f2f215a7d659c648a82019" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::setCameraDirection</definition>
        <argsstring>(const Point3 &amp;forward, const Point3 &amp;up) override</argsstring>
        <name>setCameraDirection</name>
        <qualifiedname>ViewportWindow::setCameraDirection</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a7c1a2425e5167fc540a710b550303463">setCameraDirection</reimplements>
        <param>
          <type>const Point3 &amp;</type>
          <declname>forward</declname>
        </param>
        <param>
          <type>const Point3 &amp;</type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set camera&apos;s direction. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">forward</parametername>
</parameternamelist>
<parameterdescription>
<para>- direction of camera&apos;s view </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">up</parametername>
</parameternamelist>
<parameterdescription>
<para>- direction of camera&apos;s top </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="93" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1ad498c5c03e2526835680c5d898b6eef9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::setCameraPos</definition>
        <argsstring>(const Point3 &amp;pos) override</argsstring>
        <name>setCameraPos</name>
        <qualifiedname>ViewportWindow::setCameraPos</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a1c24bd819bf2a9edd32f6d17e8c39f5f">setCameraPos</reimplements>
        <param>
          <type>const Point3 &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set camera&apos;s position. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pos</parametername>
</parameternamelist>
<parameterdescription>
<para>- position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="97" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a74efa9c1d1160d97411f8491019a9993" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::setCameraTransform</definition>
        <argsstring>(const TMatrix &amp;tm) override</argsstring>
        <name>setCameraTransform</name>
        <qualifiedname>ViewportWindow::setCameraTransform</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a8a9967be38327205627d67bb3c523e02">setCameraTransform</reimplements>
        <param>
          <type>const TMatrix &amp;</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set view matrix of the camera. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tm</parametername>
</parameternamelist>
<parameterdescription>
<para>- view matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="101" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1ae681b2609c6b894beeb1cd463a595a01" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::setOrthogonalZoom</definition>
        <argsstring>(real zoom) override</argsstring>
        <name>setOrthogonalZoom</name>
        <qualifiedname>ViewportWindow::setOrthogonalZoom</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a94b29eaac9b64c644dcbf81a994acee9">setOrthogonalZoom</reimplements>
        <param>
          <type>real</type>
          <declname>zoom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set zoom property for camera in orthogonal mode. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">zoom</parametername>
</parameternamelist>
<parameterdescription>
<para>- zoom value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="105" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1ae42476329432262c2ec44c02fe7d120c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::getCameraTransform</definition>
        <argsstring>(TMatrix &amp;m) const override</argsstring>
        <name>getCameraTransform</name>
        <qualifiedname>ViewportWindow::getCameraTransform</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a9785898cd425b0f70ea650ac66f9b60d">getCameraTransform</reimplements>
        <param>
          <type>TMatrix &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get view matrix of the camera. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">m</parametername>
</parameternamelist>
<parameterdescription>
<para>- view matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="109" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a5d46bf488ef3099088f996e072631284" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>real</type>
        <definition>real ViewportWindow::getOrthogonalZoom</definition>
        <argsstring>() const override</argsstring>
        <name>getOrthogonalZoom</name>
        <qualifiedname>ViewportWindow::getOrthogonalZoom</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a73fec3e5f8b6d0464c18945746e4019f">getOrthogonalZoom</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get zoom property for camera in orthogonal mode. <simplesect kind="return"><para>zoom value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="113" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1ae361b626f62128aa6f286bf4fbc4c945" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ViewportWindow::isOrthogonal</definition>
        <argsstring>() const override</argsstring>
        <name>isOrthogonal</name>
        <qualifiedname>ViewportWindow::isOrthogonal</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a5ad1a7e0221aeff59d66363917fe82a6">isOrthogonal</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tests whether camera is in orthogonal mode <simplesect kind="return"><para><bold>true</bold> if viewport is in orthogonal mode, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="117" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a3ae8732ab89f11d5fccb9c37dfeedae6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ViewportWindow::isFlyMode</definition>
        <argsstring>() const override</argsstring>
        <name>isFlyMode</name>
        <qualifiedname>ViewportWindow::isFlyMode</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a3167d56841aa6ff2bdbc7b5cda3d65c0">isFlyMode</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tests whether viewport is in &quot;fly&quot; mode <simplesect kind="return"><para><bold>true</bold> if viewport is in &quot;fly&quot; mode, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="121" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a979302826b304c84c6805f536a82def0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::setCameraMode</definition>
        <argsstring>(bool camera_mode) override</argsstring>
        <name>setCameraMode</name>
        <qualifiedname>ViewportWindow::setCameraMode</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1ae12785aec7d0dc3840796a81c49f4f7b">setCameraMode</reimplements>
        <param>
          <type>bool</type>
          <declname>camera_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set camera&apos;s mode (orthogonal/perspective). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">camera_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>- if <bold>true</bold> the view will be orthogonal, if <bold>false</bold> - perspective </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="126" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a8dc58dd4c253a0bc0049d488bd9845b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::setCameraViewProjection</definition>
        <argsstring>(const TMatrix &amp;view, real fov) override</argsstring>
        <name>setCameraViewProjection</name>
        <qualifiedname>ViewportWindow::setCameraViewProjection</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1aa8b267ac38cf2c400710bc30df8328e7">setCameraViewProjection</reimplements>
        <param>
          <type>const TMatrix &amp;</type>
          <declname>view</declname>
        </param>
        <param>
          <type>real</type>
          <declname>fov</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set camera&apos;s projection. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">view</parametername>
</parameternamelist>
<parameterdescription>
<para>- view matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fov</parametername>
</parameternamelist>
<parameterdescription>
<para>- camera&apos;s <bold>F</bold>ield <bold>O</bold>f <bold>V</bold>iew </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="131" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods to convert viewport coordinates from one coordinate system</header>
      <description><para>to another. </para>
</description>
      <memberdef kind="function" id="classViewportWindow_1aacae39d11e4a296b91b6d49eb4436d0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::clientRectToWorld</definition>
        <argsstring>(Point3 *pt, Point3 *dirs, float fake_persp_side)</argsstring>
        <name>clientRectToWorld</name>
        <qualifiedname>ViewportWindow::clientRectToWorld</qualifiedname>
        <param>
          <type>Point3 *</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>Point3 *</type>
          <declname>dirs</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fake_persp_side</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert coordinates of viewport vertices to world coordinates. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">pt</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to first element of array consisting of 4 components. World coordinates of viewport vertices. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dirs</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to first element of array consisting of 2 components. World directions of viewport lines. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="144" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1ab3e8fed4adda95dfd1028f8b9c3541c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::clientToWorld</definition>
        <argsstring>(const Point2 &amp;screen, Point3 &amp;world, Point3 &amp;world_dir) override</argsstring>
        <name>clientToWorld</name>
        <qualifiedname>ViewportWindow::clientToWorld</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1af443f910620563923e488f02424c9b28">clientToWorld</reimplements>
        <param>
          <type>const Point2 &amp;</type>
          <declname>screen</declname>
        </param>
        <param>
          <type>Point3 &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type>Point3 &amp;</type>
          <declname>world_dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert viewport screen coordinates to world coordinates. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">screen</parametername>
</parameternamelist>
<parameterdescription>
<para>- screen coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">world</parametername>
</parameternamelist>
<parameterdescription>
<para>- world coordinates (on camera&apos;s (lens&apos;s) surface) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">world_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>- camera&apos;s direction </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="150" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1aea969478327056d039ff90e0a947065e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::worldToNDC</definition>
        <argsstring>(const Point3 &amp;world, Point3 &amp;ndc) const override</argsstring>
        <name>worldToNDC</name>
        <qualifiedname>ViewportWindow::worldToNDC</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1af968aba173b824af3db6830625ab3668">worldToNDC</reimplements>
        <param>
          <type>const Point3 &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type>Point3 &amp;</type>
          <declname>ndc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert viewport world coordinates to normal device coordinates. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">world</parametername>
</parameternamelist>
<parameterdescription>
<para>- world coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ndc</parametername>
</parameternamelist>
<parameterdescription>
<para>- normal device coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="155" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1ad3ca8e00ba430d01c53a3fe43e975ea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ViewportWindow::worldToClient</definition>
        <argsstring>(const Point3 &amp;world, Point2 &amp;screen, real *screen_z=NULL) override</argsstring>
        <name>worldToClient</name>
        <qualifiedname>ViewportWindow::worldToClient</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a0f495a6dc647fdcb3b9cf52238be7307">worldToClient</reimplements>
        <param>
          <type>const Point3 &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type>Point2 &amp;</type>
          <declname>screen</declname>
        </param>
        <param>
          <type>real *</type>
          <declname>screen_z</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert viewport world coordinates to screen coordinates. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">world</parametername>
</parameternamelist>
<parameterdescription>
<para>- world coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">screen</parametername>
</parameternamelist>
<parameterdescription>
<para>- screen coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">screen_z</parametername>
</parameternamelist>
<parameterdescription>
<para>- the distance between camera and the world point, may be &lt;0 if the world point is placed behind camera </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if convertion successful, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="163" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a3731e786dd6708c0bb98700ae4404c3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::clientToScreen</definition>
        <argsstring>(int &amp;x, int &amp;y) override</argsstring>
        <name>clientToScreen</name>
        <qualifiedname>ViewportWindow::clientToScreen</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1ad6465ea30807dfd569f5f227571ced37">clientToScreen</reimplements>
        <param>
          <type>int &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert viewport screen coordinates to application window screen coordinates. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>x, y</bold> screen coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="168" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a349774447a53d18de1d1f1168fcf47c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::screenToClient</definition>
        <argsstring>(int &amp;x, int &amp;y) override</argsstring>
        <name>screenToClient</name>
        <qualifiedname>ViewportWindow::screenToClient</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1ab100978fc6b943094a3ae86d8d86a567">screenToClient</reimplements>
        <param>
          <type>int &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert application window screen coordinates to viewport screen coordinates. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>x, y</bold> screen coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="173" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a1efabe153e296647fa60345e0835eac9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::getViewportSize</definition>
        <argsstring>(int &amp;x, int &amp;y) override</argsstring>
        <name>getViewportSize</name>
        <qualifiedname>ViewportWindow::getViewportSize</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a328d6845f1ffe27691d14b85a69f5605">getViewportSize</reimplements>
        <param>
          <type>int &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get dimensions of viewport in pixels <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">x</parametername>
<parametername direction="out">y</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>x, y</bold> dimensions of viewport </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="177" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1ada5e44001b044211e5245f36c66d94ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::switchCamera</definition>
        <argsstring>(unsigned int from, unsigned int to) override</argsstring>
        <name>switchCamera</name>
        <qualifiedname>ViewportWindow::switchCamera</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1ad5d065abea088da076bf3bd43a98c403">switchCamera</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>from</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Switch view of camera from view 1 to view 2. For example, switch camera from &quot;Left&quot; view to &quot;Top&quot; view <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">from</parametername>
</parameternamelist>
<parameterdescription>
<para>- &quot;from&quot; view </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">to</parametername>
</parameternamelist>
<parameterdescription>
<para>- &quot;to&quot; view </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="185" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a595d98b583766656716213d5de789ccf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::getMenuAreaSize</definition>
        <argsstring>(hdpi::Px &amp;w, hdpi::Px &amp;h)</argsstring>
        <name>getMenuAreaSize</name>
        <qualifiedname>ViewportWindow::getMenuAreaSize</qualifiedname>
        <param>
          <type>hdpi::Px &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type>hdpi::Px &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Get top-left menu area size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="188" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a3575daa4383cd148f07cfa90d173c0ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ViewportWindow::isVisible</definition>
        <argsstring>() const</argsstring>
        <name>isVisible</name>
        <qualifiedname>ViewportWindow::isVisible</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="191" column="8" bodyfile="ec_ViewportWindow.h" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a983f896b0f21d3d8a1bf7e1a46221d82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ViewportWindow::getW</definition>
        <argsstring>() const</argsstring>
        <name>getW</name>
        <qualifiedname>ViewportWindow::getW</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="193" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a803f0a307d3027b3ee59216a077f9c84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ViewportWindow::getH</definition>
        <argsstring>() const</argsstring>
        <name>getH</name>
        <qualifiedname>ViewportWindow::getH</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="194" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a50457c6a30b4cfcecf9463b56da9cf3d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::getClientRect</definition>
        <argsstring>(EcRect &amp;clientRect) const</argsstring>
        <name>getClientRect</name>
        <qualifiedname>ViewportWindow::getClientRect</qualifiedname>
        <param>
          <type><ref refid="structEcRect" kindref="compound">EcRect</ref> &amp;</type>
          <declname>clientRect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="195" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a07e457e04703a41feffcebb0a8f101e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::captureMouse</definition>
        <argsstring>() override</argsstring>
        <name>captureMouse</name>
        <qualifiedname>ViewportWindow::captureMouse</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a40b54a6913c8c7915cbe3866b0c35d82">captureMouse</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="197" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1aaed7c1283355ccf1861ed4051ee46e29" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::releaseMouse</definition>
        <argsstring>() override</argsstring>
        <name>releaseMouse</name>
        <qualifiedname>ViewportWindow::releaseMouse</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1aeeba63690f5268864499af7824080562">releaseMouse</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="198" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Viewport activity.</header>
      <memberdef kind="function" id="classViewportWindow_1acdafe5bb0219fbe6df1b688855da0c96" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::activate</definition>
        <argsstring>() override</argsstring>
        <name>activate</name>
        <qualifiedname>ViewportWindow::activate</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a043bb5eff10634b7564e32327d9add4b">activate</reimplements>
        <briefdescription>
<para>Activate viewport. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="204" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a0e14a77fc27cc88073abca94d6e14888" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ViewportWindow::isActive</definition>
        <argsstring>() override</argsstring>
        <name>isActive</name>
        <qualifiedname>ViewportWindow::isActive</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a1f996bd1168fef30b98ccfb9f4a96da8">isActive</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tests whether viewport is active. <simplesect kind="return"><para><bold>true</bold> if viewport is active, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="208" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1abcb0e3bc0219a7f2e82778b10bfea082" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>real</type>
        <definition>real ViewportWindow::getLinearSizeSq</definition>
        <argsstring>(const Point3 &amp;pos, real world_rad, int xy) override</argsstring>
        <name>getLinearSizeSq</name>
        <qualifiedname>ViewportWindow::getLinearSizeSq</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a06966672a3bb1d910edbb72ed14844b4">getLinearSizeSq</reimplements>
        <param>
          <type>const Point3 &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>real</type>
          <declname>world_rad</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get square of visible radius of a circle <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pos</parametername>
</parameternamelist>
<parameterdescription>
<para>- world coordinates of center of a circle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">world_rad</parametername>
</parameternamelist>
<parameterdescription>
<para>- radius of a circle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xy</parametername>
</parameternamelist>
<parameterdescription>
<para>- 0-horizontal radius, 1-vertical radius (of ellipse) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>square</bold> of visible radius of a circle (ellipse) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="217" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Viewport redraw methods.</header>
      <memberdef kind="function" id="classViewportWindow_1a2f456bf6f1203665b0f4c18e814b7d91" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::redrawClientRect</definition>
        <argsstring>() override</argsstring>
        <name>redrawClientRect</name>
        <qualifiedname>ViewportWindow::redrawClientRect</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a15610756180a647b1a9b00904f5b9381">redrawClientRect</reimplements>
        <briefdescription>
<para>Redraw viewport as Dagor Engine object and CTL object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="224" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a2c300abcbd1d0ce741a64d6f05e551bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::invalidateCache</definition>
        <argsstring>() override</argsstring>
        <name>invalidateCache</name>
        <qualifiedname>ViewportWindow::invalidateCache</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a275ee85066c7d4e05bf495e89f18f912">invalidateCache</reimplements>
        <briefdescription>
<para>Redraw viewport. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="227" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a0fd4ed7f14fad505cad7763c94660ca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::enableCache</definition>
        <argsstring>(bool en) override</argsstring>
        <name>enableCache</name>
        <qualifiedname>ViewportWindow::enableCache</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a3e4d9c688e2ff1d520a403d096a02ae6">enableCache</reimplements>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable / disable viewport cache. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">en</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>true</bold> to enable cache, <bold>false</bold> to disable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="231" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Start / stop drawing rectangular selection box.</header>
      <description><para>User interface for editing </para>
</description>
      <memberdef kind="function" id="classViewportWindow_1acb128d0c7f7f60712e05699eb20f66c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::startRectangularSelection</definition>
        <argsstring>(int mx, int my, int type) override</argsstring>
        <name>startRectangularSelection</name>
        <qualifiedname>ViewportWindow::startRectangularSelection</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1ad3719fb9c0faee0ded71792668766701">startRectangularSelection</reimplements>
        <param>
          <type>int</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>my</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start drawing rectangular selection box. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mx</parametername>
<parametername direction="in">my</parametername>
</parameternamelist>
<parameterdescription>
<para>- starting point of selection box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>- type of selection box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="242" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a64c7a3ba2577d3ff04a90276f24a5735" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ViewportWindow::endRectangularSelection</definition>
        <argsstring>(EcRect *result, int *type) override</argsstring>
        <name>endRectangularSelection</name>
        <qualifiedname>ViewportWindow::endRectangularSelection</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a8c28c71e9585c6eddc1605d113cbf229">endRectangularSelection</reimplements>
        <param>
          <type><ref refid="structEcRect" kindref="compound">EcRect</ref> *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>End drawing rectangular selection box. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to CtlRect with coordinates of a selected area (upper left and lower bottom corners of area). May be <bold>NULL</bold> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">type</parametername>
</parameternamelist>
<parameterdescription>
<para>- type of selection box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if selection successful, <bold>false</bold> if selection aborted </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="249" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a8fab995a1d16c31109880333da7f1a0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::setViewProj</definition>
        <argsstring>() override</argsstring>
        <name>setViewProj</name>
        <qualifiedname>ViewportWindow::setViewProj</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a1202aff8a7df6578abe92f0311a1aec3">setViewProj</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set parameters (projection matrix, etc) of a videocard driver camera equal to parameters of viewport camera </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="255" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a671d5923b42d3bcb83cf7f5b0c515362" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::zoomAndCenter</definition>
        <argsstring>(BBox3 &amp;box) override</argsstring>
        <name>zoomAndCenter</name>
        <qualifiedname>ViewportWindow::zoomAndCenter</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a4cf3244d0a662f2653e012b10782a53a">zoomAndCenter</reimplements>
        <param>
          <type>BBox3 &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Zoom and center bounding box. Function centers and zooms bounding box to max visible size in viewport. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">box</parametername>
</parameternamelist>
<parameterdescription>
<para>- bounding box (see #BBox3) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="261" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Load / save viewport settings.</header>
      <memberdef kind="function" id="classViewportWindow_1ae229462be10f322e5538b1e007637f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ViewportWindow::load</definition>
        <argsstring>(const DataBlock &amp;blk)</argsstring>
        <name>load</name>
        <qualifiedname>ViewportWindow::load</qualifiedname>
        <param>
          <type>const DataBlock &amp;</type>
          <declname>blk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load viewport settings from blk file. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">blk</parametername>
</parameternamelist>
<parameterdescription>
<para>- Data Block that contains data to load (see #DataBlock) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="269" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a7edc68c4b96ec03592cec9733ebc652f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ViewportWindow::save</definition>
        <argsstring>(DataBlock &amp;blk) const</argsstring>
        <name>save</name>
        <qualifiedname>ViewportWindow::save</qualifiedname>
        <param>
          <type>DataBlock &amp;</type>
          <declname>blk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save viewport settings to blk file. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">blk</parametername>
</parameternamelist>
<parameterdescription>
<para>- Data Block that contains data to save (see #DataBlock) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="273" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1acd9d4d95078680794865c180425b5665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::setZnearZfar</definition>
        <argsstring>(real zn, real zf, bool change_defaults)</argsstring>
        <name>setZnearZfar</name>
        <qualifiedname>ViewportWindow::setZnearZfar</qualifiedname>
        <param>
          <type>real</type>
          <declname>zn</declname>
        </param>
        <param>
          <type>real</type>
          <declname>zf</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>change_defaults</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set z-near / z-far properties of viewport. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">zn</parametername>
</parameternamelist>
<parameterdescription>
<para>- z-near, a distance to nearest visible parts of scene in viewport (all parts more close to camera will be invisible) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zf</parametername>
</parameternamelist>
<parameterdescription>
<para>- z-far, a distance to the farthest visible parts of scene in viewport (all parts more distant from camera will be invisible) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">change_defaults</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>true</bold> - set z-near/z-far as defaults for all viewports </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="283" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a208a2b1ada13968bbc828d6cb2776cfe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::getZnearZfar</definition>
        <argsstring>(real &amp;zn, real &amp;zf) const override</argsstring>
        <name>getZnearZfar</name>
        <qualifiedname>ViewportWindow::getZnearZfar</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a747f3d2cb6050a7c6c374c5ad6ecbe75">getZnearZfar</reimplements>
        <param>
          <type>real &amp;</type>
          <declname>zn</declname>
        </param>
        <param>
          <type>real &amp;</type>
          <declname>zf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get z-near / z-far values of viewport. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">zn</parametername>
</parameternamelist>
<parameterdescription>
<para>- z-near, a distance to nearest visible parts of scene in viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zf</parametername>
</parameternamelist>
<parameterdescription>
<para>- z-far, a distance to the farthest visible parts of scene in viewport </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="288" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Process custom cameras (if they exist).</header>
      <memberdef kind="function" id="classViewportWindow_1a0c2d388976c63fe99673f47a9581623c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::act</definition>
        <argsstring>(real dt)</argsstring>
        <name>act</name>
        <qualifiedname>ViewportWindow::act</qualifiedname>
        <param>
          <type>real</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>For internal use in EditorCore. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="294" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1af23226f51b6d88d7275f1031f159dd84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ViewportWindow::setCustomCameras</definition>
        <argsstring>(ICustomCameras *in_customCameras)</argsstring>
        <name>setCustomCameras</name>
        <qualifiedname>ViewportWindow::setCustomCameras</qualifiedname>
        <param>
          <type><ref refid="classICustomCameras" kindref="compound">ICustomCameras</ref> *</type>
          <declname>in_customCameras</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set custom camera in viewport. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_customCameras</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to custom camera (see <ref refid="classICustomCameras" kindref="compound">ICustomCameras</ref>). May be <bold>NULL</bold> to switch off cameras. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="299" column="8" bodyfile="ec_ViewportWindow.h" bodystart="299" bodyend="299"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classViewportWindow_1aded232fedee029f3a76635559b26d85b" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool ViewportWindow::showDagorUiCursor</definition>
        <argsstring></argsstring>
        <name>showDagorUiCursor</name>
        <qualifiedname>ViewportWindow::showDagorUiCursor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="48" column="15" bodyfile="ec_ViewportWindow.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a093067e5b9601c21f24ec263fcb11067" prot="public" static="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ViewportWindow::render_viewport_frame) (ViewportWindow *vpw)</definition>
        <argsstring>)(ViewportWindow *vpw)</argsstring>
        <name>render_viewport_frame</name>
        <qualifiedname>ViewportWindow::render_viewport_frame</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="49" column="10" bodyfile="ec_ViewportWindow.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classViewportWindow_1aa0b5ae8bdaaf1f8d39dc9de9523b50fc" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ViewportWindow::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>ViewportWindow::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="402" column="9" bodyfile="ec_ViewportWindow.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classViewportWindow_1a4b73345f19bd4692efab905f9c4ca253" prot="public" static="no" mutable="no">
        <type><ref refid="structEcRect" kindref="compound">EcRect</ref></type>
        <definition>EcRect ViewportWindow::sel</definition>
        <argsstring></argsstring>
        <name>sel</name>
        <qualifiedname>ViewportWindow::sel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="403" column="12" bodyfile="ec_ViewportWindow.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classViewportWindow_1a9fa703e3330bb69aaf61c195a9e3ff59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ViewportWindow::ViewportWindow</definition>
        <argsstring>()</argsstring>
        <name>ViewportWindow</name>
        <qualifiedname>ViewportWindow::ViewportWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="51" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1ac89e2122bf5fba72348849de697a1f3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ViewportWindow::~ViewportWindow</definition>
        <argsstring>()</argsstring>
        <name>~ViewportWindow</name>
        <qualifiedname>ViewportWindow::~ViewportWindow</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="54" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a09dc18ea93d4ebf61c7840422be5bea9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ViewportWindow::init</definition>
        <argsstring>(IGenEventHandler *eh)</argsstring>
        <name>init</name>
        <qualifiedname>ViewportWindow::init</qualifiedname>
        <param>
          <type><ref refid="classIGenEventHandler" kindref="compound">IGenEventHandler</ref> *</type>
          <declname>eh</declname>
        </param>
        <briefdescription>
<para>Initialize viewport. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="57" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a587b885cfe1ae9d5cddaac8a1d916688" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int ViewportWindow::handleCommand</definition>
        <argsstring>(int p1=0, int p2=0, int p3=0) override</argsstring>
        <name>handleCommand</name>
        <qualifiedname>ViewportWindow::handleCommand</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1a8248c01806611da88c61df9d1c54d42e">handleCommand</reimplements>
        <param>
          <type>int</type>
          <declname>p1</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>p2</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>p3</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="59" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a8fc3476adc098f91159926c23cf3a18d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ViewportWindow::onMenuItemClick</definition>
        <argsstring>(unsigned id) override</argsstring>
        <name>onMenuItemClick</name>
        <qualifiedname>ViewportWindow::onMenuItemClick</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="62" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classViewportWindow_1a2a9fb2611c392a3c2762070ffa5b0308" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ViewportWindow::setEventHandler</definition>
        <argsstring>(IGenEventHandler *eh) override</argsstring>
        <name>setEventHandler</name>
        <qualifiedname>ViewportWindow::setEventHandler</qualifiedname>
        <reimplements refid="classIGenViewportWnd_1aadd6023476d52f40a8dd60b31d145581">setEventHandler</reimplements>
        <param>
          <type><ref refid="classIGenEventHandler" kindref="compound">IGenEventHandler</ref> *</type>
          <declname>eh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set event handler of viewport. Viewport will send messages about its events to this event handler. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">eh</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to event handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ViewportWindow.h" line="67" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>CTL implementation of viewport window. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>IGenViewportWnd</label>
        <link refid="classIGenViewportWnd"/>
      </node>
      <node id="4">
        <label>PropPanel::IDelayedCallbackHandler</label>
      </node>
      <node id="3">
        <label>PropPanel::IMenuEventHandler</label>
      </node>
      <node id="1">
        <label>ViewportWindow</label>
        <link refid="classViewportWindow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>EcRect</label>
        <link refid="structEcRect"/>
      </node>
      <node id="10">
        <label>GizmoSettingsDialog</label>
        <link refid="classGizmoSettingsDialog"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>GridEditDialog</label>
        <link refid="classGridEditDialog"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>ICustomCameras</label>
        <link refid="classICustomCameras"/>
      </node>
      <node id="7">
        <label>IGenEventHandler</label>
        <link refid="classIGenEventHandler"/>
      </node>
      <node id="2">
        <label>IGenViewportWnd</label>
        <link refid="classIGenViewportWnd"/>
      </node>
      <node id="9">
        <label>PropPanel::DialogWindow</label>
      </node>
      <node id="4">
        <label>PropPanel::IDelayedCallbackHandler</label>
      </node>
      <node id="3">
        <label>PropPanel::IMenuEventHandler</label>
      </node>
      <node id="1">
        <label>ViewportWindow</label>
        <link refid="classViewportWindow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>customCameras</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>sel</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>curEH</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>statSettingsDialog</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>gizmoSettingsDialog</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>input</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>gridSettingsDialog</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>ViewportWindow::Input</label>
        <link refid="structViewportWindow_1_1Input"/>
      </node>
      <node id="8">
        <label>ViewportWindowStatSettingsDialog</label>
        <link refid="classViewportWindowStatSettingsDialog"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ec_ViewportWindow.h" line="45" column="1" bodyfile="ec_ViewportWindow.h" bodystart="46" bodyend="512"/>
    <listofallmembers>
      <member refid="classViewportWindow_1a0c2d388976c63fe99673f47a9581623c" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>act</name></member>
      <member refid="classViewportWindow_1acdafe5bb0219fbe6df1b688855da0c96" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>activate</name></member>
      <member refid="classViewportWindow_1a09d7d9cd521a40fbe55c19773a8f007c" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>active</name></member>
      <member refid="classViewportWindow_1aab60da533e39b279dc8ef5295947c6fc" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>allowPopupMenu</name></member>
      <member refid="classViewportWindow_1aa909c817a25f4c658a6b48672a8a54e0" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>calcStat3d</name></member>
      <member refid="classViewportWindow_1a3e7c984f45dc9a45afdbdc041daf6a43" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>cameraPanAnchorPoint</name></member>
      <member refid="classViewportWindow_1ae2b79f2d0cf1ab086af77c630a740eb7" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>cameraTransitionElapsedTime</name></member>
      <member refid="classViewportWindow_1a8e58ab5503c8c93446f1dbfe03e3021c" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>cameraTransitionEndQuaternion</name></member>
      <member refid="classViewportWindow_1aa8de085344fe14ed8b8a349d45fdb045" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>cameraTransitioning</name></member>
      <member refid="classViewportWindow_1a77c3dd2108cb53638a0ef20ff0ee6148" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>cameraTransitionLastViewMatrix</name></member>
      <member refid="classViewportWindow_1a1605f628eb8b0639894664ed5b8ea4bc" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>cameraTransitionStartQuaternion</name></member>
      <member refid="classViewportWindow_1a428b52b2cd81d4367c076afb9918d438" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>canRouteMessagesToExternalEventHandler</name></member>
      <member refid="classViewportWindow_1aea7f0f5a1ba4dd116533416d991c715d" prot="protected" virt="virtual"><scope>ViewportWindow</scope><name>canStartInteractionWithViewport</name></member>
      <member refid="classViewportWindow_1a07e457e04703a41feffcebb0a8f101e0" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>captureMouse</name></member>
      <member refid="classViewportWindow_1aacae39d11e4a296b91b6d49eb4436d0a" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>clientRectToWorld</name></member>
      <member refid="classViewportWindow_1a3731e786dd6708c0bb98700ae4404c3c" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>clientToScreen</name></member>
      <member refid="classViewportWindow_1ab3e8fed4adda95dfd1028f8b9c3541c7" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>clientToWorld</name></member>
      <member refid="classViewportWindow_1a892d13666a15abbc41da6a6599db45f1" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>clientToZeroLevelPlane</name></member>
      <member refid="classViewportWindow_1a09b3e736829a5099501498f531d47b68" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>copyTextureToViewportTexture</name></member>
      <member refid="classViewportWindow_1a3eb400ebf058e611b80b465133265d1e" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>curEH</name></member>
      <member refid="classViewportWindow_1a6e05fa6f59de559c5ad1262aef44f3c0" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>curMEH</name></member>
      <member refid="classViewportWindow_1a2de25e88c93e7ff1d9115d614dc8a88f" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>currentProjection</name></member>
      <member refid="classViewportWindow_1a5e8cfc6d6ab7bd40202aba18df9c26a9" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>customCameras</name></member>
      <member refid="classViewportWindow_1ac71662f91ae582dc9317dbfc8acb3643" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>delayedMouseEvents</name></member>
      <member refid="classViewportWindow_1a13146a2b8dd9cb735cca7e05930f7ec0" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>drawStat3d</name></member>
      <member refid="classViewportWindow_1a74c9dabf13246c5ba57e1e9e5d0400c7" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>drawText</name></member>
      <member refid="classViewportWindow_1a5f95e134568d5bc63ab8f06bb030361f" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>drawText</name></member>
      <member refid="classViewportWindow_1a0fd4ed7f14fad505cad7763c94660ca1" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>enableCache</name></member>
      <member refid="classViewportWindow_1a64c7a3ba2577d3ff04a90276f24a5735" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>endRectangularSelection</name></member>
      <member refid="classViewportWindow_1a5b674e6baac5af146ff9e196b7aba4f6" prot="protected" virt="virtual"><scope>ViewportWindow</scope><name>fillPopupMenu</name></member>
      <member refid="classViewportWindow_1af78ba9c319fb1daf644f8a088893f69a" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>fillStat3dStatSettings</name></member>
      <member refid="classViewportWindow_1a2516cd0c4b224d0dad65538ac80de67f" prot="protected" virt="virtual"><scope>ViewportWindow</scope><name>fillStatSettingsDialog</name></member>
      <member refid="classViewportWindow_1a0694ed3e954652a4072eaf1208bf69e9" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>getCameraPanAnchorPoint</name></member>
      <member refid="classViewportWindow_1ae42476329432262c2ec44c02fe7d120c" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>getCameraTransform</name></member>
      <member refid="classViewportWindow_1a50457c6a30b4cfcecf9463b56da9cf3d" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>getClientRect</name></member>
      <member refid="classViewportWindow_1aa59014c84760fb38ac60a36bfdbd3345" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>getContextMenu</name></member>
      <member refid="classViewportWindow_1a28a4f3ae813512dc13ced19f06d38650" prot="protected" virt="virtual"><scope>ViewportWindow</scope><name>getDepthBuffer</name></member>
      <member refid="classViewportWindow_1a602b90d38493d11d3efa6b389ebd61c7" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>getFov</name></member>
      <member refid="classViewportWindow_1a803f0a307d3027b3ee59216a077f9c84" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>getH</name></member>
      <member refid="classViewportWindow_1a4ba65bdb29232eba9c062744397fef9c" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>getInput</name></member>
      <member refid="classViewportWindow_1abcb0e3bc0219a7f2e82778b10bfea082" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>getLinearSizeSq</name></member>
      <member refid="classViewportWindow_1af804c41ed744dc767ab93c8746967735" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>getMainHwnd</name></member>
      <member refid="classViewportWindow_1a595d98b583766656716213d5de789ccf" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>getMenuAreaSize</name></member>
      <member refid="classViewportWindow_1a5d46bf488ef3099088f996e072631284" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>getOrthogonalZoom</name></member>
      <member refid="classViewportWindow_1a832a57892625051be5b46912d7d16bf1" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>getProjTm</name></member>
      <member refid="classViewportWindow_1a1efabe153e296647fa60345e0835eac9" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>getViewportSize</name></member>
      <member refid="classViewportWindow_1a4e557d802c46778dd85de89afcfd4463" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>getViewTm</name></member>
      <member refid="classViewportWindow_1a983f896b0f21d3d8a1bf7e1a46221d82" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>getW</name></member>
      <member refid="classViewportWindow_1a208a2b1ada13968bbc828d6cb2776cfe" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>getZnearZfar</name></member>
      <member refid="classViewportWindow_1a9eb2cc58ec4735bbd9c2ed0e501a54b6" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>gizmoSettingsDialog</name></member>
      <member refid="classViewportWindow_1ad5753c5d2ead2178269e2151c3f82c82" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>gridSettingsDialog</name></member>
      <member refid="classViewportWindow_1a587b885cfe1ae9d5cddaac8a1d916688" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>handleCommand</name></member>
      <member refid="classViewportWindow_1acf6045b42fad78f5597fd8212c8522b3" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>handleStat3dStatSettingsDialogChange</name></member>
      <member refid="classViewportWindow_1a36cf11bc8f9c92b86befdbbb52298623" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>handleStatSettingsDialogChange</name></member>
      <member refid="classViewportWindow_1a67f59fb2c4e989f2abc26393b8714639" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>handleViewportAcceleratorCommand</name></member>
      <member refid="classViewportWindow_1af420ea8d61da6e9b8c05da6911f6f3f6" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>handleViewportAxisMouseLButtonDown</name></member>
      <member refid="classViewportWindow_1aa254a3be3554afa1117725c7c0750571" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>handleViewportAxisMouseLButtonUp</name></member>
      <member refid="classViewportWindow_1ada06aa3354471e956f069ea01595acce" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>highlightedViewportAxisId</name></member>
      <member refid="classViewportWindow_1a09dc18ea93d4ebf61c7840422be5bea9" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>init</name></member>
      <member refid="classViewportWindow_1a6206db0530d068250dc80805f507561e" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>input</name></member>
      <member refid="classViewportWindow_1a2c300abcbd1d0ce741a64d6f05e551bd" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>invalidateCache</name></member>
      <member refid="classViewportWindow_1a0e14a77fc27cc88073abca94d6e14888" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>isActive</name></member>
      <member refid="classViewportWindow_1a3ae8732ab89f11d5fccb9c37dfeedae6" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>isFlyMode</name></member>
      <member refid="classViewportWindow_1aba82764692a1c5a38eb1e96bee2591a1" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>isMoveRotateAllowed</name></member>
      <member refid="classViewportWindow_1ae361b626f62128aa6f286bf4fbc4c945" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>isOrthogonal</name></member>
      <member refid="classViewportWindow_1a466ba6aa3588d529a5f96c0a49110d28" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>isViewportTextureReady</name></member>
      <member refid="classViewportWindow_1a3575daa4383cd148f07cfa90d173c0ee" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>isVisible</name></member>
      <member refid="classViewportWindow_1a75cf6a64c0db65ab9b3d7561f0b893e4" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>isXLocked</name></member>
      <member refid="classViewportWindow_1af1c4c3a169ab2fdf0e1b6500e6b4a24c" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>isYLocked</name></member>
      <member refid="classViewportWindow_1aee87b2b21eeb47448cdd1e528486e81a" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>lastMousePosition</name></member>
      <member refid="classViewportWindow_1acdc5787a7657b5df6b094415929b522a" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>lastValidCamPanAnchorPoint</name></member>
      <member refid="classViewportWindow_1ae229462be10f322e5538b1e007637f98" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>load</name></member>
      <member refid="classViewportWindow_1a702e8ebcaf7fcfc7b8bb2c81668233d6" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>mIsCursorVisible</name></member>
      <member refid="classViewportWindow_1a0ec9f8168b433020b43f7a96d21a8a8d" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>mouseButtonDown</name></member>
      <member refid="classViewportWindow_1a82935935de874d22fddce8ef96c0340c" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>mouseButtonDownArraySize</name></member>
      <member refid="classViewportWindow_1a76b91768eb633f77ccc6bcfafce16db9" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>mouseDownOnViewportAxis</name></member>
      <member refid="classViewportWindow_1add55ab8de5edac11ba742e4438bcadc7" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>needStat3d</name></member>
      <member refid="classViewportWindow_1a7c3de94db44fe58926d8176ca23ca61c" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>nextStat3dLineY</name></member>
      <member refid="classViewportWindow_1acd697a7d662b09c3eb214b0ca68b15fa" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>OnCameraChanged</name></member>
      <member refid="classViewportWindow_1a6bbed01ec0139de169aaf04a99bee216" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>OnChangePosition</name></member>
      <member refid="classViewportWindow_1a14c514af3e8f112a21396734cd0b3a86" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>OnChangeState</name></member>
      <member refid="classViewportWindow_1a2de914acd78c028cdc8c01be2bf7b5d9" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>OnDestroy</name></member>
      <member refid="classViewportWindow_1a8a48698ad21bcc6daa4fb585dc9854fa" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>onDropFiles</name></member>
      <member refid="classViewportWindow_1a33ec48d4f3484165b05b268660476ab2" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>onImguiDelayedCallback</name></member>
      <member refid="classViewportWindow_1a8fc3476adc098f91159926c23cf3a18d" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>onMenuItemClick</name></member>
      <member refid="classViewportWindow_1a9b5067efe2accb7100cd505f8148e93a" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>opaqueStat3d</name></member>
      <member refid="classViewportWindow_1a35212493ebe1d496c3fdfcd102fb89a5" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>orthogonalProjection</name></member>
      <member refid="classViewportWindow_1af276711a88247207f6d4e839093b3321" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>orthogonalZoom</name></member>
      <member refid="classViewportWindow_1a809561ab1c756cf379fe3d46778de011" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>paint</name></member>
      <member refid="classViewportWindow_1a241eea14d5f3a0d2827223b5abe17b72" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>paintRect</name></member>
      <member refid="classViewportWindow_1a5587babc8368a7ac22fea74b705a9be3" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>paintSelectionRect</name></member>
      <member refid="classViewportWindow_1af782a5592084f47a34881d50d4450e1a" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>popupMenu</name></member>
      <member refid="classViewportWindow_1ac00d063233f11dd6b420b8b7b4c68eaa" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>prevMousePositionX</name></member>
      <member refid="classViewportWindow_1a356fc4571583e98b39a3d14187f8e6c6" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>prevMousePositionY</name></member>
      <member refid="classViewportWindow_1a7d417b95d10116a34950c13243680173" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>processCameraMouseMove</name></member>
      <member refid="classViewportWindow_1a36db48377f9998cd3055b849172224ff" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>processCameraMouseWheel</name></member>
      <member refid="classViewportWindow_1a1f41f26a58cbe09cc7db1a3abe6cfd4a" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>processMaxCameraMouseMButtonDown</name></member>
      <member refid="classViewportWindow_1aa982b9c096b74d8b3237f550220750b8" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>processMaxCameraMouseMButtonUp</name></member>
      <member refid="classViewportWindow_1a231ddc4a4c274e40fff09e65180c8016" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>processMaxCameraMouseMove</name></member>
      <member refid="classViewportWindow_1a55a1f279461f0bc1ca16aea507c2e7ec" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>processMaxCameraMouseWheel</name></member>
      <member refid="classViewportWindow_1a715fe0a76ac08f70205a5983edbdadb8" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>processMouseLButtonDoubleClick</name></member>
      <member refid="classViewportWindow_1a532fdd0399e5fff42d1232295574c1d2" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>processMouseLButtonPress</name></member>
      <member refid="classViewportWindow_1affb2c120246654a48a3b86c93d9f42c4" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>processMouseLButtonRelease</name></member>
      <member refid="classViewportWindow_1a33dc9d0c869b25fc537244e8186a26cd" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>processMouseMButtonPress</name></member>
      <member refid="classViewportWindow_1a41f5c7de26811cc1ce53ae4530d276a0" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>processMouseMButtonRelease</name></member>
      <member refid="classViewportWindow_1a616fd3f789d3704e9e428ecd6bdf560f" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>processMouseMove</name></member>
      <member refid="classViewportWindow_1a94ae4de9b74ed82bdb301ac94804ef6d" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>processMouseMoveInfluence</name></member>
      <member refid="classViewportWindow_1a9db5027734a53c5a3bc6c2e3e795bf45" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>processMouseRButtonPress</name></member>
      <member refid="classViewportWindow_1a308c79308639595495d87de1a3d355aa" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>processMouseRButtonRelease</name></member>
      <member refid="classViewportWindow_1ae965aee8ea8835dea69b34c2e527a6f5" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>processMouseWheel</name></member>
      <member refid="classViewportWindow_1abb7401d76022d1829e3aca5695f80ede" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>processRectangularSelectionMouseMove</name></member>
      <member refid="classViewportWindow_1a476bb728c9f76b06cccc39f5954040a5" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>processViewportAxisCameraRotation</name></member>
      <member refid="classViewportWindow_1aa87b6105c50d16d2d7d4b4346685bf72" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>projectionFarPlane</name></member>
      <member refid="classViewportWindow_1ad0bafc2e612ca8cbe233963332ccd8ed" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>projectionFov</name></member>
      <member refid="classViewportWindow_1a4fc3eda805af116e7911bb7cddb06c62" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>projectionNearPlane</name></member>
      <member refid="classViewportWindow_1a1b23d8a12874e6ce467e55aeb1167ee7" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>rectSelect</name></member>
      <member refid="classViewportWindow_1a2f456bf6f1203665b0f4c18e814b7d91" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>redrawClientRect</name></member>
      <member refid="classViewportWindow_1a51912ca18288853b103e5e1b41471c56" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>registerViewportAccelerators</name></member>
      <member refid="classViewportWindow_1aaed7c1283355ccf1861ed4051ee46e29" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>releaseMouse</name></member>
      <member refid="classViewportWindow_1a093067e5b9601c21f24ec263fcb11067" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>render_viewport_frame</name></member>
      <member refid="classViewportWindow_1abe669fdf1f72161e26f0a1d82549ef28" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>requestedViewportTextureSize</name></member>
      <member refid="classViewportWindow_1a5db9d222466073805c7c6a284aebb608" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>resetScreenshotMode</name></member>
      <member refid="classViewportWindow_1a284b271d25b51db6df29e0479b65b25d" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>resizeViewportTexture</name></member>
      <member refid="classViewportWindow_1a13935ff5b6397158b96ccb17c0ed6aeb" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>restoreCursorAt</name></member>
      <member refid="classViewportWindow_1a41275d25dd6c34f8c82fc70a2bb39164" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>restoreFlags</name></member>
      <member refid="classViewportWindow_1a7edc68c4b96ec03592cec9733ebc652f" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>save</name></member>
      <member refid="classViewportWindow_1a8886c49cfe64e25e49a7d0dab4dae16e" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>screenshotSize</name></member>
      <member refid="classViewportWindow_1a349774447a53d18de1d1f1168fcf47c2" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>screenToClient</name></member>
      <member refid="classViewportWindow_1a4b73345f19bd4692efab905f9c4ca253" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>sel</name></member>
      <member refid="classViewportWindow_1abff06190cc43adde2ebc56388e1d9a8e" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>selectionMenu</name></member>
      <member refid="classViewportWindow_1adb723d94a5f2f215a7d659c648a82019" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>setCameraDirection</name></member>
      <member refid="classViewportWindow_1a979302826b304c84c6805f536a82def0" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>setCameraMode</name></member>
      <member refid="classViewportWindow_1ad498c5c03e2526835680c5d898b6eef9" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>setCameraPos</name></member>
      <member refid="classViewportWindow_1a74efa9c1d1160d97411f8491019a9993" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>setCameraTransform</name></member>
      <member refid="classViewportWindow_1a8dc58dd4c253a0bc0049d488bd9845b8" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>setCameraViewProjection</name></member>
      <member refid="classViewportWindow_1a06064c300a4ca46d004cac7adacf3f45" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>setCameraViewText</name></member>
      <member refid="classViewportWindow_1af23226f51b6d88d7275f1031f159dd84" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>setCustomCameras</name></member>
      <member refid="classViewportWindow_1a2a9fb2611c392a3c2762070ffa5b0308" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>setEventHandler</name></member>
      <member refid="classViewportWindow_1a559112555ee9b6e3ff1102e108c7b14e" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>setFov</name></member>
      <member refid="classViewportWindow_1ae80dab76b9a3425481d6cc5b396ac3ca" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>setMenuEventHandler</name></member>
      <member refid="classViewportWindow_1ae681b2609c6b894beeb1cd463a595a01" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>setOrthogonalZoom</name></member>
      <member refid="classViewportWindow_1ae489ed4564f03f71ab20d4febb9b4713" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>setProjection</name></member>
      <member refid="classViewportWindow_1ad43697a6b78915340b37a87d3e57b744" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>setScreenshotMode</name></member>
      <member refid="classViewportWindow_1a444fa6b3bb75b353ad841e8bb93ff336" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>setViewportAxisTransitionEndDirection</name></member>
      <member refid="classViewportWindow_1a8fab995a1d16c31109880333da7f1a0d" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>setViewProj</name></member>
      <member refid="classViewportWindow_1acd9d4d95078680794865c180425b5665" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>setZnearZfar</name></member>
      <member refid="classViewportWindow_1aee46e5a209848e71ba604501907aa607" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>showCameraDist</name></member>
      <member refid="classViewportWindow_1a0d560b3611bd091a3e54d91eb5815784" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>showCameraFov</name></member>
      <member refid="classViewportWindow_1a4a10456c926a085bc2023c109bfae82f" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>showCameraPos</name></member>
      <member refid="classViewportWindow_1a127072eb8575ba118ed47066c34950d2" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>showCameraSpeed</name></member>
      <member refid="classViewportWindow_1a9c21c4f0ce7c1589e882fa9c50a480f7" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>showCameraStats</name></member>
      <member refid="classViewportWindow_1afc7970b8491df6e91711a468ac87b9f0" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>showCameraTurboSpeed</name></member>
      <member refid="classViewportWindow_1aded232fedee029f3a76635559b26d85b" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>showDagorUiCursor</name></member>
      <member refid="classViewportWindow_1a2bf17b98504b0023813d414fd0e9f1d5" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>showGizmoSettingsDialog</name></member>
      <member refid="classViewportWindow_1aa7a30bf83197ea06e8b855541c993c9b" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>showGridSettingsDialog</name></member>
      <member refid="classViewportWindow_1a12c86e264f31fcbb57f88711daf365e2" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>showStats</name></member>
      <member refid="classViewportWindow_1a1da22aa1156d92d160b14992e81b2a20" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>showStatSettingsDialog</name></member>
      <member refid="classViewportWindow_1aa2e36ae1fe8194702f8c85bd29520909" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>showViewportAxis</name></member>
      <member refid="classViewportWindow_1acb128d0c7f7f60712e05699eb20f66c9" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>startRectangularSelection</name></member>
      <member refid="classViewportWindow_1aa53d573aabfd8552c24f440a374ccb88" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>statSettingsDialog</name></member>
      <member refid="classViewportWindow_1ada5e44001b044211e5245f36c66d94ce" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>switchCamera</name></member>
      <member refid="classViewportWindow_1aa0b5ae8bdaaf1f8d39dc9de9523b50fc" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>type</name></member>
      <member refid="classViewportWindow_1ac3a9bbdb96db83fc0dab943298a0c8be" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>updateImgui</name></member>
      <member refid="classViewportWindow_1af03215bc127b366635acc416102330dd" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>updatePluginCamera</name></member>
      <member refid="classViewportWindow_1ad9112801ebe1cacfdee5cbe3f077520b" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>viewport</name></member>
      <member refid="classViewportWindow_1a0da28042dcedc2f59e7240e9b74bf88d" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>viewportCommandToName</name></member>
      <member refid="classViewportWindow_1aee1abf9676ce7b2703ec074fd889493c" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>viewportNameToCommand</name></member>
      <member refid="classViewportWindow_1ab93141e9cd7da908e7b9a270d6db1feb" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>viewportsParams</name></member>
      <member refid="classViewportWindow_1a51d8eb337adafc0914b3c496e04450ec" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>viewportTexture</name></member>
      <member refid="classViewportWindow_1a1bcf6c3540fa34bf5be72a089141c76d" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>viewportTextureSize</name></member>
      <member refid="classViewportWindow_1a9fa703e3330bb69aaf61c195a9e3ff59" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>ViewportWindow</name></member>
      <member refid="classViewportWindow_1ae26cdd85bbce74f5bf86e1d2a4ac3d4a" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>viewText</name></member>
      <member refid="classViewportWindow_1a86286145fa74bc1c5ceab8e736cb6774" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>vpId</name></member>
      <member refid="classViewportWindow_1ab23eb2e870fb1ae0626378484d50ff32" prot="protected" virt="non-virtual"><scope>ViewportWindow</scope><name>wireframeOverlay</name></member>
      <member refid="classViewportWindow_1a84010136ddc0b3d1621b9ff9d2a465fe" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>wireframeOverlayEnabled</name></member>
      <member refid="classViewportWindow_1ad3ca8e00ba430d01c53a3fe43e975ea4" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>worldToClient</name></member>
      <member refid="classViewportWindow_1aea969478327056d039ff90e0a947065e" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>worldToNDC</name></member>
      <member refid="classViewportWindow_1a671d5923b42d3bcb83cf7f5b0c515362" prot="public" virt="virtual"><scope>ViewportWindow</scope><name>zoomAndCenter</name></member>
      <member refid="classViewportWindow_1ac89e2122bf5fba72348849de697a1f3e" prot="public" virt="non-virtual"><scope>ViewportWindow</scope><name>~ViewportWindow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
