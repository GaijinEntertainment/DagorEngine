<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="structCameraConfig" kind="struct" language="C++" prot="public">
    <compoundname>CameraConfig</compoundname>
    <derivedcompoundref refid="structFpsCameraConfig" prot="public" virt="non-virtual">FpsCameraConfig</derivedcompoundref>
    <includes refid="ec__camera__dlg_8h" local="no">ec_camera_dlg.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structCameraConfig_1a45e059755be23ae1a48c7a7edf2ff5fc" prot="public" static="no" mutable="no">
        <type>real</type>
        <definition>real CameraConfig::moveStep</definition>
        <argsstring></argsstring>
        <name>moveStep</name>
        <qualifiedname>CameraConfig::moveStep</qualifiedname>
        <briefdescription>
<para>moveWnd step. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_camera_dlg.h" line="41" column="8" bodyfile="ec_camera_dlg.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCameraConfig_1a21528b862aa626c9487453e990d14c9c" prot="public" static="no" mutable="no">
        <type>real</type>
        <definition>real CameraConfig::rotationStep</definition>
        <argsstring></argsstring>
        <name>rotationStep</name>
        <qualifiedname>CameraConfig::rotationStep</qualifiedname>
        <briefdescription>
<para>Rotation step. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_camera_dlg.h" line="44" column="8" bodyfile="ec_camera_dlg.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCameraConfig_1a9d69289b1c797049162140ae8e9dd8ca" prot="public" static="no" mutable="no">
        <type>real</type>
        <definition>real CameraConfig::strifeStep</definition>
        <argsstring></argsstring>
        <name>strifeStep</name>
        <qualifiedname>CameraConfig::strifeStep</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Strafe step. For this version of Editor Core strifeStep == moveStep. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_camera_dlg.h" line="48" column="8" bodyfile="ec_camera_dlg.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCameraConfig_1afe04197a7270fc0bcbaf923d68caae08" prot="public" static="no" mutable="no">
        <type>real</type>
        <definition>real CameraConfig::controlMultiplier</definition>
        <argsstring></argsstring>
        <name>controlMultiplier</name>
        <qualifiedname>CameraConfig::controlMultiplier</qualifiedname>
        <briefdescription>
<para>Speed / rotation multiplier factor, acting when [Ctrl] key is held down. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_camera_dlg.h" line="51" column="8" bodyfile="ec_camera_dlg.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCameraConfig_1aa0e8652e3be842ae4b0f8d8b11007ee3" prot="public" static="no" mutable="no">
        <type>real</type>
        <definition>real CameraConfig::speedChangeMultiplier</definition>
        <argsstring></argsstring>
        <name>speedChangeMultiplier</name>
        <qualifiedname>CameraConfig::speedChangeMultiplier</qualifiedname>
        <briefdescription>
<para>Speed change multiplier factor when using the mouse wheel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_camera_dlg.h" line="54" column="8" bodyfile="ec_camera_dlg.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCameraConfig_1a2ef6e79a8f85139af9e82fd20e39daa4" prot="public" static="no" mutable="no">
        <type><ref refid="structInertia" kindref="compound">Inertia</ref></type>
        <definition>Inertia CameraConfig::commonInertia</definition>
        <argsstring></argsstring>
        <name>commonInertia</name>
        <qualifiedname>CameraConfig::commonInertia</qualifiedname>
        <briefdescription>
<para>Camera&apos;s moving inertia. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_camera_dlg.h" line="57" column="11" bodyfile="ec_camera_dlg.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCameraConfig_1a026422c7967d2889c442767cfd573716" prot="public" static="no" mutable="no">
        <type><ref refid="structInertia" kindref="compound">Inertia</ref></type>
        <definition>Inertia CameraConfig::hangInertia</definition>
        <argsstring></argsstring>
        <name>hangInertia</name>
        <qualifiedname>CameraConfig::hangInertia</qualifiedname>
        <briefdescription>
<para>Camera&apos;s rotation inertia in horizontal plane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_camera_dlg.h" line="60" column="11" bodyfile="ec_camera_dlg.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCameraConfig_1aee3364bf8c8f0d5ae3368fccf8f50834" prot="public" static="no" mutable="no">
        <type><ref refid="structInertia" kindref="compound">Inertia</ref></type>
        <definition>Inertia CameraConfig::vangInertia</definition>
        <argsstring></argsstring>
        <name>vangInertia</name>
        <qualifiedname>CameraConfig::vangInertia</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Camera&apos;s rotation inertia in vertical plane. For this version of Editor Core vangInertia == hangInertia. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_camera_dlg.h" line="64" column="11" bodyfile="ec_camera_dlg.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structCameraConfig_1a54e9f39130b0d340a840f8c2ad7bc838" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CameraConfig::load</definition>
        <argsstring>(const DataBlock &amp;blk)</argsstring>
        <name>load</name>
        <qualifiedname>CameraConfig::load</qualifiedname>
        <reimplementedby refid="structFpsCameraConfig_1a5445cb46ae718715ea4a90824210bece">load</reimplementedby>
        <reimplementedby refid="structTpsCameraConfig_1a287950993a12948ef484b8339b1bcda6">load</reimplementedby>
        <param>
          <type>const DataBlock &amp;</type>
          <declname>blk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load camera parameters from BLK file. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">blk</parametername>
</parameternamelist>
<parameterdescription>
<para>- Data Block that contains data to load (see #DataBlock) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_camera_dlg.h" line="68" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structCameraConfig_1ab674182e03b699e80aabbae6e33659c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CameraConfig::save</definition>
        <argsstring>(DataBlock &amp;blk)</argsstring>
        <name>save</name>
        <qualifiedname>CameraConfig::save</qualifiedname>
        <reimplementedby refid="structFpsCameraConfig_1acc4a923538646c12ec26d830cde799c4">save</reimplementedby>
        <reimplementedby refid="structTpsCameraConfig_1adb6d56edf8fcdf2cbc7e2028ce2cf231">save</reimplementedby>
        <param>
          <type>DataBlock &amp;</type>
          <declname>blk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save camera parameters to BLK file. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">blk</parametername>
</parameternamelist>
<parameterdescription>
<para>- Data Block that contains data to save (see #DataBlock) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_camera_dlg.h" line="72" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structCameraConfig_1a03e6228afa19acfc757e310781372b6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CameraConfig::CameraConfig</definition>
        <argsstring>()</argsstring>
        <name>CameraConfig</name>
        <qualifiedname>CameraConfig::CameraConfig</qualifiedname>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_camera_dlg.h" line="75" column="3" bodyfile="ec_camera_dlg.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structCameraConfig_1a11277a3ed6e860a07a0941631f295690" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual CameraConfig::~CameraConfig</definition>
        <argsstring>()</argsstring>
        <name>~CameraConfig</name>
        <qualifiedname>CameraConfig::~CameraConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_camera_dlg.h" line="76" column="11" bodyfile="ec_camera_dlg.h" bodystart="76" bodyend="76"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Camera parameters. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CameraConfig</label>
        <link refid="structCameraConfig"/>
      </node>
      <node id="2">
        <label>FpsCameraConfig</label>
        <link refid="structFpsCameraConfig"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>TpsCameraConfig</label>
        <link refid="structTpsCameraConfig"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CameraConfig</label>
        <link refid="structCameraConfig"/>
        <childnode refid="2" relation="usage">
          <edgelabel>commonInertia</edgelabel>
          <edgelabel>hangInertia</edgelabel>
          <edgelabel>vangInertia</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Inertia</label>
        <link refid="structInertia"/>
      </node>
    </collaborationgraph>
    <location file="ec_camera_dlg.h" line="38" column="1" bodyfile="ec_camera_dlg.h" bodystart="39" bodyend="77"/>
    <listofallmembers>
      <member refid="structCameraConfig_1a03e6228afa19acfc757e310781372b6e" prot="public" virt="non-virtual"><scope>CameraConfig</scope><name>CameraConfig</name></member>
      <member refid="structCameraConfig_1a2ef6e79a8f85139af9e82fd20e39daa4" prot="public" virt="non-virtual"><scope>CameraConfig</scope><name>commonInertia</name></member>
      <member refid="structCameraConfig_1afe04197a7270fc0bcbaf923d68caae08" prot="public" virt="non-virtual"><scope>CameraConfig</scope><name>controlMultiplier</name></member>
      <member refid="structCameraConfig_1a026422c7967d2889c442767cfd573716" prot="public" virt="non-virtual"><scope>CameraConfig</scope><name>hangInertia</name></member>
      <member refid="structCameraConfig_1a54e9f39130b0d340a840f8c2ad7bc838" prot="public" virt="virtual"><scope>CameraConfig</scope><name>load</name></member>
      <member refid="structCameraConfig_1a45e059755be23ae1a48c7a7edf2ff5fc" prot="public" virt="non-virtual"><scope>CameraConfig</scope><name>moveStep</name></member>
      <member refid="structCameraConfig_1a21528b862aa626c9487453e990d14c9c" prot="public" virt="non-virtual"><scope>CameraConfig</scope><name>rotationStep</name></member>
      <member refid="structCameraConfig_1ab674182e03b699e80aabbae6e33659c4" prot="public" virt="virtual"><scope>CameraConfig</scope><name>save</name></member>
      <member refid="structCameraConfig_1aa0e8652e3be842ae4b0f8d8b11007ee3" prot="public" virt="non-virtual"><scope>CameraConfig</scope><name>speedChangeMultiplier</name></member>
      <member refid="structCameraConfig_1a9d69289b1c797049162140ae8e9dd8ca" prot="public" virt="non-virtual"><scope>CameraConfig</scope><name>strifeStep</name></member>
      <member refid="structCameraConfig_1aee3364bf8c8f0d5ae3368fccf8f50834" prot="public" virt="non-virtual"><scope>CameraConfig</scope><name>vangInertia</name></member>
      <member refid="structCameraConfig_1a11277a3ed6e860a07a0941631f295690" prot="public" virt="virtual"><scope>CameraConfig</scope><name>~CameraConfig</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
