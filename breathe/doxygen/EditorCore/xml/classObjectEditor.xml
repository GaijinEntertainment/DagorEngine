<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="classObjectEditor" kind="class" language="C++" prot="public">
    <compoundname>ObjectEditor</compoundname>
    <basecompoundref refid="classIGizmoClient" prot="public" virt="non-virtual">IGizmoClient</basecompoundref>
    <basecompoundref refid="classIGenEventHandler" prot="public" virt="non-virtual">IGenEventHandler</basecompoundref>
    <basecompoundref refid="classIObjectsList" prot="public" virt="non-virtual">IObjectsList</basecompoundref>
    <basecompoundref refid="classIWndManagerWindowHandler" prot="public" virt="non-virtual">IWndManagerWindowHandler</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">PropPanel::IMenuEventHandler</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">PropPanel::ControlEventHandler</basecompoundref>
    <includes refid="ec__ObjectEditor_8h" local="no">ec_ObjectEditor.h</includes>
    <innerclass refid="classObjectEditor_1_1UndoAddObjects" prot="protected">ObjectEditor::UndoAddObjects</innerclass>
    <innerclass refid="classObjectEditor_1_1UndoObjectEditorRename" prot="protected">ObjectEditor::UndoObjectEditorRename</innerclass>
    <innerclass refid="classObjectEditor_1_1UndoRemoveObjects" prot="protected">ObjectEditor::UndoRemoveObjects</innerclass>
      <sectiondef kind="user-defined">
      <header>Methods for creating new objects</header>
      <memberdef kind="enum" id="classObjectEditor_1adc78f14aa1817913122b4760bb6613fb" prot="protected" static="no" strong="yes">
        <type></type>
        <name>PlacementRotation</name>
        <qualifiedname>ObjectEditor::PlacementRotation</qualifiedname>
        <enumvalue id="classObjectEditor_1adc78f14aa1817913122b4760bb6613fba18e30ece833d6ab1d781fcd8fe9d4d5d" prot="protected">
          <name>NO_ROTATION</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classObjectEditor_1adc78f14aa1817913122b4760bb6613fba27bf49dffba083d3a1f9ab7989eec344" prot="protected">
          <name>X_TO_NORMAL</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classObjectEditor_1adc78f14aa1817913122b4760bb6613fba97e6d0c5afaef7ed6044df80ecf70c8b" prot="protected">
          <name>Y_TO_NORMAL</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classObjectEditor_1adc78f14aa1817913122b4760bb6613fba574bf88cfe92163bfe6c802294140280" prot="protected">
          <name>Z_TO_NORMAL</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="413" column="3" bodyfile="ec_ObjectEditor.h" bodystart="414" bodyend="419"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a85c9cab275f3d6583c7df49f7356316e" prot="protected" static="no" mutable="no">
        <type>String</type>
        <definition>String ObjectEditor::objListOwnerName</definition>
        <argsstring></argsstring>
        <name>objListOwnerName</name>
        <qualifiedname>ObjectEditor::objListOwnerName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="406" column="10" bodyfile="ec_ObjectEditor.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a7955e82c322c5636b4b9bc6cbd2b1e5f" prot="protected" static="no" mutable="no">
        <type>PtrTab&lt; <ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> &gt;</type>
        <definition>PtrTab&lt;RenderableEditableObject&gt; ObjectEditor::objects</definition>
        <argsstring></argsstring>
        <name>objects</name>
        <qualifiedname>ObjectEditor::objects</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="408" column="10" bodyfile="ec_ObjectEditor.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a8d5f8bc97d8d4c7f4dbd7486f812dab1" prot="protected" static="no" mutable="no">
        <type>PtrTab&lt; <ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> &gt;</type>
        <definition>PtrTab&lt;RenderableEditableObject&gt; ObjectEditor::selection</definition>
        <argsstring></argsstring>
        <name>selection</name>
        <qualifiedname>ObjectEditor::selection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="408" column="18" bodyfile="ec_ObjectEditor.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1afc37220ca98fa4c1e6578f368980c133" prot="protected" static="no" mutable="no">
        <type>Point3</type>
        <definition>Point3 ObjectEditor::gizmoPt</definition>
        <argsstring></argsstring>
        <name>gizmoPt</name>
        <qualifiedname>ObjectEditor::gizmoPt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="410" column="10" bodyfile="ec_ObjectEditor.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a530d55f413d416ee0e72712e35f5210b" prot="protected" static="no" mutable="no">
        <type>Point3</type>
        <definition>Point3 ObjectEditor::gizmoOrigin</definition>
        <argsstring></argsstring>
        <name>gizmoOrigin</name>
        <qualifiedname>ObjectEditor::gizmoOrigin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="410" column="18" bodyfile="ec_ObjectEditor.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a14042ccbc157afb298bb42e10904ec29" prot="protected" static="no" mutable="no">
        <type>Point3</type>
        <definition>Point3 ObjectEditor::gizmoScl</definition>
        <argsstring></argsstring>
        <name>gizmoScl</name>
        <qualifiedname>ObjectEditor::gizmoScl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="410" column="30" bodyfile="ec_ObjectEditor.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1ade993aee3cb727702b54559bce4c3063" prot="protected" static="no" mutable="no">
        <type>Point3</type>
        <definition>Point3 ObjectEditor::gizmoRot</definition>
        <argsstring></argsstring>
        <name>gizmoRot</name>
        <qualifiedname>ObjectEditor::gizmoRot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="410" column="39" bodyfile="ec_ObjectEditor.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1ad74720f045d68e91d4d5aeeaed8f4089" prot="protected" static="no" mutable="no">
        <type>Point3</type>
        <definition>Point3 ObjectEditor::gizmoSclO</definition>
        <argsstring></argsstring>
        <name>gizmoSclO</name>
        <qualifiedname>ObjectEditor::gizmoSclO</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="410" column="48" bodyfile="ec_ObjectEditor.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1ac99d1f6d1d3eebd4b73224ada40401f2" prot="protected" static="no" mutable="no">
        <type>Point3</type>
        <definition>Point3 ObjectEditor::gizmoRotO</definition>
        <argsstring></argsstring>
        <name>gizmoRotO</name>
        <qualifiedname>ObjectEditor::gizmoRotO</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="410" column="58" bodyfile="ec_ObjectEditor.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a2dd8e9b6266d3c66ec8e2104756a2405" prot="protected" static="no" mutable="no">
        <type>Point3</type>
        <definition>Point3 ObjectEditor::gizmoRotPoint</definition>
        <argsstring></argsstring>
        <name>gizmoRotPoint</name>
        <qualifiedname>ObjectEditor::gizmoRotPoint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="410" column="68" bodyfile="ec_ObjectEditor.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1af27251a9ec4b025a6e794104bcd2a8c2" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ObjectEditor::isGizmoStarted</definition>
        <argsstring></argsstring>
        <name>isGizmoStarted</name>
        <qualifiedname>ObjectEditor::isGizmoStarted</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="411" column="8" bodyfile="ec_ObjectEditor.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1ad5e9e594d6fb7f97dd9d6faec14afe52" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ObjectEditor::areObjectPropsValid</definition>
        <argsstring></argsstring>
        <name>areObjectPropsValid</name>
        <qualifiedname>ObjectEditor::areObjectPropsValid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="411" column="23" bodyfile="ec_ObjectEditor.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a3d75fae8bf2df8ca823369613921373f" prot="protected" static="no" mutable="no">
        <type><ref refid="classObjectEditor_1adc78f14aa1817913122b4760bb6613fb" kindref="member">PlacementRotation</ref></type>
        <definition>PlacementRotation ObjectEditor::selectedPlacementRotation</definition>
        <argsstring></argsstring>
        <name>selectedPlacementRotation</name>
        <qualifiedname>ObjectEditor::selectedPlacementRotation</qualifiedname>
        <initializer>= <ref refid="classObjectEditor_1adc78f14aa1817913122b4760bb6613fba18e30ece833d6ab1d781fcd8fe9d4d5d" kindref="member">PlacementRotation::NO_ROTATION</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="420" column="21" bodyfile="ec_ObjectEditor.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a8fa5744df164af4f32149408f8111504" prot="protected" static="no" mutable="no">
        <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> *</type>
        <definition>RenderableEditableObject* ObjectEditor::sample</definition>
        <argsstring></argsstring>
        <name>sample</name>
        <qualifiedname>ObjectEditor::sample</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="423" column="28" bodyfile="ec_ObjectEditor.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a4a707218518d928b3c49095c563c1ce8" prot="protected" static="no" mutable="no">
        <type><ref refid="classIObjectCreator" kindref="compound">IObjectCreator</ref> *</type>
        <definition>IObjectCreator* ObjectEditor::creator</definition>
        <argsstring></argsstring>
        <name>creator</name>
        <qualifiedname>ObjectEditor::creator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="424" column="18" bodyfile="ec_ObjectEditor.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a83e0f35da5a388c58e98068896e6f68b" prot="protected" static="no" mutable="no">
        <type><ref refid="classObjectEditorPropPanelBar" kindref="compound">ObjectEditorPropPanelBar</ref> *</type>
        <definition>ObjectEditorPropPanelBar* ObjectEditor::objectPropBar</definition>
        <argsstring></argsstring>
        <name>objectPropBar</name>
        <qualifiedname>ObjectEditor::objectPropBar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="425" column="28" bodyfile="ec_ObjectEditor.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a629a1372972474c3a22f4367b7dd9fa9" prot="protected" static="no" mutable="no">
        <type>DataBlock</type>
        <definition>DataBlock ObjectEditor::objectPropSettings</definition>
        <argsstring></argsstring>
        <name>objectPropSettings</name>
        <qualifiedname>ObjectEditor::objectPropSettings</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="427" column="13" bodyfile="ec_ObjectEditor.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a6dfc90dfa23ede7ef644762e53472d1f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ObjectEditor::toolBarId</definition>
        <argsstring></argsstring>
        <name>toolBarId</name>
        <qualifiedname>ObjectEditor::toolBarId</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="516" column="7" bodyfile="ec_ObjectEditor.h" bodystart="516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1ab73529824db8f5aac8b9d0786068781e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ObjectEditor::editMode</definition>
        <argsstring></argsstring>
        <name>editMode</name>
        <qualifiedname>ObjectEditor::editMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="518" column="7" bodyfile="ec_ObjectEditor.h" bodystart="518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a10cc62338b4ea9816d48fd5148d3abf4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ObjectEditor::lastY</definition>
        <argsstring></argsstring>
        <name>lastY</name>
        <qualifiedname>ObjectEditor::lastY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="519" column="7" bodyfile="ec_ObjectEditor.h" bodystart="519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1afc62a9ae5f9d87a2d44b1aec278a7c6d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ObjectEditor::rotDy</definition>
        <argsstring></argsstring>
        <name>rotDy</name>
        <qualifiedname>ObjectEditor::rotDy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="520" column="7" bodyfile="ec_ObjectEditor.h" bodystart="520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a0e493c109b976e157c38a3055577818d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ObjectEditor::scaleDy</definition>
        <argsstring></argsstring>
        <name>scaleDy</name>
        <qualifiedname>ObjectEditor::scaleDy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="521" column="7" bodyfile="ec_ObjectEditor.h" bodystart="521" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a04666f599b532692929cd998c1bf3f15" prot="private" static="no" mutable="no">
        <type>real</type>
        <definition>real ObjectEditor::createRot</definition>
        <argsstring></argsstring>
        <name>createRot</name>
        <qualifiedname>ObjectEditor::createRot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="522" column="8" bodyfile="ec_ObjectEditor.h" bodystart="522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a225fd3bd74829c8d4e9a1edc68225632" prot="private" static="no" mutable="no">
        <type>real</type>
        <definition>real ObjectEditor::createScale</definition>
        <argsstring></argsstring>
        <name>createScale</name>
        <qualifiedname>ObjectEditor::createScale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="523" column="8" bodyfile="ec_ObjectEditor.h" bodystart="523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1ac7388ee040d0ee94995d7383f072e5b3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ObjectEditor::canTransformOnCreate</definition>
        <argsstring></argsstring>
        <name>canTransformOnCreate</name>
        <qualifiedname>ObjectEditor::canTransformOnCreate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="524" column="8" bodyfile="ec_ObjectEditor.h" bodystart="524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a808293b2f15d315f540f98eb5fd51a0a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ObjectEditor::justCreated</definition>
        <argsstring></argsstring>
        <name>justCreated</name>
        <qualifiedname>ObjectEditor::justCreated</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="525" column="8" bodyfile="ec_ObjectEditor.h" bodystart="525" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a8a6e247a781f7ca76b90752db58373ff" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ObjectEditor::pressedRightMouseButtonWhileCreating</definition>
        <argsstring></argsstring>
        <name>pressedRightMouseButtonWhileCreating</name>
        <qualifiedname>ObjectEditor::pressedRightMouseButtonWhileCreating</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="526" column="8" bodyfile="ec_ObjectEditor.h" bodystart="526" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a4f9833f570e4b4849e445b583ff05beb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ObjectEditor::updateViewportGizmo</definition>
        <argsstring></argsstring>
        <name>updateViewportGizmo</name>
        <qualifiedname>ObjectEditor::updateViewportGizmo</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="527" column="8" bodyfile="ec_ObjectEditor.h" bodystart="527" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1af8e1a7ca4ba6ab883ffcbd13904f5ceb" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ObjectEditor::suffixDigitsCount</definition>
        <argsstring></argsstring>
        <name>suffixDigitsCount</name>
        <qualifiedname>ObjectEditor::suffixDigitsCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="529" column="7" bodyfile="ec_ObjectEditor.h" bodystart="529" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a8c288c6c86d75968502fd3c9f340467d" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String ObjectEditor::filterString</definition>
        <argsstring></argsstring>
        <name>filterString</name>
        <qualifiedname>ObjectEditor::filterString</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="530" column="10" bodyfile="ec_ObjectEditor.h" bodystart="530" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a5db58bf2a1edb455fb74155671ec007b" prot="private" static="no" mutable="no">
        <type>Tab&lt; SimpleString &gt;</type>
        <definition>Tab&lt;SimpleString&gt; ObjectEditor::filterStrings</definition>
        <argsstring></argsstring>
        <name>filterStrings</name>
        <qualifiedname>ObjectEditor::filterStrings</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="531" column="7" bodyfile="ec_ObjectEditor.h" bodystart="531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a6c3c1022b10709f9ac432b19a45f7b1d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ObjectEditor::invFilter</definition>
        <argsstring></argsstring>
        <name>invFilter</name>
        <qualifiedname>ObjectEditor::invFilter</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="532" column="8" bodyfile="ec_ObjectEditor.h" bodystart="532" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classObjectEditor_1a3dea0cdd151c35cb95f1578052f846eb" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool ObjectEditor::placeTypeRadio</definition>
        <argsstring></argsstring>
        <name>placeTypeRadio</name>
        <qualifiedname>ObjectEditor::placeTypeRadio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="534" column="15" bodyfile="ec_ObjectEditor.h" bodystart="534" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1afa568d69a6ec764d6757299f7f0a286b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::setCreateMode</definition>
        <argsstring>(IObjectCreator *creator=NULL)</argsstring>
        <name>setCreateMode</name>
        <qualifiedname>ObjectEditor::setCreateMode</qualifiedname>
        <param>
          <type><ref refid="classIObjectCreator" kindref="compound">IObjectCreator</ref> *</type>
          <declname>creator</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called to start or stop object creation mode. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">creator</parametername>
</parameternamelist>
<parameterdescription>
<para>- creator to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="381" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1aba822681258b9e904b5bcfadb2e28fb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::setCreateBySampleMode</definition>
        <argsstring>(RenderableEditableObject *sample=NULL)</argsstring>
        <name>setCreateBySampleMode</name>
        <qualifiedname>ObjectEditor::setCreateBySampleMode</qualifiedname>
        <param>
          <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> *</type>
          <declname>sample</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called to start or stop object creation mode. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sample</parametername>
</parameternamelist>
<parameterdescription>
<para>- object to clone </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="384" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1aef92e9c1d02ebea34736c91a09ecfb03" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::createObject</definition>
        <argsstring>(IObjectCreator *creator)</argsstring>
        <name>createObject</name>
        <qualifiedname>ObjectEditor::createObject</qualifiedname>
        <param>
          <type><ref refid="classIObjectCreator" kindref="compound">IObjectCreator</ref> *</type>
          <declname>creator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>this method can be overrided to create objects default implementation does nothing, but finishes creation process <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">creator</parametername>
</parameternamelist>
<parameterdescription>
<para>- creator to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="389" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1ac9c3e289e5d40daf78fb519e9dd893f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::createObjectBySample</definition>
        <argsstring>(RenderableEditableObject *sample)</argsstring>
        <name>createObjectBySample</name>
        <qualifiedname>ObjectEditor::createObjectBySample</qualifiedname>
        <param>
          <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> *</type>
          <declname>sample</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>this method can be overrided to create objects default implementation does nothing <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sample</parametername>
</parameternamelist>
<parameterdescription>
<para>- object to clone </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="394" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a1477941cda27b85ad738db3a576a0999" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::registerViewportAccelerators</definition>
        <argsstring>(IWndManager &amp;wndManager)</argsstring>
        <name>registerViewportAccelerators</name>
        <qualifiedname>ObjectEditor::registerViewportAccelerators</qualifiedname>
        <param>
          <type><ref refid="classIWndManager" kindref="compound">IWndManager</ref> &amp;</type>
          <declname>wndManager</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="397" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a60b0d9fa0da7bbd9a2060558533450fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ObjectEditor::onMenuItemClick</definition>
        <argsstring>(unsigned id) override</argsstring>
        <name>onMenuItemClick</name>
        <qualifiedname>ObjectEditor::onMenuItemClick</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="400" column="7" bodyfile="ec_ObjectEditor.h" bodystart="400" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a73e17749bf1f490137f575cc7af3d4ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ObjectEditor::getPlaceTypeRadio</definition>
        <argsstring>()</argsstring>
        <name>getPlaceTypeRadio</name>
        <qualifiedname>ObjectEditor::getPlaceTypeRadio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="402" column="15" bodyfile="ec_ObjectEditor.h" bodystart="402" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1add973cf8791dcc588c07490492955ade" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ObjectEditor::setPlaceTypeRadio</definition>
        <argsstring>(bool is_radio)</argsstring>
        <name>setPlaceTypeRadio</name>
        <qualifiedname>ObjectEditor::setPlaceTypeRadio</qualifiedname>
        <param>
          <type>bool</type>
          <declname>is_radio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="403" column="15" bodyfile="ec_ObjectEditor.h" bodystart="403" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a68622142830f930c2ec309938790249f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TMatrix</type>
        <definition>TMatrix ObjectEditor::getPlacementRotationMatrix</definition>
        <argsstring>()</argsstring>
        <name>getPlacementRotationMatrix</name>
        <qualifiedname>ObjectEditor::getPlacementRotationMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="421" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a23a9b783784bdfb60b5209c49e7abd09" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::onAddObject</definition>
        <argsstring>(RenderableEditableObject &amp;obj)</argsstring>
        <name>onAddObject</name>
        <qualifiedname>ObjectEditor::onAddObject</qualifiedname>
        <param>
          <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="429" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1ae674eec0c4f4792f00855f03f276721c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::_addObjects</definition>
        <argsstring>(RenderableEditableObject **obj, int num, bool use_undo)</argsstring>
        <name>_addObjects</name>
        <qualifiedname>ObjectEditor::_addObjects</qualifiedname>
        <param>
          <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> **</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_undo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="430" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a29e2a82766e4115ccb7e50227aa76596" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::onRemoveObject</definition>
        <argsstring>(RenderableEditableObject &amp;obj)</argsstring>
        <name>onRemoveObject</name>
        <qualifiedname>ObjectEditor::onRemoveObject</qualifiedname>
        <param>
          <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="431" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a45b95438eb347e4ff1499c6e967fc6a6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::_removeObjects</definition>
        <argsstring>(RenderableEditableObject **obj, int num, bool use_undo)</argsstring>
        <name>_removeObjects</name>
        <qualifiedname>ObjectEditor::_removeObjects</qualifiedname>
        <param>
          <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> **</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_undo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="432" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a33e8a309dd9a3064eabc94f94170482c" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Point3</type>
        <definition>virtual Point3 ObjectEditor::getSurfMoveGizmoPos</definition>
        <argsstring>(const Point3 &amp;obj_pos) const</argsstring>
        <name>getSurfMoveGizmoPos</name>
        <qualifiedname>ObjectEditor::getSurfMoveGizmoPos</qualifiedname>
        <param>
          <type>const Point3 &amp;</type>
          <declname>obj_pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="434" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1af0872d85be287fd4c5656ba0f6f7d8f2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classObjectEditorPropPanelBar" kindref="compound">ObjectEditorPropPanelBar</ref> *</type>
        <definition>virtual ObjectEditorPropPanelBar * ObjectEditor::createEditorPropBar</definition>
        <argsstring>(void *handle)</argsstring>
        <name>createEditorPropBar</name>
        <qualifiedname>ObjectEditor::createEditorPropBar</qualifiedname>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="436" column="36"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1abf649340b538ed27c8a35be439a04e0c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::saveEditorPropBarSettings</definition>
        <argsstring>()</argsstring>
        <name>saveEditorPropBarSettings</name>
        <qualifiedname>ObjectEditor::saveEditorPropBarSettings</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="438" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a22d1d9ae4e916aca3676ae927de9e51d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>void * ObjectEditor::onWmCreateWindow</definition>
        <argsstring>(int type) override</argsstring>
        <name>onWmCreateWindow</name>
        <qualifiedname>ObjectEditor::onWmCreateWindow</qualifiedname>
        <reimplements refid="classIWndManagerWindowHandler_1a865fba33d1ebff3cabfc2632dd7b0af5">onWmCreateWindow</reimplements>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="441" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a586321103d357916ce14cc0147a25d96" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ObjectEditor::onWmDestroyWindow</definition>
        <argsstring>(void *window) override</argsstring>
        <name>onWmDestroyWindow</name>
        <qualifiedname>ObjectEditor::onWmDestroyWindow</qualifiedname>
        <reimplements refid="classIWndManagerWindowHandler_1a0544cf22f55b82be59fb0850d0dfdfde">onWmDestroyWindow</reimplements>
        <param>
          <type>void *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="442" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1aa909a612b8c0916c241381287aee9fdc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ObjectEditor::onClick</definition>
        <argsstring>(int pcb_id, PropPanel::ContainerPropertyControl *panel) override</argsstring>
        <name>onClick</name>
        <qualifiedname>ObjectEditor::onClick</qualifiedname>
        <param>
          <type>int</type>
          <declname>pcb_id</declname>
        </param>
        <param>
          <type>PropPanel::ContainerPropertyControl *</type>
          <declname>panel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="445" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a274b31396094cc8b8b31448585e9c7ce" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ObjectEditor::onChange</definition>
        <argsstring>(int pcb_id, PropPanel::ContainerPropertyControl *panel) override</argsstring>
        <name>onChange</name>
        <qualifiedname>ObjectEditor::onChange</qualifiedname>
        <param>
          <type>int</type>
          <declname>pcb_id</declname>
        </param>
        <param>
          <type>PropPanel::ContainerPropertyControl *</type>
          <declname>panel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="446" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1adb75acc082875b8fcfd94250500fd6ea" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::moveObjects</definition>
        <argsstring>(PtrTab&lt; RenderableEditableObject &gt; &amp;obj, const Point3 &amp;delta, IEditorCoreEngine::BasisType basis)</argsstring>
        <name>moveObjects</name>
        <qualifiedname>ObjectEditor::moveObjects</qualifiedname>
        <param>
          <type>PtrTab&lt; <ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> &gt; &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const Point3 &amp;</type>
          <declname>delta</declname>
        </param>
        <param>
          <type><ref refid="classIEditorCoreEngine_1aa5e65738760339984ca2e44e7b5f75df" kindref="member">IEditorCoreEngine::BasisType</ref></type>
          <declname>basis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="448" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1af78ae83fdc07f464a2f77294ad3b4a63" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::fillSelectionMenu</definition>
        <argsstring>(IGenViewportWnd *wnd, PropPanel::IMenu *menu)</argsstring>
        <name>fillSelectionMenu</name>
        <qualifiedname>ObjectEditor::fillSelectionMenu</qualifiedname>
        <param>
          <type><ref refid="classIGenViewportWnd" kindref="compound">IGenViewportWnd</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>PropPanel::IMenu *</type>
          <declname>menu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="450" column="16" bodyfile="ec_ObjectEditor.h" bodystart="450" bodyend="450"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Implementation of IObjectsList methods for selecting objects by name</header>
      <memberdef kind="function" id="classObjectEditor_1aeea49638bb9e5e9545b6552d18a8c08e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ObjectEditor::getObjNames</definition>
        <argsstring>(Tab&lt; String &gt; &amp;names, Tab&lt; String &gt; &amp;sel_names, const Tab&lt; int &gt; &amp;types) override</argsstring>
        <name>getObjNames</name>
        <qualifiedname>ObjectEditor::getObjNames</qualifiedname>
        <reimplements refid="classIObjectsList_1a21571434a359d8055320e9f5d17700a6">getObjNames</reimplements>
        <param>
          <type>Tab&lt; String &gt; &amp;</type>
          <declname>names</declname>
        </param>
        <param>
          <type>Tab&lt; String &gt; &amp;</type>
          <declname>sel_names</declname>
        </param>
        <param>
          <type>const Tab&lt; int &gt; &amp;</type>
          <declname>types</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get objects names. The function passes object names to dialog window. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">names</parametername>
</parameternamelist>
<parameterdescription>
<para>- list of objects names </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">sel_names</parametername>
</parameternamelist>
<parameterdescription>
<para>- list of selected objects names </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">types</parametername>
</parameternamelist>
<parameterdescription>
<para>- list of object types to be represented. Defined as a list of indexes. To get full list of types use <ref refid="classObjectEditor_1ac60f0e8313a36e54f856e62ca37c5bd1" kindref="member">getTypeNames()</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="55" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1ac60f0e8313a36e54f856e62ca37c5bd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void ObjectEditor::getTypeNames</definition>
        <argsstring>(Tab&lt; String &gt; &amp;names) override</argsstring>
        <name>getTypeNames</name>
        <qualifiedname>ObjectEditor::getTypeNames</qualifiedname>
        <reimplements refid="classIObjectsList_1a5c30a6adaa4b9121e27f5b9b438d10b0">getTypeNames</reimplements>
        <param>
          <type>Tab&lt; String &gt; &amp;</type>
          <declname>names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get objects types. The function passes object types to dialog window. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">names</parametername>
</parameternamelist>
<parameterdescription>
<para>- list of objects types </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="56" column="8" bodyfile="ec_ObjectEditor.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1aa95f1d94406f056fb57aa40287f6b828" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ObjectEditor::onSelectedNames</definition>
        <argsstring>(const Tab&lt; String &gt; &amp;names) override</argsstring>
        <name>onSelectedNames</name>
        <qualifiedname>ObjectEditor::onSelectedNames</qualifiedname>
        <reimplements refid="classIObjectsList_1a0775f9b9b9349c4f217682478631ced6">onSelectedNames</reimplements>
        <param>
          <type>const Tab&lt; String &gt; &amp;</type>
          <declname>names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Informs client code about selecting / deselecting objects in list. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">names</parametername>
</parameternamelist>
<parameterdescription>
<para>- names list of selected objects </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="57" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1ad931bb5d3875e94cc901c7766d97fdfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>UndoSystem *</type>
        <definition>virtual UndoSystem * ObjectEditor::getUndoSystem</definition>
        <argsstring>()</argsstring>
        <name>getUndoSystem</name>
        <qualifiedname>ObjectEditor::getUndoSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get Undo system. Get <ref refid="classObjectEditor" kindref="compound">ObjectEditor</ref>&apos;s Undo system. Default implementation returns global Undo system of the Editor. Override this method if you need local Undo system. <simplesect kind="return"><para>pointer to <ref refid="classObjectEditor" kindref="compound">ObjectEditor</ref>&apos;s Undo system </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="66" column="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>ToolBar methods, useful button functions.</header>
      <memberdef kind="function" id="classObjectEditor_1af878bc2243d895f491c97e6b137d1406" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::initUi</definition>
        <argsstring>(int toolbar_id)</argsstring>
        <name>initUi</name>
        <qualifiedname>ObjectEditor::initUi</qualifiedname>
        <param>
          <type>int</type>
          <declname>toolbar_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize User Interface of an Object Editor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">toolbar_id</parametername>
</parameternamelist>
<parameterdescription>
<para>- toolbar&apos;s id to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="74" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1ae07338f1db6fbf63b53842623b7193c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::closeUi</definition>
        <argsstring>()</argsstring>
        <name>closeUi</name>
        <qualifiedname>ObjectEditor::closeUi</qualifiedname>
        <briefdescription>
<para>Close User Interface of an Object Editor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="76" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1aa80f2faefc8ae4d32d5f24fb5bf8f8a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::fillToolBar</definition>
        <argsstring>(PropPanel::ContainerPropertyControl *toolbar)</argsstring>
        <name>fillToolBar</name>
        <qualifiedname>ObjectEditor::fillToolBar</qualifiedname>
        <param>
          <type>PropPanel::ContainerPropertyControl *</type>
          <declname>toolbar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill ToolBar with buttons (called from <ref refid="classObjectEditor_1af878bc2243d895f491c97e6b137d1406" kindref="member">initUi()</ref>). Override to add custom buttons to toolbar. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="80" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a1ad0cc9166dc49cc33f78ac1d2a7a034" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::addButton</definition>
        <argsstring>(PropPanel::ContainerPropertyControl *tb, int id, const char *bmp_name, const char *hint, bool check=false)</argsstring>
        <name>addButton</name>
        <qualifiedname>ObjectEditor::addButton</qualifiedname>
        <param>
          <type>PropPanel::ContainerPropertyControl *</type>
          <declname>tb</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>bmp_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hint</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>check</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add button to toolbar. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tb</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to toolbar </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>- button command id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bmp_name</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to button&apos;s bitmap name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hint</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to hint string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">check</parametername>
</parameternamelist>
<parameterdescription>
<para>- is check button </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="88" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1adc3517d944774a69e4a164e0073ff705" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::enableButton</definition>
        <argsstring>(int id, bool state)</argsstring>
        <name>enableButton</name>
        <qualifiedname>ObjectEditor::enableButton</qualifiedname>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable button. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>- button ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>true / false</bold>: enabled / disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="93" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a31e5eef953343c08edd1ecfa367601f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::setButton</definition>
        <argsstring>(int id, bool state)</argsstring>
        <name>setButton</name>
        <qualifiedname>ObjectEditor::setButton</qualifiedname>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set check-like button state. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>- button ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>true / false</bold>: checked / not checked </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="98" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1ab94531916daf3661c4272137992ae53d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::setRadioButton</definition>
        <argsstring>(int id, int value_id)</argsstring>
        <name>setRadioButton</name>
        <qualifiedname>ObjectEditor::setRadioButton</qualifiedname>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set Radio Button state (calls setButton(tb, id, value_id==id)). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>- button ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value_id</parametername>
</parameternamelist>
<parameterdescription>
<para>- if value_id==id set specified radio button on (other buttons of button&apos;s groop are set to off) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="104" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a74dd2b5115695645a1f0c4047daf7db2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::updateToolbarButtons</definition>
        <argsstring>()</argsstring>
        <name>updateToolbarButtons</name>
        <qualifiedname>ObjectEditor::updateToolbarButtons</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update toolbar buttons (check-like and radio buttons) state. Override if custom buttons are added to toolbar. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="108" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a363ebb83d6f5f743cc453ce142cf0176" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::selectByNameDlg</definition>
        <argsstring>()</argsstring>
        <name>selectByNameDlg</name>
        <qualifiedname>ObjectEditor::selectByNameDlg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open &apos;Select by name&apos; dialog window to select objects from objects list by name. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="114" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1ae3390f22cdd1d073ae81e577231193f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::dropObjects</definition>
        <argsstring>()</argsstring>
        <name>dropObjects</name>
        <qualifiedname>ObjectEditor::dropObjects</qualifiedname>
        <briefdescription>
<para>Drop selected objects on surface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="117" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a041713e9a44584a061ea24d26127e36d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::setEditMode</definition>
        <argsstring>(int mode)</argsstring>
        <name>setEditMode</name>
        <qualifiedname>ObjectEditor::setEditMode</qualifiedname>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set Edit Mode. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>- Edit mode: <linebreak/>
 - CM_OBJED_MODE_SELECT - &apos;Select&apos; mode <linebreak/>
 - CM_OBJED_MODE_MOVE - &apos;Move&apos; mode <linebreak/>
 - CM_OBJED_MODE_SURF_MOVE - &apos;Surface move&apos; mode <linebreak/>
 - CM_OBJED_MODE_ROTATE - &apos;Rotate&apos; mode <linebreak/>
 - CM_OBJED_MODE_SCALE - &apos;Scale&apos; mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="126" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a9de708e0e143e869dde8758ca3c5f952" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::showPanel</definition>
        <argsstring>()</argsstring>
        <name>showPanel</name>
        <qualifiedname>ObjectEditor::showPanel</qualifiedname>
        <briefdescription>
<para>Show/hide Property Panel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="129" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a2bd1b6e56cd0f0502686d0d71c57e67d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ObjectEditor::isPanelShown</definition>
        <argsstring>() const</argsstring>
        <name>isPanelShown</name>
        <qualifiedname>ObjectEditor::isPanelShown</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="131" column="8" bodyfile="ec_ObjectEditor.h" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1af6b27f18cb108e87ca68404ce50ffe11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PropPanel::ContainerPropertyControl *</type>
        <definition>PropPanel::ContainerPropertyControl * ObjectEditor::createPanelGroup</definition>
        <argsstring>(int pid)</argsstring>
        <name>createPanelGroup</name>
        <qualifiedname>ObjectEditor::createPanelGroup</qualifiedname>
        <param>
          <type>int</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create custom groups on visible panel with a given pid. Property panel implementation handles the creation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="135" column="39"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a967a9eb10496348f682c7e33f53000a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::createPanelTransform</definition>
        <argsstring>(int mode)</argsstring>
        <name>createPanelTransform</name>
        <qualifiedname>ObjectEditor::createPanelTransform</qualifiedname>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create editable object transform controls on the panel for a given edit mode. Property panel implementation handles the creation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="139" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1aa8e12c9a1d8bce8b690d221e39b516aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ObjectEditor::loadPropPanelSettings</definition>
        <argsstring>(const DataBlock &amp;settings)</argsstring>
        <name>loadPropPanelSettings</name>
        <qualifiedname>ObjectEditor::loadPropPanelSettings</qualifiedname>
        <param>
          <type>const DataBlock &amp;</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="141" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a8ab0cacdedd4cd5735931635004ab57c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ObjectEditor::savePropPanelSettings</definition>
        <argsstring>(DataBlock &amp;settings)</argsstring>
        <name>savePropPanelSettings</name>
        <qualifiedname>ObjectEditor::savePropPanelSettings</qualifiedname>
        <param>
          <type>DataBlock &amp;</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="142" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a5d219d2617739400db47c6a59694ea08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int ObjectEditor::getEditMode</definition>
        <argsstring>()</argsstring>
        <name>getEditMode</name>
        <qualifiedname>ObjectEditor::getEditMode</qualifiedname>
        <briefdescription>
<para>Get Edit Mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="145" column="15" bodyfile="ec_ObjectEditor.h" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a7f3efb547428251d54ac185117818b33" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::updateGizmo</definition>
        <argsstring>(int basis=IEditorCoreEngine::BASIS_None, int *modeOverride=nullptr)</argsstring>
        <name>updateGizmo</name>
        <qualifiedname>ObjectEditor::updateGizmo</qualifiedname>
        <param>
          <type>int</type>
          <declname>basis</declname>
          <defval><ref refid="classIEditorCoreEngine_1aa5e65738760339984ca2e44e7b5f75dfacf77cddea3189155f1cfcca9c6968a44" kindref="member">IEditorCoreEngine::BASIS_None</ref></defval>
        </param>
        <param>
          <type>int *</type>
          <declname>modeOverride</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Update Gizmo state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="150" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a65032f840ce2caabd94410fdd3636415" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool ObjectEditor::getUpdateViewportGizmo</definition>
        <argsstring>() const</argsstring>
        <name>getUpdateViewportGizmo</name>
        <qualifiedname>ObjectEditor::getUpdateViewportGizmo</qualifiedname>
        <briefdescription>
<para>Get/set the flag indicating viewport state invalidation of gizmo on state update. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="153" column="16" bodyfile="ec_ObjectEditor.h" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a01788a670f3a55c3513e28cab21ec6a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::setUpdateViewportGizmo</definition>
        <argsstring>(bool update)</argsstring>
        <name>setUpdateViewportGizmo</name>
        <qualifiedname>ObjectEditor::setUpdateViewportGizmo</qualifiedname>
        <param>
          <type>bool</type>
          <declname>update</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="154" column="16" bodyfile="ec_ObjectEditor.h" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a35b4f43136885c3ac20d0b68534547e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool ObjectEditor::setUniqName</definition>
        <argsstring>(RenderableEditableObject *o, const char *n)</argsstring>
        <name>setUniqName</name>
        <qualifiedname>ObjectEditor::setUniqName</qualifiedname>
        <param>
          <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> *</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Make from n (if needed) and set uniq name for object o. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="157" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a44c916639c812903d3c8aba4fa8271a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ObjectEditor::setSuffixDigitsCount</definition>
        <argsstring>(int c)</argsstring>
        <name>setSuffixDigitsCount</name>
        <qualifiedname>ObjectEditor::setSuffixDigitsCount</qualifiedname>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="158" column="8" bodyfile="ec_ObjectEditor.h" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1aae5701c00bdb3ba1295740a53f25728d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::getLayerNames</definition>
        <argsstring>(int type, Tab&lt; String &gt; &amp;names)</argsstring>
        <name>getLayerNames</name>
        <qualifiedname>ObjectEditor::getLayerNames</qualifiedname>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>Tab&lt; String &gt; &amp;</type>
          <declname>names</declname>
        </param>
        <briefdescription>
<para>Get layer names for a given object type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="161" column="16" bodyfile="ec_ObjectEditor.h" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a91ad951df8edeb71340cf0b5b75c68ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classIEditorCoreEngine_1ac0d075ac36ece35fd29aa489e2542d06" kindref="member">IEditorCoreEngine::ModeType</ref></type>
        <definition>static IEditorCoreEngine::ModeType ObjectEditor::editModeToModeType</definition>
        <argsstring>(int editMode)</argsstring>
        <name>editModeToModeType</name>
        <qualifiedname>ObjectEditor::editModeToModeType</qualifiedname>
        <param>
          <type>int</type>
          <declname>editMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="147" column="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Editing objects (add, remove, render).</header>
      <memberdef kind="function" id="classObjectEditor_1a79ef735d8d4894ff1a960057dbf255f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::addObjects</definition>
        <argsstring>(RenderableEditableObject **obj, int num, bool use_undo=true)</argsstring>
        <name>addObjects</name>
        <qualifiedname>ObjectEditor::addObjects</qualifiedname>
        <param>
          <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> **</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_undo</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add objects to Editor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>- array of pointers to objects to add to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num</parametername>
</parameternamelist>
<parameterdescription>
<para>- number of objects to add to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">use_undo</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>true / false: use / not use</bold> undo system </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="170" column="16" bodyfile="ec_ObjectEditor.h" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a51d68290950c49098619d8cb4e0f8bdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::removeObjects</definition>
        <argsstring>(RenderableEditableObject **obj, int num, bool use_undo=true)</argsstring>
        <name>removeObjects</name>
        <qualifiedname>ObjectEditor::removeObjects</qualifiedname>
        <param>
          <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> **</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_undo</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove objects from Editor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>- array of pointers to objects to remove </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num</parametername>
</parameternamelist>
<parameterdescription>
<para>- number of objects to remove </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">use_undo</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>true / false: use / not use</bold> undo system </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="176" column="16" bodyfile="ec_ObjectEditor.h" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a8041995fe76006a51853bc7705a11187" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::removeAllObjects</definition>
        <argsstring>(bool use_undo=true)</argsstring>
        <name>removeAllObjects</name>
        <qualifiedname>ObjectEditor::removeAllObjects</qualifiedname>
        <param>
          <type>bool</type>
          <declname>use_undo</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove all objects from Editor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">use_undo</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>true / false: use / not use</bold> undo system </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="180" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a1cf3995e754719fdbb0841e86252461e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ObjectEditor::addObject</definition>
        <argsstring>(RenderableEditableObject *obj, bool use_undo=true)</argsstring>
        <name>addObject</name>
        <qualifiedname>ObjectEditor::addObject</qualifiedname>
        <param>
          <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_undo</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add one object to Editor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to object to add to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="184" column="8" bodyfile="ec_ObjectEditor.h" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1aa2ef952c605e09638dcba75c866046e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ObjectEditor::removeObject</definition>
        <argsstring>(RenderableEditableObject *obj, bool use_undo=true)</argsstring>
        <name>removeObject</name>
        <qualifiedname>ObjectEditor::removeObject</qualifiedname>
        <param>
          <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_undo</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove one object from Editor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to object to remove </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">use_undo</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>true / false: use / not use</bold> undo system </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="189" column="8" bodyfile="ec_ObjectEditor.h" bodystart="189" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1aa41dfc5f741e0540896ec975fc494eb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::update</definition>
        <argsstring>(real dt)</argsstring>
        <name>update</name>
        <qualifiedname>ObjectEditor::update</qualifiedname>
        <param>
          <type>real</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update objects, Gizmo, etc in accordance with time specified. Should be called from outside the <ref refid="classObjectEditor" kindref="compound">ObjectEditor</ref> in order it may properly function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>- time passed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="195" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1ac0aaa7d53a6f5dc145ba29a50292fa43" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::beforeRender</definition>
        <argsstring>()</argsstring>
        <name>beforeRender</name>
        <qualifiedname>ObjectEditor::beforeRender</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prepare objects for rendering. Should be called from outside the <ref refid="classObjectEditor" kindref="compound">ObjectEditor</ref> in order it may properly function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="200" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1ac7068c45dd56f34c8dbf9fad9a150f01" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::render</definition>
        <argsstring>()</argsstring>
        <name>render</name>
        <qualifiedname>ObjectEditor::render</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Render opaque objects parts. Should be called from outside the <ref refid="classObjectEditor" kindref="compound">ObjectEditor</ref> in order it may properly function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="205" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a3abff3fac84152c565d5522ef770f494" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::renderTrans</definition>
        <argsstring>()</argsstring>
        <name>renderTrans</name>
        <qualifiedname>ObjectEditor::renderTrans</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Render transparent objects parts. Should be called from outside the <ref refid="classObjectEditor" kindref="compound">ObjectEditor</ref> in order it may properly function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="210" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a3b09936d61e5796bea3fd1554f4eb208" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::updateImgui</definition>
        <argsstring>()</argsstring>
        <name>updateImgui</name>
        <qualifiedname>ObjectEditor::updateImgui</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="213" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Editing objects (object count, get objects, etc).</header>
      <memberdef kind="function" id="classObjectEditor_1aac66c1f2dbd63791f8e00bd819e55ec6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ObjectEditor::objectCount</definition>
        <argsstring>() const</argsstring>
        <name>objectCount</name>
        <qualifiedname>ObjectEditor::objectCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get object count. <simplesect kind="return"><para>object count </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="221" column="7" bodyfile="ec_ObjectEditor.h" bodystart="221" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a71746b6e550a06189e049d31075c8825" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> *</type>
        <definition>RenderableEditableObject * ObjectEditor::getObject</definition>
        <argsstring>(int index) const</argsstring>
        <name>getObject</name>
        <qualifiedname>ObjectEditor::getObject</qualifiedname>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get object from objects list by index. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>- object index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="226" column="28" bodyfile="ec_ObjectEditor.h" bodystart="226" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1ac6150a9aaa632f60f9a4b2377f831098" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> *</type>
        <definition>RenderableEditableObject * ObjectEditor::getObjectByName</definition>
        <argsstring>(const char *name) const</argsstring>
        <name>getObjectByName</name>
        <qualifiedname>ObjectEditor::getObjectByName</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get object by name (case insensitive). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to name string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to object. If there are many appropriate objects then function returns pointer to the first object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="236" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1aaf357ba44ede8b7f20c20b98a6e2d25b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> *</type>
        <definition>RenderableEditableObject * ObjectEditor::pickObject</definition>
        <argsstring>(IGenViewportWnd *wnd, int x, int y)</argsstring>
        <name>pickObject</name>
        <qualifiedname>ObjectEditor::pickObject</qualifiedname>
        <param>
          <type><ref refid="classIGenViewportWnd" kindref="compound">IGenViewportWnd</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pick one object in viewport point having specified coordinates. Hidden and frozen objects are ignored. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wnd</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to viewport window </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>- x,y point coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the first object found </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="243" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a9f902807eb9fa9fb41a9ece74637ece0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool ObjectEditor::pickObjects</definition>
        <argsstring>(IGenViewportWnd *wnd, int x, int y, Tab&lt; RenderableEditableObject * &gt; &amp;objs)</argsstring>
        <name>pickObjects</name>
        <qualifiedname>ObjectEditor::pickObjects</qualifiedname>
        <param>
          <type><ref refid="classIGenViewportWnd" kindref="compound">IGenViewportWnd</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>Tab&lt; <ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> * &gt; &amp;</type>
          <declname>objs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pick objects in viewport point having specified coordinates. Hidden and frozen objects are ignored. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wnd</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to viewport window </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>- x,y point coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">objs</parametername>
</parameternamelist>
<parameterdescription>
<para>- reference to array of pointers to objects found </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if one or many objects were picked, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="251" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1adf5db294c859a5d87677cd2a2a1fc008" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ObjectEditor::checkObjSelFilter</definition>
        <argsstring>(RenderableEditableObject &amp;obj)</argsstring>
        <name>checkObjSelFilter</name>
        <qualifiedname>ObjectEditor::checkObjSelFilter</qualifiedname>
        <param>
          <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="252" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Editing objects (edit selected objects).</header>
      <memberdef kind="function" id="classObjectEditor_1a6e3e1ca6ba6e8088d306193e29cbe604" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::updateSelection</definition>
        <argsstring>()</argsstring>
        <name>updateSelection</name>
        <qualifiedname>ObjectEditor::updateSelection</qualifiedname>
        <briefdescription>
<para>Update object selection list in accordance with their FLG_SELECTED flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="260" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a2bd707f955ce62c726cb37e4a29c8df1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ObjectEditor::selectedCount</definition>
        <argsstring>() const</argsstring>
        <name>selectedCount</name>
        <qualifiedname>ObjectEditor::selectedCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get selected objects count. <simplesect kind="return"><para>selected objects count </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="264" column="7" bodyfile="ec_ObjectEditor.h" bodystart="264" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a4790abce97e44bf3bac5aeeb381b8139" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> *</type>
        <definition>RenderableEditableObject * ObjectEditor::getSelected</definition>
        <argsstring>(int index) const</argsstring>
        <name>getSelected</name>
        <qualifiedname>ObjectEditor::getSelected</qualifiedname>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get selected object from objects list by index. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>- object index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to object selected </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="269" column="28" bodyfile="ec_ObjectEditor.h" bodystart="269" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1aca758b4338cd05b85341aa284d3d2a70" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool ObjectEditor::canSelectObj</definition>
        <argsstring>(RenderableEditableObject *o)</argsstring>
        <name>canSelectObj</name>
        <qualifiedname>ObjectEditor::canSelectObj</qualifiedname>
        <param>
          <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Can the object selected by the user. For example hidden objects cannot be selected. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="277" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1aafbbbbc847061ff7c24b67ede4e2b95d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::unselectAll</definition>
        <argsstring>()</argsstring>
        <name>unselectAll</name>
        <qualifiedname>ObjectEditor::unselectAll</qualifiedname>
        <briefdescription>
<para>Unselect all objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="280" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1ad652c599b893d6695ce193d4434df521" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::selectAll</definition>
        <argsstring>()</argsstring>
        <name>selectAll</name>
        <qualifiedname>ObjectEditor::selectAll</qualifiedname>
        <briefdescription>
<para>Select all objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="283" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a386d5b045d7fa2149a427f0268e54c94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool ObjectEditor::getSelectionBox</definition>
        <argsstring>(BBox3 &amp;box) const</argsstring>
        <name>getSelectionBox</name>
        <qualifiedname>ObjectEditor::getSelectionBox</qualifiedname>
        <param>
          <type>BBox3 &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get bounding box for objects selected. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">box</parametername>
</parameternamelist>
<parameterdescription>
<para>- reference to bounding box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if operation successful, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="288" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a5652c40d0c622c8993b8372702ac5ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::deleteSelectedObjects</definition>
        <argsstring>(bool use_undo=true)</argsstring>
        <name>deleteSelectedObjects</name>
        <qualifiedname>ObjectEditor::deleteSelectedObjects</qualifiedname>
        <param>
          <type>bool</type>
          <declname>use_undo</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete selected objects. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">use_undo</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>true / false: use / not use</bold> undo system </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="292" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Editing objects (methods called by events).</header>
      <memberdef kind="function" id="classObjectEditor_1a78677ec0af8d3452721cead6c0f7d1a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::onObjectFlagsChange</definition>
        <argsstring>(RenderableEditableObject *obj, int changed_flags)</argsstring>
        <name>onObjectFlagsChange</name>
        <qualifiedname>ObjectEditor::onObjectFlagsChange</qualifiedname>
        <param>
          <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>changed_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called when object flags are changed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to object whose flags are changed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">changed_flags</parametername>
</parameternamelist>
<parameterdescription>
<para>- FLG_SELECTED,FLG_HIDDEN, FLG_FROZEN,FLG_HIGHLIGHTED </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="303" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a57da9e05e637bfbb7b10095345392559" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::onObjectGeomChange</definition>
        <argsstring>(RenderableEditableObject *obj)</argsstring>
        <name>onObjectGeomChange</name>
        <qualifiedname>ObjectEditor::onObjectGeomChange</qualifiedname>
        <param>
          <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called when object geometry is changed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to object whose geometry is changed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="307" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a1deab5f3792cc74babe9c1531d48f7fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::selectionChanged</definition>
        <argsstring>()</argsstring>
        <name>selectionChanged</name>
        <qualifiedname>ObjectEditor::selectionChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called each time an object is selected or deselected, so it should only set flags etc, and not perform long actions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="311" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1ad382fa16d8ef22bb0c0a5d3e83555255" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ObjectEditor::saveNormalOnSelection</definition>
        <argsstring>(const Point3 &amp;n) override</argsstring>
        <name>saveNormalOnSelection</name>
        <qualifiedname>ObjectEditor::saveNormalOnSelection</qualifiedname>
        <reimplements refid="classIGizmoClient_1ad06c6e1b5b2258f04c0c4173a9ed0bac">saveNormalOnSelection</reimplements>
        <param>
          <type>const Point3 &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="314" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1afc1b603cdeb07e1be5b6dc958a4047a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ObjectEditor::setCollisionIgnoredOnSelection</definition>
        <argsstring>() override</argsstring>
        <name>setCollisionIgnoredOnSelection</name>
        <qualifiedname>ObjectEditor::setCollisionIgnoredOnSelection</qualifiedname>
        <reimplements refid="classIGizmoClient_1a7067e3fa0826b9849fad45769789d6a5">setCollisionIgnoredOnSelection</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="315" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a87a6b1577754df841101c292e5cb146c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ObjectEditor::resetCollisionIgnoredOnSelection</definition>
        <argsstring>() override</argsstring>
        <name>resetCollisionIgnoredOnSelection</name>
        <qualifiedname>ObjectEditor::resetCollisionIgnoredOnSelection</qualifiedname>
        <reimplements refid="classIGizmoClient_1a991f4676571bab95e8decbc1c4577bcc">resetCollisionIgnoredOnSelection</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="316" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Editing objects (renaming, object properties).</header>
      <memberdef kind="function" id="classObjectEditor_1a40e641fa6701ab6429e0ee7abf7591f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::renameObject</definition>
        <argsstring>(RenderableEditableObject *obj, const char *new_name, bool use_undo=true)</argsstring>
        <name>renameObject</name>
        <qualifiedname>ObjectEditor::renameObject</qualifiedname>
        <param>
          <type><ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>new_name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_undo</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rename object. The function tests if renaming is possible and if specified name is unique. <bold>NOTE:</bold> If new name is not unique, it will be changed and resulting name will be different. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">new_name</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to string with new name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">use_undo</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>true / false: use / not use</bold> undo system </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="328" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a9dea9b5800525a1d1ec704657aa475da" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::invalidateObjectProps</definition>
        <argsstring>()</argsstring>
        <name>invalidateObjectProps</name>
        <qualifiedname>ObjectEditor::invalidateObjectProps</qualifiedname>
        <briefdescription>
<para>Indicate the need for updating object properties (on Property Panel). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="331" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1aae3af50b00d14845e3aef920de0abb7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ObjectEditor::updateObjectProps</definition>
        <argsstring>()</argsstring>
        <name>updateObjectProps</name>
        <qualifiedname>ObjectEditor::updateObjectProps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update object properties on Property Panel. Commonly called implicitly after some time since call to <ref refid="classObjectEditor_1a9dea9b5800525a1d1ec704657aa475da" kindref="member">invalidateObjectProps()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="336" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods inherited from IGizmoClient</header>
      <memberdef kind="function" id="classObjectEditor_1af6682851baeeacc56ab248b115cb785b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void ObjectEditor::release</definition>
        <argsstring>() override</argsstring>
        <name>release</name>
        <qualifiedname>ObjectEditor::release</qualifiedname>
        <reimplements refid="classIGizmoClient_1a2fbfc02bcd0e5fc38b1dab17cead846d">release</reimplements>
        <briefdescription>
<para>Called at the moment of destroying Gizmo. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="343" column="8" bodyfile="ec_ObjectEditor.h" bodystart="343" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a477e7a53898fb7307bdb67389b9778b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Point3</type>
        <definition>Point3 ObjectEditor::getPt</definition>
        <argsstring>() override</argsstring>
        <name>getPt</name>
        <qualifiedname>ObjectEditor::getPt</qualifiedname>
        <reimplements refid="classIGizmoClient_1a9b0dcd87c76d4b8b1521a8df8b9cd579">getPt</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get current Gizmo position <simplesect kind="return"><para>Gizmo position </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="344" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a82b1fd5601c397b62132bd1360648cc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ObjectEditor::getRot</definition>
        <argsstring>(Point3 &amp;p) override</argsstring>
        <name>getRot</name>
        <qualifiedname>ObjectEditor::getRot</qualifiedname>
        <reimplements refid="classIGizmoClient_1ae1a6e3c9cb601ed63bd2cf3ccc780e5d">getRot</reimplements>
        <param>
          <type>Point3 &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get current Gizmo Euler angles. Used to set values in proper toolbar fields. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">p</parametername>
</parameternamelist>
<parameterdescription>
<para>- Euler angles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if the function succeeds, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="345" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a1e8fede5542e90cf265871ca5ada0d6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ObjectEditor::getScl</definition>
        <argsstring>(Point3 &amp;p) override</argsstring>
        <name>getScl</name>
        <qualifiedname>ObjectEditor::getScl</qualifiedname>
        <reimplements refid="classIGizmoClient_1ac2c4651d3d1c13c3ab33b3ef5849fd9b">getScl</reimplements>
        <param>
          <type>Point3 &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get current Gizmo scaling in X,Y,Z dimensions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">p</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>X,Y,Z</bold> scaling ratio </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if the function succeeds, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="346" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a6b1866cdee249940bc89bf267211647a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ObjectEditor::getAxes</definition>
        <argsstring>(Point3 &amp;ax, Point3 &amp;ay, Point3 &amp;az) override</argsstring>
        <name>getAxes</name>
        <qualifiedname>ObjectEditor::getAxes</qualifiedname>
        <reimplements refid="classIGizmoClient_1a8e2c3d7b7cd98c89ef1c9d534940453f">getAxes</reimplements>
        <param>
          <type>Point3 &amp;</type>
          <declname>ax</declname>
        </param>
        <param>
          <type>Point3 &amp;</type>
          <declname>ay</declname>
        </param>
        <param>
          <type>Point3 &amp;</type>
          <declname>az</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get current Gizmo X,Y,Z axes <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">ax</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>X axis</bold> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ay</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>Y axis</bold> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">az</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>Z axis</bold> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if the function succeeds, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="347" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1adfeec534f935c186c61a32e98a4900d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ObjectEditor::changed</definition>
        <argsstring>(const Point3 &amp;delta) override</argsstring>
        <name>changed</name>
        <qualifiedname>ObjectEditor::changed</qualifiedname>
        <reimplements refid="classIGizmoClient_1a4b915618bd8b4db6890d213536a24d52">changed</reimplements>
        <param>
          <type>const Point3 &amp;</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Gizmo changed</bold> event handler. Called when Gizmo changed its coordinates, axes, scaling etc <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">delta</parametername>
</parameternamelist>
<parameterdescription>
<para>- Gizmo changing (depends on mode):<linebreak/>
<itemizedlist>
<listitem><para><bold>Move</bold> - position relative to last call of <ref refid="classObjectEditor_1a477e7a53898fb7307bdb67389b9778b6" kindref="member">getPt()</ref><linebreak/>
</para>
</listitem><listitem><para><bold>Rotation</bold> - current Euler angles<linebreak/>
</para>
</listitem><listitem><para><bold>Scale</bold> - current scale </para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="348" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a7d00cdf5657f968a7ed0b03cba040625" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ObjectEditor::canStartChangeAt</definition>
        <argsstring>(IGenViewportWnd *wnd, int x, int y, int gizmo_sel) override</argsstring>
        <name>canStartChangeAt</name>
        <qualifiedname>ObjectEditor::canStartChangeAt</qualifiedname>
        <reimplements refid="classIGizmoClient_1a7f3927ba11c461bae033305dce99de5b">canStartChangeAt</reimplements>
        <param>
          <type><ref refid="classIGenViewportWnd" kindref="compound">IGenViewportWnd</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gizmo_sel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Informs Gizmo that it can begin changing. Called when user presses left mouse button. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wnd</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to viewport window (where user clicks) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>x,y</bold> coordinates where user clicks </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gizmo_sel</parametername>
</parameternamelist>
<parameterdescription>
<para>- axes flags (what axes selected) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> - method <ref refid="classObjectEditor_1ab6e4f45ba89afdd76f911d50b6b5fc34" kindref="member">gizmoStarted()</ref> will be called and normal work with Gizmo begins<linebreak/>
 <bold>false</bold> - no actions </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="349" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a5a09bf026de3a580ab4d8948c51d3936" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ObjectEditor::isMouseOver</definition>
        <argsstring>(IGenViewportWnd *wnd, int x, int y) override</argsstring>
        <name>isMouseOver</name>
        <qualifiedname>ObjectEditor::isMouseOver</qualifiedname>
        <reimplements refid="classIGizmoClient_1aa681e668a976b14549aeae038bdae538">isMouseOver</reimplements>
        <param>
          <type><ref refid="classIGenViewportWnd" kindref="compound">IGenViewportWnd</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test whether mouse cursor is on the object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wnd</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to viewport window (where user clicks) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>x,y</bold> coordinates where user clicks </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if mouse cursor is on the object, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="350" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1ab6e4f45ba89afdd76f911d50b6b5fc34" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ObjectEditor::gizmoStarted</definition>
        <argsstring>() override</argsstring>
        <name>gizmoStarted</name>
        <qualifiedname>ObjectEditor::gizmoStarted</qualifiedname>
        <reimplements refid="classIGizmoClient_1a6f72ecfe086c98e3a4de175bd24aed51">gizmoStarted</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called when user clicks any Gizmo axis. i.e. at the begining of changing Gizmo&apos;s position, axes, etc </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="351" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1ad1cebd3a2558d3831c97de062b724fbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ObjectEditor::gizmoEnded</definition>
        <argsstring>(bool apply) override</argsstring>
        <name>gizmoEnded</name>
        <qualifiedname>ObjectEditor::gizmoEnded</qualifiedname>
        <reimplements refid="classIGizmoClient_1a00280a60624802ce853614fb24ad0bfa">gizmoEnded</reimplements>
        <param>
          <type>bool</type>
          <declname>apply</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called at the end of Gizmo&apos;s changing <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">apply</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>true</bold> - apply changes that take place in interval between <ref refid="classObjectEditor_1ab6e4f45ba89afdd76f911d50b6b5fc34" kindref="member">gizmoStarted()</ref> and <ref refid="classObjectEditor_1ad1cebd3a2558d3831c97de062b724fbc" kindref="member">gizmoEnded()</ref> <linebreak/>
 <bold>false</bold> - do not apply changes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="352" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a4235397614653fd9e402fd02b9eb6d2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int ObjectEditor::getAvailableTypes</definition>
        <argsstring>() override</argsstring>
        <name>getAvailableTypes</name>
        <qualifiedname>ObjectEditor::getAvailableTypes</qualifiedname>
        <reimplements refid="classIGizmoClient_1a6dcc4680640ea838ada836d40341bc04">getAvailableTypes</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns flags which informs Gizmo about modes supported by plugin <simplesect kind="return"><para>flags representing types of modes supported by plugin </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="354" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods inherited from IGenEventHandler</header>
      <memberdef kind="function" id="classObjectEditor_1aad45fe9d5ec867ddfc286c23dd451134" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ObjectEditor::handleMouseMove</definition>
        <argsstring>(IGenViewportWnd *wnd, int x, int y, bool inside, int buttons, int key_modif) override</argsstring>
        <name>handleMouseMove</name>
        <qualifiedname>ObjectEditor::handleMouseMove</qualifiedname>
        <reimplements refid="classIGenEventHandler_1a46164eba137560a326038e89a9240ffe">handleMouseMove</reimplements>
        <param>
          <type><ref refid="classIGenViewportWnd" kindref="compound">IGenViewportWnd</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inside</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buttons</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key_modif</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle mouse move. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wnd</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to viewport window that generated the message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>x,y</bold> coordinates inside viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inside</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>true</bold> if an event occurred inside viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buttons</parametername>
</parameternamelist>
<parameterdescription>
<para>- mouse buttons state flags </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_modif</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>shift keys</bold> state (see #CtlShiftKeys) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if an event successfully processed, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="361" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1add728baae0b3b6bef17b0f96e575b2de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ObjectEditor::handleMouseLBPress</definition>
        <argsstring>(IGenViewportWnd *wnd, int x, int y, bool inside, int buttons, int key_modif) override</argsstring>
        <name>handleMouseLBPress</name>
        <qualifiedname>ObjectEditor::handleMouseLBPress</qualifiedname>
        <reimplements refid="classIGenEventHandler_1a76d3042ca31425d226f0f72362e2dd56">handleMouseLBPress</reimplements>
        <param>
          <type><ref refid="classIGenViewportWnd" kindref="compound">IGenViewportWnd</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inside</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buttons</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key_modif</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle mouse left button press <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wnd</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to viewport window that generated the message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>x,y</bold> coordinates inside viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inside</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>true</bold> if an event occurred inside viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buttons</parametername>
</parameternamelist>
<parameterdescription>
<para>- mouse buttons state flags </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_modif</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>shift keys</bold> state (see #CtlShiftKeys) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if an event successfully processed, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="362" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1aa9347787f2d048e46080209204e041d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ObjectEditor::handleMouseLBRelease</definition>
        <argsstring>(IGenViewportWnd *wnd, int x, int y, bool inside, int buttons, int key_modif) override</argsstring>
        <name>handleMouseLBRelease</name>
        <qualifiedname>ObjectEditor::handleMouseLBRelease</qualifiedname>
        <reimplements refid="classIGenEventHandler_1a0d282a84127069635a1fae4b454a8d3b">handleMouseLBRelease</reimplements>
        <param>
          <type><ref refid="classIGenViewportWnd" kindref="compound">IGenViewportWnd</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inside</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buttons</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key_modif</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle mouse left button release <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wnd</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to viewport window that generated the message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>x,y</bold> coordinates inside viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inside</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>true</bold> if an event occurred inside viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buttons</parametername>
</parameternamelist>
<parameterdescription>
<para>- mouse buttons state flags </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_modif</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>shift keys</bold> state (see #CtlShiftKeys) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if an event successfully processed, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="363" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a1494740d3fea07b29e5b2415c2ac90c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ObjectEditor::handleMouseRBPress</definition>
        <argsstring>(IGenViewportWnd *wnd, int x, int y, bool inside, int buttons, int key_modif) override</argsstring>
        <name>handleMouseRBPress</name>
        <qualifiedname>ObjectEditor::handleMouseRBPress</qualifiedname>
        <reimplements refid="classIGenEventHandler_1a5efed76d47bfdd603d2c031553b8d64a">handleMouseRBPress</reimplements>
        <param>
          <type><ref refid="classIGenViewportWnd" kindref="compound">IGenViewportWnd</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inside</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buttons</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key_modif</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle mouse right button press <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wnd</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to viewport window that generated the message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>x,y</bold> coordinates inside viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inside</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>true</bold> if an event occurred inside viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buttons</parametername>
</parameternamelist>
<parameterdescription>
<para>- mouse buttons state flags </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_modif</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>shift keys</bold> state (see #CtlShiftKeys) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if an event successfully processed, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="364" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a730ea5261fa006ce2c7ae771a7c95fa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ObjectEditor::handleMouseRBRelease</definition>
        <argsstring>(IGenViewportWnd *wnd, int x, int y, bool inside, int buttons, int key_modif) override</argsstring>
        <name>handleMouseRBRelease</name>
        <qualifiedname>ObjectEditor::handleMouseRBRelease</qualifiedname>
        <reimplements refid="classIGenEventHandler_1a2e35e2b69f623dd8f9ea4289bad0f809">handleMouseRBRelease</reimplements>
        <param>
          <type><ref refid="classIGenViewportWnd" kindref="compound">IGenViewportWnd</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inside</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buttons</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key_modif</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle mouse right button release <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wnd</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to viewport window that generated the message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>x,y</bold> coordinates inside viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inside</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>true</bold> if an event occurred inside viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buttons</parametername>
</parameternamelist>
<parameterdescription>
<para>- mouse buttons state flags </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_modif</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>shift keys</bold> state (see #CtlShiftKeys) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if an event successfully processed, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="365" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1aa5fbcf3e9b942a5492b2bb20599a533e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool ObjectEditor::handleMouseCBPress</definition>
        <argsstring>(IGenViewportWnd *wnd, int x, int y, bool inside, int buttons, int key_modif) override</argsstring>
        <name>handleMouseCBPress</name>
        <qualifiedname>ObjectEditor::handleMouseCBPress</qualifiedname>
        <reimplements refid="classIGenEventHandler_1a39911163de6ae644a30da1c40886cd56">handleMouseCBPress</reimplements>
        <param>
          <type><ref refid="classIGenViewportWnd" kindref="compound">IGenViewportWnd</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inside</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buttons</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key_modif</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle mouse center button press <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wnd</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to viewport window that generated the message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>x,y</bold> coordinates inside viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inside</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>true</bold> if an event occurred inside viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buttons</parametername>
</parameternamelist>
<parameterdescription>
<para>- mouse buttons state flags </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_modif</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>shift keys</bold> state (see #CtlShiftKeys) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if an event successfully processed, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="366" column="8" bodyfile="ec_ObjectEditor.h" bodystart="366" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a09a698eb3edef2ac7df488da505174ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool ObjectEditor::handleMouseCBRelease</definition>
        <argsstring>(IGenViewportWnd *wnd, int x, int y, bool inside, int buttons, int key_modif) override</argsstring>
        <name>handleMouseCBRelease</name>
        <qualifiedname>ObjectEditor::handleMouseCBRelease</qualifiedname>
        <reimplements refid="classIGenEventHandler_1a611babe0c85315bb93ce54c4986ef80a">handleMouseCBRelease</reimplements>
        <param>
          <type><ref refid="classIGenViewportWnd" kindref="compound">IGenViewportWnd</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inside</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buttons</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key_modif</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle mouse center button release <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wnd</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to viewport window that generated the message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>x,y</bold> coordinates inside viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inside</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>true</bold> if an event occurred inside viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buttons</parametername>
</parameternamelist>
<parameterdescription>
<para>- mouse buttons state flags </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_modif</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>shift keys</bold> state (see #CtlShiftKeys) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if an event successfully processed, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="367" column="8" bodyfile="ec_ObjectEditor.h" bodystart="367" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1aa16b537a51d1c880df687ab5df4628c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool ObjectEditor::handleMouseWheel</definition>
        <argsstring>(IGenViewportWnd *wnd, int wheel_d, int x, int y, int key_modif) override</argsstring>
        <name>handleMouseWheel</name>
        <qualifiedname>ObjectEditor::handleMouseWheel</qualifiedname>
        <reimplements refid="classIGenEventHandler_1ae8879b99e9cf470abb70e4320e38de8c">handleMouseWheel</reimplements>
        <param>
          <type><ref refid="classIGenViewportWnd" kindref="compound">IGenViewportWnd</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>wheel_d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key_modif</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle mouse scroll wheel <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wnd</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to viewport window that generated the message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wheel_d</parametername>
</parameternamelist>
<parameterdescription>
<para>- scroll wheel steps </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>x,y</bold> coordinates inside viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_modif</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>shift keys</bold> state (see #CtlShiftKeys) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if an event successfully processed, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="368" column="8" bodyfile="ec_ObjectEditor.h" bodystart="368" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1abeb4b22cb5db04d1dee018cdf3c10eaf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool ObjectEditor::handleMouseDoubleClick</definition>
        <argsstring>(IGenViewportWnd *wnd, int x, int y, int key_modif) override</argsstring>
        <name>handleMouseDoubleClick</name>
        <qualifiedname>ObjectEditor::handleMouseDoubleClick</qualifiedname>
        <reimplements refid="classIGenEventHandler_1a320e9235759aacd382f71d66d8138b15">handleMouseDoubleClick</reimplements>
        <param>
          <type><ref refid="classIGenViewportWnd" kindref="compound">IGenViewportWnd</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key_modif</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle mouse double-click <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wnd</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to viewport window that generated the message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>x,y</bold> coordinates inside viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_modif</parametername>
</parameternamelist>
<parameterdescription>
<para>- <bold>shift keys</bold> state (see #CtlShiftKeys) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if an event successfully processed, <bold>false</bold> in other case </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="369" column="8" bodyfile="ec_ObjectEditor.h" bodystart="369" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a08e9c244ff18114b602d7bfbd94655e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void ObjectEditor::handleViewportPaint</definition>
        <argsstring>(IGenViewportWnd *wnd) override</argsstring>
        <name>handleViewportPaint</name>
        <qualifiedname>ObjectEditor::handleViewportPaint</qualifiedname>
        <reimplements refid="classIGenEventHandler_1a7f3ce10fef24468691cfb20b568f8f9a">handleViewportPaint</reimplements>
        <param>
          <type><ref refid="classIGenViewportWnd" kindref="compound">IGenViewportWnd</ref> *</type>
          <declname>wnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Viewport CTL window redraw <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wnd</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to viewport window that generated the message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dc</parametername>
</parameternamelist>
<parameterdescription>
<para>- viewport&apos;s device context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="371" column="8" bodyfile="ec_ObjectEditor.h" bodystart="371" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1a0f6435d93d24627fcd8e2eaf81a300e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void ObjectEditor::handleViewChange</definition>
        <argsstring>(IGenViewportWnd *wnd) override</argsstring>
        <name>handleViewChange</name>
        <qualifiedname>ObjectEditor::handleViewChange</qualifiedname>
        <reimplements refid="classIGenEventHandler_1af0e97cbbdf5fdeb07f09707ad80e8334">handleViewChange</reimplements>
        <param>
          <type><ref refid="classIGenViewportWnd" kindref="compound">IGenViewportWnd</ref> *</type>
          <declname>wnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Viewport view change notification <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wnd</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to viewport window that generated the message </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="372" column="8" bodyfile="ec_ObjectEditor.h" bodystart="372" bodyend="372"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classObjectEditor_1a8674ee99f0c046aafd475389f5e1f010" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class ObjectEditorWrap</definition>
        <argsstring></argsstring>
        <name>ObjectEditorWrap</name>
        <qualifiedname>ObjectEditor::ObjectEditorWrap</qualifiedname>
        <param>
          <type>ObjectEditorWrap</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="42" column="16" bodyfile="ec_ObjectEditor.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classObjectEditor_1aa510e724fd1768828ebc8f63c2f50378" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ObjectEditor::isGizmoValid</definition>
        <argsstring></argsstring>
        <name>isGizmoValid</name>
        <qualifiedname>ObjectEditor::isGizmoValid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="45" column="8" bodyfile="ec_ObjectEditor.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classObjectEditor_1a2a2374794ac7b930a3587ca62bff15dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ObjectEditor::ObjectEditor</definition>
        <argsstring>()</argsstring>
        <name>ObjectEditor</name>
        <qualifiedname>ObjectEditor::ObjectEditor</qualifiedname>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="48" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classObjectEditor_1aaf498b813059da989a752dbdfe67a84a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ObjectEditor::~ObjectEditor</definition>
        <argsstring>() override</argsstring>
        <name>~ObjectEditor</name>
        <qualifiedname>ObjectEditor::~ObjectEditor</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ec_ObjectEditor.h" line="50" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>3D objects Editor. Used in conjunction with <ref refid="classRenderableEditableObject" kindref="compound">RenderableEditableObject</ref>. May be fairly simply built into different editors. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>IGenEventHandler</label>
        <link refid="classIGenEventHandler"/>
      </node>
      <node id="2">
        <label>IGizmoClient</label>
        <link refid="classIGizmoClient"/>
      </node>
      <node id="4">
        <label>IObjectsList</label>
        <link refid="classIObjectsList"/>
      </node>
      <node id="5">
        <label>IWndManagerWindowHandler</label>
        <link refid="classIWndManagerWindowHandler"/>
      </node>
      <node id="1">
        <label>ObjectEditor</label>
        <link refid="classObjectEditor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>PropPanel::ControlEventHandler</label>
      </node>
      <node id="6">
        <label>PropPanel::IMenuEventHandler</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>DObject</label>
      </node>
      <node id="9">
        <label>EditableObject</label>
        <link refid="classEditableObject"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>IGenEventHandler</label>
        <link refid="classIGenEventHandler"/>
      </node>
      <node id="2">
        <label>IGizmoClient</label>
        <link refid="classIGizmoClient"/>
      </node>
      <node id="11">
        <label>IObjectCreator</label>
        <link refid="classIObjectCreator"/>
      </node>
      <node id="4">
        <label>IObjectsList</label>
        <link refid="classIObjectsList"/>
      </node>
      <node id="5">
        <label>IWndManagerWindowHandler</label>
        <link refid="classIWndManagerWindowHandler"/>
      </node>
      <node id="1">
        <label>ObjectEditor</label>
        <link refid="classObjectEditor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>sample</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>objectPropBar</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>ObjectEditorPropPanelBar</label>
        <link refid="classObjectEditorPropPanelBar"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>objEd</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>PropPanel::ControlEventHandler</label>
      </node>
      <node id="6">
        <label>PropPanel::IMenuEventHandler</label>
      </node>
      <node id="8">
        <label>RenderableEditableObject</label>
        <link refid="classRenderableEditableObject"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>objEditor</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ec_ObjectEditor.h" line="35" column="1" bodyfile="ec_ObjectEditor.h" bodystart="41" bodyend="535"/>
    <listofallmembers>
      <member refid="classObjectEditor_1ae674eec0c4f4792f00855f03f276721c" prot="protected" virt="virtual"><scope>ObjectEditor</scope><name>_addObjects</name></member>
      <member refid="classObjectEditor_1a45b95438eb347e4ff1499c6e967fc6a6" prot="protected" virt="virtual"><scope>ObjectEditor</scope><name>_removeObjects</name></member>
      <member refid="classObjectEditor_1a1ad0cc9166dc49cc33f78ac1d2a7a034" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>addButton</name></member>
      <member refid="classObjectEditor_1a1cf3995e754719fdbb0841e86252461e" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>addObject</name></member>
      <member refid="classObjectEditor_1a79ef735d8d4894ff1a960057dbf255f3" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>addObjects</name></member>
      <member refid="classObjectEditor_1ad5e9e594d6fb7f97dd9d6faec14afe52" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>areObjectPropsValid</name></member>
      <member refid="classObjectEditor_1ac0aaa7d53a6f5dc145ba29a50292fa43" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>beforeRender</name></member>
      <member refid="classObjectEditor_1aca758b4338cd05b85341aa284d3d2a70" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>canSelectObj</name></member>
      <member refid="classObjectEditor_1a7d00cdf5657f968a7ed0b03cba040625" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>canStartChangeAt</name></member>
      <member refid="classObjectEditor_1ac7388ee040d0ee94995d7383f072e5b3" prot="private" virt="non-virtual"><scope>ObjectEditor</scope><name>canTransformOnCreate</name></member>
      <member refid="classObjectEditor_1adfeec534f935c186c61a32e98a4900d6" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>changed</name></member>
      <member refid="classObjectEditor_1adf5db294c859a5d87677cd2a2a1fc008" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>checkObjSelFilter</name></member>
      <member refid="classObjectEditor_1ae07338f1db6fbf63b53842623b7193c5" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>closeUi</name></member>
      <member refid="classObjectEditor_1af0872d85be287fd4c5656ba0f6f7d8f2" prot="protected" virt="virtual"><scope>ObjectEditor</scope><name>createEditorPropBar</name></member>
      <member refid="classObjectEditor_1aef92e9c1d02ebea34736c91a09ecfb03" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>createObject</name></member>
      <member refid="classObjectEditor_1ac9c3e289e5d40daf78fb519e9dd893f5" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>createObjectBySample</name></member>
      <member refid="classObjectEditor_1af6b27f18cb108e87ca68404ce50ffe11" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>createPanelGroup</name></member>
      <member refid="classObjectEditor_1a967a9eb10496348f682c7e33f53000a9" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>createPanelTransform</name></member>
      <member refid="classObjectEditor_1a04666f599b532692929cd998c1bf3f15" prot="private" virt="non-virtual"><scope>ObjectEditor</scope><name>createRot</name></member>
      <member refid="classObjectEditor_1a225fd3bd74829c8d4e9a1edc68225632" prot="private" virt="non-virtual"><scope>ObjectEditor</scope><name>createScale</name></member>
      <member refid="classObjectEditor_1a4a707218518d928b3c49095c563c1ce8" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>creator</name></member>
      <member refid="classObjectEditor_1a5652c40d0c622c8993b8372702ac5ae0" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>deleteSelectedObjects</name></member>
      <member refid="classObjectEditor_1ae3390f22cdd1d073ae81e577231193f1" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>dropObjects</name></member>
      <member refid="classObjectEditor_1ab73529824db8f5aac8b9d0786068781e" prot="private" virt="non-virtual"><scope>ObjectEditor</scope><name>editMode</name></member>
      <member refid="classObjectEditor_1a91ad951df8edeb71340cf0b5b75c68ab" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>editModeToModeType</name></member>
      <member refid="classObjectEditor_1adc3517d944774a69e4a164e0073ff705" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>enableButton</name></member>
      <member refid="classObjectEditor_1af78ae83fdc07f464a2f77294ad3b4a63" prot="protected" virt="virtual"><scope>ObjectEditor</scope><name>fillSelectionMenu</name></member>
      <member refid="classObjectEditor_1aa80f2faefc8ae4d32d5f24fb5bf8f8a0" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>fillToolBar</name></member>
      <member refid="classObjectEditor_1a8c288c6c86d75968502fd3c9f340467d" prot="private" virt="non-virtual"><scope>ObjectEditor</scope><name>filterString</name></member>
      <member refid="classObjectEditor_1a5db58bf2a1edb455fb74155671ec007b" prot="private" virt="non-virtual"><scope>ObjectEditor</scope><name>filterStrings</name></member>
      <member refid="classObjectEditor_1a4235397614653fd9e402fd02b9eb6d2b" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>getAvailableTypes</name></member>
      <member refid="classObjectEditor_1a6b1866cdee249940bc89bf267211647a" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>getAxes</name></member>
      <member refid="classObjectEditor_1a5d219d2617739400db47c6a59694ea08" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>getEditMode</name></member>
      <member refid="classObjectEditor_1aae5701c00bdb3ba1295740a53f25728d" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>getLayerNames</name></member>
      <member refid="classObjectEditor_1a71746b6e550a06189e049d31075c8825" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>getObject</name></member>
      <member refid="classObjectEditor_1ac6150a9aaa632f60f9a4b2377f831098" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>getObjectByName</name></member>
      <member refid="classObjectEditor_1aeea49638bb9e5e9545b6552d18a8c08e" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>getObjNames</name></member>
      <member refid="classObjectEditor_1a68622142830f930c2ec309938790249f" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>getPlacementRotationMatrix</name></member>
      <member refid="classObjectEditor_1a73e17749bf1f490137f575cc7af3d4ec" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>getPlaceTypeRadio</name></member>
      <member refid="classObjectEditor_1a477e7a53898fb7307bdb67389b9778b6" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>getPt</name></member>
      <member refid="classObjectEditor_1a82b1fd5601c397b62132bd1360648cc3" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>getRot</name></member>
      <member refid="classObjectEditor_1a1e8fede5542e90cf265871ca5ada0d6b" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>getScl</name></member>
      <member refid="classObjectEditor_1a4790abce97e44bf3bac5aeeb381b8139" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>getSelected</name></member>
      <member refid="classObjectEditor_1a386d5b045d7fa2149a427f0268e54c94" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>getSelectionBox</name></member>
      <member refid="classObjectEditor_1a33e8a309dd9a3064eabc94f94170482c" prot="protected" virt="virtual"><scope>ObjectEditor</scope><name>getSurfMoveGizmoPos</name></member>
      <member refid="classObjectEditor_1ac60f0e8313a36e54f856e62ca37c5bd1" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>getTypeNames</name></member>
      <member refid="classObjectEditor_1ad931bb5d3875e94cc901c7766d97fdfa" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>getUndoSystem</name></member>
      <member refid="classObjectEditor_1a65032f840ce2caabd94410fdd3636415" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>getUpdateViewportGizmo</name></member>
      <member refid="classObjectEditor_1ad1cebd3a2558d3831c97de062b724fbc" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>gizmoEnded</name></member>
      <member refid="classObjectEditor_1a530d55f413d416ee0e72712e35f5210b" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>gizmoOrigin</name></member>
      <member refid="classObjectEditor_1afc37220ca98fa4c1e6578f368980c133" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>gizmoPt</name></member>
      <member refid="classObjectEditor_1ade993aee3cb727702b54559bce4c3063" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>gizmoRot</name></member>
      <member refid="classObjectEditor_1ac99d1f6d1d3eebd4b73224ada40401f2" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>gizmoRotO</name></member>
      <member refid="classObjectEditor_1a2dd8e9b6266d3c66ec8e2104756a2405" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>gizmoRotPoint</name></member>
      <member refid="classObjectEditor_1a14042ccbc157afb298bb42e10904ec29" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>gizmoScl</name></member>
      <member refid="classObjectEditor_1ad74720f045d68e91d4d5aeeaed8f4089" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>gizmoSclO</name></member>
      <member refid="classObjectEditor_1ab6e4f45ba89afdd76f911d50b6b5fc34" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>gizmoStarted</name></member>
      <member refid="classObjectEditor_1aa5fbcf3e9b942a5492b2bb20599a533e" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>handleMouseCBPress</name></member>
      <member refid="classObjectEditor_1a09a698eb3edef2ac7df488da505174ab" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>handleMouseCBRelease</name></member>
      <member refid="classObjectEditor_1abeb4b22cb5db04d1dee018cdf3c10eaf" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>handleMouseDoubleClick</name></member>
      <member refid="classObjectEditor_1add728baae0b3b6bef17b0f96e575b2de" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>handleMouseLBPress</name></member>
      <member refid="classObjectEditor_1aa9347787f2d048e46080209204e041d2" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>handleMouseLBRelease</name></member>
      <member refid="classObjectEditor_1aad45fe9d5ec867ddfc286c23dd451134" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>handleMouseMove</name></member>
      <member refid="classObjectEditor_1a1494740d3fea07b29e5b2415c2ac90c6" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>handleMouseRBPress</name></member>
      <member refid="classObjectEditor_1a730ea5261fa006ce2c7ae771a7c95fa4" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>handleMouseRBRelease</name></member>
      <member refid="classObjectEditor_1aa16b537a51d1c880df687ab5df4628c8" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>handleMouseWheel</name></member>
      <member refid="classObjectEditor_1a0f6435d93d24627fcd8e2eaf81a300e8" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>handleViewChange</name></member>
      <member refid="classObjectEditor_1a08e9c244ff18114b602d7bfbd94655e9" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>handleViewportPaint</name></member>
      <member refid="classObjectEditor_1af878bc2243d895f491c97e6b137d1406" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>initUi</name></member>
      <member refid="classObjectEditor_1a9dea9b5800525a1d1ec704657aa475da" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>invalidateObjectProps</name></member>
      <member refid="classObjectEditor_1a6c3c1022b10709f9ac432b19a45f7b1d" prot="private" virt="non-virtual"><scope>ObjectEditor</scope><name>invFilter</name></member>
      <member refid="classObjectEditor_1af27251a9ec4b025a6e794104bcd2a8c2" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>isGizmoStarted</name></member>
      <member refid="classObjectEditor_1aa510e724fd1768828ebc8f63c2f50378" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>isGizmoValid</name></member>
      <member refid="classObjectEditor_1a5a09bf026de3a580ab4d8948c51d3936" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>isMouseOver</name></member>
      <member refid="classObjectEditor_1a2bd1b6e56cd0f0502686d0d71c57e67d" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>isPanelShown</name></member>
      <member refid="classObjectEditor_1a808293b2f15d315f540f98eb5fd51a0a" prot="private" virt="non-virtual"><scope>ObjectEditor</scope><name>justCreated</name></member>
      <member refid="classObjectEditor_1a10cc62338b4ea9816d48fd5148d3abf4" prot="private" virt="non-virtual"><scope>ObjectEditor</scope><name>lastY</name></member>
      <member refid="classObjectEditor_1aa8e12c9a1d8bce8b690d221e39b516aa" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>loadPropPanelSettings</name></member>
      <member refid="classObjectEditor_1adb75acc082875b8fcfd94250500fd6ea" prot="protected" virt="virtual"><scope>ObjectEditor</scope><name>moveObjects</name></member>
      <member refid="classObjectEditor_1aac66c1f2dbd63791f8e00bd819e55ec6" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>objectCount</name></member>
      <member refid="classObjectEditor_1a2a2374794ac7b930a3587ca62bff15dd" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>ObjectEditor</name></member>
      <member refid="classObjectEditor_1a8674ee99f0c046aafd475389f5e1f010" prot="private" virt="non-virtual"><scope>ObjectEditor</scope><name>ObjectEditorWrap</name></member>
      <member refid="classObjectEditor_1a83e0f35da5a388c58e98068896e6f68b" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>objectPropBar</name></member>
      <member refid="classObjectEditor_1a629a1372972474c3a22f4367b7dd9fa9" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>objectPropSettings</name></member>
      <member refid="classObjectEditor_1a7955e82c322c5636b4b9bc6cbd2b1e5f" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>objects</name></member>
      <member refid="classObjectEditor_1a85c9cab275f3d6583c7df49f7356316e" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>objListOwnerName</name></member>
      <member refid="classObjectEditor_1a23a9b783784bdfb60b5209c49e7abd09" prot="protected" virt="virtual"><scope>ObjectEditor</scope><name>onAddObject</name></member>
      <member refid="classObjectEditor_1a274b31396094cc8b8b31448585e9c7ce" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>onChange</name></member>
      <member refid="classObjectEditor_1aa909a612b8c0916c241381287aee9fdc" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>onClick</name></member>
      <member refid="classObjectEditor_1a60b0d9fa0da7bbd9a2060558533450fc" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>onMenuItemClick</name></member>
      <member refid="classObjectEditor_1a78677ec0af8d3452721cead6c0f7d1a7" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>onObjectFlagsChange</name></member>
      <member refid="classObjectEditor_1a57da9e05e637bfbb7b10095345392559" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>onObjectGeomChange</name></member>
      <member refid="classObjectEditor_1a29e2a82766e4115ccb7e50227aa76596" prot="protected" virt="virtual"><scope>ObjectEditor</scope><name>onRemoveObject</name></member>
      <member refid="classObjectEditor_1aa95f1d94406f056fb57aa40287f6b828" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>onSelectedNames</name></member>
      <member refid="classObjectEditor_1a22d1d9ae4e916aca3676ae927de9e51d" prot="protected" virt="virtual"><scope>ObjectEditor</scope><name>onWmCreateWindow</name></member>
      <member refid="classObjectEditor_1a586321103d357916ce14cc0147a25d96" prot="protected" virt="virtual"><scope>ObjectEditor</scope><name>onWmDestroyWindow</name></member>
      <member refid="classObjectEditor_1aaf357ba44ede8b7f20c20b98a6e2d25b" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>pickObject</name></member>
      <member refid="classObjectEditor_1a9f902807eb9fa9fb41a9ece74637ece0" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>pickObjects</name></member>
      <member refid="classObjectEditor_1adc78f14aa1817913122b4760bb6613fb" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>PlacementRotation</name></member>
      <member refid="classObjectEditor_1a3dea0cdd151c35cb95f1578052f846eb" prot="private" virt="non-virtual"><scope>ObjectEditor</scope><name>placeTypeRadio</name></member>
      <member refid="classObjectEditor_1a8a6e247a781f7ca76b90752db58373ff" prot="private" virt="non-virtual"><scope>ObjectEditor</scope><name>pressedRightMouseButtonWhileCreating</name></member>
      <member refid="classObjectEditor_1a1477941cda27b85ad738db3a576a0999" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>registerViewportAccelerators</name></member>
      <member refid="classObjectEditor_1af6682851baeeacc56ab248b115cb785b" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>release</name></member>
      <member refid="classObjectEditor_1a8041995fe76006a51853bc7705a11187" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>removeAllObjects</name></member>
      <member refid="classObjectEditor_1aa2ef952c605e09638dcba75c866046e1" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>removeObject</name></member>
      <member refid="classObjectEditor_1a51d68290950c49098619d8cb4e0f8bdc" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>removeObjects</name></member>
      <member refid="classObjectEditor_1a40e641fa6701ab6429e0ee7abf7591f7" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>renameObject</name></member>
      <member refid="classObjectEditor_1ac7068c45dd56f34c8dbf9fad9a150f01" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>render</name></member>
      <member refid="classObjectEditor_1a3abff3fac84152c565d5522ef770f494" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>renderTrans</name></member>
      <member refid="classObjectEditor_1a87a6b1577754df841101c292e5cb146c" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>resetCollisionIgnoredOnSelection</name></member>
      <member refid="classObjectEditor_1afc62a9ae5f9d87a2d44b1aec278a7c6d" prot="private" virt="non-virtual"><scope>ObjectEditor</scope><name>rotDy</name></member>
      <member refid="classObjectEditor_1a8fa5744df164af4f32149408f8111504" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>sample</name></member>
      <member refid="classObjectEditor_1abf649340b538ed27c8a35be439a04e0c" prot="protected" virt="virtual"><scope>ObjectEditor</scope><name>saveEditorPropBarSettings</name></member>
      <member refid="classObjectEditor_1ad382fa16d8ef22bb0c0a5d3e83555255" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>saveNormalOnSelection</name></member>
      <member refid="classObjectEditor_1a8ab0cacdedd4cd5735931635004ab57c" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>savePropPanelSettings</name></member>
      <member refid="classObjectEditor_1a0e493c109b976e157c38a3055577818d" prot="private" virt="non-virtual"><scope>ObjectEditor</scope><name>scaleDy</name></member>
      <member refid="classObjectEditor_1ad652c599b893d6695ce193d4434df521" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>selectAll</name></member>
      <member refid="classObjectEditor_1a363ebb83d6f5f743cc453ce142cf0176" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>selectByNameDlg</name></member>
      <member refid="classObjectEditor_1a2bd707f955ce62c726cb37e4a29c8df1" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>selectedCount</name></member>
      <member refid="classObjectEditor_1a3d75fae8bf2df8ca823369613921373f" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>selectedPlacementRotation</name></member>
      <member refid="classObjectEditor_1a8d5f8bc97d8d4c7f4dbd7486f812dab1" prot="protected" virt="non-virtual"><scope>ObjectEditor</scope><name>selection</name></member>
      <member refid="classObjectEditor_1a1deab5f3792cc74babe9c1531d48f7fd" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>selectionChanged</name></member>
      <member refid="classObjectEditor_1a31e5eef953343c08edd1ecfa367601f9" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>setButton</name></member>
      <member refid="classObjectEditor_1afc1b603cdeb07e1be5b6dc958a4047a7" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>setCollisionIgnoredOnSelection</name></member>
      <member refid="classObjectEditor_1aba822681258b9e904b5bcfadb2e28fb1" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>setCreateBySampleMode</name></member>
      <member refid="classObjectEditor_1afa568d69a6ec764d6757299f7f0a286b" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>setCreateMode</name></member>
      <member refid="classObjectEditor_1a041713e9a44584a061ea24d26127e36d" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>setEditMode</name></member>
      <member refid="classObjectEditor_1add973cf8791dcc588c07490492955ade" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>setPlaceTypeRadio</name></member>
      <member refid="classObjectEditor_1ab94531916daf3661c4272137992ae53d" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>setRadioButton</name></member>
      <member refid="classObjectEditor_1a44c916639c812903d3c8aba4fa8271a4" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>setSuffixDigitsCount</name></member>
      <member refid="classObjectEditor_1a35b4f43136885c3ac20d0b68534547e5" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>setUniqName</name></member>
      <member refid="classObjectEditor_1a01788a670f3a55c3513e28cab21ec6a4" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>setUpdateViewportGizmo</name></member>
      <member refid="classIGizmoClient_1abe1b9ac78fbf20fe1f5f688525c9e4ff" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>shouldComputeDeltaFromStartPos</name></member>
      <member refid="classObjectEditor_1a9de708e0e143e869dde8758ca3c5f952" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>showPanel</name></member>
      <member refid="classObjectEditor_1af8e1a7ca4ba6ab883ffcbd13904f5ceb" prot="private" virt="non-virtual"><scope>ObjectEditor</scope><name>suffixDigitsCount</name></member>
      <member refid="classObjectEditor_1a6dfc90dfa23ede7ef644762e53472d1f" prot="private" virt="non-virtual"><scope>ObjectEditor</scope><name>toolBarId</name></member>
      <member refid="classObjectEditor_1aafbbbbc847061ff7c24b67ede4e2b95d" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>unselectAll</name></member>
      <member refid="classObjectEditor_1aa41dfc5f741e0540896ec975fc494eb8" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>update</name></member>
      <member refid="classObjectEditor_1a7f3efb547428251d54ac185117818b33" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>updateGizmo</name></member>
      <member refid="classObjectEditor_1a3b09936d61e5796bea3fd1554f4eb208" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>updateImgui</name></member>
      <member refid="classObjectEditor_1aae3af50b00d14845e3aef920de0abb7e" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>updateObjectProps</name></member>
      <member refid="classObjectEditor_1a6e3e1ca6ba6e8088d306193e29cbe604" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>updateSelection</name></member>
      <member refid="classObjectEditor_1a74dd2b5115695645a1f0c4047daf7db2" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>updateToolbarButtons</name></member>
      <member refid="classObjectEditor_1a4f9833f570e4b4849e445b583ff05beb" prot="private" virt="non-virtual"><scope>ObjectEditor</scope><name>updateViewportGizmo</name></member>
      <member refid="classIGizmoClient_1a2a740b53e6a9e0b2c0f3474602d7f2a0" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>usesRendinstPlacement</name></member>
      <member refid="classIGenEventHandler_1adb70e764e4b90c0937dd7dc47261606b" prot="public" virt="virtual"><scope>ObjectEditor</scope><name>~IGenEventHandler</name></member>
      <member refid="classObjectEditor_1aaf498b813059da989a752dbdfe67a84a" prot="public" virt="non-virtual"><scope>ObjectEditor</scope><name>~ObjectEditor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
