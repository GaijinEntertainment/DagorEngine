<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="classD3DRESID" kind="class" language="C++" prot="public">
    <compoundname>D3DRESID</compoundname>
    <includes refid="dag__resId_8h" local="no">dag_resId.h</includes>
      <sectiondef kind="user-defined">
      <header>Comparison operators</header>
      <description><para>IDs are totally ordered w.r.t. the underlying representation to allow for use in ordered containers. No semantic meaning is attached to the ordering. </para>
</description>
      <memberdef kind="function" id="classD3DRESID_1aaa00aced5aa1aba1766c5de2563719e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool D3DRESID::operator==</definition>
        <argsstring>(const D3DRESID &amp;rhs) const</argsstring>
        <name>operator==</name>
        <qualifiedname>D3DRESID::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classD3DRESID" kindref="compound">D3DRESID</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="48" column="8" bodyfile="dag_resId.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classD3DRESID_1af58274166ac73d3c7f8feb0f49754cad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool D3DRESID::operator!=</definition>
        <argsstring>(const D3DRESID &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>D3DRESID::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="classD3DRESID" kindref="compound">D3DRESID</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="49" column="8" bodyfile="dag_resId.h" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classD3DRESID_1ad0e365444a382d3e70857ae11f65bbdd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool D3DRESID::operator&lt;</definition>
        <argsstring>(const D3DRESID &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>D3DRESID::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="classD3DRESID" kindref="compound">D3DRESID</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="50" column="3" bodyfile="dag_resId.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classD3DRESID_1ab5da993b4a6edae894bf854e6f8a214c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool D3DRESID::operator&gt;</definition>
        <argsstring>(const D3DRESID &amp;rhs) const</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>D3DRESID::operator&gt;</qualifiedname>
        <param>
          <type>const <ref refid="classD3DRESID" kindref="compound">D3DRESID</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="51" column="8" bodyfile="dag_resId.h" bodystart="51" bodyend="51"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classD3DRESID_1a87ca13125f9c8f2cfffe033735146dd4" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned D3DRESID::handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <qualifiedname>D3DRESID::handle</qualifiedname>
        <initializer>= INVALID_ID</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="87" column="12" bodyfile="dag_resId.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classD3DRESID_1aeccbc59735719708e381241e343c7f31" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr D3DRESID::D3DRESID</definition>
        <argsstring>()=default</argsstring>
        <name>D3DRESID</name>
        <qualifiedname>D3DRESID::D3DRESID</qualifiedname>
        <briefdescription>
<para>Constructs an invalid resource ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="29" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classD3DRESID_1a1a98bf0f11395dc0c1f005a35eff8aa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>D3DRESID::D3DRESID</definition>
        <argsstring>(const D3DRESID &amp;rhs)=default</argsstring>
        <name>D3DRESID</name>
        <qualifiedname>D3DRESID::D3DRESID</qualifiedname>
        <param>
          <type>const <ref refid="classD3DRESID" kindref="compound">D3DRESID</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="31" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classD3DRESID_1a8d868f123a94cbc90d4b94b57245ad94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>D3DRESID::D3DRESID</definition>
        <argsstring>(D3DRESID &amp;&amp;rhs)=default</argsstring>
        <name>D3DRESID</name>
        <qualifiedname>D3DRESID::D3DRESID</qualifiedname>
        <param>
          <type><ref refid="classD3DRESID" kindref="compound">D3DRESID</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="32" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classD3DRESID_1a43276df11aa9a15f0ae9c91748a3b096" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classD3DRESID" kindref="compound">D3DRESID</ref> &amp;</type>
        <definition>D3DRESID &amp; D3DRESID::operator=</definition>
        <argsstring>(const D3DRESID &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>D3DRESID::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classD3DRESID" kindref="compound">D3DRESID</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="33" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classD3DRESID_1a7d0a967806b612988e8d7f4cf2952659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classD3DRESID" kindref="compound">D3DRESID</ref> &amp;</type>
        <definition>D3DRESID &amp; D3DRESID::operator=</definition>
        <argsstring>(D3DRESID &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>D3DRESID::operator=</qualifiedname>
        <param>
          <type><ref refid="classD3DRESID" kindref="compound">D3DRESID</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="34" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classD3DRESID_1aa87311ab10e725c2012e00a636bcacc4" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr D3DRESID::D3DRESID</definition>
        <argsstring>(unsigned h)</argsstring>
        <name>D3DRESID</name>
        <qualifiedname>D3DRESID::D3DRESID</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Conversion from the underlying representation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="37" column="22" bodyfile="dag_resId.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classD3DRESID_1aba40704479a527ec815cf88e2bafb0c2" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>D3DRESID::operator unsigned</definition>
        <argsstring>() const</argsstring>
        <name>operator unsigned</name>
        <qualifiedname>D3DRESID::operator unsigned</qualifiedname>
        <briefdescription>
<para>Conversion to the underlying representation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="39" column="12" bodyfile="dag_resId.h" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classD3DRESID_1aacb020a2562f2f19463186687972227e" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>D3DRESID::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <qualifiedname>D3DRESID::operator bool</qualifiedname>
        <briefdescription>
<para>Checks validity of the handle (it still might be broken though) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="41" column="12" bodyfile="dag_resId.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classD3DRESID_1ad4e3a3c4fd8278759831e62415780653" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void D3DRESID::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <qualifiedname>D3DRESID::reset</qualifiedname>
        <briefdescription>
<para>Resets the resource ID to an invalid state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="55" column="8" bodyfile="dag_resId.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classD3DRESID_1a9a84a18dbfa02b8ed37fe8f2cade1af5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned D3DRESID::index</definition>
        <argsstring>() const</argsstring>
        <name>index</name>
        <qualifiedname>D3DRESID::index</qualifiedname>
        <briefdescription>
<para>Gets the entry index for this ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="57" column="12" bodyfile="dag_resId.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classD3DRESID_1a48566d5290eec44818120bac0a1e56ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned D3DRESID::generation</definition>
        <argsstring>() const</argsstring>
        <name>generation</name>
        <qualifiedname>D3DRESID::generation</qualifiedname>
        <briefdescription>
<para>Gets the entry value generation for this ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="59" column="12" bodyfile="dag_resId.h" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classD3DRESID_1a602cdfc4926656f51ac0205ac01c44b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool D3DRESID::checkMarkerBit</definition>
        <argsstring>() const</argsstring>
        <name>checkMarkerBit</name>
        <qualifiedname>D3DRESID::checkMarkerBit</qualifiedname>
        <briefdescription>
<para>Checks whether the ID is not broken (generation MUST be odd) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="61" column="8" bodyfile="dag_resId.h" bodystart="61" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classD3DRESID_1a29d484d23d11655a5d506cc190739528" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classD3DRESID" kindref="compound">D3DRESID</ref></type>
        <definition>static D3DRESID D3DRESID::make</definition>
        <argsstring>(unsigned index, unsigned gen)</argsstring>
        <name>make</name>
        <qualifiedname>D3DRESID::make</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>index</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>gen</declname>
        </param>
        <briefdescription>
<para>Creates a new resource ID from an index and a generation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The resource manager entry index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gen</parametername>
</parameternamelist>
<parameterdescription>
<para>The generation counter for the resource </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new resource ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="79" column="26" bodyfile="dag_resId.h" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classD3DRESID_1a1330ba6182641ebc8bcdc0069cac6e4e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classD3DRESID" kindref="compound">D3DRESID</ref></type>
        <definition>static D3DRESID D3DRESID::fromIndex</definition>
        <argsstring>(unsigned index)</argsstring>
        <name>fromIndex</name>
        <qualifiedname>D3DRESID::fromIndex</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Creates a new resource ID from an index. </para>
        </briefdescription>
        <detaileddescription>
<para>The generation counter is acquired from the resource manager entry corresponding to the <computeroutput>index</computeroutput>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The resource manager entry index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new resource ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_resId.h" line="84" column="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An indirect identifier for a resource. </para>
    </briefdescription>
    <detaileddescription>
<para>Resource IDs are used to indirectly identify resources in the engine. The indirection is then used for streaming and stubbing out resources which are not yet loaded. E.g. binding SRVs to shaders is usually done through the shader var system, which in turn uses resource IDs and not raw texture object pointers. <simplesect kind="note"><para>Consists of an index for an entry inside the resource manager and a generation counter to distinguish between different resources stored within the same slot. For most uses these details are of little importance. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="dag_resId.h" line="25" column="1" bodyfile="dag_resId.h" bodystart="26" bodyend="88"/>
    <listofallmembers>
      <member refid="classD3DRESID_1a602cdfc4926656f51ac0205ac01c44b2" prot="public" virt="non-virtual"><scope>D3DRESID</scope><name>checkMarkerBit</name></member>
      <member refid="classD3DRESID_1aeccbc59735719708e381241e343c7f31" prot="public" virt="non-virtual"><scope>D3DRESID</scope><name>D3DRESID</name></member>
      <member refid="classD3DRESID_1a1a98bf0f11395dc0c1f005a35eff8aa5" prot="public" virt="non-virtual"><scope>D3DRESID</scope><name>D3DRESID</name></member>
      <member refid="classD3DRESID_1a8d868f123a94cbc90d4b94b57245ad94" prot="public" virt="non-virtual"><scope>D3DRESID</scope><name>D3DRESID</name></member>
      <member refid="classD3DRESID_1aa87311ab10e725c2012e00a636bcacc4" prot="public" virt="non-virtual"><scope>D3DRESID</scope><name>D3DRESID</name></member>
      <member refid="classD3DRESID_1a1330ba6182641ebc8bcdc0069cac6e4e" prot="public" virt="non-virtual"><scope>D3DRESID</scope><name>fromIndex</name></member>
      <member refid="classD3DRESID_1a48566d5290eec44818120bac0a1e56ca" prot="public" virt="non-virtual"><scope>D3DRESID</scope><name>generation</name></member>
      <member refid="classD3DRESID_1a87ca13125f9c8f2cfffe033735146dd4" prot="private" virt="non-virtual"><scope>D3DRESID</scope><name>handle</name></member>
      <member refid="classD3DRESID_1a9a84a18dbfa02b8ed37fe8f2cade1af5" prot="public" virt="non-virtual"><scope>D3DRESID</scope><name>index</name></member>
      <member refid="classD3DRESID_1a29d484d23d11655a5d506cc190739528" prot="public" virt="non-virtual"><scope>D3DRESID</scope><name>make</name></member>
      <member refid="classD3DRESID_1aacb020a2562f2f19463186687972227e" prot="public" virt="non-virtual"><scope>D3DRESID</scope><name>operator bool</name></member>
      <member refid="classD3DRESID_1aba40704479a527ec815cf88e2bafb0c2" prot="public" virt="non-virtual"><scope>D3DRESID</scope><name>operator unsigned</name></member>
      <member refid="classD3DRESID_1af58274166ac73d3c7f8feb0f49754cad" prot="public" virt="non-virtual"><scope>D3DRESID</scope><name>operator!=</name></member>
      <member refid="classD3DRESID_1ad0e365444a382d3e70857ae11f65bbdd" prot="public" virt="non-virtual"><scope>D3DRESID</scope><name>operator&lt;</name></member>
      <member refid="classD3DRESID_1a43276df11aa9a15f0ae9c91748a3b096" prot="public" virt="non-virtual"><scope>D3DRESID</scope><name>operator=</name></member>
      <member refid="classD3DRESID_1a7d0a967806b612988e8d7f4cf2952659" prot="public" virt="non-virtual"><scope>D3DRESID</scope><name>operator=</name></member>
      <member refid="classD3DRESID_1aaa00aced5aa1aba1766c5de2563719e6" prot="public" virt="non-virtual"><scope>D3DRESID</scope><name>operator==</name></member>
      <member refid="classD3DRESID_1ab5da993b4a6edae894bf854e6f8a214c" prot="public" virt="non-virtual"><scope>D3DRESID</scope><name>operator&gt;</name></member>
      <member refid="classD3DRESID_1ad4e3a3c4fd8278759831e62415780653" prot="public" virt="non-virtual"><scope>D3DRESID</scope><name>reset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
