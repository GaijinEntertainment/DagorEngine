<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="dag__tex3d_8h" kind="file" language="C++">
    <compoundname>dag_tex3d.h</compoundname>
    <includes refid="dag__sampler_8h" local="no">drv/3d/dag_sampler.h</includes>
    <includes refid="dag__d3dResource_8h" local="no">drv/3d/dag_d3dResource.h</includes>
    <includes refid="dag__resId_8h" local="no">drv/3d/dag_resId.h</includes>
    <includes refid="dag__texFlags_8h" local="no">drv/3d/dag_texFlags.h</includes>
    <includes local="no">math/dag_color.h</includes>
    <includes local="no">memory/dag_mem.h</includes>
    <includes local="no">util/dag_stdint.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="dag__consts__base_8h" local="no">drv/3d/dag_consts_base.h</includes>
    <includedby refid="dag__buffers_8h" local="no">dag_buffers.h</includedby>
    <includedby refid="dag__driver_8h" local="no">dag_driver.h</includedby>
    <includedby refid="dag__texture_8h" local="no">dag_texture.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>drv/3d/dag_consts_base.h</label>
        <link refid="dag__consts__base_8h"/>
      </node>
      <node id="7">
        <label>drv/3d/dag_d3dResource.h</label>
        <link refid="dag__d3dResource_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>drv/3d/dag_resId.h</label>
        <link refid="dag__resId_8h"/>
      </node>
      <node id="2">
        <label>drv/3d/dag_sampler.h</label>
        <link refid="dag__sampler_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>drv/3d/dag_samplerHandle.h</label>
        <link refid="dag__samplerHandle_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>dag_tex3d.h</label>
        <link refid="dag__tex3d_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>drv/3d/dag_texFlags.h</label>
        <link refid="dag__texFlags_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cstdint</label>
      </node>
      <node id="11">
        <label>math/dag_adjpow2.h</label>
      </node>
      <node id="6">
        <label>math/dag_color.h</label>
      </node>
      <node id="12">
        <label>memory/dag_mem.h</label>
      </node>
      <node id="13">
        <label>string.h</label>
      </node>
      <node id="5">
        <label>util/dag_stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>dag_async_pipeline.h</label>
        <link refid="dag__async__pipeline_8h"/>
      </node>
      <node id="2">
        <label>dag_buffers.h</label>
        <link refid="dag__buffers_8h"/>
      </node>
      <node id="3">
        <label>dag_driver.h</label>
        <link refid="dag__driver_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>dag_drv3d_multi.h</label>
        <link refid="dag__drv3d__multi_8h"/>
      </node>
      <node id="6">
        <label>dag_lock.h</label>
        <link refid="dag__lock_8h"/>
      </node>
      <node id="8">
        <label>dag_platform.h</label>
        <link refid="dag__platform_8h"/>
      </node>
      <node id="7">
        <label>dag_platform_pc.h</label>
        <link refid="dag__platform__pc_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>dag_platform_ps.h</label>
        <link refid="dag__platform__ps_8h"/>
      </node>
      <node id="1">
        <label>dag_tex3d.h</label>
        <link refid="dag__tex3d_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>dag_texture.h</label>
        <link refid="dag__texture_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structTextureChannelFormatDesc" prot="public">TextureChannelFormatDesc</innerclass>
    <innerclass refid="structTextureFormatDesc" prot="public">TextureFormatDesc</innerclass>
    <innerclass refid="structTextureInfo" prot="public">TextureInfo</innerclass>
    <innerclass refid="classBaseTexture" prot="public">BaseTexture</innerclass>
    <innerclass refid="structBaseTexture_1_1IReloadData" prot="public">BaseTexture::IReloadData</innerclass>
    <innernamespace refid="namespaceddsx">ddsx</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>ChannelDType</name>
        <enumvalue id="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2ab50339a10e1de285ac99d4c3990b8693" prot="public">
          <name>NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2a5bb95a4e899b4551b04a48066588d0e5" prot="public">
          <name>UNORM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2a7c1aa912d80cc40ecfa14a37bc458843" prot="public">
          <name>SNORM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2ae6ac805b2322b9c60967a971fd35167a" prot="public">
          <name>UFLOAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2a5a58e5d5f599c38d470fdac5da9622b5" prot="public">
          <name>SFLOAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2a3351504090a741e69da641a42e00da80" prot="public">
          <name>UINT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2a0d6b471a91d4d6f751adbee558004f1f" prot="public">
          <name>SINT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="37" column="1" bodyfile="dag_tex3d.h" bodystart="38" bodyend="46"/>
      </memberdef>
      <memberdef kind="enum" id="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294c" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294cab97d145a655b3786d211ad15fd0a6633" prot="public">
          <name>TEXLOCK_DISCARD</name>
          <initializer>= 0x00002000L</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca7024b98eddf689371804e435510ff1ec" prot="public">
          <name>TEXLOCK_RAWDATA</name>
          <initializer>= 0x00004000L</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294caaaccf67fe218c8497cd7e166502d6092" prot="public">
          <name>TEXLOCK_NOSYSLOCK</name>
          <initializer>= 0x00000800L</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294cae88cc87bd874de16ef5d7b64d8e5b30c" prot="public">
          <name>TEXLOCK_READ</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca94a47abff739eb51ef0efd666671c9f8" prot="public">
          <name>TEXLOCK_WRITE</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca0bd1c21b1e99983a991945e8c7a119ac" prot="public">
          <name>TEXLOCK_READWRITE</name>
          <initializer>= TEXLOCK_READ | TEXLOCK_WRITE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca8c8d750a5a6a7caed7316a915612b7bd" prot="public">
          <name>TEXLOCK_RWMASK</name>
          <initializer>= TEXLOCK_READWRITE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294cade76e6e5e7af76c460f2e67ed53354ab" prot="public">
          <name>TEXLOCK_DELSYSMEMCOPY</name>
          <initializer>= 0x10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294cab947e65589b372a3807510bdf332ca3d" prot="public">
          <name>TEXLOCK_DONOTUPDATE</name>
          <initializer>= 0x80</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca6d7809c41d9f725ab075c234f2012591" prot="public">
          <name>TEXLOCK_DEFAULT</name>
          <initializer>= TEXLOCK_READWRITE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="99" column="1" bodyfile="dag_tex3d.h" bodystart="100" bodyend="111"/>
      </memberdef>
      <memberdef kind="enum" id="dag__tex3d_8h_1ac9420823bfeba78fce625fc105e3b01d" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="dag__tex3d_8h_1ac9420823bfeba78fce625fc105e3b01dab2ffff905344ae22cbab73adbf4d0e89" prot="public">
          <name>TEXLF_CALCMIPMAPS</name>
          <initializer>= 0x0001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="115" column="1" bodyfile="dag_tex3d.h" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="enum" id="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6e" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6ea17b84d8078b80e072c3a06d791b47e8d" prot="public">
          <name>CUBEFACE_POSX</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6eabfa657b61a7bc567a7c3161dc6c03c10" prot="public">
          <name>CUBEFACE_NEGX</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6eaf353500273815468c309846677c3b95f" prot="public">
          <name>CUBEFACE_POSY</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6ea0cace3d2d3c1613819a34239fbc3a03c" prot="public">
          <name>CUBEFACE_NEGY</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6ea53d3b6f3224e33cb407137bf3cf94f0b" prot="public">
          <name>CUBEFACE_POSZ</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6ea4b331ccadfa16883c655d4cff60c6c8b" prot="public">
          <name>CUBEFACE_NEGZ</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="120" column="1" bodyfile="dag_tex3d.h" bodystart="121" bodyend="128"/>
      </memberdef>
      <memberdef kind="enum" id="dag__tex3d_8h_1ae2fea7da159d81915baf6bdfe7bba50a" prot="public" static="no" strong="yes">
        <type></type>
        <name>TexLoadRes</name>
        <enumvalue id="dag__tex3d_8h_1ae2fea7da159d81915baf6bdfe7bba50aacd22bad976363fdd1bfbf6759fede482" prot="public">
          <name>ERR</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1ae2fea7da159d81915baf6bdfe7bba50aae0aa021e21dddbd6d8cecec71e9cf564" prot="public">
          <name>OK</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__tex3d_8h_1ae2fea7da159d81915baf6bdfe7bba50aaefd5de22c2ed5c0a7e1dec9443f9d558" prot="public">
          <name>ERR_RUB</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="148" column="1" bodyfile="dag_tex3d.h" bodystart="149" bodyend="153"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dag__tex3d_8h_1a37ee2859ee04a3f5c750a5b5e3684c1d" prot="public" static="no">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref></type>
        <definition>typedef BaseTexture Texture</definition>
        <argsstring></argsstring>
        <name>Texture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="310" column="21" bodyfile="dag_tex3d.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__tex3d_8h_1a0f1991b83270f80fdb5975f615cc8f98" prot="public" static="no">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref></type>
        <definition>typedef BaseTexture CubeTexture</definition>
        <argsstring></argsstring>
        <name>CubeTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="311" column="21" bodyfile="dag_tex3d.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__tex3d_8h_1a7822f867ab7b3377816832b781b76930" prot="public" static="no">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref></type>
        <definition>typedef BaseTexture VolTexture</definition>
        <argsstring></argsstring>
        <name>VolTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="312" column="21" bodyfile="dag_tex3d.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__tex3d_8h_1af17a5ffc9ee505603d91f627188e8dc7" prot="public" static="no">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref></type>
        <definition>typedef BaseTexture ArrayTexture</definition>
        <argsstring></argsstring>
        <name>ArrayTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="313" column="21" bodyfile="dag_tex3d.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dag__tex3d_8h_1a493fcb1cda716e3b8ee52f6e8cb2e7ab" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* on_tex_slice_loaded_cb_t) ()</definition>
        <argsstring>)()</argsstring>
        <name>on_tex_slice_loaded_cb_t</name>
        <briefdescription>
<para>load texture content from DDSx stream using DDSx header for previously allocated texture </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="368" column="9" bodyfile="dag_tex3d.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="dag__tex3d_8h_1a33ff6e0fc2e26a897e4364244b49fe74" prot="public" static="no" mutable="no">
        <type><ref refid="dag__tex3d_8h_1ae2fea7da159d81915baf6bdfe7bba50a" kindref="member">TexLoadRes</ref>(*</type>
        <definition>TexLoadRes(* d3d_load_ddsx_tex_contents_impl) (BaseTexture *tex, TEXTUREID tid, TEXTUREID paired_tid, const ddsx::Header &amp;hdr, IGenLoad &amp;crd, int q_id, int start_lev, unsigned tex_ld_lev, on_tex_slice_loaded_cb_t, bool)</definition>
        <argsstring>)(BaseTexture *tex, TEXTUREID tid, TEXTUREID paired_tid, const ddsx::Header &amp;hdr, IGenLoad &amp;crd, int q_id, int start_lev, unsigned tex_ld_lev, on_tex_slice_loaded_cb_t, bool)</argsstring>
        <name>d3d_load_ddsx_tex_contents_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="369" column="8" declfile="dag_tex3d.h" declline="369" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="dag__tex3d_8h_1a6b26972b9feebc213e7354920b0a5677" prot="public" static="no" mutable="no">
        <type><ref refid="dag__tex3d_8h_1ae2fea7da159d81915baf6bdfe7bba50a" kindref="member">TexLoadRes</ref>(*</type>
        <definition>TexLoadRes(* d3d_load_ddsx_to_slice) (BaseTexture *tex, int slice, const ddsx::Header &amp;hdr, IGenLoad &amp;crd, int q_id, int start_lev, unsigned tex_ld_lev)</definition>
        <argsstring>)(BaseTexture *tex, int slice, const ddsx::Header &amp;hdr, IGenLoad &amp;crd, int q_id, int start_lev, unsigned tex_ld_lev)</argsstring>
        <name>d3d_load_ddsx_to_slice</name>
        <briefdescription>
<para>load texture content from DDSx stream using DDSx header to specified slice of previously allocated array texture </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="379" column="8" declfile="dag_tex3d.h" declline="379" declcolumn="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dag__tex3d_8h_1a81716813bf4b7ce7e2bce8958712aba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_alpha_texformat</definition>
        <argsstring>(unsigned flags)</argsstring>
        <name>is_alpha_texformat</name>
        <param>
          <type>unsigned</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="75" column="7" bodyfile="dag_tex3d.h" bodystart="75" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="dag__tex3d_8h_1a6c7a2a6dc6ed92359185088af8a91cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_bc_texformat</definition>
        <argsstring>(unsigned flags)</argsstring>
        <name>is_bc_texformat</name>
        <param>
          <type>unsigned</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="86" column="7" bodyfile="dag_tex3d.h" bodystart="86" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="dag__tex3d_8h_1a43a8448366385e8e7fa5a16cbce33868" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t auto_mip_levels_count</definition>
        <argsstring>(uint32_t w, uint32_t min_size)</argsstring>
        <name>auto_mip_levels_count</name>
        <param>
          <type>uint32_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>min_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="315" column="10" declfile="dag_tex3d.h" declline="315" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="dag__tex3d_8h_1a36e9ea989dd01bd26fc51e9426e38453" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t auto_mip_levels_count</definition>
        <argsstring>(uint32_t w, uint32_t h, uint32_t min_size)</argsstring>
        <name>auto_mip_levels_count</name>
        <param>
          <type>uint32_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>h</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>min_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="316" column="10" declfile="dag_tex3d.h" declline="316" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="dag__tex3d_8h_1a3aadba09244402c5aaaaf32b523858e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t auto_mip_levels_count</definition>
        <argsstring>(uint32_t w, uint32_t h, uint32_t d, uint32_t min_size)</argsstring>
        <name>auto_mip_levels_count</name>
        <param>
          <type>uint32_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>h</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>d</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>min_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="317" column="10" declfile="dag_tex3d.h" declline="317" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="dag__tex3d_8h_1ad34b1b5958851e12b8ef6989ffb5b675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t parse_tex_format</definition>
        <argsstring>(const char *name, uint32_t default_fmt)</argsstring>
        <name>parse_tex_format</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>default_fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="319" column="10" declfile="dag_tex3d.h" declline="319" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="dag__tex3d_8h_1a3458cabaf742fcecd6c4137240d7e657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structTextureFormatDesc" kindref="compound">TextureFormatDesc</ref> &amp;</type>
        <definition>const TextureFormatDesc &amp; get_tex_format_desc</definition>
        <argsstring>(uint32_t fmt)</argsstring>
        <name>get_tex_format_desc</name>
        <param>
          <type>uint32_t</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="320" column="25" declfile="dag_tex3d.h" declline="320" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="dag__tex3d_8h_1ac89dd924988ffe7a81a20d58042ddb11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * get_tex_format_name</definition>
        <argsstring>(uint32_t fmt)</argsstring>
        <name>get_tex_format_name</name>
        <param>
          <type>uint32_t</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="321" column="12" declfile="dag_tex3d.h" declline="321" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="dag__tex3d_8h_1ae0a9184b31faf7f38391040c28035077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t get_tex_channel_value</definition>
        <argsstring>(const void *pixel, const TextureChannelFormatDesc &amp;channel)</argsstring>
        <name>get_tex_channel_value</name>
        <param>
          <type>const void *</type>
          <declname>pixel</declname>
        </param>
        <param>
          <type>const <ref refid="structTextureChannelFormatDesc" kindref="compound">TextureChannelFormatDesc</ref> &amp;</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Extracts a the bits from a pixel at memory location <computeroutput>pixel</computeroutput> that correspond to a particular channel in the specified format. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Bits unused by the channel are set to 0, even for signed formats </para>
</simplesect>
<simplesect kind="warning"><para>This is extremely slow! </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pixel</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory location of the pixel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Description of the channel&apos;s format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A uint32_t whose lowest bits contain the bits of the channel </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="331" column="10" declfile="dag_tex3d.h" declline="331" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="dag__tex3d_8h_1a22a645bdf8f3b7812ebcc64d925f6792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_tex_channel_value</definition>
        <argsstring>(void *pixel, const TextureChannelFormatDesc &amp;channel, uint32_t bits)</argsstring>
        <name>set_tex_channel_value</name>
        <param>
          <type>void *</type>
          <declname>pixel</declname>
        </param>
        <param>
          <type>const <ref refid="structTextureChannelFormatDesc" kindref="compound">TextureChannelFormatDesc</ref> &amp;</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>Sets the bits for a pixel at memory location <computeroutput>pixel</computeroutput> that correspond to a particular channel in the specified format. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This is extremely slow! </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pixel</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory location of the pixel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Description of the channel&apos;s format </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bits</parametername>
</parameternamelist>
<parameterdescription>
<para>The bits to assign to the channel (only the lowest bits are used) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="340" column="6" declfile="dag_tex3d.h" declline="340" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="dag__tex3d_8h_1a5e07a7655206640c9c3a9e9483d5b45d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float channel_bits_to_float</definition>
        <argsstring>(uint32_t bits, ChannelDType type, const TextureChannelFormatDesc &amp;channel)</argsstring>
        <name>channel_bits_to_float</name>
        <param>
          <type>uint32_t</type>
          <declname>bits</declname>
        </param>
        <param>
          <type><ref refid="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2" kindref="member">ChannelDType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="structTextureChannelFormatDesc" kindref="compound">TextureChannelFormatDesc</ref> &amp;</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Converts raw bits of a channel in a certain format into a floating point value that matches the logical value of the channel as closely as possible. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Conversion is done as per section 3.9 of Vulkan API specification </para>
</simplesect>
<simplesect kind="warning"><para>This is extremely slow! </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bits</parametername>
</parameternamelist>
<parameterdescription>
<para>The bits of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the value stored in the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The description of the channel&apos;s format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A float that matches the logical value of the channel </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="352" column="7" declfile="dag_tex3d.h" declline="352" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="dag__tex3d_8h_1acfb3ab43dc67cb3802207494050e7e00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t float_to_channel_bits</definition>
        <argsstring>(float value, ChannelDType type, const TextureChannelFormatDesc &amp;channel)</argsstring>
        <name>float_to_channel_bits</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2" kindref="member">ChannelDType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="structTextureChannelFormatDesc" kindref="compound">TextureChannelFormatDesc</ref> &amp;</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Converts a float into raw bits of a channel in a certain format that match the provided float as closely as possible. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Conversion is done as per section 3.9 of Vulkan API specification </para>
</simplesect>
<simplesect kind="note"><para>Bits unused by the channel are set to 0, even for signed formats </para>
</simplesect>
<simplesect kind="warning"><para>This is extremely slow! </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The floating point value to convert </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the value stored in the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The description of the channel&apos;s format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A uint32_t that contains the bits of the channel </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="365" column="10" declfile="dag_tex3d.h" declline="365" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="dag__tex3d_8h_1a41e8ea1721fce1881fa6127ac237c9a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dag__tex3d_8h_1ae2fea7da159d81915baf6bdfe7bba50a" kindref="member">TexLoadRes</ref></type>
        <definition>TexLoadRes d3d_load_ddsx_tex_contents</definition>
        <argsstring>(BaseTexture *tex, TEXTUREID tid, TEXTUREID paired_tid, const ddsx::Header &amp;hdr, IGenLoad &amp;crd, int q_id, int start_lev=0, unsigned tex_ld_lev=0, on_tex_slice_loaded_cb_t on_tex_slice_loaded_cb=nullptr, bool tex_props_inited=false)</argsstring>
        <name>d3d_load_ddsx_tex_contents</name>
        <param>
          <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
          <declname>tex</declname>
        </param>
        <param>
          <type><ref refid="dag__resId_8h_1ade43f702a210722e97e3b5e0751697c4" kindref="member">TEXTUREID</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type><ref refid="dag__resId_8h_1ade43f702a210722e97e3b5e0751697c4" kindref="member">TEXTUREID</ref></type>
          <declname>paired_tid</declname>
        </param>
        <param>
          <type>const ddsx::Header &amp;</type>
          <declname>hdr</declname>
        </param>
        <param>
          <type>IGenLoad &amp;</type>
          <declname>crd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start_lev</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>unsigned</type>
          <declname>tex_ld_lev</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="dag__tex3d_8h_1a493fcb1cda716e3b8ee52f6e8cb2e7ab" kindref="member">on_tex_slice_loaded_cb_t</ref></type>
          <declname>on_tex_slice_loaded_cb</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>tex_props_inited</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="371" column="19" bodyfile="dag_tex3d.h" bodystart="371" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="dag__tex3d_8h_1acf7988411918a713313f695463a90123" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool convert_image_line</definition>
        <argsstring>(const void *input, int width, int in_channels, int in_bits_per_channel, bool in_float, void *output, int out_channels, int out_bits_per_channel, bool out_float, bool swap_rb, bool invert)</argsstring>
        <name>convert_image_line</name>
        <param>
          <type>const void *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>in_channels</declname>
        </param>
        <param>
          <type>int</type>
          <declname>in_bits_per_channel</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>in_float</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_channels</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_bits_per_channel</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>out_float</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>swap_rb</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>invert</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="382" column="6" declfile="dag_tex3d.h" declline="382" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dagor<sp/>Engine<sp/>6.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="dag__sampler_8h" kindref="compound">drv/3d/dag_sampler.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="dag__d3dResource_8h" kindref="compound">drv/3d/dag_d3dResource.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="dag__resId_8h" kindref="compound">drv/3d/dag_resId.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="dag__texFlags_8h" kindref="compound">drv/3d/dag_texFlags.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math/dag_color.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory/dag_mem.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/dag_stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>forward<sp/>declarations<sp/>for<sp/>tex<sp/>pixel<sp/>formats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TexPixel32;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TexPixel8a;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">IGenLoad;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceddsx" kindref="compound">ddsx</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Header;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Textures<sp/>for<sp/>Driver3d<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structTextureChannelFormatDesc" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structTextureChannelFormatDesc" kindref="compound">TextureChannelFormatDesc</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30" refid="structTextureChannelFormatDesc_1adb5b2dfde890739ebbf29ab12567b490" refkind="member"><highlight class="normal"><sp/><sp/>int8_t<sp/><ref refid="structTextureChannelFormatDesc_1adb5b2dfde890739ebbf29ab12567b490" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="31" refid="structTextureChannelFormatDesc_1ad29f3d0ec6834e8ddf2adec12ff9d567" refkind="member"><highlight class="normal"><sp/><sp/>int8_t<sp/><ref refid="structTextureChannelFormatDesc_1ad29f3d0ec6834e8ddf2adec12ff9d567" kindref="member">offset</ref>;<sp/></highlight><highlight class="comment">//<sp/>in<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structTextureChannelFormatDesc_1a67a359ea16b5d05d3c8fdfd1e1380652" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structTextureChannelFormatDesc_1a67a359ea16b5d05d3c8fdfd1e1380652" kindref="member">isFloatPoint</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="33" refid="structTextureChannelFormatDesc_1a748a849b6d0ca8d2bd9683d6a2f4fd9e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structTextureChannelFormatDesc_1a748a849b6d0ca8d2bd9683d6a2f4fd9e" kindref="member">isSigned</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="34" refid="structTextureChannelFormatDesc_1a7f047f5fd88fd62f22b95a2b932fb20c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structTextureChannelFormatDesc_1a7f047f5fd88fd62f22b95a2b932fb20c" kindref="member">isNormalized</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2" kindref="member">ChannelDType</ref><sp/>:<sp/>uint8_t</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2ab50339a10e1de285ac99d4c3990b8693" kindref="member">NONE</ref>,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2a5bb95a4e899b4551b04a48066588d0e5" kindref="member">UNORM</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>fixed<sp/>point<sp/>real<sp/>\in<sp/>[0,<sp/>1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2a7c1aa912d80cc40ecfa14a37bc458843" kindref="member">SNORM</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>fixed<sp/>point<sp/>real<sp/>\in<sp/>[0,<sp/>1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2ae6ac805b2322b9c60967a971fd35167a" kindref="member">UFLOAT</ref>,<sp/></highlight><highlight class="comment">//<sp/>floating<sp/>point<sp/>real<sp/>\in<sp/>[0,<sp/>+\infty]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2a5a58e5d5f599c38d470fdac5da9622b5" kindref="member">SFLOAT</ref>,<sp/></highlight><highlight class="comment">//<sp/>floating<sp/>point<sp/>real<sp/>\in<sp/>[-\infty,<sp/>+\infty]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2a3351504090a741e69da641a42e00da80" kindref="member">UINT</ref>,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>\in<sp/>[0,<sp/>+\infty]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2a0d6b471a91d4d6f751adbee558004f1f" kindref="member">SINT</ref><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>\in<sp/>[-\infty,<sp/>+\infty]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structTextureFormatDesc" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structTextureFormatDesc" kindref="compound">TextureFormatDesc</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50" refid="structTextureFormatDesc_1a5d21c88d12a83e19409dc27db796caf6" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structTextureFormatDesc_1a5d21c88d12a83e19409dc27db796caf6" kindref="member">dagorTextureFormat</ref>;</highlight></codeline>
<codeline lineno="51" refid="structTextureFormatDesc_1a85f5a24286ba727e0a92814cefacd06e" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="structTextureFormatDesc_1a85f5a24286ba727e0a92814cefacd06e" kindref="member">bytesPerElement</ref>;</highlight></codeline>
<codeline lineno="52" refid="structTextureFormatDesc_1a8c4a9607f19c84b8a66e460d0fb455fa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structTextureFormatDesc_1a8c4a9607f19c84b8a66e460d0fb455fa" kindref="member">isBlockFormat</ref>;</highlight></codeline>
<codeline lineno="53" refid="structTextureFormatDesc_1a427f3d4efddc38a1f1ed393f4d79717e" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="structTextureFormatDesc_1a427f3d4efddc38a1f1ed393f4d79717e" kindref="member">elementWidth</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structTextureFormatDesc_1a1e2917378a87cbba7eb58d743ba075c9" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="structTextureFormatDesc_1a1e2917378a87cbba7eb58d743ba075c9" kindref="member">elementHeight</ref>;<sp/></highlight><highlight class="comment">//<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Type<sp/>for<sp/>rgba<sp/>and<sp/>depth,<sp/>which<sp/>is<sp/>always<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structTextureFormatDesc_1ad7ef4d102ed9a33d12d5148e3c09d77f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2" kindref="member">ChannelDType</ref><sp/><ref refid="structTextureFormatDesc_1ad7ef4d102ed9a33d12d5148e3c09d77f" kindref="member">mainChannelsType</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Separate<sp/>type<sp/>for<sp/>stencil<sp/>(as<sp/>it<sp/>usually<sp/>is<sp/>different)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structTextureFormatDesc_1a317630cc2b033af552e9fe3ba1a632b0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2" kindref="member">ChannelDType</ref><sp/><ref refid="structTextureFormatDesc_1a317630cc2b033af552e9fe3ba1a632b0" kindref="member">stencilChannelType</ref>;</highlight></codeline>
<codeline lineno="59" refid="structTextureFormatDesc_1a9d536f7dcdbb6070aaf88e27df9239f8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structTextureChannelFormatDesc" kindref="compound">TextureChannelFormatDesc</ref><sp/><ref refid="structTextureFormatDesc_1a9d536f7dcdbb6070aaf88e27df9239f8" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="60" refid="structTextureFormatDesc_1a333da44ab0fcc842ed8de4b1f19ff87f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structTextureChannelFormatDesc" kindref="compound">TextureChannelFormatDesc</ref><sp/><ref refid="structTextureFormatDesc_1a333da44ab0fcc842ed8de4b1f19ff87f" kindref="member">g</ref>;</highlight></codeline>
<codeline lineno="61" refid="structTextureFormatDesc_1ab35b54e2f84b0d1ad0002be25decc871" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structTextureChannelFormatDesc" kindref="compound">TextureChannelFormatDesc</ref><sp/><ref refid="structTextureFormatDesc_1ab35b54e2f84b0d1ad0002be25decc871" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="62" refid="structTextureFormatDesc_1a2279d6548d8b2986045a69870b43c1d9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structTextureChannelFormatDesc" kindref="compound">TextureChannelFormatDesc</ref><sp/><ref refid="structTextureFormatDesc_1a2279d6548d8b2986045a69870b43c1d9" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="63" refid="structTextureFormatDesc_1a3242a8d4196b9e1e0c4468243e63f50d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structTextureChannelFormatDesc" kindref="compound">TextureChannelFormatDesc</ref><sp/><ref refid="structTextureFormatDesc_1a3242a8d4196b9e1e0c4468243e63f50d" kindref="member">depth</ref>;</highlight></codeline>
<codeline lineno="64" refid="structTextureFormatDesc_1a1665c4afcc880db350cf6124088bf9fd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structTextureChannelFormatDesc" kindref="compound">TextureChannelFormatDesc</ref><sp/><ref refid="structTextureFormatDesc_1a1665c4afcc880db350cf6124088bf9fd" kindref="member">stencil</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="structTextureFormatDesc_1aaa802dc5b805e17d18acd0ace7e5f1ad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structTextureFormatDesc_1aaa802dc5b805e17d18acd0ace7e5f1ad" kindref="member">hasAlpha</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structTextureFormatDesc_1a2279d6548d8b2986045a69870b43c1d9" kindref="member">a</ref>.<ref refid="structTextureChannelFormatDesc_1adb5b2dfde890739ebbf29ab12567b490" kindref="member">bits</ref><sp/>&gt;<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structTextureFormatDesc_1a16ff7deb1a12fb37a232acfd6121ba57" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structTextureFormatDesc_1a16ff7deb1a12fb37a232acfd6121ba57" kindref="member">isDepth</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structTextureFormatDesc_1a3242a8d4196b9e1e0c4468243e63f50d" kindref="member">depth</ref>.<ref refid="structTextureChannelFormatDesc_1adb5b2dfde890739ebbf29ab12567b490" kindref="member">bits</ref><sp/>&gt;<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structTextureFormatDesc_1a03f9dd4504c357872a07b6851273bac1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTextureFormatDesc_1a03f9dd4504c357872a07b6851273bac1" kindref="member">rgbaChannelsCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structTextureFormatDesc_1a9d536f7dcdbb6070aaf88e27df9239f8" kindref="member">r</ref>.<ref refid="structTextureChannelFormatDesc_1adb5b2dfde890739ebbf29ab12567b490" kindref="member">bits</ref><sp/>&gt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>0)<sp/>+<sp/>(<ref refid="structTextureFormatDesc_1a333da44ab0fcc842ed8de4b1f19ff87f" kindref="member">g</ref>.<ref refid="structTextureChannelFormatDesc_1adb5b2dfde890739ebbf29ab12567b490" kindref="member">bits</ref><sp/>&gt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>0)<sp/>+<sp/>(<ref refid="structTextureFormatDesc_1ab35b54e2f84b0d1ad0002be25decc871" kindref="member">b</ref>.<ref refid="structTextureChannelFormatDesc_1adb5b2dfde890739ebbf29ab12567b490" kindref="member">bits</ref><sp/>&gt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>0)<sp/>+<sp/>(<ref refid="structTextureFormatDesc_1a2279d6548d8b2986045a69870b43c1d9" kindref="member">a</ref>.<ref refid="structTextureChannelFormatDesc_1adb5b2dfde890739ebbf29ab12567b490" kindref="member">bits</ref><sp/>&gt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="structTextureFormatDesc_1af1d8bfc5eb4d53bed8cd09d7fc801bdc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTextureFormatDesc_1af1d8bfc5eb4d53bed8cd09d7fc801bdc" kindref="member">channelsCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structTextureFormatDesc_1a03f9dd4504c357872a07b6851273bac1" kindref="member">rgbaChannelsCount</ref>()<sp/>+<sp/>(<ref refid="structTextureFormatDesc_1a3242a8d4196b9e1e0c4468243e63f50d" kindref="member">depth</ref>.<ref refid="structTextureChannelFormatDesc_1adb5b2dfde890739ebbf29ab12567b490" kindref="member">bits</ref><sp/>&gt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>0)<sp/>+<sp/>(<ref refid="structTextureFormatDesc_1a1665c4afcc880db350cf6124088bf9fd" kindref="member">stencil</ref>.<ref refid="structTextureChannelFormatDesc_1adb5b2dfde890739ebbf29ab12567b490" kindref="member">bits</ref><sp/>&gt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="dag__tex3d_8h_1a81716813bf4b7ce7e2bce8958712aba4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>__forceinline<sp/><ref refid="dag__tex3d_8h_1a81716813bf4b7ce7e2bce8958712aba4" kindref="member">is_alpha_texformat</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>flags)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>flags<sp/>&amp;=<sp/><ref refid="dag__texFlags_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6a81cf0b1ae2e9f5097d672ad417da31a6" kindref="member">TEXFMT_MASK</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&gt;=<sp/><ref refid="dag__texFlags_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6ab0b6ae6c54a41b41767ba2b5a0b4c3da" kindref="member">TEXFMT_A2R10G10B10</ref><sp/>&amp;&amp;<sp/>flags<sp/>&lt;=<sp/><ref refid="dag__texFlags_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6aa17e3c1a1208cfbf046f20d1c7262f23" kindref="member">TEXFMT_A32B32G32R32F</ref>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>==<sp/><ref refid="dag__texFlags_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6a0057930ec74d1e0c0a0bfeec3ed4cf42" kindref="member">TEXFMT_A8R8G8B8</ref><sp/>||<sp/>flags<sp/>==<sp/><ref refid="dag__texFlags_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6af6f80f45e92a46ae8f4e8b382f404d3f" kindref="member">TEXFMT_A8</ref><sp/>||<sp/>flags<sp/>==<sp/><ref refid="dag__texFlags_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6af24298a75e78b2fb1985dd5f4f899309" kindref="member">TEXFMT_A1R5G5B5</ref><sp/>||<sp/>flags<sp/>==<sp/><ref refid="dag__texFlags_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6ab591fcfc0c3f73693b7174f0ee82fe8a" kindref="member">TEXFMT_A4R4G4B4</ref><sp/>||<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>==<sp/><ref refid="dag__texFlags_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6aea2dbffdfe92f96fb66a044073735ee4" kindref="member">TEXFMT_DXT3</ref><sp/>||<sp/>flags<sp/>==<sp/><ref refid="dag__texFlags_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6aaf34b2512c896133d8c954736e348fd7" kindref="member">TEXFMT_DXT5</ref>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="dag__tex3d_8h_1a6c7a2a6dc6ed92359185088af8a91cae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>__forceinline<sp/><ref refid="dag__tex3d_8h_1a6c7a2a6dc6ed92359185088af8a91cae" kindref="member">is_bc_texformat</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>flags)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>flags<sp/>&amp;=<sp/><ref refid="dag__texFlags_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6a81cf0b1ae2e9f5097d672ad417da31a6" kindref="member">TEXFMT_MASK</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&gt;=<sp/><ref refid="dag__texFlags_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6a2a99142552447e3505267d6383706cca" kindref="member">TEXFMT_DXT1</ref><sp/>&amp;&amp;<sp/>flags<sp/>&lt;=<sp/><ref refid="dag__texFlags_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6aaf34b2512c896133d8c954736e348fd7" kindref="member">TEXFMT_DXT5</ref>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&gt;=<sp/><ref refid="dag__texFlags_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6a3334a7eb4d5dc28964c1d7c15473cbce" kindref="member">TEXFMT_BC6H</ref><sp/>&amp;&amp;<sp/>flags<sp/>&lt;=<sp/><ref refid="dag__texFlags_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6acc739937c8378ea25b6525ba35f081b3" kindref="member">TEXFMT_BC7</ref>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&gt;=<sp/><ref refid="dag__texFlags_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6a694617ecb800fcbe06c83e7a657151d4" kindref="member">TEXFMT_ATI1N</ref><sp/>&amp;&amp;<sp/>flags<sp/>&lt;=<sp/><ref refid="dag__texFlags_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6aaaaf15f266dc29542fb442f71de471e8" kindref="member">TEXFMT_ATI2N</ref>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Lock<sp/>flags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101" refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294cab97d145a655b3786d211ad15fd0a6633" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294cab97d145a655b3786d211ad15fd0a6633" kindref="member">TEXLOCK_DISCARD</ref><sp/>=<sp/>0x00002000L,</highlight></codeline>
<codeline lineno="102" refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca7024b98eddf689371804e435510ff1ec" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca7024b98eddf689371804e435510ff1ec" kindref="member">TEXLOCK_RAWDATA</ref><sp/>=<sp/>0x00004000L,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PS4.<sp/>Do<sp/>not<sp/>convert<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294caaaccf67fe218c8497cd7e166502d6092" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294caaaccf67fe218c8497cd7e166502d6092" kindref="member">TEXLOCK_NOSYSLOCK</ref><sp/>=<sp/>0x00000800L,<sp/></highlight><highlight class="comment">//<sp/>if<sp/>lock<sp/>considered<sp/>blocking<sp/>one<sp/>(GPU<sp/>wait),<sp/>do<sp/>early<sp/>exit<sp/>instead<sp/>of<sp/>blocking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294cae88cc87bd874de16ef5d7b64d8e5b30c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294cae88cc87bd874de16ef5d7b64d8e5b30c" kindref="member">TEXLOCK_READ</ref><sp/>=<sp/>0x01,</highlight></codeline>
<codeline lineno="105" refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca94a47abff739eb51ef0efd666671c9f8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca94a47abff739eb51ef0efd666671c9f8" kindref="member">TEXLOCK_WRITE</ref><sp/>=<sp/>0x02,</highlight></codeline>
<codeline lineno="106" refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca0bd1c21b1e99983a991945e8c7a119ac" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca0bd1c21b1e99983a991945e8c7a119ac" kindref="member">TEXLOCK_READWRITE</ref><sp/>=<sp/><ref refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294cae88cc87bd874de16ef5d7b64d8e5b30c" kindref="member">TEXLOCK_READ</ref><sp/>|<sp/><ref refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca94a47abff739eb51ef0efd666671c9f8" kindref="member">TEXLOCK_WRITE</ref>,</highlight></codeline>
<codeline lineno="107" refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca8c8d750a5a6a7caed7316a915612b7bd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca8c8d750a5a6a7caed7316a915612b7bd" kindref="member">TEXLOCK_RWMASK</ref><sp/>=<sp/><ref refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca0bd1c21b1e99983a991945e8c7a119ac" kindref="member">TEXLOCK_READWRITE</ref>,</highlight></codeline>
<codeline lineno="108" refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294cade76e6e5e7af76c460f2e67ed53354ab" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294cade76e6e5e7af76c460f2e67ed53354ab" kindref="member">TEXLOCK_DELSYSMEMCOPY</ref><sp/>=<sp/>0x10,<sp/></highlight><highlight class="comment">//<sp/>delete<sp/>sysmemcopy<sp/>on<sp/>unlock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294cab947e65589b372a3807510bdf332ca3d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294cab947e65589b372a3807510bdf332ca3d" kindref="member">TEXLOCK_DONOTUPDATE</ref><sp/>=<sp/>0x80,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>update<sp/>video<sp/>memory<sp/>at<sp/>unlock,<sp/>use<sp/>to<sp/>batch<sp/>updates<sp/>for<sp/>multiple<sp/>subresources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca6d7809c41d9f725ab075c234f2012591" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca6d7809c41d9f725ab075c234f2012591" kindref="member">TEXLOCK_DEFAULT</ref><sp/>=<sp/><ref refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca0bd1c21b1e99983a991945e8c7a119ac" kindref="member">TEXLOCK_READWRITE</ref>,</highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>texture<sp/>loading<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117" refid="dag__tex3d_8h_1ac9420823bfeba78fce625fc105e3b01dab2ffff905344ae22cbab73adbf4d0e89" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1ac9420823bfeba78fce625fc105e3b01dab2ffff905344ae22cbab73adbf4d0e89" kindref="member">TEXLF_CALCMIPMAPS</ref><sp/>=<sp/>0x0001,</highlight></codeline>
<codeline lineno="118"><highlight class="normal">};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122" refid="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6ea17b84d8078b80e072c3a06d791b47e8d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6ea17b84d8078b80e072c3a06d791b47e8d" kindref="member">CUBEFACE_POSX</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="123" refid="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6eabfa657b61a7bc567a7c3161dc6c03c10" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6eabfa657b61a7bc567a7c3161dc6c03c10" kindref="member">CUBEFACE_NEGX</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="124" refid="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6eaf353500273815468c309846677c3b95f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6eaf353500273815468c309846677c3b95f" kindref="member">CUBEFACE_POSY</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="125" refid="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6ea0cace3d2d3c1613819a34239fbc3a03c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6ea0cace3d2d3c1613819a34239fbc3a03c" kindref="member">CUBEFACE_NEGY</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="126" refid="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6ea53d3b6f3224e33cb407137bf3cf94f0b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6ea53d3b6f3224e33cb407137bf3cf94f0b" kindref="member">CUBEFACE_POSZ</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="127" refid="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6ea4b331ccadfa16883c655d4cff60c6c8b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1afa9be5679ab03d785820f2474c5ccc6ea4b331ccadfa16883c655d4cff60c6c8b" kindref="member">CUBEFACE_NEGZ</ref><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="128"><highlight class="normal">};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="structTextureInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structTextureInfo" kindref="compound">TextureInfo</ref></highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134" refid="structTextureInfo_1a9bba5bf27e457b4e0b5f9746e2b75803" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="structTextureInfo_1ad2c50ce68647829c9c3dca92581a72ff" kindref="member">w</ref><sp/>=<sp/>1,<sp/><ref refid="structTextureInfo_1a7d1603d81f22dd6702c06523d9de7a44" kindref="member">h</ref><sp/>=<sp/>1,<sp/><ref refid="structTextureInfo_1a9bba5bf27e457b4e0b5f9746e2b75803" kindref="member">d</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="136" refid="structTextureInfo_1ae4d9a1e4e13f1b9028f07f2c4fd0836c" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="structTextureInfo_1ae4d9a1e4e13f1b9028f07f2c4fd0836c" kindref="member">a</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="138" refid="structTextureInfo_1aab92d962d2c0c9d6be850e01a72904e5" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="structTextureInfo_1aab92d962d2c0c9d6be850e01a72904e5" kindref="member">mipLevels</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140" refid="structTextureInfo_1aa94203746149e8ba7a68ad560245cc80" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dag__d3dResource_8h_1acbc952bc3ff138ada12e07791b9f3e98" kindref="member">D3DResourceType</ref><sp/><ref refid="structTextureInfo_1aa94203746149e8ba7a68ad560245cc80" kindref="member">type</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>committed<sp/>resource<sp/>flag,<sp/>we<sp/>can&apos;t<sp/>alias<sp/>it<sp/>(can<sp/>be<sp/>used<sp/>for<sp/>other<sp/>flags<sp/>also)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="structTextureInfo_1ad0908db9b39e6c8af5004bee8f8a31a6" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="structTextureInfo_1ad0908db9b39e6c8af5004bee8f8a31a6" kindref="member">isCommitted</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="144" refid="structTextureInfo_1a340017c158bc5ce503bfd6a4c41c623e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structTextureInfo_1a340017c158bc5ce503bfd6a4c41c623e" kindref="member">cflg</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>result<sp/>of<sp/>texture<sp/>load<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="dag__tex3d_8h_1ae2fea7da159d81915baf6bdfe7bba50a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="dag__tex3d_8h_1ae2fea7da159d81915baf6bdfe7bba50a" kindref="member">TexLoadRes</ref></highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1ae2fea7da159d81915baf6bdfe7bba50aacd22bad976363fdd1bfbf6759fede482" kindref="member">ERR</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1ae2fea7da159d81915baf6bdfe7bba50aae0aa021e21dddbd6d8cecec71e9cf564" kindref="member">OK</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="dag__tex3d_8h_1ae2fea7da159d81915baf6bdfe7bba50aaefd5de22c2ed5c0a7e1dec9443f9d558" kindref="member">ERR_RUB</ref><sp/>=<sp/>2</highlight></codeline>
<codeline lineno="153"><highlight class="normal">};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classBaseTexture" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classD3dResource" kindref="compound">D3dResource</ref></highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="158" refid="structBaseTexture_1_1IReloadData" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structBaseTexture_1_1IReloadData" kindref="compound">IReloadData</ref></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="160" refid="structBaseTexture_1_1IReloadData_1a27265b2427473e2e025d35723611c163" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structBaseTexture_1_1IReloadData_1a27265b2427473e2e025d35723611c163" kindref="member">~IReloadData</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="161" refid="structBaseTexture_1_1IReloadData_1a118c145d10ab3bbc119b1601240c6e36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structBaseTexture_1_1IReloadData_1a118c145d10ab3bbc119b1601240c6e36" kindref="member">reloadD3dRes</ref>(<ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/>*t)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="162" refid="structBaseTexture_1_1IReloadData_1a8e6ab1aaeb013836a15e777d6e2f323b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structBaseTexture_1_1IReloadData_1a8e6ab1aaeb013836a15e777d6e2f323b" kindref="member">destroySelf</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="164" refid="classBaseTexture_1a6a85e670c443104a70883f192cb0be93" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1a6a85e670c443104a70883f192cb0be93" kindref="member">setReloadCallback</ref>(<ref refid="structBaseTexture_1_1IReloadData" kindref="compound">IReloadData</ref><sp/>*)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classBaseTexture_1a508ff31351ba5c970d533ef14fa85159" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1a508ff31351ba5c970d533ef14fa85159" kindref="member">generateMips</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Requires<sp/>TEXCF_UPDATE_DESTINATION,<sp/>TEXCF_RTARGET<sp/>or<sp/>TEXCF_UNORDERED<sp/>usage<sp/>for<sp/>this<sp/>texture.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classBaseTexture_1ae66fab8be80dfdf1379ef6c3c3a54d18" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1ae66fab8be80dfdf1379ef6c3c3a54d18" kindref="member">update</ref>(<ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/>*src)<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>update<sp/>texture<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classBaseTexture_1adfed71ba8678e0549c6f6dc01b48f1d5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1adfed71ba8678e0549c6f6dc01b48f1d5" kindref="member">calcSubResIdx</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slice,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mip_levels)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>level<sp/>+<sp/>slice<sp/>*<sp/>mip_levels;<sp/>}</highlight></codeline>
<codeline lineno="171" refid="classBaseTexture_1ab562f86e581b7f61b63141fdda32fdea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1ab562f86e581b7f61b63141fdda32fdea" kindref="member">calcSubResIdx</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slice<sp/>=<sp/>0)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1ab562f86e581b7f61b63141fdda32fdea" kindref="member">calcSubResIdx</ref>(level,<sp/>slice,<sp/><ref refid="classBaseTexture_1aa5f45a64584c9533b7606e99dfd5308f" kindref="member">level_count</ref>());<sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Requires<sp/>TEXCF_UPDATE_DESTINATION,<sp/>TEXCF_RTARGET<sp/>or<sp/>TEXCF_UNORDERED<sp/>usage<sp/>for<sp/>this<sp/>texture.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classBaseTexture_1a78250fb6cf2f55d92a38708836317c85" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1a78250fb6cf2f55d92a38708836317c85" kindref="member">updateSubRegion</ref>(<ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_subres_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_d,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dest_subres_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dest_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dest_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dest_z)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="175" refid="classBaseTexture_1a6f7b48f57c9bb0c39ab0b828e87c0404" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1a6f7b48f57c9bb0c39ab0b828e87c0404" kindref="member">updateSubRegionNoOrder</ref>(<ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_subres_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_h,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dest_subres_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dest_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dest_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dest_z)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1a78250fb6cf2f55d92a38708836317c85" kindref="member">updateSubRegion</ref>(src,<sp/>src_subres_idx,<sp/>src_x,<sp/>src_y,<sp/>src_z,<sp/>src_w,<sp/>src_h,<sp/>src_d,<sp/>dest_subres_idx,<sp/>dest_x,<sp/>dest_y,<sp/>dest_z);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180" refid="classBaseTexture_1aa5f45a64584c9533b7606e99dfd5308f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1aa5f45a64584c9533b7606e99dfd5308f" kindref="member">level_count</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>mipmap<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="classBaseTexture_1a895d85357c93cb61543d560fe798437a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1a895d85357c93cb61543d560fe798437a" kindref="member">texmiplevel</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minlevel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxlevel)<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>default<sp/>is<sp/>0,<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classBaseTexture_1a0c4bf5f5d0ae87acbb22092cb164e4e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1a0c4bf5f5d0ae87acbb22092cb164e4e4" kindref="member">isCubeArray</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="classBaseTexture_1a17ddd5e02b9297e0652ec646d8d54b12" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1a17ddd5e02b9297e0652ec646d8d54b12" kindref="member">setReadStencil</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{}<sp/></highlight><highlight class="comment">//<sp/>for<sp/>depth<sp/>stencil<sp/>textures,<sp/>if<sp/>on<sp/>will<sp/>read<sp/>stencil,<sp/>not<sp/>depth.<sp/>Currently<sp/>either<sp/>of<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="classBaseTexture_1a09b445afa42678f459eee01c85160e61" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1a09b445afa42678f459eee01c85160e61" kindref="member">setTID</ref>(<ref refid="classD3DRESID" kindref="compound">TEXTUREID</ref><sp/></highlight><highlight class="comment">/*tid*/</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="186" refid="classBaseTexture_1a6fa90bc93f3169362b5a9bdf52dd33f2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classD3DRESID" kindref="compound">TEXTUREID</ref><sp/><ref refid="classBaseTexture_1a6fa90bc93f3169362b5a9bdf52dd33f2" kindref="member">getTID</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__resId_8h_1a12f2ab154a94e2eaf8e20889e3a2bf81" kindref="member">BAD_TEXTUREID</ref>;<sp/>}</highlight></codeline>
<codeline lineno="187" refid="classBaseTexture_1af0268a3302d5705ce1fb0a7cd7192e9d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classBaseTexture_1af0268a3302d5705ce1fb0a7cd7192e9d" kindref="member">getTexName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classD3dResource_1ac49ff4a78c9a91d19c928e50d0e350b4" kindref="member">getName</ref>();<sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>lock<sp/>image<sp/>data<sp/>-<sp/>no<sp/>conversion<sp/>is<sp/>performed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>render<sp/>target<sp/>image<sp/>is<sp/>read-only<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-render-target<sp/>image<sp/>is<sp/>read-write<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>0<sp/>on<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="classBaseTexture_1a42f033152273c04456761b2b0c34be8a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1a42f033152273c04456761b2b0c34be8a" kindref="member">lockimg</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;stride_bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>flags)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="194" refid="classBaseTexture_1a6f933fe1dfb254b85d2e560369b5a0e6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1a6f933fe1dfb254b85d2e560369b5a0e6" kindref="member">lockimg</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;stride_bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>layer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>flags)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195" refid="classBaseTexture_1ab9499abe01802300567ca7374c62de4c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1ab9499abe01802300567ca7374c62de4c" kindref="member">unlockimg</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>};</highlight></codeline>
<codeline lineno="196" refid="classBaseTexture_1ac9b624d1dc511cd734b9438feb4cd857" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1ac9b624d1dc511cd734b9438feb4cd857" kindref="member">unlock</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1ab9499abe01802300567ca7374c62de4c" kindref="member">unlockimg</ref>();<sp/>};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="classBaseTexture_1a2b294e235993c086e13d0456d71f809e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1a2b294e235993c086e13d0456d71f809e" kindref="member">lockbox</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>};</highlight></codeline>
<codeline lineno="199" refid="classBaseTexture_1a0cd9f4ffc918991330e9190dd4db51f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1a0cd9f4ffc918991330e9190dd4db51f8" kindref="member">unlockbox</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="classBaseTexture_1a68cbf22a48be7a1db2cec1ffc49c08b0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1a68cbf22a48be7a1db2cec1ffc49c08b0" kindref="member">getinfo</ref>(<ref refid="structTextureInfo" kindref="compound">TextureInfo</ref><sp/>&amp;info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="204" refid="classBaseTexture_1a2103282b55bcf3ac764d98777f7df4a5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1a2103282b55bcf3ac764d98777f7df4a5" kindref="member">lockimgEx</ref>(T<sp/>**p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;stride_bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>flags<sp/>=<sp/><ref refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca6d7809c41d9f725ab075c234f2012591" kindref="member">TEXLOCK_DEFAULT</ref>)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*vp;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classBaseTexture_1a42f033152273c04456761b2b0c34be8a" kindref="member">lockimg</ref>(&amp;vp,<sp/>stride_bytes,<sp/>level,<sp/>flags))</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>(T<sp/>*)vp;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="classBaseTexture_1a00574233e8007627e8e0c26a6916ceee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1a00574233e8007627e8e0c26a6916ceee" kindref="member">updateTexResFormat</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*d3d_format*/</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="219" refid="classBaseTexture_1a9bf8241539352b187329bb7d70d0b6ec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/>*<ref refid="classBaseTexture_1a9bf8241539352b187329bb7d70d0b6ec" kindref="member">makeTmpTexResCopy</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*w*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*h*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*d*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*l*/</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="221" refid="classBaseTexture_1ad8a08bbab47a6ab5df6418f78dda49a1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1ad8a08bbab47a6ab5df6418f78dda49a1" kindref="member">replaceTexResObject</ref>(<ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/>*&amp;new_tex)<sp/>{<sp/><ref refid="dag__d3dResource_8h_1a389f3ef1ecfe02fe908ac5167764fda4" kindref="member">del_d3dres</ref>(new_tex);<sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="classBaseTexture_1a072ba682d61c5ec00e27867908a4ab7b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1a072ba682d61c5ec00e27867908a4ab7b" kindref="member">allocateTex</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="226" refid="classBaseTexture_1a72a607b61e2220156946976bdedc57b2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1a72a607b61e2220156946976bdedc57b2" kindref="member">discardTex</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Replaces<sp/>the<sp/>texture<sp/>with<sp/>a<sp/>smaller<sp/>one<sp/>defined<sp/>by<sp/>info,<sp/>overlapping<sp/>mip<sp/>levels<sp/>are<sp/>automatically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>migrated<sp/>to<sp/>the<sp/>new<sp/>texture.<sp/>This<sp/>does<sp/>not<sp/>need<sp/>TEXCF_UPDATE_DESTINATION<sp/>to<sp/>work,<sp/>even<sp/>if<sp/>the<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>implementation<sp/>would<sp/>do<sp/>so.<sp/>Drivers<sp/>that<sp/>can<sp/>not<sp/>executed<sp/>updateSubRegion<sp/>correctly<sp/>without<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TEXCF_UPDATE_DESTINATION<sp/>flag<sp/>have<sp/>to<sp/>implement<sp/>this<sp/>in<sp/>a<sp/>way<sp/>so<sp/>it<sp/>will<sp/>work<sp/>correctly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>on<sp/>success,<sp/>may<sp/>return<sp/>false<sp/>on<sp/>fail.<sp/>Only<sp/>fail<sp/>case<sp/>can<sp/>be<sp/>the<sp/>failure<sp/>to<sp/>allocate<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>replacement<sp/>texture.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="classBaseTexture_1a5aacc6362bd54c42f35e530c044a161f" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/>*<ref refid="classBaseTexture_1a5aacc6362bd54c42f35e530c044a161f" kindref="member">downSize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mips,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>start_src_level,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>level_offset)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rep<sp/>=<sp/><ref refid="classBaseTexture_1a9bf8241539352b187329bb7d70d0b6ec" kindref="member">makeTmpTexResCopy</ref>(width,<sp/>height,<sp/>depth,<sp/>mips);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rep)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTextureInfo" kindref="compound">TextureInfo</ref><sp/>selfInfo;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classBaseTexture_1a68cbf22a48be7a1db2cec1ffc49c08b0" kindref="member">getinfo</ref>(selfInfo);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>sourceLevel<sp/>=<sp/>max&lt;unsigned&gt;(level_offset,<sp/>start_src_level);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>sourceLevelEnd<sp/>=<sp/>min&lt;unsigned&gt;(selfInfo.<ref refid="structTextureInfo_1aab92d962d2c0c9d6be850e01a72904e5" kindref="member">mipLevels</ref>,<sp/>mips<sp/>+<sp/>level_offset);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>rep-&gt;texmiplevel(sourceLevel<sp/>-<sp/>level_offset,<sp/>sourceLevelEnd<sp/>-<sp/>level_offset<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>sourceLevel<sp/>&lt;<sp/>sourceLevelEnd;<sp/>sourceLevel++)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>selfInfo.<ref refid="structTextureInfo_1ae4d9a1e4e13f1b9028f07f2c4fd0836c" kindref="member">a</ref>;<sp/>s++)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rep-&gt;updateSubRegion(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classBaseTexture_1adfed71ba8678e0549c6f6dc01b48f1d5" kindref="member">calcSubResIdx</ref>(sourceLevel,<sp/>s,<sp/>selfInfo.<ref refid="structTextureInfo_1aab92d962d2c0c9d6be850e01a72904e5" kindref="member">mipLevels</ref>),<sp/>0,<sp/>0,<sp/>0,<sp/>max&lt;int&gt;(selfInfo.<ref refid="structTextureInfo_1ad2c50ce68647829c9c3dca92581a72ff" kindref="member">w</ref><sp/>&gt;&gt;<sp/>sourceLevel,<sp/>1),</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max&lt;int&gt;(selfInfo.<ref refid="structTextureInfo_1a7d1603d81f22dd6702c06523d9de7a44" kindref="member">h</ref><sp/>&gt;&gt;<sp/>sourceLevel,<sp/>1),<sp/>max&lt;int&gt;(selfInfo.<ref refid="structTextureInfo_1a9bba5bf27e457b4e0b5f9746e2b75803" kindref="member">d</ref><sp/>&gt;&gt;<sp/>sourceLevel,<sp/>selfInfo.<ref refid="structTextureInfo_1ae4d9a1e4e13f1b9028f07f2c4fd0836c" kindref="member">a</ref>),</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classBaseTexture_1adfed71ba8678e0549c6f6dc01b48f1d5" kindref="member">calcSubResIdx</ref>(sourceLevel<sp/>-<sp/>level_offset,<sp/>s,<sp/>mips),<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rep;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Replaces<sp/>the<sp/>texture<sp/>with<sp/>a<sp/>larger<sp/>one<sp/>defined<sp/>by<sp/>info,<sp/>overlapping<sp/>mip<sp/>levels<sp/>are<sp/>automatically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>migrated<sp/>to<sp/>the<sp/>new<sp/>texture.<sp/>This<sp/>does<sp/>not<sp/>need<sp/>TEXCF_UPDATE_DESTINATION<sp/>to<sp/>work,<sp/>even<sp/>if<sp/>the<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>implementation<sp/>would<sp/>do<sp/>so.<sp/>Drivers<sp/>that<sp/>can<sp/>not<sp/>executed<sp/>updateSubRegion<sp/>correctly<sp/>without<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TEXCF_UPDATE_DESTINATION<sp/>flag<sp/>have<sp/>to<sp/>implement<sp/>this<sp/>in<sp/>a<sp/>way<sp/>so<sp/>it<sp/>will<sp/>work<sp/>correctly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>on<sp/>success,<sp/>may<sp/>return<sp/>false<sp/>on<sp/>fail.<sp/>Only<sp/>fail<sp/>case<sp/>can<sp/>be<sp/>the<sp/>failure<sp/>to<sp/>allocate<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>replacement<sp/>texture.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="classBaseTexture_1aab773ad0b55de56f4ca0714fb90021f0" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/>*<ref refid="classBaseTexture_1aab773ad0b55de56f4ca0714fb90021f0" kindref="member">upSize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mips,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>start_src_level,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>level_offset)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rep<sp/>=<sp/><ref refid="classBaseTexture_1a9bf8241539352b187329bb7d70d0b6ec" kindref="member">makeTmpTexResCopy</ref>(width,<sp/>height,<sp/>depth,<sp/>mips);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rep)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTextureInfo" kindref="compound">TextureInfo</ref><sp/>selfInfo;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classBaseTexture_1a68cbf22a48be7a1db2cec1ffc49c08b0" kindref="member">getinfo</ref>(selfInfo);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>destinationLevel<sp/>=<sp/>level_offset<sp/>+<sp/>start_src_level;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>destinationLevelEnd<sp/>=<sp/>min&lt;unsigned&gt;(selfInfo.<ref refid="structTextureInfo_1aab92d962d2c0c9d6be850e01a72904e5" kindref="member">mipLevels</ref><sp/>+<sp/>level_offset,<sp/>mips);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>rep-&gt;texmiplevel(destinationLevel,<sp/>destinationLevelEnd<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>destinationLevel<sp/>&lt;<sp/>destinationLevelEnd;<sp/>destinationLevel++)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>selfInfo.<ref refid="structTextureInfo_1ae4d9a1e4e13f1b9028f07f2c4fd0836c" kindref="member">a</ref>;<sp/>s++)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rep-&gt;updateSubRegion(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classBaseTexture_1adfed71ba8678e0549c6f6dc01b48f1d5" kindref="member">calcSubResIdx</ref>(destinationLevel<sp/>-<sp/>level_offset,<sp/>s,<sp/>selfInfo.<ref refid="structTextureInfo_1aab92d962d2c0c9d6be850e01a72904e5" kindref="member">mipLevels</ref>),<sp/>0,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max&lt;int&gt;(width<sp/>&gt;&gt;<sp/>destinationLevel,<sp/>1),<sp/>max&lt;int&gt;(height<sp/>&gt;&gt;<sp/>destinationLevel,<sp/>1),</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max&lt;int&gt;(depth<sp/>&gt;&gt;<sp/>destinationLevel,<sp/>selfInfo.<ref refid="structTextureInfo_1ae4d9a1e4e13f1b9028f07f2c4fd0836c" kindref="member">a</ref>),<sp/><ref refid="classBaseTexture_1adfed71ba8678e0549c6f6dc01b48f1d5" kindref="member">calcSubResIdx</ref>(destinationLevel,<sp/>s,<sp/>mips),<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rep;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="classBaseTexture_1a638453c3d09759543de7b093b8b828b5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classBaseTexture_1a638453c3d09759543de7b093b8b828b5" kindref="member">BaseTexture</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293" refid="classBaseTexture_1aedadda650c2606fcf727e892b50f3af8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classBaseTexture_1aedadda650c2606fcf727e892b50f3af8" kindref="member">BaseTexture</ref>(<ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294" refid="classBaseTexture_1ab9b61a9dc46cd03df78593f9236ca6b3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/>&amp;<ref refid="classBaseTexture_1ab9b61a9dc46cd03df78593f9236ca6b3" kindref="member">operator=</ref>(<ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="297" refid="classBaseTexture_1a8f3f0fdb28ed1359f90375159588f184" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classBaseTexture_1a8f3f0fdb28ed1359f90375159588f184" kindref="member">~BaseTexture</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Flag<sp/>is<sp/>used<sp/>to<sp/>mark<sp/>the<sp/>read<sp/>back<sp/>status<sp/>for<sp/>textures<sp/>to<sp/>prepare<sp/>for<sp/>cpu<sp/>access,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>either<sp/>copy<sp/>to<sp/>staging<sp/>memory<sp/>or<sp/>direct<sp/>access<sp/>in<sp/>case<sp/>of<sp/>consoles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="classBaseTexture_1ae8d686517cc0babc4a0829df1c5e9a25" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture_1ae8d686517cc0babc4a0829df1c5e9a25" kindref="member">TEX_COPIED</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>30;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_C1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">};</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="dag__tex3d_8h_1a37ee2859ee04a3f5c750a5b5e3684c1d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/><ref refid="dag__tex3d_8h_1a37ee2859ee04a3f5c750a5b5e3684c1d" kindref="member">Texture</ref>;</highlight></codeline>
<codeline lineno="311" refid="dag__tex3d_8h_1a0f1991b83270f80fdb5975f615cc8f98" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/><ref refid="dag__tex3d_8h_1a0f1991b83270f80fdb5975f615cc8f98" kindref="member">CubeTexture</ref>;</highlight></codeline>
<codeline lineno="312" refid="dag__tex3d_8h_1a7822f867ab7b3377816832b781b76930" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/><ref refid="dag__tex3d_8h_1a7822f867ab7b3377816832b781b76930" kindref="member">VolTexture</ref>;</highlight></codeline>
<codeline lineno="313" refid="dag__tex3d_8h_1af17a5ffc9ee505603d91f627188e8dc7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/><ref refid="dag__tex3d_8h_1af17a5ffc9ee505603d91f627188e8dc7" kindref="member">ArrayTexture</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="dag__tex3d_8h_1a43a8448366385e8e7fa5a16cbce33868" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="dag__tex3d_8h_1a43a8448366385e8e7fa5a16cbce33868" kindref="member">auto_mip_levels_count</ref>(uint32_t<sp/>w,<sp/>uint32_t<sp/>min_size);</highlight></codeline>
<codeline lineno="316" refid="dag__tex3d_8h_1a36e9ea989dd01bd26fc51e9426e38453" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="dag__tex3d_8h_1a43a8448366385e8e7fa5a16cbce33868" kindref="member">auto_mip_levels_count</ref>(uint32_t<sp/>w,<sp/>uint32_t<sp/>h,<sp/>uint32_t<sp/>min_size);</highlight></codeline>
<codeline lineno="317" refid="dag__tex3d_8h_1a3aadba09244402c5aaaaf32b523858e1" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="dag__tex3d_8h_1a43a8448366385e8e7fa5a16cbce33868" kindref="member">auto_mip_levels_count</ref>(uint32_t<sp/>w,<sp/>uint32_t<sp/>h,<sp/>uint32_t<sp/>d,<sp/>uint32_t<sp/>min_size);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="dag__tex3d_8h_1ad34b1b5958851e12b8ef6989ffb5b675" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="dag__tex3d_8h_1ad34b1b5958851e12b8ef6989ffb5b675" kindref="member">parse_tex_format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>uint32_t<sp/>default_fmt);</highlight></codeline>
<codeline lineno="320" refid="dag__tex3d_8h_1a3458cabaf742fcecd6c4137240d7e657" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTextureFormatDesc" kindref="compound">TextureFormatDesc</ref><sp/>&amp;<ref refid="dag__tex3d_8h_1a3458cabaf742fcecd6c4137240d7e657" kindref="member">get_tex_format_desc</ref>(uint32_t<sp/>fmt);</highlight></codeline>
<codeline lineno="321" refid="dag__tex3d_8h_1ac89dd924988ffe7a81a20d58042ddb11" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="dag__tex3d_8h_1ac89dd924988ffe7a81a20d58042ddb11" kindref="member">get_tex_format_name</ref>(uint32_t<sp/>fmt);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="dag__tex3d_8h_1ae0a9184b31faf7f38391040c28035077" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="dag__tex3d_8h_1ae0a9184b31faf7f38391040c28035077" kindref="member">get_tex_channel_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pixel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTextureChannelFormatDesc" kindref="compound">TextureChannelFormatDesc</ref><sp/>&amp;channel);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="dag__tex3d_8h_1a22a645bdf8f3b7812ebcc64d925f6792" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dag__tex3d_8h_1a22a645bdf8f3b7812ebcc64d925f6792" kindref="member">set_tex_channel_value</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pixel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTextureChannelFormatDesc" kindref="compound">TextureChannelFormatDesc</ref><sp/>&amp;channel,<sp/>uint32_t<sp/>bits);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="dag__tex3d_8h_1a5e07a7655206640c9c3a9e9483d5b45d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="dag__tex3d_8h_1a5e07a7655206640c9c3a9e9483d5b45d" kindref="member">channel_bits_to_float</ref>(uint32_t<sp/>bits,<sp/><ref refid="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2" kindref="member">ChannelDType</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTextureChannelFormatDesc" kindref="compound">TextureChannelFormatDesc</ref><sp/>&amp;channel);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="dag__tex3d_8h_1acfb3ab43dc67cb3802207494050e7e00" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="dag__tex3d_8h_1acfb3ab43dc67cb3802207494050e7e00" kindref="member">float_to_channel_bits</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/><ref refid="dag__tex3d_8h_1a702af72d915fa7fb86b3e93df24443c2" kindref="member">ChannelDType</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTextureChannelFormatDesc" kindref="compound">TextureChannelFormatDesc</ref><sp/>&amp;channel);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="dag__tex3d_8h_1a493fcb1cda716e3b8ee52f6e8cb2e7ab" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="dag__tex3d_8h_1a493fcb1cda716e3b8ee52f6e8cb2e7ab" kindref="member">on_tex_slice_loaded_cb_t</ref>)();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="dag__tex3d_8h_1ae2fea7da159d81915baf6bdfe7bba50a" kindref="member">TexLoadRes</ref><sp/>(*<ref refid="dag__tex3d_8h_1a33ff6e0fc2e26a897e4364244b49fe74" kindref="member">d3d_load_ddsx_tex_contents_impl</ref>)(<ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/>*tex,<sp/><ref refid="classD3DRESID" kindref="compound">TEXTUREID</ref><sp/>tid,<sp/><ref refid="classD3DRESID" kindref="compound">TEXTUREID</ref><sp/>paired_tid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ddsx::Header<sp/>&amp;hdr,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>IGenLoad<sp/>&amp;crd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_lev,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>tex_ld_lev,<sp/><ref refid="dag__tex3d_8h_1a493fcb1cda716e3b8ee52f6e8cb2e7ab" kindref="member">on_tex_slice_loaded_cb_t</ref>,<sp/>bool);</highlight></codeline>
<codeline lineno="371" refid="dag__tex3d_8h_1a41e8ea1721fce1881fa6127ac237c9a3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="dag__tex3d_8h_1ae2fea7da159d81915baf6bdfe7bba50a" kindref="member">TexLoadRes</ref><sp/><ref refid="dag__tex3d_8h_1a41e8ea1721fce1881fa6127ac237c9a3" kindref="member">d3d_load_ddsx_tex_contents</ref>(<ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/>*tex,<sp/><ref refid="classD3DRESID" kindref="compound">TEXTUREID</ref><sp/>tid,<sp/><ref refid="classD3DRESID" kindref="compound">TEXTUREID</ref><sp/>paired_tid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ddsx::Header<sp/>&amp;hdr,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>IGenLoad<sp/>&amp;crd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_lev<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>tex_ld_lev<sp/>=<sp/>0,<sp/><ref refid="dag__tex3d_8h_1a493fcb1cda716e3b8ee52f6e8cb2e7ab" kindref="member">on_tex_slice_loaded_cb_t</ref><sp/>on_tex_slice_loaded_cb<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tex_props_inited<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dag__tex3d_8h_1a33ff6e0fc2e26a897e4364244b49fe74" kindref="member">d3d_load_ddsx_tex_contents_impl</ref>(tex,<sp/>tid,<sp/>paired_tid,<sp/>hdr,<sp/>crd,<sp/>q_id,<sp/>start_lev,<sp/>tex_ld_lev,<sp/>on_tex_slice_loaded_cb,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_props_inited);</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="dag__tex3d_8h_1ae2fea7da159d81915baf6bdfe7bba50a" kindref="member">TexLoadRes</ref><sp/>(*<ref refid="dag__tex3d_8h_1a6b26972b9feebc213e7354920b0a5677" kindref="member">d3d_load_ddsx_to_slice</ref>)(<ref refid="classBaseTexture" kindref="compound">BaseTexture</ref><sp/>*tex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slice,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ddsx::Header<sp/>&amp;hdr,<sp/>IGenLoad<sp/>&amp;crd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q_id,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_lev,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>tex_ld_lev);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="dag__tex3d_8h_1acf7988411918a713313f695463a90123" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dag__tex3d_8h_1acf7988411918a713313f695463a90123" kindref="member">convert_image_line</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*__restrict<sp/>input,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in_channels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in_bits_per_channel,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>in_float,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*__restrict<sp/>output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_channels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_bits_per_channel,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>out_float,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap_rb,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invert);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//---<sp/>include<sp/>defines<sp/>specific<sp/>to<sp/>target<sp/>3d<sp/>-------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="dag__consts__base_8h" kindref="compound">drv/3d/dag_consts_base.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="dag_tex3d.h"/>
  </compounddef>
</doxygen>
