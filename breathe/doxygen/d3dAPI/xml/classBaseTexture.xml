<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="classBaseTexture" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>BaseTexture</compoundname>
    <basecompoundref refid="classD3dResource" prot="public" virt="non-virtual">D3dResource</basecompoundref>
    <includes refid="dag__tex3d_8h" local="no">dag_tex3d.h</includes>
    <innerclass refid="structBaseTexture_1_1IReloadData" prot="public">BaseTexture::IReloadData</innerclass>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classBaseTexture_1ae8d686517cc0babc4a0829df1c5e9a25" prot="protected" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int BaseTexture::TEX_COPIED</definition>
        <argsstring></argsstring>
        <name>TEX_COPIED</name>
        <qualifiedname>BaseTexture::TEX_COPIED</qualifiedname>
        <initializer>= 1 &lt;&lt; 30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="301" column="24" bodyfile="dag_tex3d.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBaseTexture_1a6a85e670c443104a70883f192cb0be93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BaseTexture::setReloadCallback</definition>
        <argsstring>(IReloadData *)</argsstring>
        <name>setReloadCallback</name>
        <qualifiedname>BaseTexture::setReloadCallback</qualifiedname>
        <param>
          <type><ref refid="structBaseTexture_1_1IReloadData" kindref="compound">IReloadData</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="164" column="16" bodyfile="dag_tex3d.h" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a508ff31351ba5c970d533ef14fa85159" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int BaseTexture::generateMips</definition>
        <argsstring>()=0</argsstring>
        <name>generateMips</name>
        <qualifiedname>BaseTexture::generateMips</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="166" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1ae66fab8be80dfdf1379ef6c3c3a54d18" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int BaseTexture::update</definition>
        <argsstring>(BaseTexture *src)=0</argsstring>
        <name>update</name>
        <qualifiedname>BaseTexture::update</qualifiedname>
        <param>
          <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="168" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1ab562f86e581b7f61b63141fdda32fdea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int BaseTexture::calcSubResIdx</definition>
        <argsstring>(int level, int slice=0) const</argsstring>
        <name>calcSubResIdx</name>
        <qualifiedname>BaseTexture::calcSubResIdx</qualifiedname>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slice</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="171" column="14" bodyfile="dag_tex3d.h" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a78250fb6cf2f55d92a38708836317c85" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int BaseTexture::updateSubRegion</definition>
        <argsstring>(BaseTexture *src, int src_subres_idx, int src_x, int src_y, int src_z, int src_w, int src_h, int src_d, int dest_subres_idx, int dest_x, int dest_y, int dest_z)=0</argsstring>
        <name>updateSubRegion</name>
        <qualifiedname>BaseTexture::updateSubRegion</qualifiedname>
        <param>
          <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_subres_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_z</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dest_subres_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dest_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dest_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dest_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="173" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a6f7b48f57c9bb0c39ab0b828e87c0404" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int BaseTexture::updateSubRegionNoOrder</definition>
        <argsstring>(BaseTexture *src, int src_subres_idx, int src_x, int src_y, int src_z, int src_w, int src_h, int src_d, int dest_subres_idx, int dest_x, int dest_y, int dest_z)</argsstring>
        <name>updateSubRegionNoOrder</name>
        <qualifiedname>BaseTexture::updateSubRegionNoOrder</qualifiedname>
        <param>
          <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_subres_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_z</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dest_subres_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dest_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dest_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dest_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="175" column="15" bodyfile="dag_tex3d.h" bodystart="175" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1aa5f45a64584c9533b7606e99dfd5308f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int BaseTexture::level_count</definition>
        <argsstring>() const =0</argsstring>
        <name>level_count</name>
        <qualifiedname>BaseTexture::level_count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="180" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a895d85357c93cb61543d560fe798437a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int BaseTexture::texmiplevel</definition>
        <argsstring>(int minlevel, int maxlevel)=0</argsstring>
        <name>texmiplevel</name>
        <qualifiedname>BaseTexture::texmiplevel</qualifiedname>
        <param>
          <type>int</type>
          <declname>minlevel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxlevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="181" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a0c4bf5f5d0ae87acbb22092cb164e4e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BaseTexture::isCubeArray</definition>
        <argsstring>() const</argsstring>
        <name>isCubeArray</name>
        <qualifiedname>BaseTexture::isCubeArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="182" column="16" bodyfile="dag_tex3d.h" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a17ddd5e02b9297e0652ec646d8d54b12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void BaseTexture::setReadStencil</definition>
        <argsstring>(bool)</argsstring>
        <name>setReadStencil</name>
        <qualifiedname>BaseTexture::setReadStencil</qualifiedname>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="184" column="16" bodyfile="dag_tex3d.h" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a09b445afa42678f459eee01c85160e61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void BaseTexture::setTID</definition>
        <argsstring>(TEXTUREID)</argsstring>
        <name>setTID</name>
        <qualifiedname>BaseTexture::setTID</qualifiedname>
        <param>
          <type><ref refid="dag__resId_8h_1ade43f702a210722e97e3b5e0751697c4" kindref="member">TEXTUREID</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="185" column="16" bodyfile="dag_tex3d.h" bodystart="185" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a6fa90bc93f3169362b5a9bdf52dd33f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="dag__resId_8h_1ade43f702a210722e97e3b5e0751697c4" kindref="member">TEXTUREID</ref></type>
        <definition>virtual TEXTUREID BaseTexture::getTID</definition>
        <argsstring>() const</argsstring>
        <name>getTID</name>
        <qualifiedname>BaseTexture::getTID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="186" column="21" bodyfile="dag_tex3d.h" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1af0268a3302d5705ce1fb0a7cd7192e9d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * BaseTexture::getTexName</definition>
        <argsstring>() const</argsstring>
        <name>getTexName</name>
        <qualifiedname>BaseTexture::getTexName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="187" column="14" bodyfile="dag_tex3d.h" bodystart="187" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a42f033152273c04456761b2b0c34be8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int BaseTexture::lockimg</definition>
        <argsstring>(void **, int &amp;stride_bytes, int level, unsigned flags)=0</argsstring>
        <name>lockimg</name>
        <qualifiedname>BaseTexture::lockimg</qualifiedname>
        <param>
          <type>void **</type>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>stride_bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="193" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a6f933fe1dfb254b85d2e560369b5a0e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int BaseTexture::lockimg</definition>
        <argsstring>(void **, int &amp;stride_bytes, int layer, int level, unsigned flags)=0</argsstring>
        <name>lockimg</name>
        <qualifiedname>BaseTexture::lockimg</qualifiedname>
        <param>
          <type>void **</type>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>stride_bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="194" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1ab9499abe01802300567ca7374c62de4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int BaseTexture::unlockimg</definition>
        <argsstring>()</argsstring>
        <name>unlockimg</name>
        <qualifiedname>BaseTexture::unlockimg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="195" column="15" bodyfile="dag_tex3d.h" bodystart="195" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1ac9b624d1dc511cd734b9438feb4cd857" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int BaseTexture::unlock</definition>
        <argsstring>()</argsstring>
        <name>unlock</name>
        <qualifiedname>BaseTexture::unlock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="196" column="7" bodyfile="dag_tex3d.h" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a2b294e235993c086e13d0456d71f809e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int BaseTexture::lockbox</definition>
        <argsstring>(void **, int &amp;, int &amp;, int, unsigned)</argsstring>
        <name>lockbox</name>
        <qualifiedname>BaseTexture::lockbox</qualifiedname>
        <param>
          <type>void **</type>
        </param>
        <param>
          <type>int &amp;</type>
        </param>
        <param>
          <type>int &amp;</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>unsigned</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="198" column="15" bodyfile="dag_tex3d.h" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a0cd9f4ffc918991330e9190dd4db51f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int BaseTexture::unlockbox</definition>
        <argsstring>()</argsstring>
        <name>unlockbox</name>
        <qualifiedname>BaseTexture::unlockbox</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="199" column="15" bodyfile="dag_tex3d.h" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a68cbf22a48be7a1db2cec1ffc49c08b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int BaseTexture::getinfo</definition>
        <argsstring>(TextureInfo &amp;info, int level=0) const =0</argsstring>
        <name>getinfo</name>
        <qualifiedname>BaseTexture::getinfo</qualifiedname>
        <param>
          <type><ref refid="structTextureInfo" kindref="compound">TextureInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="201" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a2103282b55bcf3ac764d98777f7df4a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int BaseTexture::lockimgEx</definition>
        <argsstring>(T **p, int &amp;stride_bytes, int level=0, unsigned flags=TEXLOCK_DEFAULT)</argsstring>
        <name>lockimgEx</name>
        <qualifiedname>BaseTexture::lockimgEx</qualifiedname>
        <param>
          <type>T **</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>stride_bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>unsigned</type>
          <declname>flags</declname>
          <defval><ref refid="dag__tex3d_8h_1a1be3860693af99a6c1da72580097294ca6d7809c41d9f725ab075c234f2012591" kindref="member">TEXLOCK_DEFAULT</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="204" column="14" bodyfile="dag_tex3d.h" bodystart="204" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a00574233e8007627e8e0c26a6916ceee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BaseTexture::updateTexResFormat</definition>
        <argsstring>(unsigned)</argsstring>
        <name>updateTexResFormat</name>
        <qualifiedname>BaseTexture::updateTexResFormat</qualifiedname>
        <param>
          <type>unsigned</type>
        </param>
        <briefdescription>
<para>changes texture format (if possible and supported by driver) to specified &apos;d3d_format&apos; (ddsx::Header::d3dFormat) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="217" column="16" bodyfile="dag_tex3d.h" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a9bf8241539352b187329bb7d70d0b6ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
        <definition>virtual BaseTexture * BaseTexture::makeTmpTexResCopy</definition>
        <argsstring>(int, int, int, int)</argsstring>
        <name>makeTmpTexResCopy</name>
        <qualifiedname>BaseTexture::makeTmpTexResCopy</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>created temporary <ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> with texture res object with given dimensions (texture subtype and format are used from original) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="219" column="23" bodyfile="dag_tex3d.h" bodystart="219" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1ad8a08bbab47a6ab5df6418f78dda49a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void BaseTexture::replaceTexResObject</definition>
        <argsstring>(BaseTexture *&amp;new_tex)</argsstring>
        <name>replaceTexResObject</name>
        <qualifiedname>BaseTexture::replaceTexResObject</qualifiedname>
        <param>
          <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *&amp;</type>
          <declname>new_tex</declname>
        </param>
        <briefdescription>
<para>replaces texture res object with new one of new_tex and then destroys new_tex (destruction may be delayed by driver) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="221" column="16" bodyfile="dag_tex3d.h" bodystart="221" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a072ba682d61c5ec00e27867908a4ab7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BaseTexture::allocateTex</definition>
        <argsstring>()</argsstring>
        <name>allocateTex</name>
        <qualifiedname>BaseTexture::allocateTex</qualifiedname>
        <briefdescription>
<para>forces allocation of texture resource; return true if tex allocated and ready for use </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="224" column="16" bodyfile="dag_tex3d.h" bodystart="224" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a72a607b61e2220156946976bdedc57b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void BaseTexture::discardTex</definition>
        <argsstring>()</argsstring>
        <name>discardTex</name>
        <qualifiedname>BaseTexture::discardTex</qualifiedname>
        <briefdescription>
<para>discards texture and returns it to STUB state </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="226" column="16" bodyfile="dag_tex3d.h" bodystart="226" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a5aacc6362bd54c42f35e530c044a161f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
        <definition>virtual BaseTexture * BaseTexture::downSize</definition>
        <argsstring>(int width, int height, int depth, int mips, unsigned start_src_level, unsigned level_offset)</argsstring>
        <name>downSize</name>
        <qualifiedname>BaseTexture::downSize</qualifiedname>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mips</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>start_src_level</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>level_offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="235" column="24" bodyfile="dag_tex3d.h" bodystart="235" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1aab773ad0b55de56f4ca0714fb90021f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
        <definition>virtual BaseTexture * BaseTexture::upSize</definition>
        <argsstring>(int width, int height, int depth, int mips, unsigned start_src_level, unsigned level_offset)</argsstring>
        <name>upSize</name>
        <qualifiedname>BaseTexture::upSize</qualifiedname>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mips</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>start_src_level</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>level_offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="266" column="24" bodyfile="dag_tex3d.h" bodystart="266" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1a638453c3d09759543de7b093b8b828b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BaseTexture::BaseTexture</definition>
        <argsstring>()=default</argsstring>
        <name>BaseTexture</name>
        <qualifiedname>BaseTexture::BaseTexture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="292" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1aedadda650c2606fcf727e892b50f3af8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BaseTexture::BaseTexture</definition>
        <argsstring>(BaseTexture &amp;&amp;)=default</argsstring>
        <name>BaseTexture</name>
        <qualifiedname>BaseTexture::BaseTexture</qualifiedname>
        <param>
          <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="293" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classBaseTexture_1ab9b61a9dc46cd03df78593f9236ca6b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> &amp;</type>
        <definition>BaseTexture &amp; BaseTexture::operator=</definition>
        <argsstring>(BaseTexture &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>BaseTexture::operator=</qualifiedname>
        <param>
          <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="294" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBaseTexture_1adfed71ba8678e0549c6f6dc01b48f1d5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int BaseTexture::calcSubResIdx</definition>
        <argsstring>(int level, int slice, int mip_levels)</argsstring>
        <name>calcSubResIdx</name>
        <qualifiedname>BaseTexture::calcSubResIdx</qualifiedname>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mip_levels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="170" column="21" bodyfile="dag_tex3d.h" bodystart="170" bodyend="170"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBaseTexture_1a8f3f0fdb28ed1359f90375159588f184" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BaseTexture::~BaseTexture</definition>
        <argsstring>()=default</argsstring>
        <name>~BaseTexture</name>
        <qualifiedname>BaseTexture::~BaseTexture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_tex3d.h" line="297" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BaseTexture</label>
        <link refid="classBaseTexture"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>D3dResource</label>
        <link refid="classD3dResource"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>BaseTexture</label>
        <link refid="classBaseTexture"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>D3dResource</label>
        <link refid="classD3dResource"/>
      </node>
    </collaborationgraph>
    <location file="dag_tex3d.h" line="155" column="1" bodyfile="dag_tex3d.h" bodystart="156" bodyend="308"/>
    <listofallmembers>
      <member refid="classBaseTexture_1a072ba682d61c5ec00e27867908a4ab7b" prot="public" virt="virtual"><scope>BaseTexture</scope><name>allocateTex</name></member>
      <member refid="classBaseTexture_1a638453c3d09759543de7b093b8b828b5" prot="public" virt="non-virtual"><scope>BaseTexture</scope><name>BaseTexture</name></member>
      <member refid="classBaseTexture_1aedadda650c2606fcf727e892b50f3af8" prot="public" virt="non-virtual"><scope>BaseTexture</scope><name>BaseTexture</name></member>
      <member refid="classBaseTexture_1adfed71ba8678e0549c6f6dc01b48f1d5" prot="public" virt="non-virtual"><scope>BaseTexture</scope><name>calcSubResIdx</name></member>
      <member refid="classBaseTexture_1ab562f86e581b7f61b63141fdda32fdea" prot="public" virt="non-virtual"><scope>BaseTexture</scope><name>calcSubResIdx</name></member>
      <member refid="classD3dResource_1adf79387ed8aba74c3b89df96b6a90a4f" prot="protected" virt="non-virtual"><scope>BaseTexture</scope><name>D3dResource</name></member>
      <member refid="classD3dResource_1a934c63d0bda6062fc7c9c2dd35bffbe9" prot="protected" virt="non-virtual"><scope>BaseTexture</scope><name>D3dResource</name></member>
      <member refid="classD3dResource_1a23997f6bb699d0375bd442092f6fb5e3" prot="public" virt="pure-virtual"><scope>BaseTexture</scope><name>destroy</name></member>
      <member refid="classBaseTexture_1a72a607b61e2220156946976bdedc57b2" prot="public" virt="virtual"><scope>BaseTexture</scope><name>discardTex</name></member>
      <member refid="classBaseTexture_1a5aacc6362bd54c42f35e530c044a161f" prot="public" virt="virtual"><scope>BaseTexture</scope><name>downSize</name></member>
      <member refid="classBaseTexture_1a508ff31351ba5c970d533ef14fa85159" prot="public" virt="pure-virtual"><scope>BaseTexture</scope><name>generateMips</name></member>
      <member refid="classBaseTexture_1a68cbf22a48be7a1db2cec1ffc49c08b0" prot="public" virt="pure-virtual"><scope>BaseTexture</scope><name>getinfo</name></member>
      <member refid="classD3dResource_1ac49ff4a78c9a91d19c928e50d0e350b4" prot="public" virt="pure-virtual"><scope>BaseTexture</scope><name>getName</name></member>
      <member refid="classD3dResource_1aa1e377ab687f1f22045088e40ac08ec2" prot="public" virt="pure-virtual"><scope>BaseTexture</scope><name>getSize</name></member>
      <member refid="classBaseTexture_1af0268a3302d5705ce1fb0a7cd7192e9d" prot="public" virt="non-virtual"><scope>BaseTexture</scope><name>getTexName</name></member>
      <member refid="classBaseTexture_1a6fa90bc93f3169362b5a9bdf52dd33f2" prot="public" virt="virtual"><scope>BaseTexture</scope><name>getTID</name></member>
      <member refid="classD3dResource_1aa94890796c26a059e9c5833c53169b77" prot="public" virt="pure-virtual"><scope>BaseTexture</scope><name>getType</name></member>
      <member refid="classBaseTexture_1a0c4bf5f5d0ae87acbb22092cb164e4e4" prot="public" virt="virtual"><scope>BaseTexture</scope><name>isCubeArray</name></member>
      <member refid="classBaseTexture_1aa5f45a64584c9533b7606e99dfd5308f" prot="public" virt="pure-virtual"><scope>BaseTexture</scope><name>level_count</name></member>
      <member refid="classBaseTexture_1a2b294e235993c086e13d0456d71f809e" prot="public" virt="virtual"><scope>BaseTexture</scope><name>lockbox</name></member>
      <member refid="classBaseTexture_1a42f033152273c04456761b2b0c34be8a" prot="public" virt="pure-virtual"><scope>BaseTexture</scope><name>lockimg</name></member>
      <member refid="classBaseTexture_1a6f933fe1dfb254b85d2e560369b5a0e6" prot="public" virt="pure-virtual"><scope>BaseTexture</scope><name>lockimg</name></member>
      <member refid="classBaseTexture_1a2103282b55bcf3ac764d98777f7df4a5" prot="public" virt="non-virtual"><scope>BaseTexture</scope><name>lockimgEx</name></member>
      <member refid="classBaseTexture_1a9bf8241539352b187329bb7d70d0b6ec" prot="public" virt="virtual"><scope>BaseTexture</scope><name>makeTmpTexResCopy</name></member>
      <member refid="classBaseTexture_1ab9b61a9dc46cd03df78593f9236ca6b3" prot="public" virt="non-virtual"><scope>BaseTexture</scope><name>operator=</name></member>
      <member refid="classD3dResource_1ada026bcd1e9d5cbf59686ec3adf71285" prot="protected" virt="non-virtual" ambiguityscope="D3dResource::"><scope>BaseTexture</scope><name>operator=</name></member>
      <member refid="classBaseTexture_1ad8a08bbab47a6ab5df6418f78dda49a1" prot="public" virt="virtual"><scope>BaseTexture</scope><name>replaceTexResObject</name></member>
      <member refid="classD3dResource_1aab63ceb7bd2edbad81615f78a2b04c9a" prot="public" virt="virtual"><scope>BaseTexture</scope><name>setApiName</name></member>
      <member refid="classD3dResource_1a081b5e12026e39626062c49e4e62e50a" prot="public" virt="pure-virtual"><scope>BaseTexture</scope><name>setName</name></member>
      <member refid="classD3dResource_1a54bfc8fb21e1e3062360a7155e0b9b50" prot="public" virt="pure-virtual"><scope>BaseTexture</scope><name>setName</name></member>
      <member refid="classBaseTexture_1a17ddd5e02b9297e0652ec646d8d54b12" prot="public" virt="virtual"><scope>BaseTexture</scope><name>setReadStencil</name></member>
      <member refid="classBaseTexture_1a6a85e670c443104a70883f192cb0be93" prot="public" virt="virtual"><scope>BaseTexture</scope><name>setReloadCallback</name></member>
      <member refid="classBaseTexture_1a09b445afa42678f459eee01c85160e61" prot="public" virt="virtual"><scope>BaseTexture</scope><name>setTID</name></member>
      <member refid="classBaseTexture_1ae8d686517cc0babc4a0829df1c5e9a25" prot="protected" virt="non-virtual"><scope>BaseTexture</scope><name>TEX_COPIED</name></member>
      <member refid="classBaseTexture_1a895d85357c93cb61543d560fe798437a" prot="public" virt="pure-virtual"><scope>BaseTexture</scope><name>texmiplevel</name></member>
      <member refid="classBaseTexture_1ac9b624d1dc511cd734b9438feb4cd857" prot="public" virt="non-virtual"><scope>BaseTexture</scope><name>unlock</name></member>
      <member refid="classBaseTexture_1a0cd9f4ffc918991330e9190dd4db51f8" prot="public" virt="virtual"><scope>BaseTexture</scope><name>unlockbox</name></member>
      <member refid="classBaseTexture_1ab9499abe01802300567ca7374c62de4c" prot="public" virt="virtual"><scope>BaseTexture</scope><name>unlockimg</name></member>
      <member refid="classBaseTexture_1ae66fab8be80dfdf1379ef6c3c3a54d18" prot="public" virt="pure-virtual"><scope>BaseTexture</scope><name>update</name></member>
      <member refid="classBaseTexture_1a78250fb6cf2f55d92a38708836317c85" prot="public" virt="pure-virtual"><scope>BaseTexture</scope><name>updateSubRegion</name></member>
      <member refid="classBaseTexture_1a6f7b48f57c9bb0c39ab0b828e87c0404" prot="public" virt="virtual"><scope>BaseTexture</scope><name>updateSubRegionNoOrder</name></member>
      <member refid="classBaseTexture_1a00574233e8007627e8e0c26a6916ceee" prot="public" virt="virtual"><scope>BaseTexture</scope><name>updateTexResFormat</name></member>
      <member refid="classBaseTexture_1aab773ad0b55de56f4ca0714fb90021f0" prot="public" virt="virtual"><scope>BaseTexture</scope><name>upSize</name></member>
      <member refid="classBaseTexture_1a8f3f0fdb28ed1359f90375159588f184" prot="protected" virt="non-virtual"><scope>BaseTexture</scope><name>~BaseTexture</name></member>
      <member refid="classD3dResource_1a9eff0e45f010ff9542669e35f67f5980" prot="protected" virt="non-virtual"><scope>BaseTexture</scope><name>~D3dResource</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
