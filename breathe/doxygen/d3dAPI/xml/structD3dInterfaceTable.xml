<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="structD3dInterfaceTable" kind="struct" language="C++" prot="public">
    <compoundname>D3dInterfaceTable</compoundname>
    <includes refid="dag__interface__table_8h" local="no">dag_interface_table.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structD3dInterfaceTable_1aff9d25fea7d4a77a7ebe7612f989d39f" prot="public" static="no" mutable="no">
        <type>const char *(*</type>
        <definition>const char *(* D3dInterfaceTable::get_driver_name) ()</definition>
        <argsstring>)()</argsstring>
        <name>get_driver_name</name>
        <qualifiedname>D3dInterfaceTable::get_driver_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="76" column="9" bodyfile="dag_interface_table.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a7821b40a9e06ccfd0a9a348489151fc0" prot="public" static="no" mutable="no">
        <type>const char *(*</type>
        <definition>const char *(* D3dInterfaceTable::get_device_driver_version) ()</definition>
        <argsstring>)()</argsstring>
        <name>get_device_driver_version</name>
        <qualifiedname>D3dInterfaceTable::get_device_driver_version</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="77" column="9" bodyfile="dag_interface_table.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ae57962cd5ebf67e401e2433dad5206a6" prot="public" static="no" mutable="no">
        <type>const char *(*</type>
        <definition>const char *(* D3dInterfaceTable::get_device_name) ()</definition>
        <argsstring>)()</argsstring>
        <name>get_device_name</name>
        <qualifiedname>D3dInterfaceTable::get_device_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="78" column="9" bodyfile="dag_interface_table.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a148d20fa30db7bb1611dcee0460132c0" prot="public" static="no" mutable="no">
        <type>const char *(*</type>
        <definition>const char *(* D3dInterfaceTable::get_last_error) ()</definition>
        <argsstring>)()</argsstring>
        <name>get_last_error</name>
        <qualifiedname>D3dInterfaceTable::get_last_error</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="79" column="9" bodyfile="dag_interface_table.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a59e2343f2b79d0502cdff59a47d71fd9" prot="public" static="no" mutable="no">
        <type>uint32_t(*</type>
        <definition>uint32_t(* D3dInterfaceTable::get_last_error_code) ()</definition>
        <argsstring>)()</argsstring>
        <name>get_last_error_code</name>
        <qualifiedname>D3dInterfaceTable::get_last_error_code</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="80" column="3" bodyfile="dag_interface_table.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a8ccc470929be6b94a7a6a20967086471" prot="public" static="no" mutable="no">
        <type>void *(*</type>
        <definition>void *(* D3dInterfaceTable::get_device) ()</definition>
        <argsstring>)()</argsstring>
        <name>get_device</name>
        <qualifiedname>D3dInterfaceTable::get_device</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="82" column="3" bodyfile="dag_interface_table.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ac80606560cd3422112667064ce22b8f8" prot="public" static="no" mutable="no">
        <type>const <ref refid="structDriver3dDesc" kindref="compound">Driver3dDesc</ref> &amp;(*</type>
        <definition>const Driver3dDesc &amp;(* D3dInterfaceTable::get_driver_desc) ()</definition>
        <argsstring>)()</argsstring>
        <name>get_driver_desc</name>
        <qualifiedname>D3dInterfaceTable::get_driver_desc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="83" column="9" bodyfile="dag_interface_table.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a23df13803547e3249d88f25ceac82d20" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* D3dInterfaceTable::driver_command) (Drv3dCommand command, void *par1, void *par2, void *par3)</definition>
        <argsstring>)(Drv3dCommand command, void *par1, void *par2, void *par3)</argsstring>
        <name>driver_command</name>
        <qualifiedname>D3dInterfaceTable::driver_command</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="84" column="3" bodyfile="dag_interface_table.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a0786238c8f81707b832e4d7aed50ec42" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::device_lost) (bool *can_reset_now)</definition>
        <argsstring>)(bool *can_reset_now)</argsstring>
        <name>device_lost</name>
        <qualifiedname>D3dInterfaceTable::device_lost</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="85" column="3" bodyfile="dag_interface_table.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1afb17837d2e77d974063aeec856fc263f" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::reset_device) ()</definition>
        <argsstring>)()</argsstring>
        <name>reset_device</name>
        <qualifiedname>D3dInterfaceTable::reset_device</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="86" column="3" bodyfile="dag_interface_table.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ab133b3120df95eea746c92bf33c2490f" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::is_in_device_reset_now) ()</definition>
        <argsstring>)()</argsstring>
        <name>is_in_device_reset_now</name>
        <qualifiedname>D3dInterfaceTable::is_in_device_reset_now</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="87" column="3" bodyfile="dag_interface_table.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aab3927287fa12f1c8a1742ae4a7946c0" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::is_window_occluded) ()</definition>
        <argsstring>)()</argsstring>
        <name>is_window_occluded</name>
        <qualifiedname>D3dInterfaceTable::is_window_occluded</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="88" column="3" bodyfile="dag_interface_table.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ac471efc2b10250e36fc7ebf0cff19e70" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::should_use_compute_for_image_processing) (std::initializer_list&lt; unsigned &gt; formats)</definition>
        <argsstring>)(std::initializer_list&lt; unsigned &gt; formats)</argsstring>
        <name>should_use_compute_for_image_processing</name>
        <qualifiedname>D3dInterfaceTable::should_use_compute_for_image_processing</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="90" column="3" bodyfile="dag_interface_table.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a0cdb5db853aacf4c8bbb64069b1884fe" prot="public" static="no" mutable="no">
        <type>unsigned(*</type>
        <definition>unsigned(* D3dInterfaceTable::get_texformat_usage) (int cflg, D3DResourceType type)</definition>
        <argsstring>)(int cflg, D3DResourceType type)</argsstring>
        <name>get_texformat_usage</name>
        <qualifiedname>D3dInterfaceTable::get_texformat_usage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="93" column="3" bodyfile="dag_interface_table.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aec46c8dd07fbff8c19826fcef44d6a7b" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::check_texformat) (int cflg)</definition>
        <argsstring>)(int cflg)</argsstring>
        <name>check_texformat</name>
        <qualifiedname>D3dInterfaceTable::check_texformat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="94" column="3" bodyfile="dag_interface_table.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1abd406eda985f173dac2f57c9b064bfed" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* D3dInterfaceTable::get_max_sample_count) (int cflg)</definition>
        <argsstring>)(int cflg)</argsstring>
        <name>get_max_sample_count</name>
        <qualifiedname>D3dInterfaceTable::get_max_sample_count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="95" column="3" bodyfile="dag_interface_table.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a228832d67d555a402c4008f11494f37b" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::issame_texformat) (int cflg1, int cflg2)</definition>
        <argsstring>)(int cflg1, int cflg2)</argsstring>
        <name>issame_texformat</name>
        <qualifiedname>D3dInterfaceTable::issame_texformat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="96" column="3" bodyfile="dag_interface_table.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1abfb02cb8775131a91e635140e5669b3d" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::check_cubetexformat) (int cflg)</definition>
        <argsstring>)(int cflg)</argsstring>
        <name>check_cubetexformat</name>
        <qualifiedname>D3dInterfaceTable::check_cubetexformat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="97" column="3" bodyfile="dag_interface_table.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a3823560bfc982c3a10df116681bcab84" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::check_voltexformat) (int cflg)</definition>
        <argsstring>)(int cflg)</argsstring>
        <name>check_voltexformat</name>
        <qualifiedname>D3dInterfaceTable::check_voltexformat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="98" column="3" bodyfile="dag_interface_table.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aea2bc36406eb4cdb53b109d5c7a75a12" prot="public" static="no" mutable="no">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *(*</type>
        <definition>BaseTexture *(* D3dInterfaceTable::create_tex_0) (TexImage32 *img, int w, int h, int flg, int levels, const char *stat_name)</definition>
        <argsstring>)(TexImage32 *img, int w, int h, int flg, int levels, const char *stat_name)</argsstring>
        <name>create_tex_0</name>
        <qualifiedname>D3dInterfaceTable::create_tex_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="99" column="3" bodyfile="dag_interface_table.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a132ba3a9f5a2473c1b72acf7033f4cfd" prot="public" static="no" mutable="no">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *(*</type>
        <definition>BaseTexture *(* D3dInterfaceTable::create_cubetex_0) (int size, int flg, int levels, const char *stat_name)</definition>
        <argsstring>)(int size, int flg, int levels, const char *stat_name)</argsstring>
        <name>create_cubetex_0</name>
        <qualifiedname>D3dInterfaceTable::create_cubetex_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="100" column="3" bodyfile="dag_interface_table.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1acacb2e7ce451ba0b2bc25418b237a4b2" prot="public" static="no" mutable="no">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *(*</type>
        <definition>BaseTexture *(* D3dInterfaceTable::create_voltex) (int w, int h, int d, int flg, int levels, const char *stat_name)</definition>
        <argsstring>)(int w, int h, int d, int flg, int levels, const char *stat_name)</argsstring>
        <name>create_voltex</name>
        <qualifiedname>D3dInterfaceTable::create_voltex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="101" column="3" bodyfile="dag_interface_table.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a4a25110c4bbfeb25f54b3fa3df9083d4" prot="public" static="no" mutable="no">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *(*</type>
        <definition>BaseTexture *(* D3dInterfaceTable::create_array_tex) (int w, int h, int d, int flg, int levels, const char *stat_name)</definition>
        <argsstring>)(int w, int h, int d, int flg, int levels, const char *stat_name)</argsstring>
        <name>create_array_tex</name>
        <qualifiedname>D3dInterfaceTable::create_array_tex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="102" column="3" bodyfile="dag_interface_table.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a8d7443b2f68dc8408e6fd63f7eaf14ce" prot="public" static="no" mutable="no">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *(*</type>
        <definition>BaseTexture *(* D3dInterfaceTable::create_cube_array_tex) (int side, int d, int flg, int levels, const char *stat_name)</definition>
        <argsstring>)(int side, int d, int flg, int levels, const char *stat_name)</argsstring>
        <name>create_cube_array_tex</name>
        <qualifiedname>D3dInterfaceTable::create_cube_array_tex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="103" column="3" bodyfile="dag_interface_table.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a743de7be8473acd03e1ce40325125bb1" prot="public" static="no" mutable="no">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *(*</type>
        <definition>BaseTexture *(* D3dInterfaceTable::create_ddsx_tex) (IGenLoad &amp;crd, int flg, int q, int lev, const char *stat_name)</definition>
        <argsstring>)(IGenLoad &amp;crd, int flg, int q, int lev, const char *stat_name)</argsstring>
        <name>create_ddsx_tex</name>
        <qualifiedname>D3dInterfaceTable::create_ddsx_tex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="105" column="3" bodyfile="dag_interface_table.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a45e22b03b4aa150d3becd89cf21427e2" prot="public" static="no" mutable="no">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *(*</type>
        <definition>BaseTexture *(* D3dInterfaceTable::alloc_ddsx_tex) (const ddsx::Header &amp;hdr, int flg, int q, int lev, const char *stat_name, int stub_tex_idx)</definition>
        <argsstring>)(const ddsx::Header &amp;hdr, int flg, int q, int lev, const char *stat_name, int stub_tex_idx)</argsstring>
        <name>alloc_ddsx_tex</name>
        <qualifiedname>D3dInterfaceTable::alloc_ddsx_tex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="106" column="3" bodyfile="dag_interface_table.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ac95fc8b9a5af09cbb4246a61b101802b" prot="public" static="no" mutable="no">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *(*</type>
        <definition>BaseTexture *(* D3dInterfaceTable::alias_tex_0) (BaseTexture *baseTexture, TexImage32 *img, int w, int h, int flg, int levels, const char *stat_name)</definition>
        <argsstring>)(BaseTexture *baseTexture, TexImage32 *img, int w, int h, int flg, int levels, const char *stat_name)</argsstring>
        <name>alias_tex_0</name>
        <qualifiedname>D3dInterfaceTable::alias_tex_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="108" column="3" bodyfile="dag_interface_table.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1af322117eb65402a3234c218b214a6262" prot="public" static="no" mutable="no">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *(*</type>
        <definition>BaseTexture *(* D3dInterfaceTable::alias_cubetex_0) (BaseTexture *baseTexture, int size, int flg, int levels, const char *stat_name)</definition>
        <argsstring>)(BaseTexture *baseTexture, int size, int flg, int levels, const char *stat_name)</argsstring>
        <name>alias_cubetex_0</name>
        <qualifiedname>D3dInterfaceTable::alias_cubetex_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="109" column="3" bodyfile="dag_interface_table.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a05cab754d31744615c409d1ae5f5d86f" prot="public" static="no" mutable="no">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *(*</type>
        <definition>BaseTexture *(* D3dInterfaceTable::alias_voltex_0) (BaseTexture *baseTexture, int w, int h, int d, int flg, int levels, const char *stat_name)</definition>
        <argsstring>)(BaseTexture *baseTexture, int w, int h, int d, int flg, int levels, const char *stat_name)</argsstring>
        <name>alias_voltex_0</name>
        <qualifiedname>D3dInterfaceTable::alias_voltex_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="110" column="3" bodyfile="dag_interface_table.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a685d132339388cc07810b055d59eac78" prot="public" static="no" mutable="no">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *(*</type>
        <definition>BaseTexture *(* D3dInterfaceTable::alias_array_tex_0) (BaseTexture *baseTexture, int w, int h, int d, int flg, int levels, const char *stat_name)</definition>
        <argsstring>)(BaseTexture *baseTexture, int w, int h, int d, int flg, int levels, const char *stat_name)</argsstring>
        <name>alias_array_tex_0</name>
        <qualifiedname>D3dInterfaceTable::alias_array_tex_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="111" column="3" bodyfile="dag_interface_table.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a3fe1936bc055aa06c3ab516ecb074565" prot="public" static="no" mutable="no">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *(*</type>
        <definition>BaseTexture *(* D3dInterfaceTable::alias_cube_array_tex_0) (BaseTexture *baseTexture, int side, int d, int flg, int levels, const char *stat_name)</definition>
        <argsstring>)(BaseTexture *baseTexture, int side, int d, int flg, int levels, const char *stat_name)</argsstring>
        <name>alias_cube_array_tex_0</name>
        <qualifiedname>D3dInterfaceTable::alias_cube_array_tex_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="112" column="3" bodyfile="dag_interface_table.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a6fb9a8488c80169bac9a9e14d41f9508" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::stretch_rect_0) (BaseTexture *src, BaseTexture *dst, const RectInt *rsrc, const RectInt *rdst)</definition>
        <argsstring>)(BaseTexture *src, BaseTexture *dst, const RectInt *rsrc, const RectInt *rdst)</argsstring>
        <name>stretch_rect_0</name>
        <qualifiedname>D3dInterfaceTable::stretch_rect_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="114" column="3" bodyfile="dag_interface_table.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a48817caedbe3fb171e1b4286a12e8e47" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::copy_from_current_render_target) (BaseTexture *to_tex)</definition>
        <argsstring>)(BaseTexture *to_tex)</argsstring>
        <name>copy_from_current_render_target</name>
        <qualifiedname>D3dInterfaceTable::copy_from_current_render_target</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="115" column="3" bodyfile="dag_interface_table.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aa6987de37b3f7916e1bc2c222b69edea" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::get_texture_statistics) (uint32_t *num_textures, uint64_t *total_mem, String *out_dump)</definition>
        <argsstring>)(uint32_t *num_textures, uint64_t *total_mem, String *out_dump)</argsstring>
        <name>get_texture_statistics</name>
        <qualifiedname>D3dInterfaceTable::get_texture_statistics</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="117" column="3" bodyfile="dag_interface_table.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a0ae0efac28e1117a19cd59c063f3d113" prot="public" static="no" mutable="no">
        <type><ref refid="namespaced3d_1aee766f4273f69e0942fff59ab388cfe2" kindref="member">d3d::SamplerHandle</ref>(*</type>
        <definition>d3d::SamplerHandle(* D3dInterfaceTable::request_sampler) (const d3d::SamplerInfo &amp;sampler_info)</definition>
        <argsstring>)(const d3d::SamplerInfo &amp;sampler_info)</argsstring>
        <name>request_sampler</name>
        <qualifiedname>D3dInterfaceTable::request_sampler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="119" column="3" bodyfile="dag_interface_table.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a9cd0f39680db218fa262e706aafd024b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::set_sampler) (unsigned shader_stage, unsigned slot, d3d::SamplerHandle sampler)</definition>
        <argsstring>)(unsigned shader_stage, unsigned slot, d3d::SamplerHandle sampler)</argsstring>
        <name>set_sampler</name>
        <qualifiedname>D3dInterfaceTable::set_sampler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="120" column="3" bodyfile="dag_interface_table.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a4279f15d35c3e3581d4926cf1d3cdce5" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::settex) (int stage, BaseTexture *)</definition>
        <argsstring>)(int stage, BaseTexture *)</argsstring>
        <name>settex</name>
        <qualifiedname>D3dInterfaceTable::settex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="122" column="3" bodyfile="dag_interface_table.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aa8bda2142d4d9920b7397b1ca022defd" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::settex_vs) (int stage, BaseTexture *)</definition>
        <argsstring>)(int stage, BaseTexture *)</argsstring>
        <name>settex_vs</name>
        <qualifiedname>D3dInterfaceTable::settex_vs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="123" column="3" bodyfile="dag_interface_table.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a8d645b4ba079e8f90e9c33b2cc39a34e" prot="public" static="no" mutable="no">
        <type><ref refid="dag__consts_8h_1af06818afc8cf42203df4d873886f23bc" kindref="member">PROGRAM</ref>(*</type>
        <definition>PROGRAM(* D3dInterfaceTable::create_program_0) (VPROG, FSHADER, VDECL, unsigned *, unsigned)</definition>
        <argsstring>)(VPROG, FSHADER, VDECL, unsigned *, unsigned)</argsstring>
        <name>create_program_0</name>
        <qualifiedname>D3dInterfaceTable::create_program_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="125" column="3" bodyfile="dag_interface_table.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a70ceb904be9ea7dbf033a29358054dc2" prot="public" static="no" mutable="no">
        <type><ref refid="dag__consts_8h_1af06818afc8cf42203df4d873886f23bc" kindref="member">PROGRAM</ref>(*</type>
        <definition>PROGRAM(* D3dInterfaceTable::create_program_1) (const uint32_t *, const uint32_t *, VDECL, unsigned *, unsigned)</definition>
        <argsstring>)(const uint32_t *, const uint32_t *, VDECL, unsigned *, unsigned)</argsstring>
        <name>create_program_1</name>
        <qualifiedname>D3dInterfaceTable::create_program_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="126" column="3" bodyfile="dag_interface_table.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aff35e67a336ec600120ac4b2f943a3dc" prot="public" static="no" mutable="no">
        <type><ref refid="dag__consts_8h_1af06818afc8cf42203df4d873886f23bc" kindref="member">PROGRAM</ref>(*</type>
        <definition>PROGRAM(* D3dInterfaceTable::create_program_cs) (const uint32_t *cs_native, CSPreloaded preloaded)</definition>
        <argsstring>)(const uint32_t *cs_native, CSPreloaded preloaded)</argsstring>
        <name>create_program_cs</name>
        <qualifiedname>D3dInterfaceTable::create_program_cs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="128" column="3" bodyfile="dag_interface_table.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aa044e1df6805aee46fc64f2e4458d6b1" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_program) (PROGRAM)</definition>
        <argsstring>)(PROGRAM)</argsstring>
        <name>set_program</name>
        <qualifiedname>D3dInterfaceTable::set_program</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="130" column="3" bodyfile="dag_interface_table.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a34d5c570d7610294391ef50d8209bad3" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::delete_program) (PROGRAM)</definition>
        <argsstring>)(PROGRAM)</argsstring>
        <name>delete_program</name>
        <qualifiedname>D3dInterfaceTable::delete_program</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="131" column="3" bodyfile="dag_interface_table.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a27b298d8fac5f3fa1b7cbfac8403e899" prot="public" static="no" mutable="no">
        <type><ref refid="dag__consts_8h_1a4fa6377d5dc060fc6dea9a03176ea944" kindref="member">VPROG</ref>(*</type>
        <definition>VPROG(* D3dInterfaceTable::create_vertex_shader) (const uint32_t *native_code)</definition>
        <argsstring>)(const uint32_t *native_code)</argsstring>
        <name>create_vertex_shader</name>
        <qualifiedname>D3dInterfaceTable::create_vertex_shader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="133" column="3" bodyfile="dag_interface_table.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a3ac37e1bf3317deaa8adbadce8233fb7" prot="public" static="no" mutable="no">
        <type><ref refid="dag__consts_8h_1a4fa6377d5dc060fc6dea9a03176ea944" kindref="member">VPROG</ref>(*</type>
        <definition>VPROG(* D3dInterfaceTable::create_vertex_shader_dagor) (const VPRTYPE *tokens, int len)</definition>
        <argsstring>)(const VPRTYPE *tokens, int len)</argsstring>
        <name>create_vertex_shader_dagor</name>
        <qualifiedname>D3dInterfaceTable::create_vertex_shader_dagor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="134" column="3" bodyfile="dag_interface_table.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a643998c5105133459907ec34ddff56f1" prot="public" static="no" mutable="no">
        <type><ref refid="dag__consts_8h_1a4fa6377d5dc060fc6dea9a03176ea944" kindref="member">VPROG</ref>(*</type>
        <definition>VPROG(* D3dInterfaceTable::create_vertex_shader_asm) (const char *asm_text)</definition>
        <argsstring>)(const char *asm_text)</argsstring>
        <name>create_vertex_shader_asm</name>
        <qualifiedname>D3dInterfaceTable::create_vertex_shader_asm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="135" column="3" bodyfile="dag_interface_table.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ab5a8067401b99d2110674e140cb91777" prot="public" static="no" mutable="no">
        <type><ref refid="dag__consts_8h_1a4fa6377d5dc060fc6dea9a03176ea944" kindref="member">VPROG</ref>(*</type>
        <definition>VPROG(* D3dInterfaceTable::create_vertex_shader_hlsl) (const char *hlsl_text)</definition>
        <argsstring>)(const char *hlsl_text)</argsstring>
        <name>create_vertex_shader_hlsl</name>
        <qualifiedname>D3dInterfaceTable::create_vertex_shader_hlsl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="136" column="3" bodyfile="dag_interface_table.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a18307da8d9f65a3ecb0fd4558c4384ad" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::delete_vertex_shader) (VPROG vs)</definition>
        <argsstring>)(VPROG vs)</argsstring>
        <name>delete_vertex_shader</name>
        <qualifiedname>D3dInterfaceTable::delete_vertex_shader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="137" column="3" bodyfile="dag_interface_table.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a338e657db63ecf009e5743508847809f" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_vertex_shader) (VPROG ps)</definition>
        <argsstring>)(VPROG ps)</argsstring>
        <name>set_vertex_shader</name>
        <qualifiedname>D3dInterfaceTable::set_vertex_shader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="139" column="3" bodyfile="dag_interface_table.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a7e745bcdf460d3f8a7b0976b7d01a53d" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_const) (unsigned stage, unsigned reg_base, const void *data, unsigned num_regs)</definition>
        <argsstring>)(unsigned stage, unsigned reg_base, const void *data, unsigned num_regs)</argsstring>
        <name>set_const</name>
        <qualifiedname>D3dInterfaceTable::set_const</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="140" column="3" bodyfile="dag_interface_table.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aecc5ae6b8dbc2caa691890f807d33a1c" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_immediate_const) (unsigned stage, const uint32_t *data, unsigned num_words)</definition>
        <argsstring>)(unsigned stage, const uint32_t *data, unsigned num_words)</argsstring>
        <name>set_immediate_const</name>
        <qualifiedname>D3dInterfaceTable::set_immediate_const</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="141" column="3" bodyfile="dag_interface_table.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a71200df2444edc5cd6d8910abc10c49c" prot="public" static="no" mutable="no">
        <type><ref refid="dag__consts_8h_1a831b714182cee438acae55ed474e13b8" kindref="member">FSHADER</ref>(*</type>
        <definition>FSHADER(* D3dInterfaceTable::create_pixel_shader) (const uint32_t *native_code)</definition>
        <argsstring>)(const uint32_t *native_code)</argsstring>
        <name>create_pixel_shader</name>
        <qualifiedname>D3dInterfaceTable::create_pixel_shader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="143" column="3" bodyfile="dag_interface_table.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a1596b5174e6d74d436ba6b6bbb5f2a44" prot="public" static="no" mutable="no">
        <type><ref refid="dag__consts_8h_1a831b714182cee438acae55ed474e13b8" kindref="member">FSHADER</ref>(*</type>
        <definition>FSHADER(* D3dInterfaceTable::create_pixel_shader_dagor) (const FSHTYPE *tokens, int len)</definition>
        <argsstring>)(const FSHTYPE *tokens, int len)</argsstring>
        <name>create_pixel_shader_dagor</name>
        <qualifiedname>D3dInterfaceTable::create_pixel_shader_dagor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="144" column="3" bodyfile="dag_interface_table.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ab1bd54cbc77ed76a5cf294d2f8334330" prot="public" static="no" mutable="no">
        <type><ref refid="dag__consts_8h_1a831b714182cee438acae55ed474e13b8" kindref="member">FSHADER</ref>(*</type>
        <definition>FSHADER(* D3dInterfaceTable::create_pixel_shader_asm) (const char *asm_text)</definition>
        <argsstring>)(const char *asm_text)</argsstring>
        <name>create_pixel_shader_asm</name>
        <qualifiedname>D3dInterfaceTable::create_pixel_shader_asm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="145" column="3" bodyfile="dag_interface_table.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a32aee987916596a89c1a9facdd887905" prot="public" static="no" mutable="no">
        <type><ref refid="dag__consts_8h_1a831b714182cee438acae55ed474e13b8" kindref="member">FSHADER</ref>(*</type>
        <definition>FSHADER(* D3dInterfaceTable::create_pixel_shader_hlsl) (const char *hlsl_text)</definition>
        <argsstring>)(const char *hlsl_text)</argsstring>
        <name>create_pixel_shader_hlsl</name>
        <qualifiedname>D3dInterfaceTable::create_pixel_shader_hlsl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="146" column="3" bodyfile="dag_interface_table.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a4cf8211cb562dbefbdaa99ec7f03e9ab" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::delete_pixel_shader) (FSHADER ps)</definition>
        <argsstring>)(FSHADER ps)</argsstring>
        <name>delete_pixel_shader</name>
        <qualifiedname>D3dInterfaceTable::delete_pixel_shader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="147" column="3" bodyfile="dag_interface_table.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1abc4d08542ab7ee2743d8ca82329b4d6f" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_pixel_shader) (FSHADER ps)</definition>
        <argsstring>)(FSHADER ps)</argsstring>
        <name>set_pixel_shader</name>
        <qualifiedname>D3dInterfaceTable::set_pixel_shader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="149" column="3" bodyfile="dag_interface_table.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a9b03dd08f28cce704cc3f9211984d392" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* D3dInterfaceTable::set_vs_constbuffer_size) (int required_size)</definition>
        <argsstring>)(int required_size)</argsstring>
        <name>set_vs_constbuffer_size</name>
        <qualifiedname>D3dInterfaceTable::set_vs_constbuffer_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="150" column="3" bodyfile="dag_interface_table.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a0477591b16f8c9bd2192426265bc0e86" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* D3dInterfaceTable::set_cs_constbuffer_size) (int required_size)</definition>
        <argsstring>)(int required_size)</argsstring>
        <name>set_cs_constbuffer_size</name>
        <qualifiedname>D3dInterfaceTable::set_cs_constbuffer_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="151" column="3" bodyfile="dag_interface_table.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a7c3c1817657134a8df555657a4b582e7" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_const_buffer) (unsigned stage, unsigned slot, Sbuffer *buffer, uint32_t consts_offset, uint32_t consts_size)</definition>
        <argsstring>)(unsigned stage, unsigned slot, Sbuffer *buffer, uint32_t consts_offset, uint32_t consts_size)</argsstring>
        <name>set_const_buffer</name>
        <qualifiedname>D3dInterfaceTable::set_const_buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="152" column="3" bodyfile="dag_interface_table.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a06a163f1571363b02914453634248794" prot="public" static="no" mutable="no">
        <type>uint32_t(*</type>
        <definition>uint32_t(* D3dInterfaceTable::register_bindless_sampler) (d3d::SamplerHandle sampler)</definition>
        <argsstring>)(d3d::SamplerHandle sampler)</argsstring>
        <name>register_bindless_sampler</name>
        <qualifiedname>D3dInterfaceTable::register_bindless_sampler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="154" column="3" bodyfile="dag_interface_table.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a10ca24483881b150c5ade5043aecd454" prot="public" static="no" mutable="no">
        <type>uint32_t(*</type>
        <definition>uint32_t(* D3dInterfaceTable::allocate_bindless_resource_range) (D3DResourceType type, uint32_t count)</definition>
        <argsstring>)(D3DResourceType type, uint32_t count)</argsstring>
        <name>allocate_bindless_resource_range</name>
        <qualifiedname>D3dInterfaceTable::allocate_bindless_resource_range</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="156" column="3" bodyfile="dag_interface_table.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aa877dc190547a203b53a4ad05535e9db" prot="public" static="no" mutable="no">
        <type>uint32_t(*</type>
        <definition>uint32_t(* D3dInterfaceTable::resize_bindless_resource_range) (D3DResourceType type, uint32_t index, uint32_t current_count, uint32_t new_count)</definition>
        <argsstring>)(D3DResourceType type, uint32_t index, uint32_t current_count, uint32_t new_count)</argsstring>
        <name>resize_bindless_resource_range</name>
        <qualifiedname>D3dInterfaceTable::resize_bindless_resource_range</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="157" column="3" bodyfile="dag_interface_table.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a5a17bf72e49b18d49b87aa22cf4969af" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::free_bindless_resource_range) (D3DResourceType type, uint32_t index, uint32_t count)</definition>
        <argsstring>)(D3DResourceType type, uint32_t index, uint32_t count)</argsstring>
        <name>free_bindless_resource_range</name>
        <qualifiedname>D3dInterfaceTable::free_bindless_resource_range</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="158" column="3" bodyfile="dag_interface_table.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1af58ca0ec33493d839f112425855ba106" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::update_bindless_resource) (D3DResourceType type, uint32_t index, D3dResource *res)</definition>
        <argsstring>)(D3DResourceType type, uint32_t index, D3dResource *res)</argsstring>
        <name>update_bindless_resource</name>
        <qualifiedname>D3dInterfaceTable::update_bindless_resource</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="159" column="3" bodyfile="dag_interface_table.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aef58267f94990a016d258dbc24d14e2d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::update_bindless_resources_to_null) (D3DResourceType type, uint32_t index, uint32_t count)</definition>
        <argsstring>)(D3DResourceType type, uint32_t index, uint32_t count)</argsstring>
        <name>update_bindless_resources_to_null</name>
        <qualifiedname>D3dInterfaceTable::update_bindless_resources_to_null</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="160" column="3" bodyfile="dag_interface_table.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a29e91a101dc21b0ddcf3811b5adbeb23" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_tex) (unsigned shader_stage, unsigned slot, BaseTexture *tex)</definition>
        <argsstring>)(unsigned shader_stage, unsigned slot, BaseTexture *tex)</argsstring>
        <name>set_tex</name>
        <qualifiedname>D3dInterfaceTable::set_tex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="162" column="3" bodyfile="dag_interface_table.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a5ba8b8149057b602f62ae9c058d14789" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_rwtex) (unsigned shader_stage, unsigned slot, BaseTexture *tex, uint32_t, uint32_t, bool)</definition>
        <argsstring>)(unsigned shader_stage, unsigned slot, BaseTexture *tex, uint32_t, uint32_t, bool)</argsstring>
        <name>set_rwtex</name>
        <qualifiedname>D3dInterfaceTable::set_rwtex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="163" column="3" bodyfile="dag_interface_table.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ae4035ded5a6ece1cf3872a524699cdb0" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::clear_rwtexi) (BaseTexture *tex, const unsigned val[4], uint32_t, uint32_t)</definition>
        <argsstring>)(BaseTexture *tex, const unsigned val[4], uint32_t, uint32_t)</argsstring>
        <name>clear_rwtexi</name>
        <qualifiedname>D3dInterfaceTable::clear_rwtexi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="164" column="3" bodyfile="dag_interface_table.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ac2f13d33f863b2fd6040eccaf7f1c8c2" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::clear_rwtexf) (BaseTexture *tex, const float val[4], uint32_t, uint32_t)</definition>
        <argsstring>)(BaseTexture *tex, const float val[4], uint32_t, uint32_t)</argsstring>
        <name>clear_rwtexf</name>
        <qualifiedname>D3dInterfaceTable::clear_rwtexf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="165" column="3" bodyfile="dag_interface_table.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ab88d3605fbe5fe5ce8d1d0a73e936873" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::zero_rwbufi) (Sbuffer *buffer)</definition>
        <argsstring>)(Sbuffer *buffer)</argsstring>
        <name>zero_rwbufi</name>
        <qualifiedname>D3dInterfaceTable::zero_rwbufi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="166" column="3" bodyfile="dag_interface_table.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ab13083e4c79d7e300cec69ed4bc44837" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::clear_rt) (const RenderTarget &amp;rt, const ResourceClearValue &amp;clear_val)</definition>
        <argsstring>)(const RenderTarget &amp;rt, const ResourceClearValue &amp;clear_val)</argsstring>
        <name>clear_rt</name>
        <qualifiedname>D3dInterfaceTable::clear_rt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="168" column="3" bodyfile="dag_interface_table.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ac337c8074a3dd2b054f1d6f32b5f76c0" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::discard_tex) (BaseTexture *tex)</definition>
        <argsstring>)(BaseTexture *tex)</argsstring>
        <name>discard_tex</name>
        <qualifiedname>D3dInterfaceTable::discard_tex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="170" column="3" bodyfile="dag_interface_table.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a9fe7e56c67049cd6d08fee0bab0810b3" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_buffer) (unsigned shader_stage, unsigned slot, Sbuffer *buffer)</definition>
        <argsstring>)(unsigned shader_stage, unsigned slot, Sbuffer *buffer)</argsstring>
        <name>set_buffer</name>
        <qualifiedname>D3dInterfaceTable::set_buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="172" column="3" bodyfile="dag_interface_table.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a950349a131fab122ddc3bab69294c9af" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_rwbuffer) (unsigned shader_stage, unsigned slot, Sbuffer *buffer)</definition>
        <argsstring>)(unsigned shader_stage, unsigned slot, Sbuffer *buffer)</argsstring>
        <name>set_rwbuffer</name>
        <qualifiedname>D3dInterfaceTable::set_rwbuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="173" column="3" bodyfile="dag_interface_table.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a14024c9ce623601ee7874d3d49c7d9a0" prot="public" static="no" mutable="no">
        <type><ref refid="classSbuffer" kindref="compound">Sbuffer</ref> *(*</type>
        <definition>Sbuffer *(* D3dInterfaceTable::create_vb_0) (int size_bytes, int flags, const char *name)</definition>
        <argsstring>)(int size_bytes, int flags, const char *name)</argsstring>
        <name>create_vb_0</name>
        <qualifiedname>D3dInterfaceTable::create_vb_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="175" column="3" bodyfile="dag_interface_table.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1abb292a1f382d2c8c93952eadb6d1627d" prot="public" static="no" mutable="no">
        <type><ref refid="classSbuffer" kindref="compound">Sbuffer</ref> *(*</type>
        <definition>Sbuffer *(* D3dInterfaceTable::create_ib) (int size_bytes, int flags, const char *stat_name)</definition>
        <argsstring>)(int size_bytes, int flags, const char *stat_name)</argsstring>
        <name>create_ib</name>
        <qualifiedname>D3dInterfaceTable::create_ib</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="176" column="3" bodyfile="dag_interface_table.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ac5bdb41c88416598605aef92a6325267" prot="public" static="no" mutable="no">
        <type><ref refid="classSbuffer" kindref="compound">Sbuffer</ref> *(*</type>
        <definition>Sbuffer *(* D3dInterfaceTable::create_sbuffer) (int struct_size, int elements, unsigned flags, unsigned texfmt, const char *)</definition>
        <argsstring>)(int struct_size, int elements, unsigned flags, unsigned texfmt, const char *)</argsstring>
        <name>create_sbuffer</name>
        <qualifiedname>D3dInterfaceTable::create_sbuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="177" column="3" bodyfile="dag_interface_table.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1af1c32b3bd45c6b71748b1c2fee4efd72" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_depth_0) (BaseTexture *, DepthAccess)</definition>
        <argsstring>)(BaseTexture *, DepthAccess)</argsstring>
        <name>set_depth_0</name>
        <qualifiedname>D3dInterfaceTable::set_depth_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="179" column="3" bodyfile="dag_interface_table.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a8179df50f7d851564fe9be8c891341d7" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_depth_1) (BaseTexture *tex, int layer, DepthAccess)</definition>
        <argsstring>)(BaseTexture *tex, int layer, DepthAccess)</argsstring>
        <name>set_depth_1</name>
        <qualifiedname>D3dInterfaceTable::set_depth_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="180" column="3" bodyfile="dag_interface_table.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a4ce8176c9053e0c471426bbe26496945" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_render_target_0) ()</definition>
        <argsstring>)()</argsstring>
        <name>set_render_target_0</name>
        <qualifiedname>D3dInterfaceTable::set_render_target_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="181" column="3" bodyfile="dag_interface_table.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1af3cdea4bc9eb72fa54ba755ef1011e00" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_render_target_1) (int rt_index, BaseTexture *, uint8_t level)</definition>
        <argsstring>)(int rt_index, BaseTexture *, uint8_t level)</argsstring>
        <name>set_render_target_1</name>
        <qualifiedname>D3dInterfaceTable::set_render_target_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="182" column="3" bodyfile="dag_interface_table.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a2448d9ecb024eafdb3e079f9be362c1f" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_render_target_2) (int rt_index, BaseTexture *, int fc, uint8_t level)</definition>
        <argsstring>)(int rt_index, BaseTexture *, int fc, uint8_t level)</argsstring>
        <name>set_render_target_2</name>
        <qualifiedname>D3dInterfaceTable::set_render_target_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="183" column="3" bodyfile="dag_interface_table.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aacf2091b99dd98e88ff04e944968f68d" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_render_target_3) (const Driver3dRenderTarget &amp;rt)</definition>
        <argsstring>)(const Driver3dRenderTarget &amp;rt)</argsstring>
        <name>set_render_target_3</name>
        <qualifiedname>D3dInterfaceTable::set_render_target_3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="184" column="3" bodyfile="dag_interface_table.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ac2f39e2a0f38290cd42e52022cb4bbf6" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::get_render_target) (Driver3dRenderTarget &amp;out_rt)</definition>
        <argsstring>)(Driver3dRenderTarget &amp;out_rt)</argsstring>
        <name>get_render_target</name>
        <qualifiedname>D3dInterfaceTable::get_render_target</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="185" column="3" bodyfile="dag_interface_table.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aa8c96a25deda2456b6504bd2565c0560" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::get_target_size) (int &amp;w, int &amp;h)</definition>
        <argsstring>)(int &amp;w, int &amp;h)</argsstring>
        <name>get_target_size</name>
        <qualifiedname>D3dInterfaceTable::get_target_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="186" column="3" bodyfile="dag_interface_table.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a47a11cc774f7ef40a0162747cab1be66" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::get_render_target_size) (int &amp;w, int &amp;h, BaseTexture *rt_tex, uint8_t level)</definition>
        <argsstring>)(int &amp;w, int &amp;h, BaseTexture *rt_tex, uint8_t level)</argsstring>
        <name>get_render_target_size</name>
        <qualifiedname>D3dInterfaceTable::get_render_target_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="187" column="3" bodyfile="dag_interface_table.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a2c77f3cac328859bd82e22dee3656c19" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::set_variable_rate_shading) (unsigned rate_x, unsigned rate_y, VariableRateShadingCombiner vertex_combiner, VariableRateShadingCombiner pixel_combiner)</definition>
        <argsstring>)(unsigned rate_x, unsigned rate_y, VariableRateShadingCombiner vertex_combiner, VariableRateShadingCombiner pixel_combiner)</argsstring>
        <name>set_variable_rate_shading</name>
        <qualifiedname>D3dInterfaceTable::set_variable_rate_shading</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="188" column="3" bodyfile="dag_interface_table.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a10801594e42321974663d1e0ddcff7df" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::set_variable_rate_shading_texture) (BaseTexture *rate_texture)</definition>
        <argsstring>)(BaseTexture *rate_texture)</argsstring>
        <name>set_variable_rate_shading_texture</name>
        <qualifiedname>D3dInterfaceTable::set_variable_rate_shading_texture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="190" column="3" bodyfile="dag_interface_table.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a2dc7ce4667028f99b1da94d52e425971" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::set_stream_output_buffer) (int slot, const StreamOutputBufferSetup &amp;buffer)</definition>
        <argsstring>)(int slot, const StreamOutputBufferSetup &amp;buffer)</argsstring>
        <name>set_stream_output_buffer</name>
        <qualifiedname>D3dInterfaceTable::set_stream_output_buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="191" column="3" bodyfile="dag_interface_table.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a5fa330a4acb622fc6b16ff555872154c" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::settm_0) (int which, const Matrix44 *tm)</definition>
        <argsstring>)(int which, const Matrix44 *tm)</argsstring>
        <name>settm_0</name>
        <qualifiedname>D3dInterfaceTable::settm_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="193" column="3" bodyfile="dag_interface_table.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a87aa64e3d39a93fd7fefd28fcc64740a" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::settm_1) (int which, const TMatrix &amp;tm)</definition>
        <argsstring>)(int which, const TMatrix &amp;tm)</argsstring>
        <name>settm_1</name>
        <qualifiedname>D3dInterfaceTable::settm_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="194" column="3" bodyfile="dag_interface_table.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ada8e25aa37649f698ee0456a7b2777e7" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::settm_2) (int which, const mat44f &amp;tm)</definition>
        <argsstring>)(int which, const mat44f &amp;tm)</argsstring>
        <name>settm_2</name>
        <qualifiedname>D3dInterfaceTable::settm_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="195" column="3" bodyfile="dag_interface_table.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a9777513cea84258543cb503ed4880dfd" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::gettm_0) (int which, Matrix44 *out_tm)</definition>
        <argsstring>)(int which, Matrix44 *out_tm)</argsstring>
        <name>gettm_0</name>
        <qualifiedname>D3dInterfaceTable::gettm_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="196" column="3" bodyfile="dag_interface_table.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a8b208929ee5f694babe5ea77df3dd2e5" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::gettm_1) (int which, TMatrix &amp;out_tm)</definition>
        <argsstring>)(int which, TMatrix &amp;out_tm)</argsstring>
        <name>gettm_1</name>
        <qualifiedname>D3dInterfaceTable::gettm_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="197" column="3" bodyfile="dag_interface_table.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aac2780d58b940375ec06986f8e7524b0" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::gettm_2) (int which, mat44f &amp;out_tm)</definition>
        <argsstring>)(int which, mat44f &amp;out_tm)</argsstring>
        <name>gettm_2</name>
        <qualifiedname>D3dInterfaceTable::gettm_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="198" column="3" bodyfile="dag_interface_table.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ac4d25031f3325bd06dd1b274b1a6f8ee" prot="public" static="no" mutable="no">
        <type>const mat44f &amp;(*</type>
        <definition>const mat44f &amp;(* D3dInterfaceTable::gettm_cref) (int which)</definition>
        <argsstring>)(int which)</argsstring>
        <name>gettm_cref</name>
        <qualifiedname>D3dInterfaceTable::gettm_cref</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="199" column="9" bodyfile="dag_interface_table.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a34ce8d81be7b0604ccd623d22b9b1029" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::getm2vtm) (TMatrix &amp;out_m2v)</definition>
        <argsstring>)(TMatrix &amp;out_m2v)</argsstring>
        <name>getm2vtm</name>
        <qualifiedname>D3dInterfaceTable::getm2vtm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="200" column="3" bodyfile="dag_interface_table.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a17a9eaa05783bfe17616079efa4fd792" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::setglobtm) (Matrix44 &amp;m)</definition>
        <argsstring>)(Matrix44 &amp;m)</argsstring>
        <name>setglobtm</name>
        <qualifiedname>D3dInterfaceTable::setglobtm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="201" column="3" bodyfile="dag_interface_table.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1af44d5bb0c5bcfe6e9d0da98de324823f" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::getglobtm) (Matrix44 &amp;)</definition>
        <argsstring>)(Matrix44 &amp;)</argsstring>
        <name>getglobtm</name>
        <qualifiedname>D3dInterfaceTable::getglobtm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="202" column="3" bodyfile="dag_interface_table.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a71f137b8b3a8d2ac82327a27f974926f" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::setpersp) (const Driver3dPerspective &amp;, TMatrix4 *)</definition>
        <argsstring>)(const Driver3dPerspective &amp;, TMatrix4 *)</argsstring>
        <name>setpersp</name>
        <qualifiedname>D3dInterfaceTable::setpersp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="203" column="3" bodyfile="dag_interface_table.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ab34232e43817184d0890c5c25f16e2ff" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::getpersp) (Driver3dPerspective &amp;)</definition>
        <argsstring>)(Driver3dPerspective &amp;)</argsstring>
        <name>getpersp</name>
        <qualifiedname>D3dInterfaceTable::getpersp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="204" column="3" bodyfile="dag_interface_table.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a1939b28e1f2665e9b3c584a340682c74" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::validatepersp) (const Driver3dPerspective &amp;)</definition>
        <argsstring>)(const Driver3dPerspective &amp;)</argsstring>
        <name>validatepersp</name>
        <qualifiedname>D3dInterfaceTable::validatepersp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="205" column="3" bodyfile="dag_interface_table.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1af5e481a20113b484069a07b374a3e721" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::calcproj_0) (const Driver3dPerspective &amp;, TMatrix4 &amp;)</definition>
        <argsstring>)(const Driver3dPerspective &amp;, TMatrix4 &amp;)</argsstring>
        <name>calcproj_0</name>
        <qualifiedname>D3dInterfaceTable::calcproj_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="206" column="3" bodyfile="dag_interface_table.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ab538606e1e6b93f8c9b7077e02b681a3" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::calcproj_1) (const Driver3dPerspective &amp;, mat44f &amp;)</definition>
        <argsstring>)(const Driver3dPerspective &amp;, mat44f &amp;)</argsstring>
        <name>calcproj_1</name>
        <qualifiedname>D3dInterfaceTable::calcproj_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="207" column="3" bodyfile="dag_interface_table.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a48bf2605fdfb2fab139829894b14d1e0" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::calcglobtm_0) (const mat44f &amp;, const mat44f &amp;, mat44f &amp;)</definition>
        <argsstring>)(const mat44f &amp;, const mat44f &amp;, mat44f &amp;)</argsstring>
        <name>calcglobtm_0</name>
        <qualifiedname>D3dInterfaceTable::calcglobtm_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="208" column="3" bodyfile="dag_interface_table.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a21393e63bde23d612237167964467575" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::calcglobtm_1) (const mat44f &amp;, const Driver3dPerspective &amp;, mat44f &amp;)</definition>
        <argsstring>)(const mat44f &amp;, const Driver3dPerspective &amp;, mat44f &amp;)</argsstring>
        <name>calcglobtm_1</name>
        <qualifiedname>D3dInterfaceTable::calcglobtm_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="209" column="3" bodyfile="dag_interface_table.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a6a572b7e8d5060d41e8828d2c1bb81e7" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::calcglobtm_2) (const TMatrix &amp;, const TMatrix4 &amp;, TMatrix4 &amp;)</definition>
        <argsstring>)(const TMatrix &amp;, const TMatrix4 &amp;, TMatrix4 &amp;)</argsstring>
        <name>calcglobtm_2</name>
        <qualifiedname>D3dInterfaceTable::calcglobtm_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="210" column="3" bodyfile="dag_interface_table.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a539204dd9fcaddacf9785198bb53ba02" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::calcglobtm_3) (const TMatrix &amp;, const Driver3dPerspective &amp;, TMatrix4 &amp;)</definition>
        <argsstring>)(const TMatrix &amp;, const Driver3dPerspective &amp;, TMatrix4 &amp;)</argsstring>
        <name>calcglobtm_3</name>
        <qualifiedname>D3dInterfaceTable::calcglobtm_3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="211" column="3" bodyfile="dag_interface_table.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a060365e3665968f9898c9a10df093e98" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::getglobtm_vec) (mat44f &amp;)</definition>
        <argsstring>)(mat44f &amp;)</argsstring>
        <name>getglobtm_vec</name>
        <qualifiedname>D3dInterfaceTable::getglobtm_vec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="213" column="3" bodyfile="dag_interface_table.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aa1422c07e9dd9b90bc47e1bbee28b6b1" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::setglobtm_vec) (const mat44f &amp;)</definition>
        <argsstring>)(const mat44f &amp;)</argsstring>
        <name>setglobtm_vec</name>
        <qualifiedname>D3dInterfaceTable::setglobtm_vec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="214" column="3" bodyfile="dag_interface_table.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ab96d5259c7ae94dd0189ade3ebfd9933" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::setscissor) (int x, int y, int w, int h)</definition>
        <argsstring>)(int x, int y, int w, int h)</argsstring>
        <name>setscissor</name>
        <qualifiedname>D3dInterfaceTable::setscissor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="216" column="3" bodyfile="dag_interface_table.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aa857770176ffbba37b8b923b386f3fb3" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::setscissors) (dag::ConstSpan&lt; ScissorRect &gt; scissorRects)</definition>
        <argsstring>)(dag::ConstSpan&lt; ScissorRect &gt; scissorRects)</argsstring>
        <name>setscissors</name>
        <qualifiedname>D3dInterfaceTable::setscissors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="217" column="3" bodyfile="dag_interface_table.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1affbb82c7b94389a9042e2cca1378fad4" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::setview) (int x, int y, int w, int h, float minz, float maxz)</definition>
        <argsstring>)(int x, int y, int w, int h, float minz, float maxz)</argsstring>
        <name>setview</name>
        <qualifiedname>D3dInterfaceTable::setview</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="219" column="3" bodyfile="dag_interface_table.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a98ed09de46f0608d5225760c4bf690db" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::setviews) (dag::ConstSpan&lt; Viewport &gt; viewports)</definition>
        <argsstring>)(dag::ConstSpan&lt; Viewport &gt; viewports)</argsstring>
        <name>setviews</name>
        <qualifiedname>D3dInterfaceTable::setviews</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="220" column="3" bodyfile="dag_interface_table.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a2a23b7795a38408f2911bbda5cd54f80" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::getview) (int &amp;x, int &amp;y, int &amp;w, int &amp;h, float &amp;minz, float &amp;maxz)</definition>
        <argsstring>)(int &amp;x, int &amp;y, int &amp;w, int &amp;h, float &amp;minz, float &amp;maxz)</argsstring>
        <name>getview</name>
        <qualifiedname>D3dInterfaceTable::getview</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="221" column="3" bodyfile="dag_interface_table.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a8e56770512f6f8a5ade72f9a4062714d" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::clearview) (int what, E3DCOLOR, float z, uint32_t stencil)</definition>
        <argsstring>)(int what, E3DCOLOR, float z, uint32_t stencil)</argsstring>
        <name>clearview</name>
        <qualifiedname>D3dInterfaceTable::clearview</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="222" column="3" bodyfile="dag_interface_table.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ae15230bbdaf6f49dc11937ca5523d132" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::update_screen) (uint32_t frame_id, bool app_active)</definition>
        <argsstring>)(uint32_t frame_id, bool app_active)</argsstring>
        <name>update_screen</name>
        <qualifiedname>D3dInterfaceTable::update_screen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="224" column="3" bodyfile="dag_interface_table.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a147b28322ecab065fa67a30c47eb9fd0" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::wait_for_async_present) (bool force)</definition>
        <argsstring>)(bool force)</argsstring>
        <name>wait_for_async_present</name>
        <qualifiedname>D3dInterfaceTable::wait_for_async_present</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="225" column="3" bodyfile="dag_interface_table.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1abafa7eebea5905ec6fee8dd009597a0a" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::begin_frame) (uint32_t frame_id, bool allow_wait)</definition>
        <argsstring>)(uint32_t frame_id, bool allow_wait)</argsstring>
        <name>begin_frame</name>
        <qualifiedname>D3dInterfaceTable::begin_frame</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="226" column="3" bodyfile="dag_interface_table.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aa7569ccccc7e83f8a79e1b0b50d83d13" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::mark_simulation_start) (uint32_t frame_id)</definition>
        <argsstring>)(uint32_t frame_id)</argsstring>
        <name>mark_simulation_start</name>
        <qualifiedname>D3dInterfaceTable::mark_simulation_start</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="227" column="3" bodyfile="dag_interface_table.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1acc3157e6708e8a95825216be30bf3e87" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::mark_simulation_end) (uint32_t frame_id)</definition>
        <argsstring>)(uint32_t frame_id)</argsstring>
        <name>mark_simulation_end</name>
        <qualifiedname>D3dInterfaceTable::mark_simulation_end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="228" column="3" bodyfile="dag_interface_table.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a7a6be657946abcda41a5c5668a1dda21" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::mark_render_start) (uint32_t frame_id)</definition>
        <argsstring>)(uint32_t frame_id)</argsstring>
        <name>mark_render_start</name>
        <qualifiedname>D3dInterfaceTable::mark_render_start</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="229" column="3" bodyfile="dag_interface_table.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a795053907dd62e59a05217e4b7316e02" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::mark_render_end) (uint32_t frame_id)</definition>
        <argsstring>)(uint32_t frame_id)</argsstring>
        <name>mark_render_end</name>
        <qualifiedname>D3dInterfaceTable::mark_render_end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="230" column="3" bodyfile="dag_interface_table.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a61661b4a81b817cf5ced0f17028ecccf" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::setvsrc_ex) (int stream, Sbuffer *vb, int ofs, int stride_bytes)</definition>
        <argsstring>)(int stream, Sbuffer *vb, int ofs, int stride_bytes)</argsstring>
        <name>setvsrc_ex</name>
        <qualifiedname>D3dInterfaceTable::setvsrc_ex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="232" column="3" bodyfile="dag_interface_table.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aae383291f0390023ef09bbd3f8f0a6c3" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::setind) (Sbuffer *ib)</definition>
        <argsstring>)(Sbuffer *ib)</argsstring>
        <name>setind</name>
        <qualifiedname>D3dInterfaceTable::setind</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="233" column="3" bodyfile="dag_interface_table.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a60a67a040b9c9633629be4095c236c74" prot="public" static="no" mutable="no">
        <type><ref refid="dag__consts_8h_1a9f53c0fed6dcdbc4173e71bb186bab79" kindref="member">VDECL</ref>(*</type>
        <definition>VDECL(* D3dInterfaceTable::create_vdecl) (VSDTYPE *vsd)</definition>
        <argsstring>)(VSDTYPE *vsd)</argsstring>
        <name>create_vdecl</name>
        <qualifiedname>D3dInterfaceTable::create_vdecl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="234" column="3" bodyfile="dag_interface_table.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a36b6cc6da52774149bffcdc012c401c6" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::delete_vdecl) (VDECL vdecl)</definition>
        <argsstring>)(VDECL vdecl)</argsstring>
        <name>delete_vdecl</name>
        <qualifiedname>D3dInterfaceTable::delete_vdecl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="235" column="3" bodyfile="dag_interface_table.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a3ac9ba433ea2009863700ac2666a8cef" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::setvdecl) (VDECL vdecl)</definition>
        <argsstring>)(VDECL vdecl)</argsstring>
        <name>setvdecl</name>
        <qualifiedname>D3dInterfaceTable::setvdecl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="236" column="3" bodyfile="dag_interface_table.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aaf5183c20604f1c1d1e78e0b50fa2ee5" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::draw_base) (int type, int start, int numprim, uint32_t num_instances, uint32_t start_instance)</definition>
        <argsstring>)(int type, int start, int numprim, uint32_t num_instances, uint32_t start_instance)</argsstring>
        <name>draw_base</name>
        <qualifiedname>D3dInterfaceTable::draw_base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="238" column="3" bodyfile="dag_interface_table.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ac81f16400510c4ef46ad9c8d63e6d2e7" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::drawind_base) (int type, int startind, int numprim, int base_vertex, uint32_t num_instances, uint32_t start_instance)</definition>
        <argsstring>)(int type, int startind, int numprim, int base_vertex, uint32_t num_instances, uint32_t start_instance)</argsstring>
        <name>drawind_base</name>
        <qualifiedname>D3dInterfaceTable::drawind_base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="239" column="3" bodyfile="dag_interface_table.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a0b7be2a40f6c298f40891037d3f4016d" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::draw_up) (int type, int numprim, const void *ptr, int stride_bytes)</definition>
        <argsstring>)(int type, int numprim, const void *ptr, int stride_bytes)</argsstring>
        <name>draw_up</name>
        <qualifiedname>D3dInterfaceTable::draw_up</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="240" column="3" bodyfile="dag_interface_table.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1afc8c09b48da587aa18fe20361bb71bce" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::drawind_up) (int type, int minvert, int numvert, int numprim, const uint16_t *ind, const void *ptr, int stride_bytes)</definition>
        <argsstring>)(int type, int minvert, int numvert, int numprim, const uint16_t *ind, const void *ptr, int stride_bytes)</argsstring>
        <name>drawind_up</name>
        <qualifiedname>D3dInterfaceTable::drawind_up</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="241" column="3" bodyfile="dag_interface_table.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a3c948a20bbddeb5368c7bab5f1fde210" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::draw_indirect) (int type, Sbuffer *buffer, uint32_t offset)</definition>
        <argsstring>)(int type, Sbuffer *buffer, uint32_t offset)</argsstring>
        <name>draw_indirect</name>
        <qualifiedname>D3dInterfaceTable::draw_indirect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="243" column="3" bodyfile="dag_interface_table.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aeb683e0d9f847c46907ba56b70c73be6" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::draw_indexed_indirect) (int type, Sbuffer *buffer, uint32_t offset)</definition>
        <argsstring>)(int type, Sbuffer *buffer, uint32_t offset)</argsstring>
        <name>draw_indexed_indirect</name>
        <qualifiedname>D3dInterfaceTable::draw_indexed_indirect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="244" column="3" bodyfile="dag_interface_table.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1afb5700fd79bb7f8c966d66da06d6fa09" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::multi_draw_indirect) (int prim_type, Sbuffer *args, uint32_t draw_count, uint32_t stride_bytes, uint32_t byte_offset)</definition>
        <argsstring>)(int prim_type, Sbuffer *args, uint32_t draw_count, uint32_t stride_bytes, uint32_t byte_offset)</argsstring>
        <name>multi_draw_indirect</name>
        <qualifiedname>D3dInterfaceTable::multi_draw_indirect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="245" column="3" bodyfile="dag_interface_table.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a171645a66cb2aecd4a04cfae8f6d576f" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::multi_draw_indexed_indirect) (int prim_type, Sbuffer *args, uint32_t draw_count, uint32_t stride_bytes, uint32_t byte_offset)</definition>
        <argsstring>)(int prim_type, Sbuffer *args, uint32_t draw_count, uint32_t stride_bytes, uint32_t byte_offset)</argsstring>
        <name>multi_draw_indexed_indirect</name>
        <qualifiedname>D3dInterfaceTable::multi_draw_indexed_indirect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="246" column="3" bodyfile="dag_interface_table.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a1cf2a2707d68bea69a01ae4b0cfec1f5" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::dispatch) (uint32_t thread_group_x, uint32_t thread_group_y, uint32_t thread_group_z, GpuPipeline gpu_pipeline)</definition>
        <argsstring>)(uint32_t thread_group_x, uint32_t thread_group_y, uint32_t thread_group_z, GpuPipeline gpu_pipeline)</argsstring>
        <name>dispatch</name>
        <qualifiedname>D3dInterfaceTable::dispatch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="248" column="3" bodyfile="dag_interface_table.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ac18529d70f005a82b57286e24af17799" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::dispatch_indirect) (Sbuffer *buffer, uint32_t offset, GpuPipeline gpu_pipeline)</definition>
        <argsstring>)(Sbuffer *buffer, uint32_t offset, GpuPipeline gpu_pipeline)</argsstring>
        <name>dispatch_indirect</name>
        <qualifiedname>D3dInterfaceTable::dispatch_indirect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="249" column="3" bodyfile="dag_interface_table.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a879c0ea8f9a4d14c205609c878c5f120" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::dispatch_mesh) (uint32_t thread_group_x, uint32_t thread_group_y, uint32_t thread_group_z)</definition>
        <argsstring>)(uint32_t thread_group_x, uint32_t thread_group_y, uint32_t thread_group_z)</argsstring>
        <name>dispatch_mesh</name>
        <qualifiedname>D3dInterfaceTable::dispatch_mesh</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="250" column="3" bodyfile="dag_interface_table.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a4c0d3cc6b220244d6f9e6c752ca06c5b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::dispatch_mesh_indirect) (Sbuffer *args, uint32_t dispatch_count, uint32_t stride_bytes, uint32_t byte_offset)</definition>
        <argsstring>)(Sbuffer *args, uint32_t dispatch_count, uint32_t stride_bytes, uint32_t byte_offset)</argsstring>
        <name>dispatch_mesh_indirect</name>
        <qualifiedname>D3dInterfaceTable::dispatch_mesh_indirect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="251" column="3" bodyfile="dag_interface_table.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ab4acabc199d6e7c254a75d67cb239e76" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::dispatch_mesh_indirect_count) (Sbuffer *args, uint32_t args_stride_bytes, uint32_t args_byte_offset, Sbuffer *count, uint32_t count_byte_offset, uint32_t max_count)</definition>
        <argsstring>)(Sbuffer *args, uint32_t args_stride_bytes, uint32_t args_byte_offset, Sbuffer *count, uint32_t count_byte_offset, uint32_t max_count)</argsstring>
        <name>dispatch_mesh_indirect_count</name>
        <qualifiedname>D3dInterfaceTable::dispatch_mesh_indirect_count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="252" column="3" bodyfile="dag_interface_table.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a2c2c38ff78b2511c0673b3a00dd4f406" prot="public" static="no" mutable="no">
        <type><ref refid="dag__consts_8h_1adb13938840a9c78154bd2e7ab0a6b751" kindref="member">GPUFENCEHANDLE</ref>(*</type>
        <definition>GPUFENCEHANDLE(* D3dInterfaceTable::insert_fence) (GpuPipeline gpu_pipeline)</definition>
        <argsstring>)(GpuPipeline gpu_pipeline)</argsstring>
        <name>insert_fence</name>
        <qualifiedname>D3dInterfaceTable::insert_fence</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="255" column="3" bodyfile="dag_interface_table.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a2fd3967ac1957216262f78adc50a15d0" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::insert_wait_on_fence) (GPUFENCEHANDLE &amp;fence, GpuPipeline gpu_pipeline)</definition>
        <argsstring>)(GPUFENCEHANDLE &amp;fence, GpuPipeline gpu_pipeline)</argsstring>
        <name>insert_wait_on_fence</name>
        <qualifiedname>D3dInterfaceTable::insert_wait_on_fence</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="256" column="3" bodyfile="dag_interface_table.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a56e2e4ec3a7729928c2bc73322881edd" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceshaders_1a18d95bd7603b031ab4919fb4e4ad8022" kindref="member">shaders::DriverRenderStateId</ref>(*</type>
        <definition>shaders::DriverRenderStateId(* D3dInterfaceTable::create_render_state) (const shaders::RenderState &amp;)</definition>
        <argsstring>)(const shaders::RenderState &amp;)</argsstring>
        <name>create_render_state</name>
        <qualifiedname>D3dInterfaceTable::create_render_state</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="258" column="3" bodyfile="dag_interface_table.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1af42f132a53fee5f829addd17b5d9673a" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_render_state) (shaders::DriverRenderStateId)</definition>
        <argsstring>)(shaders::DriverRenderStateId)</argsstring>
        <name>set_render_state</name>
        <qualifiedname>D3dInterfaceTable::set_render_state</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="259" column="3" bodyfile="dag_interface_table.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ae28bf03152e773593e38e369d4f9ffbe" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::clear_render_states) ()</definition>
        <argsstring>)()</argsstring>
        <name>clear_render_states</name>
        <qualifiedname>D3dInterfaceTable::clear_render_states</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="260" column="3" bodyfile="dag_interface_table.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a40326738fa832977f923a193ee623527" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_blend_factor) (E3DCOLOR color)</definition>
        <argsstring>)(E3DCOLOR color)</argsstring>
        <name>set_blend_factor</name>
        <qualifiedname>D3dInterfaceTable::set_blend_factor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="262" column="3" bodyfile="dag_interface_table.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1af4bd659c632e46d84834669e9f0bee5d" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::setstencil) (uint32_t ref)</definition>
        <argsstring>)(uint32_t ref)</argsstring>
        <name>setstencil</name>
        <qualifiedname>D3dInterfaceTable::setstencil</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="263" column="3" bodyfile="dag_interface_table.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a6c169a1fd0147132fb443330c8b9c400" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::setwire) (bool in)</definition>
        <argsstring>)(bool in)</argsstring>
        <name>setwire</name>
        <qualifiedname>D3dInterfaceTable::setwire</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="265" column="3" bodyfile="dag_interface_table.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ac199e5e2da6f48835b27797ed0f17cb7" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_srgb_backbuffer_write) (bool on)</definition>
        <argsstring>)(bool on)</argsstring>
        <name>set_srgb_backbuffer_write</name>
        <qualifiedname>D3dInterfaceTable::set_srgb_backbuffer_write</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="267" column="3" bodyfile="dag_interface_table.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a6e1b0106b03e0f1e90eaabc0b126d2e8" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::setgamma) (float power)</definition>
        <argsstring>)(float power)</argsstring>
        <name>setgamma</name>
        <qualifiedname>D3dInterfaceTable::setgamma</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="269" column="3" bodyfile="dag_interface_table.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a979602d22ac134d8b2dfd2e175afd04c" prot="public" static="no" mutable="no">
        <type>float(*</type>
        <definition>float(* D3dInterfaceTable::get_screen_aspect_ratio) ()</definition>
        <argsstring>)()</argsstring>
        <name>get_screen_aspect_ratio</name>
        <qualifiedname>D3dInterfaceTable::get_screen_aspect_ratio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="271" column="3" bodyfile="dag_interface_table.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1abbb388d5a55d2b2328ac69c0b2958f21" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::change_screen_aspect_ratio) (float ar)</definition>
        <argsstring>)(float ar)</argsstring>
        <name>change_screen_aspect_ratio</name>
        <qualifiedname>D3dInterfaceTable::change_screen_aspect_ratio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="272" column="3" bodyfile="dag_interface_table.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a6c8d771a543621f9f571e940046c17db" prot="public" static="no" mutable="no">
        <type>void *(*</type>
        <definition>void *(* D3dInterfaceTable::fast_capture_screen) (int &amp;w, int &amp;h, int &amp;stride_bytes, int &amp;format)</definition>
        <argsstring>)(int &amp;w, int &amp;h, int &amp;stride_bytes, int &amp;format)</argsstring>
        <name>fast_capture_screen</name>
        <qualifiedname>D3dInterfaceTable::fast_capture_screen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="274" column="3" bodyfile="dag_interface_table.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a5bc2feec89a659fb1aaf59220da3f50b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::end_fast_capture_screen) ()</definition>
        <argsstring>)()</argsstring>
        <name>end_fast_capture_screen</name>
        <qualifiedname>D3dInterfaceTable::end_fast_capture_screen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="275" column="3" bodyfile="dag_interface_table.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ac4c01f511fdb9a755224de5e759f1dfc" prot="public" static="no" mutable="no">
        <type>TexPixel32 *(*</type>
        <definition>TexPixel32 *(* D3dInterfaceTable::capture_screen) (int &amp;w, int &amp;h, int &amp;stride_bytes)</definition>
        <argsstring>)(int &amp;w, int &amp;h, int &amp;stride_bytes)</argsstring>
        <name>capture_screen</name>
        <qualifiedname>D3dInterfaceTable::capture_screen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="277" column="3" bodyfile="dag_interface_table.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a042a7857c1ed757ad1fb3bff1e31c625" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::release_capture_buffer) ()</definition>
        <argsstring>)()</argsstring>
        <name>release_capture_buffer</name>
        <qualifiedname>D3dInterfaceTable::release_capture_buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="278" column="3" bodyfile="dag_interface_table.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1abdbfff4bbeba9af0a1837f8e040606fb" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::get_screen_size) (int &amp;w, int &amp;h)</definition>
        <argsstring>)(int &amp;w, int &amp;h)</argsstring>
        <name>get_screen_size</name>
        <qualifiedname>D3dInterfaceTable::get_screen_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="280" column="3" bodyfile="dag_interface_table.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1adc75133066434abc79ec69d082c1b634" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_depth_bounds) (float zmn, float zmx)</definition>
        <argsstring>)(float zmn, float zmx)</argsstring>
        <name>set_depth_bounds</name>
        <qualifiedname>D3dInterfaceTable::set_depth_bounds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="282" column="3" bodyfile="dag_interface_table.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a8c495367966bfa7a96e57c6c56420936" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* D3dInterfaceTable::create_predicate) ()</definition>
        <argsstring>)()</argsstring>
        <name>create_predicate</name>
        <qualifiedname>D3dInterfaceTable::create_predicate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="284" column="3" bodyfile="dag_interface_table.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a0bdf2edaa5370b8cefd71e2b457873ed" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::free_predicate) (int id)</definition>
        <argsstring>)(int id)</argsstring>
        <name>free_predicate</name>
        <qualifiedname>D3dInterfaceTable::free_predicate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="285" column="3" bodyfile="dag_interface_table.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a1997eb27e4bb44ed63a9b2cf1ec63608" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::begin_survey) (int index)</definition>
        <argsstring>)(int index)</argsstring>
        <name>begin_survey</name>
        <qualifiedname>D3dInterfaceTable::begin_survey</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="287" column="3" bodyfile="dag_interface_table.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a273fd8e8a8a709cf9bfe74520f5cb430" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::end_survey) (int index)</definition>
        <argsstring>)(int index)</argsstring>
        <name>end_survey</name>
        <qualifiedname>D3dInterfaceTable::end_survey</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="288" column="3" bodyfile="dag_interface_table.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a8710a39c864b5b50b3de24d7beafa081" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::begin_conditional_render) (int index)</definition>
        <argsstring>)(int index)</argsstring>
        <name>begin_conditional_render</name>
        <qualifiedname>D3dInterfaceTable::begin_conditional_render</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="290" column="3" bodyfile="dag_interface_table.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a2e4b5a36a72c3fa1c7f9262997841c05" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::end_conditional_render) (int id)</definition>
        <argsstring>)(int id)</argsstring>
        <name>end_conditional_render</name>
        <qualifiedname>D3dInterfaceTable::end_conditional_render</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="291" column="3" bodyfile="dag_interface_table.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1acae82f337bdbbe687343dbd92be83f2c" prot="public" static="no" mutable="no">
        <type><ref refid="dag__consts_8h_1a9f53c0fed6dcdbc4173e71bb186bab79" kindref="member">VDECL</ref>(*</type>
        <definition>VDECL(* D3dInterfaceTable::get_program_vdecl) (PROGRAM p)</definition>
        <argsstring>)(PROGRAM p)</argsstring>
        <name>get_program_vdecl</name>
        <qualifiedname>D3dInterfaceTable::get_program_vdecl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="293" column="3" bodyfile="dag_interface_table.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a48fec14d101d614694376dac84a2b715" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::get_vrr_supported) ()</definition>
        <argsstring>)()</argsstring>
        <name>get_vrr_supported</name>
        <qualifiedname>D3dInterfaceTable::get_vrr_supported</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="295" column="3" bodyfile="dag_interface_table.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ad663596882c90cb5977e41d52975e35f" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::get_vsync_enabled) ()</definition>
        <argsstring>)()</argsstring>
        <name>get_vsync_enabled</name>
        <qualifiedname>D3dInterfaceTable::get_vsync_enabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="296" column="3" bodyfile="dag_interface_table.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ac38cf7c4705feb3eb7d7b2ab0a768a9d" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::enable_vsync) (bool enable)</definition>
        <argsstring>)(bool enable)</argsstring>
        <name>enable_vsync</name>
        <qualifiedname>D3dInterfaceTable::enable_vsync</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="297" column="3" bodyfile="dag_interface_table.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1abae5a85c31cf999a6ea5a15cc0a141b2" prot="public" static="no" mutable="no">
        <type><ref refid="namespaced3d_1ac319d128a742223a1955303d059922a9" kindref="member">d3d::EventQuery</ref> *(*</type>
        <definition>d3d::EventQuery *(* D3dInterfaceTable::create_event_query) ()</definition>
        <argsstring>)()</argsstring>
        <name>create_event_query</name>
        <qualifiedname>D3dInterfaceTable::create_event_query</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="299" column="3" bodyfile="dag_interface_table.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1af3734ad3c7def1174920f799642a42d0" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::release_event_query) (d3d::EventQuery *q)</definition>
        <argsstring>)(d3d::EventQuery *q)</argsstring>
        <name>release_event_query</name>
        <qualifiedname>D3dInterfaceTable::release_event_query</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="300" column="3" bodyfile="dag_interface_table.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a8408b6f2a90476ef965a042f0dbc7be2" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::issue_event_query) (d3d::EventQuery *q)</definition>
        <argsstring>)(d3d::EventQuery *q)</argsstring>
        <name>issue_event_query</name>
        <qualifiedname>D3dInterfaceTable::issue_event_query</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="301" column="3" bodyfile="dag_interface_table.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a3effb0a6f9e878b2c33dacf3cc739449" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::get_event_query_status) (d3d::EventQuery *q, bool force_flush)</definition>
        <argsstring>)(d3d::EventQuery *q, bool force_flush)</argsstring>
        <name>get_event_query_status</name>
        <qualifiedname>D3dInterfaceTable::get_event_query_status</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="302" column="3" bodyfile="dag_interface_table.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ab12fb497be652fd5e4c137cbd5469da7" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::set_present_wnd) (void *hwnd)</definition>
        <argsstring>)(void *hwnd)</argsstring>
        <name>set_present_wnd</name>
        <qualifiedname>D3dInterfaceTable::set_present_wnd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="304" column="3" bodyfile="dag_interface_table.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a51115b521e5766130eb40002bd81c629" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::can_render_to_window) ()</definition>
        <argsstring>)()</argsstring>
        <name>can_render_to_window</name>
        <qualifiedname>D3dInterfaceTable::can_render_to_window</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="306" column="3" bodyfile="dag_interface_table.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a0c7e578d51dde83111ef7779ab1be690" prot="public" static="no" mutable="no">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *(*</type>
        <definition>BaseTexture *(* D3dInterfaceTable::get_swapchain_for_window) (void *hwnd)</definition>
        <argsstring>)(void *hwnd)</argsstring>
        <name>get_swapchain_for_window</name>
        <qualifiedname>D3dInterfaceTable::get_swapchain_for_window</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="307" column="3" bodyfile="dag_interface_table.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1acd7eb80d9554263adb439720d7681f57" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::present_to_window) (void *hwnd)</definition>
        <argsstring>)(void *hwnd)</argsstring>
        <name>present_to_window</name>
        <qualifiedname>D3dInterfaceTable::present_to_window</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="308" column="3" bodyfile="dag_interface_table.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a6dcd638c00cffcf1402a5f05ec3efa8f" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::set_capture_full_frame_buffer) (bool ison)</definition>
        <argsstring>)(bool ison)</argsstring>
        <name>set_capture_full_frame_buffer</name>
        <qualifiedname>D3dInterfaceTable::set_capture_full_frame_buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="310" column="3" bodyfile="dag_interface_table.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a0662ff29c100ad169cb7932e60319738" prot="public" static="no" mutable="no">
        <type>unsigned(*</type>
        <definition>unsigned(* D3dInterfaceTable::get_texture_format) (const BaseTexture *tex)</definition>
        <argsstring>)(const BaseTexture *tex)</argsstring>
        <name>get_texture_format</name>
        <qualifiedname>D3dInterfaceTable::get_texture_format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="311" column="3" bodyfile="dag_interface_table.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a1649782e395114e5ebe78e4e4fb76841" prot="public" static="no" mutable="no">
        <type>const char *(*</type>
        <definition>const char *(* D3dInterfaceTable::get_texture_format_str) (const BaseTexture *tex)</definition>
        <argsstring>)(const BaseTexture *tex)</argsstring>
        <name>get_texture_format_str</name>
        <qualifiedname>D3dInterfaceTable::get_texture_format_str</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="312" column="9" bodyfile="dag_interface_table.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a00be226996877c8df97bb07d3352fead" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::get_video_modes_list) (Tab&lt; String &gt; &amp;list)</definition>
        <argsstring>)(Tab&lt; String &gt; &amp;list)</argsstring>
        <name>get_video_modes_list</name>
        <qualifiedname>D3dInterfaceTable::get_video_modes_list</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="313" column="3" bodyfile="dag_interface_table.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a283852bb27b59e7c2c80010b62d1da24" prot="public" static="no" mutable="no">
        <type><ref refid="dag__consts_8h_1af06818afc8cf42203df4d873886f23bc" kindref="member">PROGRAM</ref>(*</type>
        <definition>PROGRAM(* D3dInterfaceTable::get_debug_program) ()</definition>
        <argsstring>)()</argsstring>
        <name>get_debug_program</name>
        <qualifiedname>D3dInterfaceTable::get_debug_program</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="314" column="3" bodyfile="dag_interface_table.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ad0be6af6a16665ed118a54c4d03c9f44" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::beginEvent) (const char *s)</definition>
        <argsstring>)(const char *s)</argsstring>
        <name>beginEvent</name>
        <qualifiedname>D3dInterfaceTable::beginEvent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="315" column="3" bodyfile="dag_interface_table.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a1d5babd305d91c8d2c783be4f1ae96c4" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::endEvent) ()</definition>
        <argsstring>)()</argsstring>
        <name>endEvent</name>
        <qualifiedname>D3dInterfaceTable::endEvent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="316" column="3" bodyfile="dag_interface_table.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aa2f7409a4aa8879763b881ed5bf01c81" prot="public" static="no" mutable="no">
        <type><ref refid="dag__interface__table_8h_1a37ee2859ee04a3f5c750a5b5e3684c1d" kindref="member">Texture</ref> *(*</type>
        <definition>Texture *(* D3dInterfaceTable::get_backbuffer_tex) ()</definition>
        <argsstring>)()</argsstring>
        <name>get_backbuffer_tex</name>
        <qualifiedname>D3dInterfaceTable::get_backbuffer_tex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="318" column="3" bodyfile="dag_interface_table.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1acd01964b81cefd4f8382cc5cce7a7dac" prot="public" static="no" mutable="no">
        <type><ref refid="dag__interface__table_8h_1a37ee2859ee04a3f5c750a5b5e3684c1d" kindref="member">Texture</ref> *(*</type>
        <definition>Texture *(* D3dInterfaceTable::get_secondary_backbuffer_tex) ()</definition>
        <argsstring>)()</argsstring>
        <name>get_secondary_backbuffer_tex</name>
        <qualifiedname>D3dInterfaceTable::get_secondary_backbuffer_tex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="319" column="3" bodyfile="dag_interface_table.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aa704d9090811cf66ddb92c0cf6fe6544" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::resource_barrier) (const ResourceBarrierDesc &amp;desc, GpuPipeline gpu_pipeline)</definition>
        <argsstring>)(const ResourceBarrierDesc &amp;desc, GpuPipeline gpu_pipeline)</argsstring>
        <name>resource_barrier</name>
        <qualifiedname>D3dInterfaceTable::resource_barrier</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="323" column="3" bodyfile="dag_interface_table.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ad64ec087573a4dfc57e867841b8eab85" prot="public" static="no" mutable="no">
        <type>d3d::RenderPass *(*</type>
        <definition>d3d::RenderPass *(* D3dInterfaceTable::create_render_pass) (const RenderPassDesc &amp;rp_desc)</definition>
        <argsstring>)(const RenderPassDesc &amp;rp_desc)</argsstring>
        <name>create_render_pass</name>
        <qualifiedname>D3dInterfaceTable::create_render_pass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="325" column="3" bodyfile="dag_interface_table.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a408215fc567e0fe76ee4103033250f65" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::delete_render_pass) (d3d::RenderPass *rp)</definition>
        <argsstring>)(d3d::RenderPass *rp)</argsstring>
        <name>delete_render_pass</name>
        <qualifiedname>D3dInterfaceTable::delete_render_pass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="326" column="3" bodyfile="dag_interface_table.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a1cc6a828f8b28dba68b234ea67e7cf1f" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::begin_render_pass) (d3d::RenderPass *rp, const RenderPassArea area, const RenderPassTarget *targets)</definition>
        <argsstring>)(d3d::RenderPass *rp, const RenderPassArea area, const RenderPassTarget *targets)</argsstring>
        <name>begin_render_pass</name>
        <qualifiedname>D3dInterfaceTable::begin_render_pass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="328" column="3" bodyfile="dag_interface_table.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ad9a5ed59948e6747b1727a3336135914" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::next_subpass) ()</definition>
        <argsstring>)()</argsstring>
        <name>next_subpass</name>
        <qualifiedname>D3dInterfaceTable::next_subpass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="329" column="3" bodyfile="dag_interface_table.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1af8346ad590814c93d8da015d75d930bc" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::end_render_pass) ()</definition>
        <argsstring>)()</argsstring>
        <name>end_render_pass</name>
        <qualifiedname>D3dInterfaceTable::end_render_pass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="330" column="3" bodyfile="dag_interface_table.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a17fcb30847cfa95f9bd9a696cbb7103f" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::allow_render_pass_target_load) ()</definition>
        <argsstring>)()</argsstring>
        <name>allow_render_pass_target_load</name>
        <qualifiedname>D3dInterfaceTable::allow_render_pass_target_load</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="332" column="3" bodyfile="dag_interface_table.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ae589678db7ae8147646bd18f3f113811" prot="public" static="no" mutable="no">
        <type><ref refid="structResourceAllocationProperties" kindref="compound">ResourceAllocationProperties</ref>(*</type>
        <definition>ResourceAllocationProperties(* D3dInterfaceTable::get_resource_allocation_properties) (const ResourceDescription &amp;desc)</definition>
        <argsstring>)(const ResourceDescription &amp;desc)</argsstring>
        <name>get_resource_allocation_properties</name>
        <qualifiedname>D3dInterfaceTable::get_resource_allocation_properties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="334" column="3" bodyfile="dag_interface_table.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a6a3974575e40051f3da5caee782611f8" prot="public" static="no" mutable="no">
        <type>ResourceHeap *(*</type>
        <definition>ResourceHeap *(* D3dInterfaceTable::create_resource_heap) (ResourceHeapGroup *heap_group, size_t size, ResourceHeapCreateFlags flags)</definition>
        <argsstring>)(ResourceHeapGroup *heap_group, size_t size, ResourceHeapCreateFlags flags)</argsstring>
        <name>create_resource_heap</name>
        <qualifiedname>D3dInterfaceTable::create_resource_heap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="335" column="3" bodyfile="dag_interface_table.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1abbce115106e4bd0559f909e5805ebd46" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::destroy_resource_heap) (ResourceHeap *heap)</definition>
        <argsstring>)(ResourceHeap *heap)</argsstring>
        <name>destroy_resource_heap</name>
        <qualifiedname>D3dInterfaceTable::destroy_resource_heap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="336" column="3" bodyfile="dag_interface_table.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1abee3ababbfa87a5fef238918291c560f" prot="public" static="no" mutable="no">
        <type><ref refid="classSbuffer" kindref="compound">Sbuffer</ref> *(*</type>
        <definition>Sbuffer *(* D3dInterfaceTable::place_buffer_in_resource_heap) (ResourceHeap *heap, const ResourceDescription &amp;desc, size_t offset, const ResourceAllocationProperties &amp;alloc_info, const char *name)</definition>
        <argsstring>)(ResourceHeap *heap, const ResourceDescription &amp;desc, size_t offset, const ResourceAllocationProperties &amp;alloc_info, const char *name)</argsstring>
        <name>place_buffer_in_resource_heap</name>
        <qualifiedname>D3dInterfaceTable::place_buffer_in_resource_heap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="337" column="3" bodyfile="dag_interface_table.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ae08104f7be0b4c925e417e92a36f62f6" prot="public" static="no" mutable="no">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *(*</type>
        <definition>BaseTexture *(* D3dInterfaceTable::place_texture_in_resource_heap) (ResourceHeap *heap, const ResourceDescription &amp;desc, size_t offset, const ResourceAllocationProperties &amp;alloc_info, const char *name)</definition>
        <argsstring>)(ResourceHeap *heap, const ResourceDescription &amp;desc, size_t offset, const ResourceAllocationProperties &amp;alloc_info, const char *name)</argsstring>
        <name>place_texture_in_resource_heap</name>
        <qualifiedname>D3dInterfaceTable::place_texture_in_resource_heap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="339" column="3" bodyfile="dag_interface_table.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a0b143e95beba81cba919843fedfbe25a" prot="public" static="no" mutable="no">
        <type><ref refid="structResourceHeapGroupProperties" kindref="compound">ResourceHeapGroupProperties</ref>(*</type>
        <definition>ResourceHeapGroupProperties(* D3dInterfaceTable::get_resource_heap_group_properties) (ResourceHeapGroup *heap_group)</definition>
        <argsstring>)(ResourceHeapGroup *heap_group)</argsstring>
        <name>get_resource_heap_group_properties</name>
        <qualifiedname>D3dInterfaceTable::get_resource_heap_group_properties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="341" column="3" bodyfile="dag_interface_table.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a60c67fd543ee9d89630fb48ca5bbc24c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::map_tile_to_resource) (BaseTexture *tex, ResourceHeap *heap, const TileMapping *mapping, size_t mapping_count)</definition>
        <argsstring>)(BaseTexture *tex, ResourceHeap *heap, const TileMapping *mapping, size_t mapping_count)</argsstring>
        <name>map_tile_to_resource</name>
        <qualifiedname>D3dInterfaceTable::map_tile_to_resource</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="343" column="3" bodyfile="dag_interface_table.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a39ded51051034a068f4d1ad371a728b5" prot="public" static="no" mutable="no">
        <type><ref refid="structTextureTilingInfo" kindref="compound">TextureTilingInfo</ref>(*</type>
        <definition>TextureTilingInfo(* D3dInterfaceTable::get_texture_tiling_info) (BaseTexture *tex, size_t subresource)</definition>
        <argsstring>)(BaseTexture *tex, size_t subresource)</argsstring>
        <name>get_texture_tiling_info</name>
        <qualifiedname>D3dInterfaceTable::get_texture_tiling_info</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="345" column="3" bodyfile="dag_interface_table.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ac1f3203b1f04d9bce18654794d64849a" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::activate_buffer) (Sbuffer *buf, ResourceActivationAction action, GpuPipeline gpu_pipeline)</definition>
        <argsstring>)(Sbuffer *buf, ResourceActivationAction action, GpuPipeline gpu_pipeline)</argsstring>
        <name>activate_buffer</name>
        <qualifiedname>D3dInterfaceTable::activate_buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="347" column="3" bodyfile="dag_interface_table.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a7bfb16855ed9db39f177c38a4639b21d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::activate_texture) (BaseTexture *tex, ResourceActivationAction action, const ResourceClearValue &amp;value, GpuPipeline gpu_pipeline)</definition>
        <argsstring>)(BaseTexture *tex, ResourceActivationAction action, const ResourceClearValue &amp;value, GpuPipeline gpu_pipeline)</argsstring>
        <name>activate_texture</name>
        <qualifiedname>D3dInterfaceTable::activate_texture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="348" column="3" bodyfile="dag_interface_table.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ace339202f13ee99067ea3f47c8a58d0d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::deactivate_buffer) (Sbuffer *buf, GpuPipeline gpu_pipeline)</definition>
        <argsstring>)(Sbuffer *buf, GpuPipeline gpu_pipeline)</argsstring>
        <name>deactivate_buffer</name>
        <qualifiedname>D3dInterfaceTable::deactivate_buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="350" column="3" bodyfile="dag_interface_table.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ac071f67cff47edbc4ca155567c7806fe" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::deactivate_texture) (BaseTexture *tex, GpuPipeline gpu_pipeline)</definition>
        <argsstring>)(BaseTexture *tex, GpuPipeline gpu_pipeline)</argsstring>
        <name>deactivate_texture</name>
        <qualifiedname>D3dInterfaceTable::deactivate_texture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="351" column="3" bodyfile="dag_interface_table.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1afe01468b3878bf5e954d4730f7244c77" prot="public" static="no" mutable="no">
        <type>d3d::ResUpdateBuffer *(*</type>
        <definition>d3d::ResUpdateBuffer *(* D3dInterfaceTable::allocate_update_buffer_for_tex_region) (BaseTexture *dest_base_texture, unsigned dest_mip, unsigned dest_slice, unsigned offset_x, unsigned offset_y, unsigned offset_z, unsigned width, unsigned height, unsigned depth)</definition>
        <argsstring>)(BaseTexture *dest_base_texture, unsigned dest_mip, unsigned dest_slice, unsigned offset_x, unsigned offset_y, unsigned offset_z, unsigned width, unsigned height, unsigned depth)</argsstring>
        <name>allocate_update_buffer_for_tex_region</name>
        <qualifiedname>D3dInterfaceTable::allocate_update_buffer_for_tex_region</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="353" column="3" bodyfile="dag_interface_table.h" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ae872bf1427c6035ff6f3854f8bc14d2f" prot="public" static="no" mutable="no">
        <type>d3d::ResUpdateBuffer *(*</type>
        <definition>d3d::ResUpdateBuffer *(* D3dInterfaceTable::allocate_update_buffer_for_tex) (BaseTexture *dest_tex, int dest_mip, int dest_slice)</definition>
        <argsstring>)(BaseTexture *dest_tex, int dest_mip, int dest_slice)</argsstring>
        <name>allocate_update_buffer_for_tex</name>
        <qualifiedname>D3dInterfaceTable::allocate_update_buffer_for_tex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="355" column="3" bodyfile="dag_interface_table.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1af44addd0123f085f92cc00d1656c2fd6" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::release_update_buffer) (d3d::ResUpdateBuffer *&amp;rub)</definition>
        <argsstring>)(d3d::ResUpdateBuffer *&amp;rub)</argsstring>
        <name>release_update_buffer</name>
        <qualifiedname>D3dInterfaceTable::release_update_buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="356" column="3" bodyfile="dag_interface_table.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a24b8e31e6b762c8716fcc5f492498ff2" prot="public" static="no" mutable="no">
        <type>char *(*</type>
        <definition>char *(* D3dInterfaceTable::get_update_buffer_addr_for_write) (d3d::ResUpdateBuffer *rub)</definition>
        <argsstring>)(d3d::ResUpdateBuffer *rub)</argsstring>
        <name>get_update_buffer_addr_for_write</name>
        <qualifiedname>D3dInterfaceTable::get_update_buffer_addr_for_write</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="357" column="3" bodyfile="dag_interface_table.h" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a7a0fc1c03bf71a0d671f89354edea7f5" prot="public" static="no" mutable="no">
        <type>size_t(*</type>
        <definition>size_t(* D3dInterfaceTable::get_update_buffer_size) (d3d::ResUpdateBuffer *rub)</definition>
        <argsstring>)(d3d::ResUpdateBuffer *rub)</argsstring>
        <name>get_update_buffer_size</name>
        <qualifiedname>D3dInterfaceTable::get_update_buffer_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="358" column="3" bodyfile="dag_interface_table.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1ab9c6b95a68aed41c17a145f0d03986fa" prot="public" static="no" mutable="no">
        <type>size_t(*</type>
        <definition>size_t(* D3dInterfaceTable::get_update_buffer_pitch) (d3d::ResUpdateBuffer *rub)</definition>
        <argsstring>)(d3d::ResUpdateBuffer *rub)</argsstring>
        <name>get_update_buffer_pitch</name>
        <qualifiedname>D3dInterfaceTable::get_update_buffer_pitch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="359" column="3" bodyfile="dag_interface_table.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1aaa7df6f61eb583a83648179b0156b368" prot="public" static="no" mutable="no">
        <type>size_t(*</type>
        <definition>size_t(* D3dInterfaceTable::get_update_buffer_slice_pitch) (d3d::ResUpdateBuffer *rub)</definition>
        <argsstring>)(d3d::ResUpdateBuffer *rub)</argsstring>
        <name>get_update_buffer_slice_pitch</name>
        <qualifiedname>D3dInterfaceTable::get_update_buffer_slice_pitch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="360" column="3" bodyfile="dag_interface_table.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a90f269c4b4cb61023a4c70b4177636e7" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::update_texture_and_release_update_buffer) (d3d::ResUpdateBuffer *&amp;src_rub)</definition>
        <argsstring>)(d3d::ResUpdateBuffer *&amp;src_rub)</argsstring>
        <name>update_texture_and_release_update_buffer</name>
        <qualifiedname>D3dInterfaceTable::update_texture_and_release_update_buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="361" column="3" bodyfile="dag_interface_table.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a5d57a8f8c68e524f27d4959356b16256" prot="public" static="no" mutable="no">
        <type>void *(*</type>
        <definition>void *(* D3dInterfaceTable::get_native_surface) (BaseTexture *tex)</definition>
        <argsstring>)(BaseTexture *tex)</argsstring>
        <name>get_native_surface</name>
        <qualifiedname>D3dInterfaceTable::get_native_surface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="363" column="3" bodyfile="dag_interface_table.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a7827b120704ae5636cda6046246277c6" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* D3dInterfaceTable::start_capture) (const char *name, const char *savepath)</definition>
        <argsstring>)(const char *name, const char *savepath)</argsstring>
        <name>start_capture</name>
        <qualifiedname>D3dInterfaceTable::start_capture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="365" column="3" bodyfile="dag_interface_table.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a0103a4e103133fd437d5acd458250a90" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::stop_capture) ()</definition>
        <argsstring>)()</argsstring>
        <name>stop_capture</name>
        <qualifiedname>D3dInterfaceTable::stop_capture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="366" column="3" bodyfile="dag_interface_table.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a97c22e82a76cecf4d841d77dde1cd870" prot="public" static="no" mutable="no">
        <type><ref refid="dag__shaderLibraryObject_8h_1a1c8035231a8589bc662de43b799a5bda" kindref="member">ShaderLibrary</ref>(*</type>
        <definition>ShaderLibrary(* D3dInterfaceTable::create_shader_library) (const ShaderLibraryCreateInfo &amp;slci)</definition>
        <argsstring>)(const ShaderLibraryCreateInfo &amp;slci)</argsstring>
        <name>create_shader_library</name>
        <qualifiedname>D3dInterfaceTable::create_shader_library</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="424" column="3" bodyfile="dag_interface_table.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a83afa2f12ca3d70ca7d273c67e3df39d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* D3dInterfaceTable::destroy_shader_library) (ShaderLibrary library)</definition>
        <argsstring>)(ShaderLibrary library)</argsstring>
        <name>destroy_shader_library</name>
        <qualifiedname>D3dInterfaceTable::destroy_shader_library</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="425" column="3" bodyfile="dag_interface_table.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a0c4690474d37f6b11c45ff795538d8ec" prot="public" static="no" mutable="no">
        <type><ref refid="classDriverCode" kindref="compound">DriverCode</ref></type>
        <definition>DriverCode D3dInterfaceTable::driverCode</definition>
        <argsstring></argsstring>
        <name>driverCode</name>
        <qualifiedname>D3dInterfaceTable::driverCode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="427" column="14" bodyfile="dag_interface_table.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a9be599333ef5c13a11a7c3e5dd091e22" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* D3dInterfaceTable::driverName</definition>
        <argsstring></argsstring>
        <name>driverName</name>
        <qualifiedname>D3dInterfaceTable::driverName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="428" column="14" bodyfile="dag_interface_table.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a76e1586acc4145f3d0a1ee3852321eb6" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* D3dInterfaceTable::driverVer</definition>
        <argsstring></argsstring>
        <name>driverVer</name>
        <qualifiedname>D3dInterfaceTable::driverVer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="429" column="14" bodyfile="dag_interface_table.h" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a09a675431d7fdc99193ee047d63c66be" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* D3dInterfaceTable::deviceName</definition>
        <argsstring></argsstring>
        <name>deviceName</name>
        <qualifiedname>D3dInterfaceTable::deviceName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="430" column="14" bodyfile="dag_interface_table.h" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structD3dInterfaceTable_1a8735143295cee023e8b87360e56cc57e" prot="public" static="no" mutable="no">
        <type><ref refid="structDriver3dDesc" kindref="compound">Driver3dDesc</ref></type>
        <definition>Driver3dDesc D3dInterfaceTable::drvDesc</definition>
        <argsstring></argsstring>
        <name>drvDesc</name>
        <qualifiedname>D3dInterfaceTable::drvDesc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="431" column="16" bodyfile="dag_interface_table.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structD3dInterfaceTable_1a8a94e3b81c8af9da7928f1bb4538a86e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classSbuffer" kindref="compound">Sbuffer</ref> *</type>
        <definition>Sbuffer * D3dInterfaceTable::create_vb</definition>
        <argsstring>(int size_bytes, int flags, const char *name=&quot;&quot;)</argsstring>
        <name>create_vb</name>
        <qualifiedname>D3dInterfaceTable::create_vb</qualifiedname>
        <param>
          <type>int</type>
          <declname>size_bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="369" column="11" bodyfile="dag_interface_table.h" bodystart="369" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1acd4886ee01fbdc7545f63734377fcf19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
        <definition>BaseTexture * D3dInterfaceTable::create_tex</definition>
        <argsstring>(TexImage32 *img, int w, int h, int flg, int levels, const char *stat_name=NULL)</argsstring>
        <name>create_tex</name>
        <qualifiedname>D3dInterfaceTable::create_tex</qualifiedname>
        <param>
          <type>TexImage32 *</type>
          <declname>img</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>levels</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>stat_name</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="370" column="15" bodyfile="dag_interface_table.h" bodystart="370" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1a8884f9a46e0a2db2b5df2e84a299586b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool D3dInterfaceTable::stretch_rect</definition>
        <argsstring>(BaseTexture *src, BaseTexture *dst, const RectInt *rsrc=NULL, const RectInt *rdst=NULL)</argsstring>
        <name>stretch_rect</name>
        <qualifiedname>D3dInterfaceTable::stretch_rect</qualifiedname>
        <param>
          <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const RectInt *</type>
          <declname>rsrc</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const RectInt *</type>
          <declname>rdst</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="374" column="8" bodyfile="dag_interface_table.h" bodystart="374" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1adfb26b2f7feead8ec2169a832613b7d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool D3dInterfaceTable::setvsrc</definition>
        <argsstring>(int stream, Sbuffer *vb, int stride_bytes)</argsstring>
        <name>setvsrc</name>
        <qualifiedname>D3dInterfaceTable::setvsrc</qualifiedname>
        <param>
          <type>int</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="classSbuffer" kindref="compound">Sbuffer</ref> *</type>
          <declname>vb</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="379" column="15" bodyfile="dag_interface_table.h" bodystart="379" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1a302bed4dd8651ff7a372045c498198dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
        <definition>BaseTexture * D3dInterfaceTable::create_cubetex</definition>
        <argsstring>(int size, int flg, int levels, const char *stat_name=NULL)</argsstring>
        <name>create_cubetex</name>
        <qualifiedname>D3dInterfaceTable::create_cubetex</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>levels</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>stat_name</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="380" column="15" bodyfile="dag_interface_table.h" bodystart="380" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1a0a598b8559b6a4799c32885df7e4027f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
        <definition>BaseTexture * D3dInterfaceTable::alias_tex</definition>
        <argsstring>(BaseTexture *baseTexture, TexImage32 *img, int w, int h, int flg, int levels, const char *stat_name=NULL)</argsstring>
        <name>alias_tex</name>
        <qualifiedname>D3dInterfaceTable::alias_tex</qualifiedname>
        <param>
          <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
          <declname>baseTexture</declname>
        </param>
        <param>
          <type>TexImage32 *</type>
          <declname>img</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>levels</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>stat_name</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="385" column="15" bodyfile="dag_interface_table.h" bodystart="385" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1a7a975927802807c0b8c1cf207976ed56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
        <definition>BaseTexture * D3dInterfaceTable::alias_cubetex</definition>
        <argsstring>(BaseTexture *baseTexture, int size, int flg, int levels, const char *stat_name=NULL)</argsstring>
        <name>alias_cubetex</name>
        <qualifiedname>D3dInterfaceTable::alias_cubetex</qualifiedname>
        <param>
          <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
          <declname>baseTexture</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>levels</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>stat_name</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="390" column="15" bodyfile="dag_interface_table.h" bodystart="390" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1a754ca9625ff84fe4a089260f59f4d337" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
        <definition>BaseTexture * D3dInterfaceTable::alias_voltex</definition>
        <argsstring>(BaseTexture *baseTexture, int w, int h, int d, int flg, int levels, const char *stat_name=NULL)</argsstring>
        <name>alias_voltex</name>
        <qualifiedname>D3dInterfaceTable::alias_voltex</qualifiedname>
        <param>
          <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
          <declname>baseTexture</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>levels</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>stat_name</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="395" column="15" bodyfile="dag_interface_table.h" bodystart="395" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1aced8b2aa7675e2ca09ff0e9cf4ed2cac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
        <definition>BaseTexture * D3dInterfaceTable::alias_array_tex</definition>
        <argsstring>(BaseTexture *baseTexture, int w, int h, int d, int flg, int levels, const char *stat_name)</argsstring>
        <name>alias_array_tex</name>
        <qualifiedname>D3dInterfaceTable::alias_array_tex</qualifiedname>
        <param>
          <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
          <declname>baseTexture</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>levels</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>stat_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="400" column="15" bodyfile="dag_interface_table.h" bodystart="400" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1a138802ef6636af6508b3642ff9c71714" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
        <definition>BaseTexture * D3dInterfaceTable::alias_cube_array_tex</definition>
        <argsstring>(BaseTexture *baseTexture, int side, int d, int flg, int levels, const char *stat_name)</argsstring>
        <name>alias_cube_array_tex</name>
        <qualifiedname>D3dInterfaceTable::alias_cube_array_tex</qualifiedname>
        <param>
          <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
          <declname>baseTexture</declname>
        </param>
        <param>
          <type>int</type>
          <declname>side</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>levels</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>stat_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="405" column="15" bodyfile="dag_interface_table.h" bodystart="405" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1a1bf7077d84dba3f2a322c90a643062ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool D3dInterfaceTable::set_render_target</definition>
        <argsstring>()</argsstring>
        <name>set_render_target</name>
        <qualifiedname>D3dInterfaceTable::set_render_target</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="410" column="8" bodyfile="dag_interface_table.h" bodystart="410" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1a48872be24bc6203fd1a90c0aa894448e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool D3dInterfaceTable::set_render_target</definition>
        <argsstring>(int ri, BaseTexture *tex, int fc, int level)</argsstring>
        <name>set_render_target</name>
        <qualifiedname>D3dInterfaceTable::set_render_target</qualifiedname>
        <param>
          <type>int</type>
          <declname>ri</declname>
        </param>
        <param>
          <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
          <declname>tex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="411" column="8" bodyfile="dag_interface_table.h" bodystart="411" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1a09918602174c440a85d157c7148b0827" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool D3dInterfaceTable::set_render_target</definition>
        <argsstring>(int rt_index, BaseTexture *tex, int level)</argsstring>
        <name>set_render_target</name>
        <qualifiedname>D3dInterfaceTable::set_render_target</qualifiedname>
        <param>
          <type>int</type>
          <declname>rt_index</declname>
        </param>
        <param>
          <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
          <declname>tex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="412" column="8" bodyfile="dag_interface_table.h" bodystart="412" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1a9784de193022d8872c4beb6cb4b7eae1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool D3dInterfaceTable::set_render_target</definition>
        <argsstring>(const Driver3dRenderTarget &amp;rt)</argsstring>
        <name>set_render_target</name>
        <qualifiedname>D3dInterfaceTable::set_render_target</qualifiedname>
        <param>
          <type>const <ref refid="structDriver3dRenderTarget" kindref="compound">Driver3dRenderTarget</ref> &amp;</type>
          <declname>rt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="413" column="8" bodyfile="dag_interface_table.h" bodystart="413" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1a8450e84b0c091329ddfe0323fdbad689" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool D3dInterfaceTable::set_depth</definition>
        <argsstring>(BaseTexture *tex, DepthAccess access)</argsstring>
        <name>set_depth</name>
        <qualifiedname>D3dInterfaceTable::set_depth</qualifiedname>
        <param>
          <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
          <declname>tex</declname>
        </param>
        <param>
          <type><ref refid="dag__renderTarget_8h_1a96de47a38fda09536e3a862b550d8c1d" kindref="member">DepthAccess</ref></type>
          <declname>access</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="414" column="15" bodyfile="dag_interface_table.h" bodystart="414" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1a2f11bb5e643629c490a257de16cc0404" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool D3dInterfaceTable::set_depth</definition>
        <argsstring>(BaseTexture *tex, int layer, DepthAccess access)</argsstring>
        <name>set_depth</name>
        <qualifiedname>D3dInterfaceTable::set_depth</qualifiedname>
        <param>
          <type><ref refid="classBaseTexture" kindref="compound">BaseTexture</ref> *</type>
          <declname>tex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="dag__renderTarget_8h_1a96de47a38fda09536e3a862b550d8c1d" kindref="member">DepthAccess</ref></type>
          <declname>access</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="415" column="15" bodyfile="dag_interface_table.h" bodystart="415" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1a809551b829bf92021c6b412d1011400e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool D3dInterfaceTable::settm</definition>
        <argsstring>(int which, const Matrix44 *tm)</argsstring>
        <name>settm</name>
        <qualifiedname>D3dInterfaceTable::settm</qualifiedname>
        <param>
          <type>int</type>
          <declname>which</declname>
        </param>
        <param>
          <type>const <ref refid="dag__interface__table_8h_1a7f8a2e7770f595ec85ae968ce28e2c1f" kindref="member">Matrix44</ref> *</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="417" column="8" bodyfile="dag_interface_table.h" bodystart="417" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1a9539affedd1670dc74cf56a1817db0fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool D3dInterfaceTable::settm</definition>
        <argsstring>(int which, const TMatrix &amp;tm)</argsstring>
        <name>settm</name>
        <qualifiedname>D3dInterfaceTable::settm</qualifiedname>
        <param>
          <type>int</type>
          <declname>which</declname>
        </param>
        <param>
          <type>const TMatrix &amp;</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="418" column="8" bodyfile="dag_interface_table.h" bodystart="418" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1aa737ec704d0fffa75e63a85cbab07bab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void D3dInterfaceTable::settm</definition>
        <argsstring>(int which, const mat44f &amp;tm)</argsstring>
        <name>settm</name>
        <qualifiedname>D3dInterfaceTable::settm</qualifiedname>
        <param>
          <type>int</type>
          <declname>which</declname>
        </param>
        <param>
          <type>const mat44f &amp;</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="419" column="8" bodyfile="dag_interface_table.h" bodystart="419" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1affbc2f9fca759fc07fe693b8348a177d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool D3dInterfaceTable::gettm</definition>
        <argsstring>(int which, Matrix44 *out_tm)</argsstring>
        <name>gettm</name>
        <qualifiedname>D3dInterfaceTable::gettm</qualifiedname>
        <param>
          <type>int</type>
          <declname>which</declname>
        </param>
        <param>
          <type><ref refid="dag__interface__table_8h_1a7f8a2e7770f595ec85ae968ce28e2c1f" kindref="member">Matrix44</ref> *</type>
          <declname>out_tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="420" column="8" bodyfile="dag_interface_table.h" bodystart="420" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1ae67ddadbd9ff8c4d59331b7d9a4b3a25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool D3dInterfaceTable::gettm</definition>
        <argsstring>(int which, TMatrix &amp;out_tm)</argsstring>
        <name>gettm</name>
        <qualifiedname>D3dInterfaceTable::gettm</qualifiedname>
        <param>
          <type>int</type>
          <declname>which</declname>
        </param>
        <param>
          <type>TMatrix &amp;</type>
          <declname>out_tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="421" column="8" bodyfile="dag_interface_table.h" bodystart="421" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="structD3dInterfaceTable_1aad2df18c0190f8b38b45675d47ce7e6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void D3dInterfaceTable::gettm</definition>
        <argsstring>(int which, mat44f &amp;out_tm)</argsstring>
        <name>gettm</name>
        <qualifiedname>D3dInterfaceTable::gettm</qualifiedname>
        <param>
          <type>int</type>
          <declname>which</declname>
        </param>
        <param>
          <type>mat44f &amp;</type>
          <declname>out_tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_interface_table.h" line="422" column="8" bodyfile="dag_interface_table.h" bodystart="422" bodyend="422"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="10">
        <label>BaseTexture</label>
        <link refid="classBaseTexture"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>D3dInterfaceTable</label>
        <link refid="structD3dInterfaceTable"/>
        <childnode refid="2" relation="usage">
          <edgelabel>drvDesc</edgelabel>
          <edgelabel>get_driver_desc</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>alias_array_tex_0</edgelabel>
          <edgelabel>alias_cube_array_tex_0</edgelabel>
          <edgelabel>alias_cubetex_0</edgelabel>
          <edgelabel>alias_tex_0</edgelabel>
          <edgelabel>alias_voltex_0</edgelabel>
          <edgelabel>alloc_ddsx_tex</edgelabel>
          <edgelabel>create_array_tex</edgelabel>
          <edgelabel>create_cube_array_tex</edgelabel>
          <edgelabel>create_cubetex_0</edgelabel>
          <edgelabel>create_ddsx_tex</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>create_ib</edgelabel>
          <edgelabel>create_sbuffer</edgelabel>
          <edgelabel>create_vb_0</edgelabel>
          <edgelabel>place_buffer_in_resource_heap</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>get_resource_allocation_properties</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>get_resource_heap_group_properties</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>get_texture_tiling_info</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>driverCode</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>D3dResource</label>
        <link refid="classD3dResource"/>
      </node>
      <node id="3">
        <label>DeviceAttributesBase</label>
        <link refid="structDeviceAttributesBase"/>
      </node>
      <node id="4">
        <label>DeviceDriverCapabilitiesBase</label>
        <link refid="structDeviceDriverCapabilitiesBase"/>
      </node>
      <node id="7">
        <label>DeviceDriverIssuesBase</label>
        <link refid="structDeviceDriverIssuesBase"/>
      </node>
      <node id="5">
        <label>DeviceDriverIssuesNoIssues</label>
        <link refid="structDeviceDriverIssuesNoIssues"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>DeviceDriverIssuesWindows</label>
        <link refid="structDeviceDriverIssuesWindows"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>DeviceDriverRaytraceProperties</label>
        <link refid="structDeviceDriverRaytraceProperties"/>
      </node>
      <node id="2">
        <label>Driver3dDesc</label>
        <link refid="structDriver3dDesc"/>
        <childnode refid="3" relation="usage">
          <edgelabel>info</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>caps</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>issues</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>shaderModel</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>raytrace</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>DriverCode</label>
        <link refid="classDriverCode"/>
      </node>
      <node id="14">
        <label>ResourceAllocationProperties</label>
        <link refid="structResourceAllocationProperties"/>
      </node>
      <node id="13">
        <label>ResourceChecker</label>
        <link refid="structResourceChecker"/>
      </node>
      <node id="15">
        <label>ResourceHeapGroupProperties</label>
        <link refid="structResourceHeapGroupProperties"/>
      </node>
      <node id="12">
        <label>Sbuffer</label>
        <link refid="classSbuffer"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>TextureTilingInfo</label>
        <link refid="structTextureTilingInfo"/>
      </node>
      <node id="8">
        <label>d3d::shadermodel::Version</label>
        <link refid="structd3d_1_1shadermodel_1_1Version"/>
      </node>
    </collaborationgraph>
    <location file="dag_interface_table.h" line="74" column="1" bodyfile="dag_interface_table.h" bodystart="75" bodyend="432"/>
    <listofallmembers>
      <member refid="structD3dInterfaceTable_1ac1f3203b1f04d9bce18654794d64849a" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>activate_buffer</name></member>
      <member refid="structD3dInterfaceTable_1a7bfb16855ed9db39f177c38a4639b21d" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>activate_texture</name></member>
      <member refid="structD3dInterfaceTable_1aced8b2aa7675e2ca09ff0e9cf4ed2cac" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>alias_array_tex</name></member>
      <member refid="structD3dInterfaceTable_1a685d132339388cc07810b055d59eac78" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>alias_array_tex_0</name></member>
      <member refid="structD3dInterfaceTable_1a138802ef6636af6508b3642ff9c71714" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>alias_cube_array_tex</name></member>
      <member refid="structD3dInterfaceTable_1a3fe1936bc055aa06c3ab516ecb074565" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>alias_cube_array_tex_0</name></member>
      <member refid="structD3dInterfaceTable_1a7a975927802807c0b8c1cf207976ed56" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>alias_cubetex</name></member>
      <member refid="structD3dInterfaceTable_1af322117eb65402a3234c218b214a6262" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>alias_cubetex_0</name></member>
      <member refid="structD3dInterfaceTable_1a0a598b8559b6a4799c32885df7e4027f" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>alias_tex</name></member>
      <member refid="structD3dInterfaceTable_1ac95fc8b9a5af09cbb4246a61b101802b" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>alias_tex_0</name></member>
      <member refid="structD3dInterfaceTable_1a754ca9625ff84fe4a089260f59f4d337" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>alias_voltex</name></member>
      <member refid="structD3dInterfaceTable_1a05cab754d31744615c409d1ae5f5d86f" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>alias_voltex_0</name></member>
      <member refid="structD3dInterfaceTable_1a45e22b03b4aa150d3becd89cf21427e2" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>alloc_ddsx_tex</name></member>
      <member refid="structD3dInterfaceTable_1a10ca24483881b150c5ade5043aecd454" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>allocate_bindless_resource_range</name></member>
      <member refid="structD3dInterfaceTable_1ae872bf1427c6035ff6f3854f8bc14d2f" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>allocate_update_buffer_for_tex</name></member>
      <member refid="structD3dInterfaceTable_1afe01468b3878bf5e954d4730f7244c77" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>allocate_update_buffer_for_tex_region</name></member>
      <member refid="structD3dInterfaceTable_1a17fcb30847cfa95f9bd9a696cbb7103f" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>allow_render_pass_target_load</name></member>
      <member refid="structD3dInterfaceTable_1a8710a39c864b5b50b3de24d7beafa081" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>begin_conditional_render</name></member>
      <member refid="structD3dInterfaceTable_1abafa7eebea5905ec6fee8dd009597a0a" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>begin_frame</name></member>
      <member refid="structD3dInterfaceTable_1a1cc6a828f8b28dba68b234ea67e7cf1f" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>begin_render_pass</name></member>
      <member refid="structD3dInterfaceTable_1a1997eb27e4bb44ed63a9b2cf1ec63608" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>begin_survey</name></member>
      <member refid="structD3dInterfaceTable_1ad0be6af6a16665ed118a54c4d03c9f44" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>beginEvent</name></member>
      <member refid="structD3dInterfaceTable_1a48bf2605fdfb2fab139829894b14d1e0" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>calcglobtm_0</name></member>
      <member refid="structD3dInterfaceTable_1a21393e63bde23d612237167964467575" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>calcglobtm_1</name></member>
      <member refid="structD3dInterfaceTable_1a6a572b7e8d5060d41e8828d2c1bb81e7" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>calcglobtm_2</name></member>
      <member refid="structD3dInterfaceTable_1a539204dd9fcaddacf9785198bb53ba02" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>calcglobtm_3</name></member>
      <member refid="structD3dInterfaceTable_1af5e481a20113b484069a07b374a3e721" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>calcproj_0</name></member>
      <member refid="structD3dInterfaceTable_1ab538606e1e6b93f8c9b7077e02b681a3" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>calcproj_1</name></member>
      <member refid="structD3dInterfaceTable_1a51115b521e5766130eb40002bd81c629" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>can_render_to_window</name></member>
      <member refid="structD3dInterfaceTable_1ac4c01f511fdb9a755224de5e759f1dfc" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>capture_screen</name></member>
      <member refid="structD3dInterfaceTable_1abbb388d5a55d2b2328ac69c0b2958f21" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>change_screen_aspect_ratio</name></member>
      <member refid="structD3dInterfaceTable_1abfb02cb8775131a91e635140e5669b3d" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>check_cubetexformat</name></member>
      <member refid="structD3dInterfaceTable_1aec46c8dd07fbff8c19826fcef44d6a7b" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>check_texformat</name></member>
      <member refid="structD3dInterfaceTable_1a3823560bfc982c3a10df116681bcab84" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>check_voltexformat</name></member>
      <member refid="structD3dInterfaceTable_1ae28bf03152e773593e38e369d4f9ffbe" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>clear_render_states</name></member>
      <member refid="structD3dInterfaceTable_1ab13083e4c79d7e300cec69ed4bc44837" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>clear_rt</name></member>
      <member refid="structD3dInterfaceTable_1ac2f13d33f863b2fd6040eccaf7f1c8c2" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>clear_rwtexf</name></member>
      <member refid="structD3dInterfaceTable_1ae4035ded5a6ece1cf3872a524699cdb0" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>clear_rwtexi</name></member>
      <member refid="structD3dInterfaceTable_1a8e56770512f6f8a5ade72f9a4062714d" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>clearview</name></member>
      <member refid="structD3dInterfaceTable_1a48817caedbe3fb171e1b4286a12e8e47" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>copy_from_current_render_target</name></member>
      <member refid="structD3dInterfaceTable_1a4a25110c4bbfeb25f54b3fa3df9083d4" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_array_tex</name></member>
      <member refid="structD3dInterfaceTable_1a8d7443b2f68dc8408e6fd63f7eaf14ce" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_cube_array_tex</name></member>
      <member refid="structD3dInterfaceTable_1a302bed4dd8651ff7a372045c498198dc" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_cubetex</name></member>
      <member refid="structD3dInterfaceTable_1a132ba3a9f5a2473c1b72acf7033f4cfd" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_cubetex_0</name></member>
      <member refid="structD3dInterfaceTable_1a743de7be8473acd03e1ce40325125bb1" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_ddsx_tex</name></member>
      <member refid="structD3dInterfaceTable_1abae5a85c31cf999a6ea5a15cc0a141b2" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_event_query</name></member>
      <member refid="structD3dInterfaceTable_1abb292a1f382d2c8c93952eadb6d1627d" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_ib</name></member>
      <member refid="structD3dInterfaceTable_1a71200df2444edc5cd6d8910abc10c49c" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_pixel_shader</name></member>
      <member refid="structD3dInterfaceTable_1ab1bd54cbc77ed76a5cf294d2f8334330" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_pixel_shader_asm</name></member>
      <member refid="structD3dInterfaceTable_1a1596b5174e6d74d436ba6b6bbb5f2a44" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_pixel_shader_dagor</name></member>
      <member refid="structD3dInterfaceTable_1a32aee987916596a89c1a9facdd887905" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_pixel_shader_hlsl</name></member>
      <member refid="structD3dInterfaceTable_1a8c495367966bfa7a96e57c6c56420936" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_predicate</name></member>
      <member refid="structD3dInterfaceTable_1a8d645b4ba079e8f90e9c33b2cc39a34e" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_program_0</name></member>
      <member refid="structD3dInterfaceTable_1a70ceb904be9ea7dbf033a29358054dc2" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_program_1</name></member>
      <member refid="structD3dInterfaceTable_1aff35e67a336ec600120ac4b2f943a3dc" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_program_cs</name></member>
      <member refid="structD3dInterfaceTable_1ad64ec087573a4dfc57e867841b8eab85" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_render_pass</name></member>
      <member refid="structD3dInterfaceTable_1a56e2e4ec3a7729928c2bc73322881edd" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_render_state</name></member>
      <member refid="structD3dInterfaceTable_1a6a3974575e40051f3da5caee782611f8" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_resource_heap</name></member>
      <member refid="structD3dInterfaceTable_1ac5bdb41c88416598605aef92a6325267" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_sbuffer</name></member>
      <member refid="structD3dInterfaceTable_1a97c22e82a76cecf4d841d77dde1cd870" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_shader_library</name></member>
      <member refid="structD3dInterfaceTable_1acd4886ee01fbdc7545f63734377fcf19" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_tex</name></member>
      <member refid="structD3dInterfaceTable_1aea2bc36406eb4cdb53b109d5c7a75a12" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_tex_0</name></member>
      <member refid="structD3dInterfaceTable_1a8a94e3b81c8af9da7928f1bb4538a86e" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_vb</name></member>
      <member refid="structD3dInterfaceTable_1a14024c9ce623601ee7874d3d49c7d9a0" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_vb_0</name></member>
      <member refid="structD3dInterfaceTable_1a60a67a040b9c9633629be4095c236c74" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_vdecl</name></member>
      <member refid="structD3dInterfaceTable_1a27b298d8fac5f3fa1b7cbfac8403e899" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_vertex_shader</name></member>
      <member refid="structD3dInterfaceTable_1a643998c5105133459907ec34ddff56f1" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_vertex_shader_asm</name></member>
      <member refid="structD3dInterfaceTable_1a3ac37e1bf3317deaa8adbadce8233fb7" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_vertex_shader_dagor</name></member>
      <member refid="structD3dInterfaceTable_1ab5a8067401b99d2110674e140cb91777" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_vertex_shader_hlsl</name></member>
      <member refid="structD3dInterfaceTable_1acacb2e7ce451ba0b2bc25418b237a4b2" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>create_voltex</name></member>
      <member refid="structD3dInterfaceTable_1ace339202f13ee99067ea3f47c8a58d0d" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>deactivate_buffer</name></member>
      <member refid="structD3dInterfaceTable_1ac071f67cff47edbc4ca155567c7806fe" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>deactivate_texture</name></member>
      <member refid="structD3dInterfaceTable_1a4cf8211cb562dbefbdaa99ec7f03e9ab" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>delete_pixel_shader</name></member>
      <member refid="structD3dInterfaceTable_1a34d5c570d7610294391ef50d8209bad3" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>delete_program</name></member>
      <member refid="structD3dInterfaceTable_1a408215fc567e0fe76ee4103033250f65" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>delete_render_pass</name></member>
      <member refid="structD3dInterfaceTable_1a36b6cc6da52774149bffcdc012c401c6" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>delete_vdecl</name></member>
      <member refid="structD3dInterfaceTable_1a18307da8d9f65a3ecb0fd4558c4384ad" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>delete_vertex_shader</name></member>
      <member refid="structD3dInterfaceTable_1abbce115106e4bd0559f909e5805ebd46" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>destroy_resource_heap</name></member>
      <member refid="structD3dInterfaceTable_1a83afa2f12ca3d70ca7d273c67e3df39d" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>destroy_shader_library</name></member>
      <member refid="structD3dInterfaceTable_1a0786238c8f81707b832e4d7aed50ec42" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>device_lost</name></member>
      <member refid="structD3dInterfaceTable_1a09a675431d7fdc99193ee047d63c66be" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>deviceName</name></member>
      <member refid="structD3dInterfaceTable_1ac337c8074a3dd2b054f1d6f32b5f76c0" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>discard_tex</name></member>
      <member refid="structD3dInterfaceTable_1a1cf2a2707d68bea69a01ae4b0cfec1f5" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>dispatch</name></member>
      <member refid="structD3dInterfaceTable_1ac18529d70f005a82b57286e24af17799" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>dispatch_indirect</name></member>
      <member refid="structD3dInterfaceTable_1a879c0ea8f9a4d14c205609c878c5f120" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>dispatch_mesh</name></member>
      <member refid="structD3dInterfaceTable_1a4c0d3cc6b220244d6f9e6c752ca06c5b" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>dispatch_mesh_indirect</name></member>
      <member refid="structD3dInterfaceTable_1ab4acabc199d6e7c254a75d67cb239e76" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>dispatch_mesh_indirect_count</name></member>
      <member refid="structD3dInterfaceTable_1aaf5183c20604f1c1d1e78e0b50fa2ee5" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>draw_base</name></member>
      <member refid="structD3dInterfaceTable_1aeb683e0d9f847c46907ba56b70c73be6" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>draw_indexed_indirect</name></member>
      <member refid="structD3dInterfaceTable_1a3c948a20bbddeb5368c7bab5f1fde210" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>draw_indirect</name></member>
      <member refid="structD3dInterfaceTable_1a0b7be2a40f6c298f40891037d3f4016d" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>draw_up</name></member>
      <member refid="structD3dInterfaceTable_1ac81f16400510c4ef46ad9c8d63e6d2e7" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>drawind_base</name></member>
      <member refid="structD3dInterfaceTable_1afc8c09b48da587aa18fe20361bb71bce" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>drawind_up</name></member>
      <member refid="structD3dInterfaceTable_1a23df13803547e3249d88f25ceac82d20" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>driver_command</name></member>
      <member refid="structD3dInterfaceTable_1a0c4690474d37f6b11c45ff795538d8ec" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>driverCode</name></member>
      <member refid="structD3dInterfaceTable_1a9be599333ef5c13a11a7c3e5dd091e22" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>driverName</name></member>
      <member refid="structD3dInterfaceTable_1a76e1586acc4145f3d0a1ee3852321eb6" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>driverVer</name></member>
      <member refid="structD3dInterfaceTable_1a8735143295cee023e8b87360e56cc57e" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>drvDesc</name></member>
      <member refid="structD3dInterfaceTable_1ac38cf7c4705feb3eb7d7b2ab0a768a9d" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>enable_vsync</name></member>
      <member refid="structD3dInterfaceTable_1a2e4b5a36a72c3fa1c7f9262997841c05" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>end_conditional_render</name></member>
      <member refid="structD3dInterfaceTable_1a5bc2feec89a659fb1aaf59220da3f50b" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>end_fast_capture_screen</name></member>
      <member refid="structD3dInterfaceTable_1af8346ad590814c93d8da015d75d930bc" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>end_render_pass</name></member>
      <member refid="structD3dInterfaceTable_1a273fd8e8a8a709cf9bfe74520f5cb430" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>end_survey</name></member>
      <member refid="structD3dInterfaceTable_1a1d5babd305d91c8d2c783be4f1ae96c4" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>endEvent</name></member>
      <member refid="structD3dInterfaceTable_1a6c8d771a543621f9f571e940046c17db" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>fast_capture_screen</name></member>
      <member refid="structD3dInterfaceTable_1a5a17bf72e49b18d49b87aa22cf4969af" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>free_bindless_resource_range</name></member>
      <member refid="structD3dInterfaceTable_1a0bdf2edaa5370b8cefd71e2b457873ed" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>free_predicate</name></member>
      <member refid="structD3dInterfaceTable_1aa2f7409a4aa8879763b881ed5bf01c81" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_backbuffer_tex</name></member>
      <member refid="structD3dInterfaceTable_1a283852bb27b59e7c2c80010b62d1da24" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_debug_program</name></member>
      <member refid="structD3dInterfaceTable_1a8ccc470929be6b94a7a6a20967086471" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_device</name></member>
      <member refid="structD3dInterfaceTable_1a7821b40a9e06ccfd0a9a348489151fc0" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_device_driver_version</name></member>
      <member refid="structD3dInterfaceTable_1ae57962cd5ebf67e401e2433dad5206a6" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_device_name</name></member>
      <member refid="structD3dInterfaceTable_1ac80606560cd3422112667064ce22b8f8" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_driver_desc</name></member>
      <member refid="structD3dInterfaceTable_1aff9d25fea7d4a77a7ebe7612f989d39f" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_driver_name</name></member>
      <member refid="structD3dInterfaceTable_1a3effb0a6f9e878b2c33dacf3cc739449" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_event_query_status</name></member>
      <member refid="structD3dInterfaceTable_1a148d20fa30db7bb1611dcee0460132c0" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_last_error</name></member>
      <member refid="structD3dInterfaceTable_1a59e2343f2b79d0502cdff59a47d71fd9" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_last_error_code</name></member>
      <member refid="structD3dInterfaceTable_1abd406eda985f173dac2f57c9b064bfed" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_max_sample_count</name></member>
      <member refid="structD3dInterfaceTable_1a5d57a8f8c68e524f27d4959356b16256" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_native_surface</name></member>
      <member refid="structD3dInterfaceTable_1acae82f337bdbbe687343dbd92be83f2c" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_program_vdecl</name></member>
      <member refid="structD3dInterfaceTable_1ac2f39e2a0f38290cd42e52022cb4bbf6" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_render_target</name></member>
      <member refid="structD3dInterfaceTable_1a47a11cc774f7ef40a0162747cab1be66" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_render_target_size</name></member>
      <member refid="structD3dInterfaceTable_1ae589678db7ae8147646bd18f3f113811" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_resource_allocation_properties</name></member>
      <member refid="structD3dInterfaceTable_1a0b143e95beba81cba919843fedfbe25a" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_resource_heap_group_properties</name></member>
      <member refid="structD3dInterfaceTable_1a979602d22ac134d8b2dfd2e175afd04c" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_screen_aspect_ratio</name></member>
      <member refid="structD3dInterfaceTable_1abdbfff4bbeba9af0a1837f8e040606fb" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_screen_size</name></member>
      <member refid="structD3dInterfaceTable_1acd01964b81cefd4f8382cc5cce7a7dac" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_secondary_backbuffer_tex</name></member>
      <member refid="structD3dInterfaceTable_1a0c7e578d51dde83111ef7779ab1be690" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_swapchain_for_window</name></member>
      <member refid="structD3dInterfaceTable_1aa8c96a25deda2456b6504bd2565c0560" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_target_size</name></member>
      <member refid="structD3dInterfaceTable_1a0cdb5db853aacf4c8bbb64069b1884fe" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_texformat_usage</name></member>
      <member refid="structD3dInterfaceTable_1a0662ff29c100ad169cb7932e60319738" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_texture_format</name></member>
      <member refid="structD3dInterfaceTable_1a1649782e395114e5ebe78e4e4fb76841" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_texture_format_str</name></member>
      <member refid="structD3dInterfaceTable_1aa6987de37b3f7916e1bc2c222b69edea" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_texture_statistics</name></member>
      <member refid="structD3dInterfaceTable_1a39ded51051034a068f4d1ad371a728b5" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_texture_tiling_info</name></member>
      <member refid="structD3dInterfaceTable_1a24b8e31e6b762c8716fcc5f492498ff2" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_update_buffer_addr_for_write</name></member>
      <member refid="structD3dInterfaceTable_1ab9c6b95a68aed41c17a145f0d03986fa" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_update_buffer_pitch</name></member>
      <member refid="structD3dInterfaceTable_1a7a0fc1c03bf71a0d671f89354edea7f5" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_update_buffer_size</name></member>
      <member refid="structD3dInterfaceTable_1aaa7df6f61eb583a83648179b0156b368" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_update_buffer_slice_pitch</name></member>
      <member refid="structD3dInterfaceTable_1a00be226996877c8df97bb07d3352fead" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_video_modes_list</name></member>
      <member refid="structD3dInterfaceTable_1a48fec14d101d614694376dac84a2b715" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_vrr_supported</name></member>
      <member refid="structD3dInterfaceTable_1ad663596882c90cb5977e41d52975e35f" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>get_vsync_enabled</name></member>
      <member refid="structD3dInterfaceTable_1af44d5bb0c5bcfe6e9d0da98de324823f" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>getglobtm</name></member>
      <member refid="structD3dInterfaceTable_1a060365e3665968f9898c9a10df093e98" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>getglobtm_vec</name></member>
      <member refid="structD3dInterfaceTable_1a34ce8d81be7b0604ccd623d22b9b1029" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>getm2vtm</name></member>
      <member refid="structD3dInterfaceTable_1ab34232e43817184d0890c5c25f16e2ff" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>getpersp</name></member>
      <member refid="structD3dInterfaceTable_1affbc2f9fca759fc07fe693b8348a177d" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>gettm</name></member>
      <member refid="structD3dInterfaceTable_1ae67ddadbd9ff8c4d59331b7d9a4b3a25" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>gettm</name></member>
      <member refid="structD3dInterfaceTable_1aad2df18c0190f8b38b45675d47ce7e6b" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>gettm</name></member>
      <member refid="structD3dInterfaceTable_1a9777513cea84258543cb503ed4880dfd" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>gettm_0</name></member>
      <member refid="structD3dInterfaceTable_1a8b208929ee5f694babe5ea77df3dd2e5" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>gettm_1</name></member>
      <member refid="structD3dInterfaceTable_1aac2780d58b940375ec06986f8e7524b0" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>gettm_2</name></member>
      <member refid="structD3dInterfaceTable_1ac4d25031f3325bd06dd1b274b1a6f8ee" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>gettm_cref</name></member>
      <member refid="structD3dInterfaceTable_1a2a23b7795a38408f2911bbda5cd54f80" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>getview</name></member>
      <member refid="structD3dInterfaceTable_1a2c2c38ff78b2511c0673b3a00dd4f406" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>insert_fence</name></member>
      <member refid="structD3dInterfaceTable_1a2fd3967ac1957216262f78adc50a15d0" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>insert_wait_on_fence</name></member>
      <member refid="structD3dInterfaceTable_1ab133b3120df95eea746c92bf33c2490f" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>is_in_device_reset_now</name></member>
      <member refid="structD3dInterfaceTable_1aab3927287fa12f1c8a1742ae4a7946c0" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>is_window_occluded</name></member>
      <member refid="structD3dInterfaceTable_1a228832d67d555a402c4008f11494f37b" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>issame_texformat</name></member>
      <member refid="structD3dInterfaceTable_1a8408b6f2a90476ef965a042f0dbc7be2" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>issue_event_query</name></member>
      <member refid="structD3dInterfaceTable_1a60c67fd543ee9d89630fb48ca5bbc24c" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>map_tile_to_resource</name></member>
      <member refid="structD3dInterfaceTable_1a795053907dd62e59a05217e4b7316e02" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>mark_render_end</name></member>
      <member refid="structD3dInterfaceTable_1a7a6be657946abcda41a5c5668a1dda21" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>mark_render_start</name></member>
      <member refid="structD3dInterfaceTable_1acc3157e6708e8a95825216be30bf3e87" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>mark_simulation_end</name></member>
      <member refid="structD3dInterfaceTable_1aa7569ccccc7e83f8a79e1b0b50d83d13" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>mark_simulation_start</name></member>
      <member refid="structD3dInterfaceTable_1a171645a66cb2aecd4a04cfae8f6d576f" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>multi_draw_indexed_indirect</name></member>
      <member refid="structD3dInterfaceTable_1afb5700fd79bb7f8c966d66da06d6fa09" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>multi_draw_indirect</name></member>
      <member refid="structD3dInterfaceTable_1ad9a5ed59948e6747b1727a3336135914" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>next_subpass</name></member>
      <member refid="structD3dInterfaceTable_1abee3ababbfa87a5fef238918291c560f" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>place_buffer_in_resource_heap</name></member>
      <member refid="structD3dInterfaceTable_1ae08104f7be0b4c925e417e92a36f62f6" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>place_texture_in_resource_heap</name></member>
      <member refid="structD3dInterfaceTable_1acd7eb80d9554263adb439720d7681f57" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>present_to_window</name></member>
      <member refid="structD3dInterfaceTable_1a06a163f1571363b02914453634248794" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>register_bindless_sampler</name></member>
      <member refid="structD3dInterfaceTable_1a042a7857c1ed757ad1fb3bff1e31c625" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>release_capture_buffer</name></member>
      <member refid="structD3dInterfaceTable_1af3734ad3c7def1174920f799642a42d0" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>release_event_query</name></member>
      <member refid="structD3dInterfaceTable_1af44addd0123f085f92cc00d1656c2fd6" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>release_update_buffer</name></member>
      <member refid="structD3dInterfaceTable_1a0ae0efac28e1117a19cd59c063f3d113" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>request_sampler</name></member>
      <member refid="structD3dInterfaceTable_1afb17837d2e77d974063aeec856fc263f" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>reset_device</name></member>
      <member refid="structD3dInterfaceTable_1aa877dc190547a203b53a4ad05535e9db" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>resize_bindless_resource_range</name></member>
      <member refid="structD3dInterfaceTable_1aa704d9090811cf66ddb92c0cf6fe6544" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>resource_barrier</name></member>
      <member refid="structD3dInterfaceTable_1a40326738fa832977f923a193ee623527" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_blend_factor</name></member>
      <member refid="structD3dInterfaceTable_1a9fe7e56c67049cd6d08fee0bab0810b3" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_buffer</name></member>
      <member refid="structD3dInterfaceTable_1a6dcd638c00cffcf1402a5f05ec3efa8f" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_capture_full_frame_buffer</name></member>
      <member refid="structD3dInterfaceTable_1a7e745bcdf460d3f8a7b0976b7d01a53d" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_const</name></member>
      <member refid="structD3dInterfaceTable_1a7c3c1817657134a8df555657a4b582e7" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_const_buffer</name></member>
      <member refid="structD3dInterfaceTable_1a0477591b16f8c9bd2192426265bc0e86" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_cs_constbuffer_size</name></member>
      <member refid="structD3dInterfaceTable_1a8450e84b0c091329ddfe0323fdbad689" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_depth</name></member>
      <member refid="structD3dInterfaceTable_1a2f11bb5e643629c490a257de16cc0404" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_depth</name></member>
      <member refid="structD3dInterfaceTable_1af1c32b3bd45c6b71748b1c2fee4efd72" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_depth_0</name></member>
      <member refid="structD3dInterfaceTable_1a8179df50f7d851564fe9be8c891341d7" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_depth_1</name></member>
      <member refid="structD3dInterfaceTable_1adc75133066434abc79ec69d082c1b634" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_depth_bounds</name></member>
      <member refid="structD3dInterfaceTable_1aecc5ae6b8dbc2caa691890f807d33a1c" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_immediate_const</name></member>
      <member refid="structD3dInterfaceTable_1abc4d08542ab7ee2743d8ca82329b4d6f" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_pixel_shader</name></member>
      <member refid="structD3dInterfaceTable_1ab12fb497be652fd5e4c137cbd5469da7" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_present_wnd</name></member>
      <member refid="structD3dInterfaceTable_1aa044e1df6805aee46fc64f2e4458d6b1" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_program</name></member>
      <member refid="structD3dInterfaceTable_1af42f132a53fee5f829addd17b5d9673a" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_render_state</name></member>
      <member refid="structD3dInterfaceTable_1a1bf7077d84dba3f2a322c90a643062ad" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_render_target</name></member>
      <member refid="structD3dInterfaceTable_1a48872be24bc6203fd1a90c0aa894448e" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_render_target</name></member>
      <member refid="structD3dInterfaceTable_1a09918602174c440a85d157c7148b0827" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_render_target</name></member>
      <member refid="structD3dInterfaceTable_1a9784de193022d8872c4beb6cb4b7eae1" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_render_target</name></member>
      <member refid="structD3dInterfaceTable_1a4ce8176c9053e0c471426bbe26496945" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_render_target_0</name></member>
      <member refid="structD3dInterfaceTable_1af3cdea4bc9eb72fa54ba755ef1011e00" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_render_target_1</name></member>
      <member refid="structD3dInterfaceTable_1a2448d9ecb024eafdb3e079f9be362c1f" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_render_target_2</name></member>
      <member refid="structD3dInterfaceTable_1aacf2091b99dd98e88ff04e944968f68d" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_render_target_3</name></member>
      <member refid="structD3dInterfaceTable_1a950349a131fab122ddc3bab69294c9af" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_rwbuffer</name></member>
      <member refid="structD3dInterfaceTable_1a5ba8b8149057b602f62ae9c058d14789" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_rwtex</name></member>
      <member refid="structD3dInterfaceTable_1a9cd0f39680db218fa262e706aafd024b" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_sampler</name></member>
      <member refid="structD3dInterfaceTable_1ac199e5e2da6f48835b27797ed0f17cb7" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_srgb_backbuffer_write</name></member>
      <member refid="structD3dInterfaceTable_1a2dc7ce4667028f99b1da94d52e425971" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_stream_output_buffer</name></member>
      <member refid="structD3dInterfaceTable_1a29e91a101dc21b0ddcf3811b5adbeb23" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_tex</name></member>
      <member refid="structD3dInterfaceTable_1a2c77f3cac328859bd82e22dee3656c19" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_variable_rate_shading</name></member>
      <member refid="structD3dInterfaceTable_1a10801594e42321974663d1e0ddcff7df" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_variable_rate_shading_texture</name></member>
      <member refid="structD3dInterfaceTable_1a338e657db63ecf009e5743508847809f" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_vertex_shader</name></member>
      <member refid="structD3dInterfaceTable_1a9b03dd08f28cce704cc3f9211984d392" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>set_vs_constbuffer_size</name></member>
      <member refid="structD3dInterfaceTable_1a6e1b0106b03e0f1e90eaabc0b126d2e8" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>setgamma</name></member>
      <member refid="structD3dInterfaceTable_1a17a9eaa05783bfe17616079efa4fd792" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>setglobtm</name></member>
      <member refid="structD3dInterfaceTable_1aa1422c07e9dd9b90bc47e1bbee28b6b1" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>setglobtm_vec</name></member>
      <member refid="structD3dInterfaceTable_1aae383291f0390023ef09bbd3f8f0a6c3" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>setind</name></member>
      <member refid="structD3dInterfaceTable_1a71f137b8b3a8d2ac82327a27f974926f" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>setpersp</name></member>
      <member refid="structD3dInterfaceTable_1ab96d5259c7ae94dd0189ade3ebfd9933" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>setscissor</name></member>
      <member refid="structD3dInterfaceTable_1aa857770176ffbba37b8b923b386f3fb3" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>setscissors</name></member>
      <member refid="structD3dInterfaceTable_1af4bd659c632e46d84834669e9f0bee5d" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>setstencil</name></member>
      <member refid="structD3dInterfaceTable_1a4279f15d35c3e3581d4926cf1d3cdce5" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>settex</name></member>
      <member refid="structD3dInterfaceTable_1aa8bda2142d4d9920b7397b1ca022defd" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>settex_vs</name></member>
      <member refid="structD3dInterfaceTable_1a809551b829bf92021c6b412d1011400e" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>settm</name></member>
      <member refid="structD3dInterfaceTable_1a9539affedd1670dc74cf56a1817db0fc" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>settm</name></member>
      <member refid="structD3dInterfaceTable_1aa737ec704d0fffa75e63a85cbab07bab" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>settm</name></member>
      <member refid="structD3dInterfaceTable_1a5fa330a4acb622fc6b16ff555872154c" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>settm_0</name></member>
      <member refid="structD3dInterfaceTable_1a87aa64e3d39a93fd7fefd28fcc64740a" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>settm_1</name></member>
      <member refid="structD3dInterfaceTable_1ada8e25aa37649f698ee0456a7b2777e7" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>settm_2</name></member>
      <member refid="structD3dInterfaceTable_1a3ac9ba433ea2009863700ac2666a8cef" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>setvdecl</name></member>
      <member refid="structD3dInterfaceTable_1affbb82c7b94389a9042e2cca1378fad4" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>setview</name></member>
      <member refid="structD3dInterfaceTable_1a98ed09de46f0608d5225760c4bf690db" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>setviews</name></member>
      <member refid="structD3dInterfaceTable_1adfb26b2f7feead8ec2169a832613b7d4" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>setvsrc</name></member>
      <member refid="structD3dInterfaceTable_1a61661b4a81b817cf5ced0f17028ecccf" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>setvsrc_ex</name></member>
      <member refid="structD3dInterfaceTable_1a6c169a1fd0147132fb443330c8b9c400" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>setwire</name></member>
      <member refid="structD3dInterfaceTable_1ac471efc2b10250e36fc7ebf0cff19e70" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>should_use_compute_for_image_processing</name></member>
      <member refid="structD3dInterfaceTable_1a7827b120704ae5636cda6046246277c6" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>start_capture</name></member>
      <member refid="structD3dInterfaceTable_1a0103a4e103133fd437d5acd458250a90" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>stop_capture</name></member>
      <member refid="structD3dInterfaceTable_1a8884f9a46e0a2db2b5df2e84a299586b" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>stretch_rect</name></member>
      <member refid="structD3dInterfaceTable_1a6fb9a8488c80169bac9a9e14d41f9508" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>stretch_rect_0</name></member>
      <member refid="structD3dInterfaceTable_1af58ca0ec33493d839f112425855ba106" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>update_bindless_resource</name></member>
      <member refid="structD3dInterfaceTable_1aef58267f94990a016d258dbc24d14e2d" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>update_bindless_resources_to_null</name></member>
      <member refid="structD3dInterfaceTable_1ae15230bbdaf6f49dc11937ca5523d132" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>update_screen</name></member>
      <member refid="structD3dInterfaceTable_1a90f269c4b4cb61023a4c70b4177636e7" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>update_texture_and_release_update_buffer</name></member>
      <member refid="structD3dInterfaceTable_1a1939b28e1f2665e9b3c584a340682c74" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>validatepersp</name></member>
      <member refid="structD3dInterfaceTable_1a147b28322ecab065fa67a30c47eb9fd0" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>wait_for_async_present</name></member>
      <member refid="structD3dInterfaceTable_1ab88d3605fbe5fe5ce8d1d0a73e936873" prot="public" virt="non-virtual"><scope>D3dInterfaceTable</scope><name>zero_rwbufi</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
