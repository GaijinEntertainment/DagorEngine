<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="structShaderLibraryCreateInfo" kind="struct" language="C++" prot="public">
    <compoundname>ShaderLibraryCreateInfo</compoundname>
    <includes refid="dag__shaderLibraryObject_8h" local="no">dag_shaderLibraryObject.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structShaderLibraryCreateInfo_1a54060c40d0fb6328f2645219740ec9b6" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* ShaderLibraryCreateInfo::debugName</definition>
        <argsstring></argsstring>
        <name>debugName</name>
        <qualifiedname>ShaderLibraryCreateInfo::debugName</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Optional debug name, drivers may use this to enhance debug information. This may be null. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_shaderLibraryObject.h" line="23" column="14" bodyfile="dag_shaderLibraryObject.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structShaderLibraryCreateInfo_1a1fcdaf7459c251cfdc0d41fe3ad3fe9f" prot="public" static="no" mutable="no">
        <type>dag::ConstSpan&lt; const char * &gt;</type>
        <definition>dag::ConstSpan&lt;const char *&gt; ShaderLibraryCreateInfo::nameTable</definition>
        <argsstring></argsstring>
        <name>nameTable</name>
        <qualifiedname>ShaderLibraryCreateInfo::nameTable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drivers may need to translate indices into names back and forth. This has to match the exported shaders of the library defined by driverBinary. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_shaderLibraryObject.h" line="26" column="18" bodyfile="dag_shaderLibraryObject.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structShaderLibraryCreateInfo_1a55d7c6e2991091a3867ab67595f5e27d" prot="public" static="no" mutable="no">
        <type>dag::ConstSpan&lt; const uint8_t &gt;</type>
        <definition>dag::ConstSpan&lt;const uint8_t&gt; ShaderLibraryCreateInfo::driverBinary</definition>
        <argsstring></argsstring>
        <name>driverBinary</name>
        <qualifiedname>ShaderLibraryCreateInfo::driverBinary</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to driver specific binary of a shader library. Can not be an empty span and stored data must be a valid binary for the current <ref refid="namespaced3d" kindref="compound">d3d</ref> driver. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_shaderLibraryObject.h" line="29" column="18" bodyfile="dag_shaderLibraryObject.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structShaderLibraryCreateInfo_1a3f0960fc0cef79e0842592cad9926f37" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ShaderLibraryCreateInfo::mayBeUsedByExpandablePipeline</definition>
        <argsstring></argsstring>
        <name>mayBeUsedByExpandablePipeline</name>
        <qualifiedname>ShaderLibraryCreateInfo::mayBeUsedByExpandablePipeline</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If this library may be used to create a pipeline that is expandable, then this has to be set to true otherwise the create of pipelines that supposed to be expandable and use the library created without this setting may fail. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dag_shaderLibraryObject.h" line="32" column="8" bodyfile="dag_shaderLibraryObject.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Create info structure that contains all the data to create a new shader library that can provide shaders to create pipeline objects. </para>
    </detaileddescription>
    <location file="dag_shaderLibraryObject.h" line="19" column="1" bodyfile="dag_shaderLibraryObject.h" bodystart="20" bodyend="33"/>
    <listofallmembers>
      <member refid="structShaderLibraryCreateInfo_1a54060c40d0fb6328f2645219740ec9b6" prot="public" virt="non-virtual"><scope>ShaderLibraryCreateInfo</scope><name>debugName</name></member>
      <member refid="structShaderLibraryCreateInfo_1a55d7c6e2991091a3867ab67595f5e27d" prot="public" virt="non-virtual"><scope>ShaderLibraryCreateInfo</scope><name>driverBinary</name></member>
      <member refid="structShaderLibraryCreateInfo_1a3f0960fc0cef79e0842592cad9926f37" prot="public" virt="non-virtual"><scope>ShaderLibraryCreateInfo</scope><name>mayBeUsedByExpandablePipeline</name></member>
      <member refid="structShaderLibraryCreateInfo_1a1fcdaf7459c251cfdc0d41fe3ad3fe9f" prot="public" virt="non-virtual"><scope>ShaderLibraryCreateInfo</scope><name>nameTable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
