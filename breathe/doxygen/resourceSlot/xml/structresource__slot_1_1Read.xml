<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="structresource__slot_1_1Read" kind="struct" language="C++" prot="public">
    <compoundname>resource_slot::Read</compoundname>
    <includes refid="actions_8h" local="no">actions.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structresource__slot_1_1Read_1a8102424c4d6ea572d754b03d251c3b9f" prot="public" static="no" mutable="no">
        <type>::resource_slot::detail::SlotId</type>
        <definition>::resource_slot::detail::SlotId resource_slot::Read::slot</definition>
        <argsstring></argsstring>
        <name>slot</name>
        <qualifiedname>resource_slot::Read::slot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="actions.h" line="72" column="35" bodyfile="actions.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structresource__slot_1_1Read_1a6c3d4781dbefd4670a2c81f544828b3a" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int resource_slot::Read::priority</definition>
        <argsstring></argsstring>
        <name>priority</name>
        <qualifiedname>resource_slot::Read::priority</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="actions.h" line="73" column="7" bodyfile="actions.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structresource__slot_1_1Read_1a00e917e7262e2f34ac0ef1baaa376c27" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int resource_slot::Read::DEFAULT_READ_PRIORITY</definition>
        <argsstring></argsstring>
        <name>DEFAULT_READ_PRIORITY</name>
        <qualifiedname>resource_slot::Read::DEFAULT_READ_PRIORITY</qualifiedname>
        <initializer>= INT_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="actions.h" line="74" column="24" bodyfile="actions.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structresource__slot_1_1Read_1a5b9c7c4d1d8c8b4d02c858b35b33203a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>resource_slot::Read::Read</definition>
        <argsstring>(const char *slot_name, int read_priority=DEFAULT_READ_PRIORITY)</argsstring>
        <name>Read</name>
        <qualifiedname>resource_slot::Read::Read</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>slot_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>read_priority</declname>
          <defval>DEFAULT_READ_PRIORITY</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slot_name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the slot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>read_priority</parametername>
</parameternamelist>
<parameterdescription>
<para>priority of read; nodes with LOWER priority will be scheduled BEFORE current node. By default <ref refid="structresource__slot_1_1Read" kindref="compound">Read</ref> will be scheduled after all <ref refid="structresource__slot_1_1Update" kindref="compound">Update</ref> of this slot. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="actions.h" line="70" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="structresource__slot_1_1Read" kindref="compound">Read</ref> request</para>
<para>Requested slot CAN be read in the node </para>
    </detaileddescription>
    <location file="actions.h" line="60" column="1" bodyfile="actions.h" bodystart="61" bodyend="75"/>
    <listofallmembers>
      <member refid="structresource__slot_1_1Read_1a00e917e7262e2f34ac0ef1baaa376c27" prot="public" virt="non-virtual"><scope>resource_slot::Read</scope><name>DEFAULT_READ_PRIORITY</name></member>
      <member refid="structresource__slot_1_1Read_1a6c3d4781dbefd4670a2c81f544828b3a" prot="public" virt="non-virtual"><scope>resource_slot::Read</scope><name>priority</name></member>
      <member refid="structresource__slot_1_1Read_1a5b9c7c4d1d8c8b4d02c858b35b33203a" prot="public" virt="non-virtual"><scope>resource_slot::Read</scope><name>Read</name></member>
      <member refid="structresource__slot_1_1Read_1a8102424c4d6ea572d754b03d251c3b9f" prot="public" virt="non-virtual"><scope>resource_slot::Read</scope><name>slot</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
