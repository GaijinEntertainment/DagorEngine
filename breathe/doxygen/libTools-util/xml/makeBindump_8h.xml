<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="makeBindump_8h" kind="file" language="C++">
    <compoundname>makeBindump.h</compoundname>
    <includes local="no">math/dag_e3dColor.h</includes>
    <includes local="no">generic/dag_span.h</includes>
    <includes local="no">generic/dag_smallTab.h</includes>
    <includes local="no">util/dag_oaHashNameMap.h</includes>
    <includes local="no">util/dag_bindump_ext.h</includes>
    <includes local="no">ioSys/dag_chainedMemIo.h</includes>
    <includes local="no">util/dag_stdint.h</includes>
    <includes local="no">util/dag_globDef.h</includes>
    <includes refid="targetClass_8h" local="no">libTools/util/targetClass.h</includes>
    <includes local="no">util/dag_simpleString.h</includes>
    <includedby refid="binDumpHierBitmap_8h" local="no">binDumpHierBitmap.h</includedby>
    <includedby refid="binDumpUtil_8h" local="no">binDumpUtil.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>makeBindump.h</label>
        <link refid="makeBindump_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>libTools/util/targetClass.h</label>
        <link refid="targetClass_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>generic/dag_smallTab.h</label>
      </node>
      <node id="3">
        <label>generic/dag_span.h</label>
      </node>
      <node id="7">
        <label>ioSys/dag_chainedMemIo.h</label>
      </node>
      <node id="2">
        <label>math/dag_e3dColor.h</label>
      </node>
      <node id="11">
        <label>util/dag_baseDef.h</label>
      </node>
      <node id="6">
        <label>util/dag_bindump_ext.h</label>
      </node>
      <node id="9">
        <label>util/dag_globDef.h</label>
      </node>
      <node id="5">
        <label>util/dag_oaHashNameMap.h</label>
      </node>
      <node id="12">
        <label>util/dag_simpleString.h</label>
      </node>
      <node id="8">
        <label>util/dag_stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>binDumpHierBitmap.h</label>
        <link refid="binDumpHierBitmap_8h"/>
      </node>
      <node id="3">
        <label>binDumpUtil.h</label>
        <link refid="binDumpUtil_8h"/>
      </node>
      <node id="1">
        <label>makeBindump.h</label>
        <link refid="makeBindump_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structmkbindump_1_1Ref" prot="public">mkbindump::Ref</innerclass>
    <innerclass refid="classmkbindump_1_1GatherNameMap" prot="public">mkbindump::GatherNameMap</innerclass>
    <innerclass refid="structmkbindump_1_1SharedStorage" prot="public">mkbindump::SharedStorage</innerclass>
    <innerclass refid="classmkbindump_1_1BinDumpSaveCB" prot="public">mkbindump::BinDumpSaveCB</innerclass>
    <innerclass refid="structmkbindump_1_1PatchTabRef" prot="public">mkbindump::PatchTabRef</innerclass>
    <innernamespace refid="namespacemkbindump">mkbindump</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dagor<sp/>Tech<sp/>6.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math/dag_e3dColor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;generic/dag_span.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;generic/dag_smallTab.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/dag_oaHashNameMap.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/dag_bindump_ext.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ioSys/dag_chainedMemIo.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/dag_stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/dag_globDef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="targetClass_8h" kindref="compound">libTools/util/targetClass.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/dag_simpleString.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemkbindump" kindref="compound">mkbindump</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21" refid="structmkbindump_1_1Ref" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmkbindump_1_1Ref" kindref="compound">Ref</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23" refid="structmkbindump_1_1Ref_1a75dfbcb549f37df9445eccde2a3a9503" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1Ref_1aa057cb1482b2262d7124e78fb72cfc62" kindref="member">start</ref>,<sp/><ref refid="structmkbindump_1_1Ref_1a75dfbcb549f37df9445eccde2a3a9503" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structmkbindump_1_1Ref_1ad62674b25a97223b7bf2f4801d324102" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1Ref_1ad62674b25a97223b7bf2f4801d324102" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1Ref_1aa057cb1482b2262d7124e78fb72cfc62" kindref="member">start</ref><sp/>+<sp/><ref refid="structmkbindump_1_1Ref_1a75dfbcb549f37df9445eccde2a3a9503" kindref="member">count</ref><sp/>-<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="structmkbindump_1_1Ref_1a3eaac2e66485726e3f3b093530f4e5dd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1Ref_1a3eaac2e66485726e3f3b093530f4e5dd" kindref="member">zero</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1Ref_1aa057cb1482b2262d7124e78fb72cfc62" kindref="member">start</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1Ref_1a75dfbcb549f37df9445eccde2a3a9503" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32" refid="structmkbindump_1_1Ref_1a4593a60fe396c34d194002a6fde3f115" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1Ref_1a4593a60fe396c34d194002a6fde3f115" kindref="member">set</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1Ref_1aa057cb1482b2262d7124e78fb72cfc62" kindref="member">start</ref><sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1Ref_1a75dfbcb549f37df9445eccde2a3a9503" kindref="member">count</ref><sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classmkbindump_1_1GatherNameMap" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmkbindump_1_1GatherNameMap" kindref="compound">GatherNameMap</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FastNameMap</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46" refid="classmkbindump_1_1GatherNameMap_1ab2bc892e277b276c7673806a0b0099f4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmkbindump_1_1GatherNameMap_1ab2bc892e277b276c7673806a0b0099f4" kindref="member">GatherNameMap</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classmkbindump_1_1GatherNameMap_1a9517016739525079491d7cb0a970b42c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1GatherNameMap_1a9517016739525079491d7cb0a970b42c" kindref="member">prepareXmap</ref>()</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>clear_and_resize(<ref refid="classmkbindump_1_1GatherNameMap_1a74bc94cbb680463f6c7af1e3c90b4209" kindref="member">xmap</ref>,<sp/>nameCount());</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>mem_set_ff(<ref refid="classmkbindump_1_1GatherNameMap_1a74bc94cbb680463f6c7af1e3c90b4209" kindref="member">xmap</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>gather_ids_in_lexical_order(<ref refid="classmkbindump_1_1GatherNameMap_1adfd8501a6aae3b27641562fc4830e084" kindref="member">sNid</ref>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">FastNameMap<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classmkbindump_1_1GatherNameMap_1adfd8501a6aae3b27641562fc4830e084" kindref="member">sNid</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1GatherNameMap_1a74bc94cbb680463f6c7af1e3c90b4209" kindref="member">xmap</ref>[<ref refid="classmkbindump_1_1GatherNameMap_1adfd8501a6aae3b27641562fc4830e084" kindref="member">sNid</ref>[i]]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classmkbindump_1_1GatherNameMap_1a77d10bc9bebb03a1af0d999c7fdfa624" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classmkbindump_1_1GatherNameMap_1a77d10bc9bebb03a1af0d999c7fdfa624" kindref="member">getOrdinalName</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ord_idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ord_idx<sp/>&lt;<sp/><ref refid="classmkbindump_1_1GatherNameMap_1adfd8501a6aae3b27641562fc4830e084" kindref="member">sNid</ref>.size()<sp/>?<sp/>getName(<ref refid="classmkbindump_1_1GatherNameMap_1adfd8501a6aae3b27641562fc4830e084" kindref="member">sNid</ref>[ord_idx])<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classmkbindump_1_1GatherNameMap_1adfd8501a6aae3b27641562fc4830e084" refkind="member"><highlight class="normal"><sp/><sp/>SmallTab&lt;int,<sp/>TmpmemAlloc&gt;<sp/><ref refid="classmkbindump_1_1GatherNameMap_1adfd8501a6aae3b27641562fc4830e084" kindref="member">sNid</ref>;</highlight></codeline>
<codeline lineno="65" refid="classmkbindump_1_1GatherNameMap_1a74bc94cbb680463f6c7af1e3c90b4209" refkind="member"><highlight class="normal"><sp/><sp/>SmallTab&lt;int,<sp/>TmpmemAlloc&gt;<sp/><ref refid="classmkbindump_1_1GatherNameMap_1a74bc94cbb680463f6c7af1e3c90b4209" kindref="member">xmap</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="72" refid="structmkbindump_1_1SharedStorage" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmkbindump_1_1SharedStorage" kindref="compound">SharedStorage</ref></highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74" refid="structmkbindump_1_1SharedStorage_1a00aaa373518f8e45b3f0ef4850493067" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structmkbindump_1_1SharedStorage_1a00aaa373518f8e45b3f0ef4850493067" kindref="member">SharedStorage</ref>()<sp/>:<sp/><ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>(tmpmem),<sp/><ref refid="structmkbindump_1_1SharedStorage_1a92ebb47089c4cdbb563f8ef822d59f25" kindref="member">pos</ref>(tmpmem),<sp/><ref refid="structmkbindump_1_1SharedStorage_1a252d0576b698748cb3638e9de7068013" kindref="member">base</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structmkbindump_1_1SharedStorage_1a22f6c25f69bd3eb5185ea58d234b0615" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1SharedStorage_1a22f6c25f69bd3eb5185ea58d234b0615" kindref="member">getRef</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;dest_start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt_thres<sp/>=<sp/>4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>div<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&lt;<sp/>opt_thres)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>(int)<ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>.size()<sp/>-<sp/>count;<sp/>i<sp/>+=<sp/>div)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(val,<sp/>&amp;<ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>[i],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>count)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">//-V1014</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_start<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="structmkbindump_1_1SharedStorage_1a92ebb47089c4cdbb563f8ef822d59f25" kindref="member">pos</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structmkbindump_1_1SharedStorage_1a92ebb47089c4cdbb563f8ef822d59f25" kindref="member">pos</ref>[i]<sp/>+<sp/>count<sp/>&lt;=<sp/><ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>.size()<sp/>&amp;&amp;<sp/>memcmp(val,<sp/>&amp;<ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>[<ref refid="structmkbindump_1_1SharedStorage_1a92ebb47089c4cdbb563f8ef822d59f25" kindref="member">pos</ref>[i]],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>count)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">//-V1014</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_start<sp/>=<sp/><ref refid="structmkbindump_1_1SharedStorage_1a92ebb47089c4cdbb563f8ef822d59f25" kindref="member">pos</ref>[i];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(div<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>(<ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>.size()<sp/>%<sp/>div)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>add<sp/>=<sp/>div<sp/>-<sp/>(<ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>.size()<sp/>%<sp/>div);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>append_items(<ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>,<sp/>add);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem_set_0(make_span(<ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>).subspan(idx));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>(div<sp/>&gt;<sp/>1<sp/>?<sp/>((count<sp/>-<sp/>1)<sp/>/<sp/>div)<sp/>*<sp/>div<sp/>:<sp/>count<sp/>-<sp/>1),<sp/>i<sp/>=<sp/><ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>.size()<sp/>-<sp/>l;<sp/>l<sp/>&gt;<sp/>0;<sp/>i<sp/>+=<sp/>div,<sp/>l<sp/>-=<sp/>div)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>mem_eq(make_span(<ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>).subspan(i,<sp/>l),<sp/>val))</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_start<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append_items(<ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>,<sp/>count<sp/>-<sp/>l,<sp/>val<sp/>+<sp/>l);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1SharedStorage_1a92ebb47089c4cdbb563f8ef822d59f25" kindref="member">pos</ref>.size()<sp/>&amp;&amp;<sp/>dest_start<sp/>&lt;=<sp/><ref refid="structmkbindump_1_1SharedStorage_1a92ebb47089c4cdbb563f8ef822d59f25" kindref="member">pos</ref>.back();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>dest_start<sp/>=<sp/>append_items(<ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>,<sp/>count,<sp/>val);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121" refid="structmkbindump_1_1SharedStorage_1ad32f2f89ef08f15c50d8ce17ce05a32c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1SharedStorage_1ad32f2f89ef08f15c50d8ce17ce05a32c" kindref="member">getRef</ref>(int64_t<sp/>&amp;dest_start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt_thres<sp/>=<sp/>4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>div<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dest32;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="structmkbindump_1_1SharedStorage_1a22f6c25f69bd3eb5185ea58d234b0615" kindref="member">getRef</ref>(dest32,<sp/>val,<sp/>count,<sp/>opt_thres,<sp/>div);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>dest_start<sp/>=<sp/>dest32;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="structmkbindump_1_1SharedStorage_1a0d2e8c2f95988e607d2112c3a54152f3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1SharedStorage_1a0d2e8c2f95988e607d2112c3a54152f3" kindref="member">getRef</ref>(<ref refid="structmkbindump_1_1Ref" kindref="compound">Ref</ref><sp/>&amp;dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt_thres<sp/>=<sp/>4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>div<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>dest.<ref refid="structmkbindump_1_1Ref_1a75dfbcb549f37df9445eccde2a3a9503" kindref="member">count</ref><sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!count)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest.<ref refid="structmkbindump_1_1Ref_1aa057cb1482b2262d7124e78fb72cfc62" kindref="member">start</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structmkbindump_1_1SharedStorage_1a22f6c25f69bd3eb5185ea58d234b0615" kindref="member">getRef</ref>(dest.<ref refid="structmkbindump_1_1Ref_1aa057cb1482b2262d7124e78fb72cfc62" kindref="member">start</ref>,<sp/>val,<sp/>count,<sp/>opt_thres,<sp/>div))</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1SharedStorage_1a92ebb47089c4cdbb563f8ef822d59f25" kindref="member">pos</ref>.push_back(dest.<ref refid="structmkbindump_1_1Ref_1aa057cb1482b2262d7124e78fb72cfc62" kindref="member">start</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="structmkbindump_1_1SharedStorage_1a6fd4c674f049f1662a94a30b8aaf75a3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1SharedStorage_1a6fd4c674f049f1662a94a30b8aaf75a3" kindref="member">getRef</ref>(bindump::Span&lt;T&gt;<sp/>&amp;dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt_thres<sp/>=<sp/>4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>div<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>dest.setCount(count);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!count)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="structmkbindump_1_1SharedStorage_1a22f6c25f69bd3eb5185ea58d234b0615" kindref="member">getRef</ref>(start,<sp/>val,<sp/>count,<sp/>opt_thres,<sp/>div);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>vecHolder.getElementAddress(start);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1SharedStorage_1a92ebb47089c4cdbb563f8ef822d59f25" kindref="member">pos</ref>.push_back(start);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="structmkbindump_1_1SharedStorage_1acbe65785c1409a37ecffce2b8d87d0ee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1SharedStorage_1acbe65785c1409a37ecffce2b8d87d0ee" kindref="member">indexToOffset</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1SharedStorage_1a252d0576b698748cb3638e9de7068013" kindref="member">base</ref><sp/>+<sp/>elem_size(<ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>)<sp/>*<sp/>idx;<sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="structmkbindump_1_1SharedStorage_1a0288ee836b067b85fc05dbbe956d8d75" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1SharedStorage_1a0288ee836b067b85fc05dbbe956d8d75" kindref="member">refIndexToOffset</ref>(<ref refid="structmkbindump_1_1Ref" kindref="compound">Ref</ref><sp/>&amp;ref)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="170"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ref.<ref refid="structmkbindump_1_1Ref_1a75dfbcb549f37df9445eccde2a3a9503" kindref="member">count</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ref.<ref refid="structmkbindump_1_1Ref_1aa057cb1482b2262d7124e78fb72cfc62" kindref="member">start</ref><sp/>=<sp/><ref refid="structmkbindump_1_1SharedStorage_1acbe65785c1409a37ecffce2b8d87d0ee" kindref="member">indexToOffset</ref>(ref.<ref refid="structmkbindump_1_1Ref_1aa057cb1482b2262d7124e78fb72cfc62" kindref="member">start</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ref.<ref refid="structmkbindump_1_1Ref_1a3eaac2e66485726e3f3b093530f4e5dd" kindref="member">zero</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="structmkbindump_1_1SharedStorage_1ae1b1ad457361c12fc224d071f5897eac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1SharedStorage_1ae1b1ad457361c12fc224d071f5897eac" kindref="member">clear</ref>()</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>clear_and_shrink(<ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>clear_and_shrink(<ref refid="structmkbindump_1_1SharedStorage_1a92ebb47089c4cdbb563f8ef822d59f25" kindref="member">pos</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1SharedStorage_1a252d0576b698748cb3638e9de7068013" kindref="member">base</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;T&gt;<sp/><ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="186" refid="structmkbindump_1_1SharedStorage_1a92ebb47089c4cdbb563f8ef822d59f25" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;int&gt;<sp/><ref refid="structmkbindump_1_1SharedStorage_1a92ebb47089c4cdbb563f8ef822d59f25" kindref="member">pos</ref>;</highlight></codeline>
<codeline lineno="188" refid="structmkbindump_1_1SharedStorage_1a252d0576b698748cb3638e9de7068013" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1SharedStorage_1a252d0576b698748cb3638e9de7068013" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="structmkbindump_1_1SharedStorage_1a8f7ad0e4c93b1376fe40bab21548a6d9" refkind="member"><highlight class="normal"><sp/><sp/>bindump::VecHolder&lt;T&gt;<sp/>&amp;<ref refid="structmkbindump_1_1SharedStorage_1a8f7ad0e4c93b1376fe40bab21548a6d9" kindref="member">getVecHolder</ref>()</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>vecHolder<sp/>=<sp/>make_span(<ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vecHolder;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>bindump::VecHolder&lt;T&gt;<sp/>vecHolder;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="namespacemkbindump_1ae453e0b0370be1ee3ccfa6fc8ab4a54c" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="namespacemkbindump_1ae453e0b0370be1ee3ccfa6fc8ab4a54c" kindref="member">le2be32</ref>(uint32_t<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(v<sp/>&gt;&gt;<sp/>24)<sp/>|<sp/>((v<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF00)<sp/>|<sp/>((v<sp/>&lt;&lt;<sp/>8)<sp/>&amp;<sp/>0xFF0000)<sp/>|<sp/>(v<sp/>&lt;&lt;<sp/>24);<sp/>}</highlight></codeline>
<codeline lineno="202" refid="namespacemkbindump_1af44d3b3b418864993ff0faea3f01dc22" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="namespacemkbindump_1af44d3b3b418864993ff0faea3f01dc22" kindref="member">le2be16</ref>(uint16_t<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(v<sp/>&gt;&gt;<sp/>8)<sp/>|<sp/>((v<sp/>&amp;<sp/>0xFF)<sp/>&lt;&lt;<sp/>8);<sp/>}</highlight></codeline>
<codeline lineno="203" refid="namespacemkbindump_1ad59fe8dac19713bc586e3fe609631814" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemkbindump_1ad59fe8dac19713bc586e3fe609631814" kindref="member">le2be32_s</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dw_num)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>uint32_t<sp/>*d<sp/>=<sp/>(uint32_t<sp/>*)dest;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*s<sp/>=<sp/>(uint32_t<sp/>*)src;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(dw_num<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>*d<sp/>=<sp/><ref refid="namespacemkbindump_1ae453e0b0370be1ee3ccfa6fc8ab4a54c" kindref="member">le2be32</ref>(*s);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>d++;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>s++;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>dw_num--;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215" refid="namespacemkbindump_1a4d211100da508896aa806b7c83063865" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemkbindump_1a4d211100da508896aa806b7c83063865" kindref="member">le2be16_s</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>w_num)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>uint16_t<sp/>*d<sp/>=<sp/>(uint16_t<sp/>*)dest;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*s<sp/>=<sp/>(uint16_t<sp/>*)src;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(w_num<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>*d<sp/>=<sp/><ref refid="namespacemkbindump_1af44d3b3b418864993ff0faea3f01dc22" kindref="member">le2be16</ref>(*s);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>d++;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>s++;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>w_num--;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>helpers<sp/>to<sp/>perform<sp/>conditional<sp/>conversion<sp/>(to<sp/>be<sp/>used<sp/>instead<sp/>of<sp/>&apos;read_be<sp/>?<sp/>le2be32(val)<sp/>:<sp/>val&apos;<sp/>pattern)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="namespacemkbindump_1abe9862cd29e897ea9fc1d77c56911882" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="namespacemkbindump_1abe9862cd29e897ea9fc1d77c56911882" kindref="member">le2be32_cond</ref>(uint32_t<sp/>v,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>be)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>be<sp/>?<sp/><ref refid="namespacemkbindump_1ae453e0b0370be1ee3ccfa6fc8ab4a54c" kindref="member">le2be32</ref>(v)<sp/>:<sp/>v;<sp/>}</highlight></codeline>
<codeline lineno="230" refid="namespacemkbindump_1a958b5a83ce5cbfe23088e6c7d02cbe4b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="namespacemkbindump_1a958b5a83ce5cbfe23088e6c7d02cbe4b" kindref="member">le2be16_cond</ref>(uint16_t<sp/>v,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>be)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>be<sp/>?<sp/><ref refid="namespacemkbindump_1af44d3b3b418864993ff0faea3f01dc22" kindref="member">le2be16</ref>(v)<sp/>:<sp/>v;<sp/>}</highlight></codeline>
<codeline lineno="231" refid="namespacemkbindump_1a813ebaa5fd01d980bfdd8862f79c653a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemkbindump_1a813ebaa5fd01d980bfdd8862f79c653a" kindref="member">le2be32_s_cond</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dw_num,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>be)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(be)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemkbindump_1ad59fe8dac19713bc586e3fe609631814" kindref="member">le2be32_s</ref>(dest,<sp/>src,<sp/>dw_num);</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236" refid="namespacemkbindump_1ac8b403122bc5fcff705c905a40c114cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemkbindump_1ac8b403122bc5fcff705c905a40c114cf" kindref="member">le2be16_s_cond</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>w_num,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>be)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(be)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemkbindump_1a4d211100da508896aa806b7c83063865" kindref="member">le2be16_s</ref>(dest,<sp/>src,<sp/>w_num);</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="classmkbindump_1_1BinDumpSaveCB" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmkbindump_1_1BinDumpSaveCB" kindref="compound">BinDumpSaveCB</ref></highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="250" refid="classmkbindump_1_1BinDumpSaveCB_1ae941955f31943eac28a372ff3206fd8daff93f29c5b9fb98c7c5880a54bfe1173" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ae941955f31943eac28a372ff3206fd8daff93f29c5b9fb98c7c5880a54bfe1173" kindref="member">PTR_SZ</ref><sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ae941955f31943eac28a372ff3206fd8da652f6f61a44a61e3f6688ce02c7e988c" kindref="member">TAB_SZ</ref><sp/>=<sp/>16</highlight></codeline>
<codeline lineno="252" refid="classmkbindump_1_1BinDumpSaveCB_1ae941955f31943eac28a372ff3206fd8da652f6f61a44a61e3f6688ce02c7e988c" refkind="member"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BINDUMP_TARGET_BE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" kindref="member">WRITE_BE</ref><sp/>=<sp/>BINDUMP_TARGET_BE;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB" kindref="compound">BinDumpSaveCB</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_sz,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>target)<sp/>:<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>(max_sz<sp/>&lt;<sp/>(128<sp/>&lt;&lt;<sp/>10)<sp/>?<sp/>max_sz<sp/>:<sp/>(128<sp/>&lt;&lt;<sp/>10))</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a73247e1fafe8f416c370d36d6d51de2c" kindref="member">targetCode</ref><sp/>=<sp/>target;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.setMcdMinMax(128<sp/>&lt;&lt;<sp/>10,<sp/>8<sp/>&lt;&lt;<sp/>20);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" kindref="member">WRITE_BE</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="classmkbindump_1_1BinDumpSaveCB_1a5a6c46c92bef1193e2e432d4b9f42c2d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a5a6c46c92bef1193e2e432d4b9f42c2d" kindref="member">BinDumpSaveCB</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_sz,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>target,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>big_endian)<sp/>:<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>(max_sz<sp/>&lt;<sp/>(128<sp/>&lt;&lt;<sp/>10)<sp/>?<sp/>max_sz<sp/>:<sp/>(128<sp/>&lt;&lt;<sp/>10)),<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" kindref="member">WRITE_BE</ref>(big_endian)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a73247e1fafe8f416c370d36d6d51de2c" kindref="member">targetCode</ref><sp/>=<sp/>target;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.setMcdMinMax(128<sp/>&lt;&lt;<sp/>10,<sp/>8<sp/>&lt;&lt;<sp/>20);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="classmkbindump_1_1BinDumpSaveCB_1a5176074a8d1c1f701d7d5257628fa17d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a5176074a8d1c1f701d7d5257628fa17d" kindref="member">BinDumpSaveCB</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_sz,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB" kindref="compound">BinDumpSaveCB</ref><sp/>&amp;orig)<sp/>:<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>(max_sz<sp/>&lt;<sp/>(128<sp/>&lt;&lt;<sp/>10)<sp/>?<sp/>max_sz<sp/>:<sp/>(128<sp/>&lt;&lt;<sp/>10))</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BINDUMP_TARGET_BE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" kindref="member">WRITE_BE</ref><sp/>=<sp/>orig.<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" kindref="member">WRITE_BE</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a73247e1fafe8f416c370d36d6d51de2c" kindref="member">targetCode</ref><sp/>=<sp/>orig.<ref refid="classmkbindump_1_1BinDumpSaveCB_1ae6f02c43485d8618c6050bda91cdefbb" kindref="member">getTarget</ref>();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ae84e0ba4c54f90034ef9fdc854438363" kindref="member">setFastBuildFlag</ref>(orig.<ref refid="classmkbindump_1_1BinDumpSaveCB_1a4a5dae0ed458f92632680473f4edfbc4" kindref="member">isFastBuild</ref>());</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a48d18e519dbd48f1c7b511a093b79b71" kindref="member">setProfile</ref>(orig.<ref refid="classmkbindump_1_1BinDumpSaveCB_1ae72699dc74e2332d2ab8f0773cb3a3c0" kindref="member">getProfile</ref>());</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.setMcdMinMax(128<sp/>&lt;&lt;<sp/>10,<sp/>8<sp/>&lt;&lt;<sp/>20);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="classmkbindump_1_1BinDumpSaveCB_1ae6f02c43485d8618c6050bda91cdefbb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ae6f02c43485d8618c6050bda91cdefbb" kindref="member">getTarget</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a73247e1fafe8f416c370d36d6d51de2c" kindref="member">targetCode</ref>;<sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="classmkbindump_1_1BinDumpSaveCB_1a48d18e519dbd48f1c7b511a093b79b71" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a48d18e519dbd48f1c7b511a093b79b71" kindref="member">setProfile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)<sp/>{<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1aec7f2174370b8c62837d3d117d700fcb" kindref="member">profileName</ref><sp/>=<sp/>str;<sp/>}</highlight></codeline>
<codeline lineno="289" refid="classmkbindump_1_1BinDumpSaveCB_1ae72699dc74e2332d2ab8f0773cb3a3c0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classmkbindump_1_1BinDumpSaveCB_1ae72699dc74e2332d2ab8f0773cb3a3c0" kindref="member">getProfile</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1aec7f2174370b8c62837d3d117d700fcb" kindref="member">profileName</ref>.empty()<sp/>?<sp/>NULL<sp/>:<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1aec7f2174370b8c62837d3d117d700fcb" kindref="member">profileName</ref>.str();<sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="classmkbindump_1_1BinDumpSaveCB_1ae84e0ba4c54f90034ef9fdc854438363" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ae84e0ba4c54f90034ef9fdc854438363" kindref="member">setFastBuildFlag</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fast_build)<sp/>{<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1af8f328eb30858f3b9b60b2740e16a1a7" kindref="member">fastBuildFlag</ref><sp/>=<sp/>fast_build;<sp/>}</highlight></codeline>
<codeline lineno="294" refid="classmkbindump_1_1BinDumpSaveCB_1a4a5dae0ed458f92632680473f4edfbc4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a4a5dae0ed458f92632680473f4edfbc4" kindref="member">isFastBuild</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1af8f328eb30858f3b9b60b2740e16a1a7" kindref="member">fastBuildFlag</ref>;<sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="classmkbindump_1_1BinDumpSaveCB_1a92b498bd297b02bb47fcd96fcacee0a2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a92b498bd297b02bb47fcd96fcacee0a2" kindref="member">reset</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_size)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>clear_and_shrink(<ref refid="classmkbindump_1_1BinDumpSaveCB_1a09fdc76928dfcf732f156cd6c3232f87" kindref="member">blocks</ref>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>clear_and_shrink(<ref refid="classmkbindump_1_1BinDumpSaveCB_1a765126c91cf2273fda1c6eda4f003a04" kindref="member">origin</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_size<sp/>&gt;<sp/>(128<sp/>&lt;&lt;<sp/>10))</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_size<sp/>=<sp/>(128<sp/>&lt;&lt;<sp/>10);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_size<sp/>&lt;<sp/>(4<sp/>&lt;&lt;<sp/>10))</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_size<sp/>=<sp/>(4<sp/>&lt;&lt;<sp/>10);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.deleteMem();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.setMem(MemoryChainedData::create(new_size,<sp/>NULL),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.setMcdMinMax(128<sp/>&lt;&lt;<sp/>10,<sp/>8<sp/>&lt;&lt;<sp/>20);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>base<sp/>writer<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.tell()<sp/>-<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a3bd8c15eb46c5e1f697b7bd227296df9" kindref="member">curOrigin</ref>;<sp/>}</highlight></codeline>
<codeline lineno="313" refid="classmkbindump_1_1BinDumpSaveCB_1aa14b1cf051f9c5f388b9878ecd3cbf0a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1aa14b1cf051f9c5f388b9878ecd3cbf0a" kindref="member">seekto</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ofs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.seekto(ofs<sp/>+<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a3bd8c15eb46c5e1f697b7bd227296df9" kindref="member">curOrigin</ref>);<sp/>}</highlight></codeline>
<codeline lineno="314" refid="classmkbindump_1_1BinDumpSaveCB_1a2f61f3227d0af4b32dedbf5c5001dce1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a2f61f3227d0af4b32dedbf5c5001dce1" kindref="member">seekToEnd</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.seektoend(0);<sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="classmkbindump_1_1BinDumpSaveCB_1a5711642208e6bd52aa7c7648c717e23b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a5711642208e6bd52aa7c7648c717e23b" kindref="member">getBlockLevel</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a09fdc76928dfcf732f156cd6c3232f87" kindref="member">blocks</ref>.size();<sp/>}</highlight></codeline>
<codeline lineno="317" refid="classmkbindump_1_1BinDumpSaveCB_1a1cbc4b94c4088f3354970787933072ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a1cbc4b94c4088f3354970787933072ae" kindref="member">beginBlock</ref>()</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.writeInt(0);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a09fdc76928dfcf732f156cd6c3232f87" kindref="member">blocks</ref>.push_back(<ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>());</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="322" refid="classmkbindump_1_1BinDumpSaveCB_1a438629220f33e523dcad27f12f6e5bde" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a438629220f33e523dcad27f12f6e5bde" kindref="member">beginTaggedBlock</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fourcc)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a1cbc4b94c4088f3354970787933072ae" kindref="member">beginBlock</ref>();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab2b6eca17ae26598376a8f2d0209495e" kindref="member">writeFourCC</ref>(fourcc);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327" refid="classmkbindump_1_1BinDumpSaveCB_1a209c061073f763cfb4608128c12246da" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a209c061073f763cfb4608128c12246da" kindref="member">endBlock</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>block_flags<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERTF(block_flags<sp/>&lt;=<sp/>0x3,<sp/></highlight><highlight class="stringliteral">&quot;block_flags=%08X&quot;</highlight><highlight class="normal">,<sp/>block_flags);<sp/></highlight><highlight class="comment">//<sp/>2<sp/>bits<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmkbindump_1_1BinDumpSaveCB_1a09fdc76928dfcf732f156cd6c3232f87" kindref="member">blocks</ref>.size()<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DAGOR_THROW(IGenSave::SaveException(</highlight><highlight class="stringliteral">&quot;block<sp/>not<sp/>begun&quot;</highlight><highlight class="normal">,<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.tell()));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ofs<sp/>=<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a09fdc76928dfcf732f156cd6c3232f87" kindref="member">blocks</ref>.back();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>o<sp/>=<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1aa14b1cf051f9c5f388b9878ecd3cbf0a" kindref="member">seekto</ref>(ofs<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERTF(o<sp/>&gt;=<sp/>ofs<sp/>&amp;&amp;<sp/>!((o<sp/>-<sp/>ofs)<sp/>&amp;<sp/>0xC0000000),<sp/></highlight><highlight class="stringliteral">&quot;o=%08X<sp/>ofs=%08X<sp/>o-ofs=%08X&quot;</highlight><highlight class="normal">,<sp/>o,<sp/>ofs,<sp/>o<sp/>-<sp/>ofs);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(o<sp/>-<sp/>ofs)<sp/>|<sp/>(block_flags<sp/>&lt;&lt;<sp/>30));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1aa14b1cf051f9c5f388b9878ecd3cbf0a" kindref="member">seekto</ref>(o);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a09fdc76928dfcf732f156cd6c3232f87" kindref="member">blocks</ref>.pop_back();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o<sp/>-<sp/>ofs;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>origin<sp/>management</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dangerous<sp/>-<sp/>changes<sp/>tell()<sp/>and<sp/>seekto()<sp/>reference<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="classmkbindump_1_1BinDumpSaveCB_1aa6b93266421cb0f76bbac58dac554059" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1aa6b93266421cb0f76bbac58dac554059" kindref="member">setOrigin</ref>()</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a765126c91cf2273fda1c6eda4f003a04" kindref="member">origin</ref>.push_back(<ref refid="classmkbindump_1_1BinDumpSaveCB_1a3bd8c15eb46c5e1f697b7bd227296df9" kindref="member">curOrigin</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a3bd8c15eb46c5e1f697b7bd227296df9" kindref="member">curOrigin</ref><sp/>=<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.tell();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="351" refid="classmkbindump_1_1BinDumpSaveCB_1a32df2cedf933ee0832c2eab42837b162" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a32df2cedf933ee0832c2eab42837b162" kindref="member">popOrigin</ref>()</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmkbindump_1_1BinDumpSaveCB_1a765126c91cf2273fda1c6eda4f003a04" kindref="member">origin</ref>.size()<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DAGOR_THROW(IGenSave::SaveException(</highlight><highlight class="stringliteral">&quot;origin<sp/>not<sp/>begun&quot;</highlight><highlight class="normal">,<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.tell()));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a3bd8c15eb46c5e1f697b7bd227296df9" kindref="member">curOrigin</ref><sp/>=<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a765126c91cf2273fda1c6eda4f003a04" kindref="member">origin</ref>.back();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a765126c91cf2273fda1c6eda4f003a04" kindref="member">origin</ref>.pop_back();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>additional<sp/>helper<sp/>routines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="classmkbindump_1_1BinDumpSaveCB_1ab0865c00c5c2d99446a6230d4a316a0c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab0865c00c5c2d99446a6230d4a316a0c" kindref="member">writeRaw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz)<sp/>{<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(p,<sp/>sz);<sp/>}</highlight></codeline>
<codeline lineno="361" refid="classmkbindump_1_1BinDumpSaveCB_1abe5837ffd858d48492b2ad2e081b5b1e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1abe5837ffd858d48492b2ad2e081b5b1e" kindref="member">write16ex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERT((sz<sp/>&amp;<sp/>1)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" kindref="member">WRITE_BE</ref>)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sz<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classmkbindump_1_1BinDumpSaveCB_1a685c6ccb14fa624996ddd97003c46dd6" kindref="member">cvtBuf</ref>))</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemkbindump_1a4d211100da508896aa806b7c83063865" kindref="member">le2be16_s</ref>(<ref refid="classmkbindump_1_1BinDumpSaveCB_1a685c6ccb14fa624996ddd97003c46dd6" kindref="member">cvtBuf</ref>,<sp/>p,<sp/>sz<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(<ref refid="classmkbindump_1_1BinDumpSaveCB_1a685c6ccb14fa624996ddd97003c46dd6" kindref="member">cvtBuf</ref>,<sp/>sz);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>*data<sp/>=<sp/>(uint16_t<sp/>*)memalloc(sz,<sp/>tmpmem);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemkbindump_1a4d211100da508896aa806b7c83063865" kindref="member">le2be16_s</ref>(data,<sp/>p,<sp/>sz<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(data,<sp/>sz);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memfree(data,<sp/>tmpmem);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(p,<sp/>sz);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382" refid="classmkbindump_1_1BinDumpSaveCB_1a50c981b9b894c5caeeeffb3669246f34" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a50c981b9b894c5caeeeffb3669246f34" kindref="member">write32ex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERT((sz<sp/>&amp;<sp/>3)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" kindref="member">WRITE_BE</ref>)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sz<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classmkbindump_1_1BinDumpSaveCB_1a685c6ccb14fa624996ddd97003c46dd6" kindref="member">cvtBuf</ref>))</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemkbindump_1ad59fe8dac19713bc586e3fe609631814" kindref="member">le2be32_s</ref>(<ref refid="classmkbindump_1_1BinDumpSaveCB_1a685c6ccb14fa624996ddd97003c46dd6" kindref="member">cvtBuf</ref>,<sp/>p,<sp/>sz<sp/>/<sp/>4);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(<ref refid="classmkbindump_1_1BinDumpSaveCB_1a685c6ccb14fa624996ddd97003c46dd6" kindref="member">cvtBuf</ref>,<sp/>sz);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*data<sp/>=<sp/>(uint32_t<sp/>*)memalloc(sz,<sp/>tmpmem);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemkbindump_1ad59fe8dac19713bc586e3fe609631814" kindref="member">le2be32_s</ref>(data,<sp/>p,<sp/>sz<sp/>/<sp/>4);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(data,<sp/>sz);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memfree(data,<sp/>tmpmem);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(p,<sp/>sz);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="403" refid="classmkbindump_1_1BinDumpSaveCB_1af373ce8ee134ebaaf66e4c8e5ee74259" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1af373ce8ee134ebaaf66e4c8e5ee74259" kindref="member">writeZeroes</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cnt)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cnt<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac435ff63e59ea16f791b93dcbd59c8c4" kindref="member">zero</ref>))</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac435ff63e59ea16f791b93dcbd59c8c4" kindref="member">zero</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac435ff63e59ea16f791b93dcbd59c8c4" kindref="member">zero</ref>));</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cnt<sp/>-=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac435ff63e59ea16f791b93dcbd59c8c4" kindref="member">zero</ref>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnt<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac435ff63e59ea16f791b93dcbd59c8c4" kindref="member">zero</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(cnt));</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="413" refid="classmkbindump_1_1BinDumpSaveCB_1a7b8eabc23ec2385af633256be1b8739d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a7b8eabc23ec2385af633256be1b8739d" kindref="member">align4</ref>()</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rest<sp/>=<sp/>(<ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>()<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rest)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac435ff63e59ea16f791b93dcbd59c8c4" kindref="member">zero</ref>,<sp/>4<sp/>-<sp/>rest);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="419" refid="classmkbindump_1_1BinDumpSaveCB_1ae03f63a7d4ed25847e4e9d3022f609a7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ae03f63a7d4ed25847e4e9d3022f609a7" kindref="member">align8</ref>()</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rest<sp/>=<sp/>(<ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>()<sp/>&amp;<sp/>7);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rest)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac435ff63e59ea16f791b93dcbd59c8c4" kindref="member">zero</ref>,<sp/>8<sp/>-<sp/>rest);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="425" refid="classmkbindump_1_1BinDumpSaveCB_1ae1007d89a438a7ee49c3d5280d9e1d57" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ae1007d89a438a7ee49c3d5280d9e1d57" kindref="member">align16</ref>()</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rest<sp/>=<sp/>(<ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>()<sp/>&amp;<sp/>15);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rest)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac435ff63e59ea16f791b93dcbd59c8c4" kindref="member">zero</ref>,<sp/>16<sp/>-<sp/>rest);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431" refid="classmkbindump_1_1BinDumpSaveCB_1a4e65dc4ab3ea3073afa4d72ff0dd0de1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a4e65dc4ab3ea3073afa4d72ff0dd0de1" kindref="member">align32</ref>()</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rest<sp/>=<sp/>(<ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>()<sp/>&amp;<sp/>31);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rest)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac435ff63e59ea16f791b93dcbd59c8c4" kindref="member">zero</ref>,<sp/>32<sp/>-<sp/>rest);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>routines<sp/>for<sp/>dump<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="classmkbindump_1_1BinDumpSaveCB_1ab2b6eca17ae26598376a8f2d0209495e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab2b6eca17ae26598376a8f2d0209495e" kindref="member">writeFourCC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cc)<sp/>{<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.writeInt(cc);<sp/>}</highlight></codeline>
<codeline lineno="440" refid="classmkbindump_1_1BinDumpSaveCB_1ac9e62612834e0e633df12111aba55944" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ac9e62612834e0e633df12111aba55944" kindref="member">writeFloat32e</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" kindref="member">WRITE_BE</ref>)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.writeInt(<ref refid="namespacemkbindump_1ae453e0b0370be1ee3ccfa6fc8ab4a54c" kindref="member">le2be32</ref>(*(uint32_t<sp/>*)&amp;v));</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(&amp;v,<sp/>4);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="447" refid="classmkbindump_1_1BinDumpSaveCB_1ada2f70a98660df189da3eac608bfef1f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ada2f70a98660df189da3eac608bfef1f" kindref="member">writeFloat64e</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" kindref="member">WRITE_BE</ref>)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*i32<sp/>=<sp/>(uint32_t<sp/>*)&amp;v;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.writeInt(<ref refid="namespacemkbindump_1ae453e0b0370be1ee3ccfa6fc8ab4a54c" kindref="member">le2be32</ref>(i32[1]));</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.writeInt(<ref refid="namespacemkbindump_1ae453e0b0370be1ee3ccfa6fc8ab4a54c" kindref="member">le2be32</ref>(i32[0]));</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(&amp;v,<sp/>8);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="458" refid="classmkbindump_1_1BinDumpSaveCB_1a2dc819fe75bd5d35a786fe3a0c5be05a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a2dc819fe75bd5d35a786fe3a0c5be05a" kindref="member">writeReal</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ac9e62612834e0e633df12111aba55944" kindref="member">writeFloat32e</ref>(v);<sp/>}</highlight></codeline>
<codeline lineno="459" refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>v)<sp/>{<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.writeInt(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" kindref="member">WRITE_BE</ref><sp/>?<sp/><ref refid="namespacemkbindump_1ae453e0b0370be1ee3ccfa6fc8ab4a54c" kindref="member">le2be32</ref>(v)<sp/>:<sp/>v);<sp/>}</highlight></codeline>
<codeline lineno="460" refid="classmkbindump_1_1BinDumpSaveCB_1a712ab65c81612d1977e3629351bef224" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a712ab65c81612d1977e3629351bef224" kindref="member">writeE3dColorE</ref>(E3DCOLOR<sp/>c)<sp/>{<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.writeInt(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" kindref="member">WRITE_BE</ref><sp/>?<sp/><ref refid="namespacemkbindump_1ae453e0b0370be1ee3ccfa6fc8ab4a54c" kindref="member">le2be32</ref>(c)<sp/>:<sp/>(uint32_t)c.u);<sp/>}</highlight></codeline>
<codeline lineno="461" refid="classmkbindump_1_1BinDumpSaveCB_1a418c8c46e197417a321444c8327ce39c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a418c8c46e197417a321444c8327ce39c" kindref="member">writePtr64e</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ptr_ofs)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(ptr_ofs);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(0);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="466" refid="classmkbindump_1_1BinDumpSaveCB_1a908a78188e7b48ef2cebd41966b34bca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a908a78188e7b48ef2cebd41966b34bca" kindref="member">writePtr64eAt</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ptr_ofs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ofs)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1aa14b1cf051f9c5f388b9878ecd3cbf0a" kindref="member">seekto</ref>(ofs);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a418c8c46e197417a321444c8327ce39c" kindref="member">writePtr64e</ref>(ptr_ofs);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1aa14b1cf051f9c5f388b9878ecd3cbf0a" kindref="member">seekto</ref>(pos);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="473" refid="classmkbindump_1_1BinDumpSaveCB_1a69527de25a0b4048a97b09af9ac240df" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a69527de25a0b4048a97b09af9ac240df" kindref="member">writePtr32eAt</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ptr_ofs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ofs)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1aa14b1cf051f9c5f388b9878ecd3cbf0a" kindref="member">seekto</ref>(ofs);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(ptr_ofs);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1aa14b1cf051f9c5f388b9878ecd3cbf0a" kindref="member">seekto</ref>(pos);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="480" refid="classmkbindump_1_1BinDumpSaveCB_1a1f797d2706389525dc9e906bb4affda8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a1f797d2706389525dc9e906bb4affda8" kindref="member">writeInt64e</ref>(uint64_t<sp/>v)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" kindref="member">WRITE_BE</ref>)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*i32<sp/>=<sp/>(uint32_t<sp/>*)&amp;v;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.writeInt(<ref refid="namespacemkbindump_1ae453e0b0370be1ee3ccfa6fc8ab4a54c" kindref="member">le2be32</ref>(i32[1]));</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.writeInt(<ref refid="namespacemkbindump_1ae453e0b0370be1ee3ccfa6fc8ab4a54c" kindref="member">le2be32</ref>(i32[0]));</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(&amp;v,<sp/>8);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="491" refid="classmkbindump_1_1BinDumpSaveCB_1aa803c8a5d6ab86b807fc1cb040876678" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1aa803c8a5d6ab86b807fc1cb040876678" kindref="member">writeInt16e</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>v)<sp/>{<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.writeIntP&lt;2&gt;(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" kindref="member">WRITE_BE</ref><sp/>?<sp/><ref refid="namespacemkbindump_1af44d3b3b418864993ff0faea3f01dc22" kindref="member">le2be16</ref>(v)<sp/>:<sp/>v);<sp/>}</highlight></codeline>
<codeline lineno="492" refid="classmkbindump_1_1BinDumpSaveCB_1a8d44fa98c51971356d4ef569a1541cae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a8d44fa98c51971356d4ef569a1541cae" kindref="member">writeInt8e</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>v)<sp/>{<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.writeIntP&lt;1&gt;(v);<sp/>}</highlight></codeline>
<codeline lineno="493" refid="classmkbindump_1_1BinDumpSaveCB_1a2d697d8f40b537d8eed7a5cacd759d84" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a2d697d8f40b537d8eed7a5cacd759d84" kindref="member">writeInt16eAt</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ofs)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1aa14b1cf051f9c5f388b9878ecd3cbf0a" kindref="member">seekto</ref>(ofs);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.writeIntP&lt;2&gt;(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" kindref="member">WRITE_BE</ref><sp/>?<sp/><ref refid="namespacemkbindump_1af44d3b3b418864993ff0faea3f01dc22" kindref="member">le2be16</ref>(v)<sp/>:<sp/>v);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1aa14b1cf051f9c5f388b9878ecd3cbf0a" kindref="member">seekto</ref>(pos);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="500" refid="classmkbindump_1_1BinDumpSaveCB_1acc7796fecfa830f31110b1fc50e48573" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1acc7796fecfa830f31110b1fc50e48573" kindref="member">writeInt32eAt</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ofs)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1aa14b1cf051f9c5f388b9878ecd3cbf0a" kindref="member">seekto</ref>(ofs);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.writeInt(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" kindref="member">WRITE_BE</ref><sp/>?<sp/><ref refid="namespacemkbindump_1ae453e0b0370be1ee3ccfa6fc8ab4a54c" kindref="member">le2be32</ref>(v)<sp/>:<sp/>v);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1aa14b1cf051f9c5f388b9878ecd3cbf0a" kindref="member">seekto</ref>(pos);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="507" refid="classmkbindump_1_1BinDumpSaveCB_1a57d2acbc63756201e200e589de4fb85f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a57d2acbc63756201e200e589de4fb85f" kindref="member">writeDwString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>s<sp/>?<sp/>(int)strlen(s)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(len);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab0865c00c5c2d99446a6230d4a316a0c" kindref="member">writeRaw</ref>(s,<sp/>len);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&amp;<sp/>3)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac435ff63e59ea16f791b93dcbd59c8c4" kindref="member">zero</ref>,<sp/>4<sp/>-<sp/>(len<sp/>&amp;<sp/>3));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V::value_type&gt;</highlight></codeline>
<codeline lineno="517" refid="classmkbindump_1_1BinDumpSaveCB_1a122f72f1237bc5d5bc993ac2a582f066" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a122f72f1237bc5d5bc993ac2a582f066" kindref="member">writeTabDataRaw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V<sp/>&amp;tab)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.writeTabData(tab);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V::value_type&gt;</highlight></codeline>
<codeline lineno="522" refid="classmkbindump_1_1BinDumpSaveCB_1a14c6eb78e396c8f9e183af2dd5687fae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a14c6eb78e396c8f9e183af2dd5687fae" kindref="member">writeTabDataE</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V<sp/>&amp;tab,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*cvt_le2be)(T<sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt))</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" kindref="member">WRITE_BE</ref>)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>*data<sp/>=<sp/>(T<sp/>*)memalloc(data_size(tab),<sp/>tmpmem);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem_copy_to(tab,<sp/>data);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cvt_le2be(data,<sp/>tab.size());</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(data,<sp/>data_size(tab));</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memfree(data,<sp/>tmpmem);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.writeTabData(tab);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="classmkbindump_1_1BinDumpSaveCB_1a18990c96d623763fd08b5dad85f179d4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a18990c96d623763fd08b5dad85f179d4" kindref="member">writeTabData16e</ref>(dag::ConstSpan&lt;uint16_t&gt;<sp/>tab)<sp/>{<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a14c6eb78e396c8f9e183af2dd5687fae" kindref="member">writeTabDataE</ref>(tab,<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a861f2a26e75f191540d2db294aa81204" kindref="member">cvt_uint16_le2be</ref>);<sp/>}</highlight></codeline>
<codeline lineno="537" refid="classmkbindump_1_1BinDumpSaveCB_1a9db940002414c389b7c6fa3c0e41c033" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a9db940002414c389b7c6fa3c0e41c033" kindref="member">writeTabData32e</ref>(dag::ConstSpan&lt;uint32_t&gt;<sp/>tab)<sp/>{<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a14c6eb78e396c8f9e183af2dd5687fae" kindref="member">writeTabDataE</ref>(tab,<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ae995d87f1e438f6044a2702d6bf3f793" kindref="member">cvt_uint32_le2be</ref>);<sp/>}</highlight></codeline>
<codeline lineno="538" refid="classmkbindump_1_1BinDumpSaveCB_1a855bc2238bb219358cb1e35845508a36" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a855bc2238bb219358cb1e35845508a36" kindref="member">writeTabData16e</ref>(dag::ConstSpan&lt;int16_t&gt;<sp/>tab)<sp/>{<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a14c6eb78e396c8f9e183af2dd5687fae" kindref="member">writeTabDataE</ref>((dag::ConstSpan&lt;uint16_t&gt;<sp/>&amp;)tab,<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a861f2a26e75f191540d2db294aa81204" kindref="member">cvt_uint16_le2be</ref>);<sp/>}</highlight></codeline>
<codeline lineno="539" refid="classmkbindump_1_1BinDumpSaveCB_1a3a5c27d906b27c147e870ea3979fe760" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a3a5c27d906b27c147e870ea3979fe760" kindref="member">writeTabData32e</ref>(dag::ConstSpan&lt;int32_t&gt;<sp/>tab)<sp/>{<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a14c6eb78e396c8f9e183af2dd5687fae" kindref="member">writeTabDataE</ref>((dag::ConstSpan&lt;uint32_t&gt;<sp/>&amp;)tab,<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ae995d87f1e438f6044a2702d6bf3f793" kindref="member">cvt_uint32_le2be</ref>);<sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V::value_type&gt;</highlight></codeline>
<codeline lineno="542" refid="classmkbindump_1_1BinDumpSaveCB_1a1fea1f99f042b3fbea5f4f2fd15f72ad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a1fea1f99f042b3fbea5f4f2fd15f72ad" kindref="member">writeTabData16ex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V<sp/>&amp;tab)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERT((</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>&amp;<sp/>1)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" kindref="member">WRITE_BE</ref>)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>*data<sp/>=<sp/>(uint16_t<sp/>*)memalloc(data_size(tab),<sp/>tmpmem);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem_copy_to(tab,<sp/>data);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a861f2a26e75f191540d2db294aa81204" kindref="member">cvt_uint16_le2be</ref>(data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(data_size(tab)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*data)));</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(data,<sp/>data_size(tab));</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memfree(data,<sp/>tmpmem);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.writeTabData(tab);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V::value_type&gt;</highlight></codeline>
<codeline lineno="557" refid="classmkbindump_1_1BinDumpSaveCB_1a7c636069becdbb1ab8262188927bbee7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a7c636069becdbb1ab8262188927bbee7" kindref="member">writeTabData32ex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V<sp/>&amp;tab)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERT((</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>&amp;<sp/>3)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ac7962cf02ccafd59e06fe2f4950686e9" kindref="member">WRITE_BE</ref>)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*data<sp/>=<sp/>(uint32_t<sp/>*)memalloc(data_size(tab),<sp/>tmpmem);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem_copy_to(tab,<sp/>data);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ae995d87f1e438f6044a2702d6bf3f793" kindref="member">cvt_uint32_le2be</ref>(data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(data_size(tab)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*data)));</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(data,<sp/>data_size(tab));</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memfree(data,<sp/>tmpmem);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.writeTabData(tab);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="573" refid="classmkbindump_1_1BinDumpSaveCB_1a727ff8de62ca7a0c729186142a3a6b9e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a727ff8de62ca7a0c729186142a3a6b9e" kindref="member">writeStorage</ref>(<ref refid="structmkbindump_1_1SharedStorage" kindref="compound">SharedStorage&lt;T&gt;</ref><sp/>&amp;ss)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.<ref refid="structmkbindump_1_1SharedStorage_1a252d0576b698748cb3638e9de7068013" kindref="member">base</ref><sp/>=<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>();</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.writeTabData(ss.<ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="579" refid="classmkbindump_1_1BinDumpSaveCB_1a3fa2f60d2d528d341f6be2402eab36f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a3fa2f60d2d528d341f6be2402eab36f8" kindref="member">writeStorageE</ref>(<ref refid="structmkbindump_1_1SharedStorage" kindref="compound">SharedStorage&lt;T&gt;</ref><sp/>&amp;ss,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*cvt_le2be)(T<sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt))</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.<ref refid="structmkbindump_1_1SharedStorage_1a252d0576b698748cb3638e9de7068013" kindref="member">base</ref><sp/>=<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>();</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a14c6eb78e396c8f9e183af2dd5687fae" kindref="member">writeTabDataE</ref>(make_span_const(ss.<ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>),<sp/>cvt_le2be);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="584" refid="classmkbindump_1_1BinDumpSaveCB_1a20e8fc4fd645062dd42f7197744ab98c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a20e8fc4fd645062dd42f7197744ab98c" kindref="member">writeStorage16e</ref>(<ref refid="structmkbindump_1_1SharedStorage" kindref="compound">SharedStorage&lt;uint16_t&gt;</ref><sp/>&amp;ss)<sp/>{<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a3fa2f60d2d528d341f6be2402eab36f8" kindref="member">writeStorageE</ref>(ss,<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a861f2a26e75f191540d2db294aa81204" kindref="member">cvt_uint16_le2be</ref>);<sp/>}</highlight></codeline>
<codeline lineno="585" refid="classmkbindump_1_1BinDumpSaveCB_1a9f04c17933fe4959a9d189023bf43f3e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a9f04c17933fe4959a9d189023bf43f3e" kindref="member">writeStorage32e</ref>(<ref refid="structmkbindump_1_1SharedStorage" kindref="compound">SharedStorage&lt;uint32_t&gt;</ref><sp/>&amp;ss)<sp/>{<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a3fa2f60d2d528d341f6be2402eab36f8" kindref="member">writeStorageE</ref>(ss,<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ae995d87f1e438f6044a2702d6bf3f793" kindref="member">cvt_uint32_le2be</ref>);<sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="588" refid="classmkbindump_1_1BinDumpSaveCB_1a8df656af4c9b3ea4eb01388317bc1576" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a8df656af4c9b3ea4eb01388317bc1576" kindref="member">writeStorage16ex</ref>(<ref refid="structmkbindump_1_1SharedStorage" kindref="compound">SharedStorage&lt;T&gt;</ref><sp/>&amp;ss)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.<ref refid="structmkbindump_1_1SharedStorage_1a252d0576b698748cb3638e9de7068013" kindref="member">base</ref><sp/>=<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>();</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a1fea1f99f042b3fbea5f4f2fd15f72ad" kindref="member">writeTabData16ex</ref>(ss.<ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="594" refid="classmkbindump_1_1BinDumpSaveCB_1a52e0f30bc519e326fa2a4b68490822eb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a52e0f30bc519e326fa2a4b68490822eb" kindref="member">writeStorage32ex</ref>(<ref refid="structmkbindump_1_1SharedStorage" kindref="compound">SharedStorage&lt;T&gt;</ref><sp/>&amp;ss)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.<ref refid="structmkbindump_1_1SharedStorage_1a252d0576b698748cb3638e9de7068013" kindref="member">base</ref><sp/>=<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>();</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a7c636069becdbb1ab8262188927bbee7" kindref="member">writeTabData32ex</ref>(make_span_const(ss.<ref refid="structmkbindump_1_1SharedStorage_1af73e7327c185e48a967f7c815a46caab" kindref="member">data</ref>));</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600" refid="classmkbindump_1_1BinDumpSaveCB_1a271267954e51c1118530aa2b9818ddef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a271267954e51c1118530aa2b9818ddef" kindref="member">writeRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1Ref" kindref="compound">Ref</ref><sp/>&amp;ref)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(ref.<ref refid="structmkbindump_1_1Ref_1aa057cb1482b2262d7124e78fb72cfc62" kindref="member">start</ref>);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(ref.<ref refid="structmkbindump_1_1Ref_1a75dfbcb549f37df9445eccde2a3a9503" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(0);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(0);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="607" refid="classmkbindump_1_1BinDumpSaveCB_1ae1f7490b04bec01c5e7011ede9f014bb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ae1f7490b04bec01c5e7011ede9f014bb" kindref="member">writeRef</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ofs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(count<sp/>?<sp/>ofs<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(count);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(0);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(0);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615" refid="classmkbindump_1_1BinDumpSaveCB_1a817b3c19076e7a5ee6d782af499a518d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a817b3c19076e7a5ee6d782af499a518d" kindref="member">copyRaw</ref>(IGenLoad<sp/>&amp;crd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[16384];</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(sz<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bsz<sp/>=<sp/>sz<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf)<sp/>?<sp/>sz<sp/>:<sp/>(int)</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>crd.read(buf,<sp/>bsz);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.write(buf,<sp/>bsz);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sz<sp/>-=<sp/>bsz;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="628" refid="classmkbindump_1_1BinDumpSaveCB_1af74545ae0e9e63be13fb4e4d68eb1533" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1af74545ae0e9e63be13fb4e4d68eb1533" kindref="member">copyRawFrom</ref>(<ref refid="classmkbindump_1_1BinDumpSaveCB" kindref="compound">BinDumpSaveCB</ref><sp/>&amp;crd)<sp/>{<sp/>crd.<ref refid="classmkbindump_1_1BinDumpSaveCB_1aadc5ffd2fdd5c9e88835665fa7e53855" kindref="member">copyDataTo</ref>(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>);<sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="631" refid="classmkbindump_1_1BinDumpSaveCB_1aaf6df891558158db85449800b4832c98" refkind="member"><highlight class="normal"><sp/><sp/>MemorySaveCB<sp/>&amp;<ref refid="classmkbindump_1_1BinDumpSaveCB_1aaf6df891558158db85449800b4832c98" kindref="member">getRawWriter</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>;<sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>final<sp/>data/size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634" refid="classmkbindump_1_1BinDumpSaveCB_1a1bebe19a8b4db3ec950cb38ec7707906" refkind="member"><highlight class="normal"><sp/><sp/>MemoryChainedData<sp/>*<ref refid="classmkbindump_1_1BinDumpSaveCB_1a1bebe19a8b4db3ec950cb38ec7707906" kindref="member">getMem</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.getMem();<sp/>}</highlight></codeline>
<codeline lineno="635" refid="classmkbindump_1_1BinDumpSaveCB_1a308a49f7dadb4eb8c98da76d4844940f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a308a49f7dadb4eb8c98da76d4844940f" kindref="member">getSize</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MemoryChainedData::calcTotalUsedSize(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.getMem());<sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="638" refid="classmkbindump_1_1BinDumpSaveCB_1aadc5ffd2fdd5c9e88835665fa7e53855" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1aadc5ffd2fdd5c9e88835665fa7e53855" kindref="member">copyDataTo</ref>(IGenSave<sp/>&amp;dest_cwr)<sp/>{<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.copyDataTo(dest_cwr);<sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="641" refid="classmkbindump_1_1BinDumpSaveCB_1a7f99131d795363d218c478f1a3629a3f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="classmkbindump_1_1BinDumpSaveCB_1a7f99131d795363d218c478f1a3629a3f" kindref="member">makeDataCopy</ref>(IMemAlloc<sp/>*mem<sp/>=<sp/>NULL)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>MemoryLoadCB<sp/>crd(<ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>.getMem(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a308a49f7dadb4eb8c98da76d4844940f" kindref="member">getSize</ref>();</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)memalloc(sz,<sp/>mem<sp/>?<sp/>mem<sp/>:<sp/>tmpmem);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>crd.read(data,<sp/>sz);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="652" refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" refkind="member"><highlight class="normal"><sp/><sp/>MemorySaveCB<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ab284f42b1fe8386724979a57c186246e" kindref="member">cwr</ref>;</highlight></codeline>
<codeline lineno="653" refid="classmkbindump_1_1BinDumpSaveCB_1a09fdc76928dfcf732f156cd6c3232f87" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;int&gt;<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a09fdc76928dfcf732f156cd6c3232f87" kindref="member">blocks</ref>;</highlight></codeline>
<codeline lineno="654" refid="classmkbindump_1_1BinDumpSaveCB_1a765126c91cf2273fda1c6eda4f003a04" refkind="member"><highlight class="normal"><sp/><sp/>Tab&lt;int&gt;<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a765126c91cf2273fda1c6eda4f003a04" kindref="member">origin</ref>;</highlight></codeline>
<codeline lineno="655" refid="classmkbindump_1_1BinDumpSaveCB_1ac435ff63e59ea16f791b93dcbd59c8c4" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ac435ff63e59ea16f791b93dcbd59c8c4" kindref="member">zero</ref>[32]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="656" refid="classmkbindump_1_1BinDumpSaveCB_1a685c6ccb14fa624996ddd97003c46dd6" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a685c6ccb14fa624996ddd97003c46dd6" kindref="member">cvtBuf</ref>[32]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="657" refid="classmkbindump_1_1BinDumpSaveCB_1a73247e1fafe8f416c370d36d6d51de2c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a73247e1fafe8f416c370d36d6d51de2c" kindref="member">targetCode</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="658" refid="classmkbindump_1_1BinDumpSaveCB_1aec7f2174370b8c62837d3d117d700fcb" refkind="member"><highlight class="normal"><sp/><sp/>SimpleString<sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1aec7f2174370b8c62837d3d117d700fcb" kindref="member">profileName</ref>;</highlight></codeline>
<codeline lineno="659" refid="classmkbindump_1_1BinDumpSaveCB_1a3bd8c15eb46c5e1f697b7bd227296df9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a3bd8c15eb46c5e1f697b7bd227296df9" kindref="member">curOrigin</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="660" refid="classmkbindump_1_1BinDumpSaveCB_1af8f328eb30858f3b9b60b2740e16a1a7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1af8f328eb30858f3b9b60b2740e16a1a7" kindref="member">fastBuildFlag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662" refid="classmkbindump_1_1BinDumpSaveCB_1a861f2a26e75f191540d2db294aa81204" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1a861f2a26e75f191540d2db294aa81204" kindref="member">cvt_uint16_le2be</ref>(uint16_t<sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt)</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cnt<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*data<sp/>=<sp/><ref refid="namespacemkbindump_1af44d3b3b418864993ff0faea3f01dc22" kindref="member">le2be16</ref>(*data);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cnt--;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="671" refid="classmkbindump_1_1BinDumpSaveCB_1ae995d87f1e438f6044a2702d6bf3f793" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmkbindump_1_1BinDumpSaveCB_1ae995d87f1e438f6044a2702d6bf3f793" kindref="member">cvt_uint32_le2be</ref>(uint32_t<sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cnt<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*data<sp/>=<sp/><ref refid="namespacemkbindump_1ae453e0b0370be1ee3ccfa6fc8ab4a54c" kindref="member">le2be32</ref>(*data);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cnt--;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal">};</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="687" refid="structmkbindump_1_1PatchTabRef" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmkbindump_1_1PatchTabRef" kindref="compound">PatchTabRef</ref></highlight></codeline>
<codeline lineno="688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="691" refid="structmkbindump_1_1PatchTabRef_1ac22d683d5c8eb13c70d094a07dee4b17" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1PatchTabRef_1ac22d683d5c8eb13c70d094a07dee4b17" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1PatchTabRef_1a548dbc3febc6fcafd4918d3c45dcd68a" kindref="member">base</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1PatchTabRef_1ac4f7469b552a3c4ae4fb10df7b74bfba" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1PatchTabRef_1a77a86d63429adc576322e5e924c39a99" kindref="member">pos</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1PatchTabRef_1ace38699612f364cf2ee8100b15c23356" kindref="member">resvDataPos</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="700" refid="structmkbindump_1_1PatchTabRef_1a2d95191ef0e65a2c6cc3505ca6cf02ec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1PatchTabRef_1a2d95191ef0e65a2c6cc3505ca6cf02ec" kindref="member">reserveTab</ref>(<ref refid="classmkbindump_1_1BinDumpSaveCB" kindref="compound">BinDumpSaveCB</ref><sp/>&amp;cwr)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1PatchTabRef_1a77a86d63429adc576322e5e924c39a99" kindref="member">pos</ref><sp/>=<sp/>cwr.<ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>();</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>cwr.<ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(0);<sp/></highlight><highlight class="comment">//<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>cwr.<ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(0);<sp/></highlight><highlight class="comment">//<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>cwr.<ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(0);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>cwr.<ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(0);<sp/></highlight><highlight class="comment">//<sp/>reserve<sp/>for<sp/>64-bit<sp/>PatchableTab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1PatchTabRef_1ace38699612f364cf2ee8100b15c23356" kindref="member">resvDataPos</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="711" refid="structmkbindump_1_1PatchTabRef_1a1ee0ff5b0a98d4b50ec6a9a73ee1d090" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1PatchTabRef_1a1ee0ff5b0a98d4b50ec6a9a73ee1d090" kindref="member">startData</ref>(<ref refid="classmkbindump_1_1BinDumpSaveCB" kindref="compound">BinDumpSaveCB</ref><sp/>&amp;cwr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt)</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1PatchTabRef_1a548dbc3febc6fcafd4918d3c45dcd68a" kindref="member">base</ref><sp/>=<sp/>cwr.<ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>();</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1PatchTabRef_1ac4f7469b552a3c4ae4fb10df7b74bfba" kindref="member">count</ref><sp/>=<sp/>cnt;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="718" refid="structmkbindump_1_1PatchTabRef_1a8dae08e88833d1d09ef8598f7be23888" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1PatchTabRef_1a8dae08e88833d1d09ef8598f7be23888" kindref="member">writeData</ref>(<ref refid="classmkbindump_1_1BinDumpSaveCB" kindref="compound">BinDumpSaveCB</ref><sp/>&amp;cwr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1PatchTabRef_1a1ee0ff5b0a98d4b50ec6a9a73ee1d090" kindref="member">startData</ref>(cwr,<sp/>cnt);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>cwr.<ref refid="classmkbindump_1_1BinDumpSaveCB_1ab0865c00c5c2d99446a6230d4a316a0c" kindref="member">writeRaw</ref>(data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="structmkbindump_1_1PatchTabRef_1ac4f7469b552a3c4ae4fb10df7b74bfba" kindref="member">count</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)));</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V::value_type&gt;</highlight></codeline>
<codeline lineno="725" refid="structmkbindump_1_1PatchTabRef_1a3cee02f33b4c9acc67cd82bb07721238" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1PatchTabRef_1a3cee02f33b4c9acc67cd82bb07721238" kindref="member">writeData</ref>(<ref refid="classmkbindump_1_1BinDumpSaveCB" kindref="compound">BinDumpSaveCB</ref><sp/>&amp;cwr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V<sp/>&amp;data)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1PatchTabRef_1a1ee0ff5b0a98d4b50ec6a9a73ee1d090" kindref="member">startData</ref>(cwr,<sp/>data.size());</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>cwr.<ref refid="classmkbindump_1_1BinDumpSaveCB_1a122f72f1237bc5d5bc993ac2a582f066" kindref="member">writeTabDataRaw</ref>(data);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="731" refid="structmkbindump_1_1PatchTabRef_1ab350f577111d8265f21cf3c75ba38d74" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1PatchTabRef_1ab350f577111d8265f21cf3c75ba38d74" kindref="member">startDataAt</ref>(<ref refid="classmkbindump_1_1BinDumpSaveCB" kindref="compound">BinDumpSaveCB</ref><sp/>&amp;cwr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ofs)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1PatchTabRef_1a548dbc3febc6fcafd4918d3c45dcd68a" kindref="member">base</ref><sp/>=<sp/>cwr.<ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>()<sp/>+<sp/>ofs;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1PatchTabRef_1ac4f7469b552a3c4ae4fb10df7b74bfba" kindref="member">count</ref><sp/>=<sp/>cnt;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="737" refid="structmkbindump_1_1PatchTabRef_1a8a1b7adba4b242acfe370289f7c7bbc7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1PatchTabRef_1a8a1b7adba4b242acfe370289f7c7bbc7" kindref="member">reserveData</ref>(<ref refid="classmkbindump_1_1BinDumpSaveCB" kindref="compound">BinDumpSaveCB</ref><sp/>&amp;cwr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>elemsize)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERT(<ref refid="structmkbindump_1_1PatchTabRef_1ace38699612f364cf2ee8100b15c23356" kindref="member">resvDataPos</ref><sp/>==<sp/>-1);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1PatchTabRef_1a1ee0ff5b0a98d4b50ec6a9a73ee1d090" kindref="member">startData</ref>(cwr,<sp/>cnt);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmkbindump_1_1PatchTabRef_1ace38699612f364cf2ee8100b15c23356" kindref="member">resvDataPos</ref><sp/>=<sp/><ref refid="structmkbindump_1_1PatchTabRef_1a548dbc3febc6fcafd4918d3c45dcd68a" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>cwr.<ref refid="classmkbindump_1_1BinDumpSaveCB_1af373ce8ee134ebaaf66e4c8e5ee74259" kindref="member">writeZeroes</ref>(elemsize<sp/>*<sp/><ref refid="structmkbindump_1_1PatchTabRef_1ac4f7469b552a3c4ae4fb10df7b74bfba" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="746" refid="structmkbindump_1_1PatchTabRef_1a7691a4ce0d4b3ab5ea0c3fe8fd41da25" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1PatchTabRef_1a7691a4ce0d4b3ab5ea0c3fe8fd41da25" kindref="member">finishTab</ref>(<ref refid="classmkbindump_1_1BinDumpSaveCB" kindref="compound">BinDumpSaveCB</ref><sp/>&amp;cwr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>preserve_pos<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wrpos<sp/>=<sp/>preserve_pos<sp/>?<sp/>cwr.<ref refid="classmkbindump_1_1BinDumpSaveCB_1af51b74dec31efceb3f31c28e8d8f8074" kindref="member">tell</ref>()<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>G_ASSERT(<ref refid="structmkbindump_1_1PatchTabRef_1a77a86d63429adc576322e5e924c39a99" kindref="member">pos</ref><sp/>!=<sp/>-1);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>cwr.<ref refid="classmkbindump_1_1BinDumpSaveCB_1aa14b1cf051f9c5f388b9878ecd3cbf0a" kindref="member">seekto</ref>(<ref refid="structmkbindump_1_1PatchTabRef_1a77a86d63429adc576322e5e924c39a99" kindref="member">pos</ref>);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>cwr.<ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(<ref refid="structmkbindump_1_1PatchTabRef_1ac4f7469b552a3c4ae4fb10df7b74bfba" kindref="member">count</ref><sp/>?<sp/><ref refid="structmkbindump_1_1PatchTabRef_1a548dbc3febc6fcafd4918d3c45dcd68a" kindref="member">base</ref><sp/>:<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>cwr.<ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(<ref refid="structmkbindump_1_1PatchTabRef_1ac4f7469b552a3c4ae4fb10df7b74bfba" kindref="member">count</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>cwr.<ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(0);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>cwr.<ref refid="classmkbindump_1_1BinDumpSaveCB_1a897f5b71894a9440a0882a79e0b97df7" kindref="member">writeInt32e</ref>(0);<sp/></highlight><highlight class="comment">//<sp/>reserve<sp/>for<sp/>64-bit<sp/>PatchableTab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preserve_pos)</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cwr.<ref refid="classmkbindump_1_1BinDumpSaveCB_1aa14b1cf051f9c5f388b9878ecd3cbf0a" kindref="member">seekto</ref>(wrpos);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="761" refid="structmkbindump_1_1PatchTabRef_1a548dbc3febc6fcafd4918d3c45dcd68a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmkbindump_1_1PatchTabRef_1a548dbc3febc6fcafd4918d3c45dcd68a" kindref="member">base</ref>,<sp/><ref refid="structmkbindump_1_1PatchTabRef_1ac4f7469b552a3c4ae4fb10df7b74bfba" kindref="member">count</ref>,<sp/><ref refid="structmkbindump_1_1PatchTabRef_1a77a86d63429adc576322e5e924c39a99" kindref="member">pos</ref>,<sp/><ref refid="structmkbindump_1_1PatchTabRef_1ace38699612f364cf2ee8100b15c23356" kindref="member">resvDataPos</ref>;</highlight></codeline>
<codeline lineno="762"><highlight class="normal">};</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*get_target_str(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>targetCode,<sp/>uint64_t<sp/>&amp;storage)</highlight></codeline>
<codeline lineno="765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!targetCode)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;????&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_CPU_BE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>storage<sp/>=<sp/>uint64_t(<ref refid="namespacemkbindump_1ae453e0b0370be1ee3ccfa6fc8ab4a54c" kindref="member">le2be32</ref>(targetCode))<sp/>&lt;&lt;<sp/>32;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>storage<sp/>=<sp/>targetCode;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;storage;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!*p)</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>p++;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mkbindump</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="makeBindump.h"/>
  </compounddef>
</doxygen>
