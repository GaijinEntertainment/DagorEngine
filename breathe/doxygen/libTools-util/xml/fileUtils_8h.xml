<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="fileUtils_8h" kind="file" language="C++">
    <compoundname>fileUtils.h</compoundname>
    <includes local="no">generic/dag_tab.h</includes>
    <includes local="no">util/dag_string.h</includes>
    <includes local="no">util/dag_stdint.h</includes>
    <incdepgraph>
      <node id="1">
        <label>fileUtils.h</label>
        <link refid="fileUtils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>generic/dag_tab.h</label>
      </node>
      <node id="4">
        <label>util/dag_stdint.h</label>
      </node>
      <node id="3">
        <label>util/dag_string.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="fileUtils_8h_1acc6612c748276751c696f1ff7269b280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dag_get_file_time</definition>
        <argsstring>(const char *fname, int64_t &amp;time_date)</argsstring>
        <name>dag_get_file_time</name>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>int64_t &amp;</type>
          <declname>time_date</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fileUtils.h" line="13" column="6" declfile="fileUtils.h" declline="13" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fileUtils_8h_1a287011985f240d3e335db4c689a6b638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dag_set_file_time</definition>
        <argsstring>(const char *fname, int64_t time_date)</argsstring>
        <name>dag_set_file_time</name>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>time_date</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fileUtils.h" line="14" column="6" declfile="fileUtils.h" declline="14" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fileUtils_8h_1a97d9ab8554de9fc803ccf102c6dd7eb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dag_get_file_size</definition>
        <argsstring>(const char *fname)</argsstring>
        <name>dag_get_file_size</name>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fileUtils.h" line="16" column="5" declfile="fileUtils.h" declline="16" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fileUtils_8h_1ad797c7692f34282344cea015d7f7c433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dag_copy_file</definition>
        <argsstring>(const char *src, const char *dest, bool overwrite=true)</argsstring>
        <name>dag_copy_file</name>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>overwrite</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fileUtils.h" line="18" column="6" declfile="fileUtils.h" declline="18" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fileUtils_8h_1a22119067c58628699456005b70e3edea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dag_copy_folder_content</definition>
        <argsstring>(const char *src, const char *dest, const Tab&lt; String &gt; &amp;ignore, bool copy_subfolders=true)</argsstring>
        <name>dag_copy_folder_content</name>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const Tab&lt; String &gt; &amp;</type>
          <declname>ignore</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copy_subfolders</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fileUtils.h" line="19" column="6" declfile="fileUtils.h" declline="19" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fileUtils_8h_1ac8273b37eacc782409b56cc9174d1d12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dag_path_compare</definition>
        <argsstring>(const char *path1, const char *path2)</argsstring>
        <name>dag_path_compare</name>
        <param>
          <type>const char *</type>
          <declname>path1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fileUtils.h" line="22" column="5" declfile="fileUtils.h" declline="22" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fileUtils_8h_1a3e4a112fb96c79af4fa3506198d35a79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dag_file_compare</definition>
        <argsstring>(const char *path1, const char *path2)</argsstring>
        <name>dag_file_compare</name>
        <param>
          <type>const char *</type>
          <declname>path1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fileUtils.h" line="25" column="6" declfile="fileUtils.h" declline="25" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fileUtils_8h_1a5c6cfb2bff6155d3d6c9f04ed37cb7ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dag_read_file_to_mem</definition>
        <argsstring>(const char *path, Tab&lt; char &gt; &amp;buffer)</argsstring>
        <name>dag_read_file_to_mem</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>Tab&lt; char &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fileUtils.h" line="28" column="6" declfile="fileUtils.h" declline="28" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fileUtils_8h_1aa8fcc0e2a6843bcc1f3829aac87f06eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dag_read_file_to_mem_str</definition>
        <argsstring>(const char *path, String &amp;buffer)</argsstring>
        <name>dag_read_file_to_mem_str</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>String &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fileUtils.h" line="30" column="6" declfile="fileUtils.h" declline="30" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fileUtils_8h_1a4381a9992d7f157a59089d0f94d2c183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * dag_get_appmodule_dir</definition>
        <argsstring>(char *dirbuf, size_t dirbufsz)</argsstring>
        <name>dag_get_appmodule_dir</name>
        <param>
          <type>char *</type>
          <declname>dirbuf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dirbufsz</declname>
        </param>
        <briefdescription>
<para>retrives directory where application module located to buffer and returns pointer to buffer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fileUtils.h" line="33" column="6" declfile="fileUtils.h" declline="33" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dagor<sp/>Tech<sp/>6.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;generic/dag_tab.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/dag_string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/dag_stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="fileUtils_8h_1acc6612c748276751c696f1ff7269b280" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="fileUtils_8h_1acc6612c748276751c696f1ff7269b280" kindref="member">dag_get_file_time</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname,<sp/>int64_t<sp/>&amp;time_date);</highlight></codeline>
<codeline lineno="14" refid="fileUtils_8h_1a287011985f240d3e335db4c689a6b638" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="fileUtils_8h_1a287011985f240d3e335db4c689a6b638" kindref="member">dag_set_file_time</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname,<sp/>int64_t<sp/>time_date);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="fileUtils_8h_1a97d9ab8554de9fc803ccf102c6dd7eb9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fileUtils_8h_1a97d9ab8554de9fc803ccf102c6dd7eb9" kindref="member">dag_get_file_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="fileUtils_8h_1ad797c7692f34282344cea015d7f7c433" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="fileUtils_8h_1ad797c7692f34282344cea015d7f7c433" kindref="member">dag_copy_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overwrite<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19" refid="fileUtils_8h_1a22119067c58628699456005b70e3edea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="fileUtils_8h_1a22119067c58628699456005b70e3edea" kindref="member">dag_copy_folder_content</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tab&lt;String&gt;<sp/>&amp;ignore,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy_subfolders<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compare<sp/>pathes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="fileUtils_8h_1ac8273b37eacc782409b56cc9174d1d12" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fileUtils_8h_1ac8273b37eacc782409b56cc9174d1d12" kindref="member">dag_path_compare</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path2);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>true<sp/>if<sp/>files<sp/>are<sp/>binary<sp/>equal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="fileUtils_8h_1a3e4a112fb96c79af4fa3506198d35a79" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="fileUtils_8h_1a3e4a112fb96c79af4fa3506198d35a79" kindref="member">dag_file_compare</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path2);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>load<sp/>file<sp/>to<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="fileUtils_8h_1a5c6cfb2bff6155d3d6c9f04ed37cb7ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="fileUtils_8h_1a5c6cfb2bff6155d3d6c9f04ed37cb7ee" kindref="member">dag_read_file_to_mem</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/>Tab&lt;char&gt;<sp/>&amp;buffer);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>load<sp/>file<sp/>to<sp/>memory<sp/>as<sp/>string<sp/>(zero-character<sp/>ended)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="fileUtils_8h_1aa8fcc0e2a6843bcc1f3829aac87f06eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="fileUtils_8h_1aa8fcc0e2a6843bcc1f3829aac87f06eb" kindref="member">dag_read_file_to_mem_str</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/>String<sp/>&amp;buffer);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="fileUtils_8h_1a4381a9992d7f157a59089d0f94d2c183" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="fileUtils_8h_1a4381a9992d7f157a59089d0f94d2c183" kindref="member">dag_get_appmodule_dir</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dirbuf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dirbufsz);</highlight></codeline>
    </programlisting>
    <location file="fileUtils.h"/>
  </compounddef>
</doxygen>
