.. autogenerated

***
jwt
***

module 'jwt'



*Source files:*

*prog/gameLibs/quirrel/sqJwt/sqJwt.cpp*


Usage::

  let { decode } = require("jwt")

or::

  from "jwt" import *

.. code-block:: sq

    //'jwt' exports:
    {
      function decode(jwt_string, key): string, string -> table
    }
    

.. sq:function:: function decode(jwt_string, key)

  :param jwt_string:  
  :type jwt_string: string

  :param key:  
  :type key: string

  ``nparamscheck:3``

  ``typecheck mask: any_type, string, string``

  :return: return decoded jwt table with {header=<json_value>, payload=<jsonvalue>} or {error=string}
  :rtype: table



    Error can be one of following::

      "OK",
      "INVALID_TOKEN",
      "WRONG_HEADER",
      "INVALID_TOKEN_TYPE",
      "INVALID_TOKEN_SIGNATURE_ALGORITHM",
      "INVALID_PAYLOAD_COMPRESSION",
      "WRONG_PAYLOAD",
      "SIGNATURE_VERIFICATION_FAILED"



