.. autogenerated

*******
sysinfo
*******

module 'sysinfo'



*Source files:*

*prog/gameLibs/quirrel/sqSysInfo/sqSysInfo.cpp*


Usage::

  let { get_user_system_info, inline_raytracing_available, get_battery, is_charging, get_thermal_state, get_battery_capacity_mah, get_network_connection_type, TS_NORMAL, TS_LIGHT, TS_MODERATE, TS_SEVERE, TS_CRITICAL, TS_EMERGENCY, TS_SHUTDOWN } = require("sysinfo")

or::

  from "sysinfo" import *

.. code-block:: sq

    //'sysinfo' exports:
    {
      function get_user_system_info():  -> DataBlock
      function inline_raytracing_available():  -> bool
      function get_battery():  -> float
      function is_charging():  -> bool
      function get_thermal_state():  -> int
      function get_battery_capacity_mah():  -> int
      function get_network_connection_type():  -> int
      value TS_NORMAL
      value TS_LIGHT
      value TS_MODERATE
      value TS_SEVERE
      value TS_CRITICAL
      value TS_EMERGENCY
      value TS_SHUTDOWN
    }
    

.. sq:function:: function get_user_system_info()

  :return: datablock of user system info
  :rtype: DataBlock

.. sq:function:: function inline_raytracing_available()

  :return: returns true if inline raytracing is available on device, otherwise false
  :rtype: bool

.. sq:function:: function get_battery()

  :return: return battery level from 0.0 to 1.0. When battery level unknown return -1.0
  :rtype: float

.. sq:function:: function is_charging()

  :return: return "is battery charging"
  :rtype: bool

.. sq:function:: function get_thermal_state()

  :return: return capacity of battery or -1 if it is unavailable
  :rtype: int

.. sq:function:: function get_battery_capacity_mah()

  :return: -1 -- Unknown, 0 -- Not connected, 1 -- Cellular, 2 -- Wi-Fi
  :rtype: int

.. sq:function:: function get_network_connection_type()

  :return: return thermal state. from TS_NORMAL to TS_SHUTDOWN
  :rtype: int

.. sq:attribute:: TS_NORMAL

.. sq:attribute:: TS_LIGHT

.. sq:attribute:: TS_MODERATE

.. sq:attribute:: TS_SEVERE

.. sq:attribute:: TS_CRITICAL

.. sq:attribute:: TS_EMERGENCY

.. sq:attribute:: TS_SHUTDOWN


