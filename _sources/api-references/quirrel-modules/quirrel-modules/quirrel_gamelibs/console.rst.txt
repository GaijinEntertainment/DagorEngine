.. autogenerated

*******
console
*******

module 'console'



*Source files:*

*prog/gameLibs/quirrel/sqConsole/sqConsole.cpp*


Usage::

  let { register_command, console_register_command, setObjPrintFunc, setConsoleObjPrintFunc, console_command, command, silentMode, printFn } = require("console")

or::

  from "console" import *

.. code-block:: sq

    //'console' exports:
    {
      function register_command(arg0, arg1, arg2, arg3, ...): closure_and_nativeclosure, string, string, string, any_type -> _undocumented_
      function console_register_command(arg0, arg1, arg2, arg3, ...): closure_and_nativeclosure, string, string, string, any_type -> _undocumented_
      function setObjPrintFunc(arg0): closure_and_nativeclosure or null -> _undocumented_
      function setConsoleObjPrintFunc(arg0): closure_and_nativeclosure or null -> _undocumented_
      function console_command()
      function command()
      value silentMode
      value printFn
    }
    

.. sq:function:: function register_command(arg0, arg1, arg2, arg3, ...)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: closure_and_nativeclosure

  :param arg1: autodoc from typemask/paramscheck
  :type arg1: string

  :param arg2: autodoc from typemask/paramscheck
  :type arg2: string

  :param arg3: autodoc from typemask/paramscheck
  :type arg3: string

  :param ...: this function accepts unlimited arguments
  :type ...: any_type

  ``nparamscheck:-2``

  ``typecheck mask: any_type, closure_and_nativeclosure, string, string, string``

.. sq:function:: function console_register_command(arg0, arg1, arg2, arg3, ...)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: closure_and_nativeclosure

  :param arg1: autodoc from typemask/paramscheck
  :type arg1: string

  :param arg2: autodoc from typemask/paramscheck
  :type arg2: string

  :param arg3: autodoc from typemask/paramscheck
  :type arg3: string

  :param ...: this function accepts unlimited arguments
  :type ...: any_type

  ``nparamscheck:-2``

  ``typecheck mask: any_type, closure_and_nativeclosure, string, string, string``

.. sq:function:: function setObjPrintFunc(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: closure_and_nativeclosure or null

  ``nparamscheck:2``

  ``typecheck mask: any_type, closure_and_nativeclosure or null``

.. sq:function:: function setConsoleObjPrintFunc(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: closure_and_nativeclosure or null

  ``nparamscheck:2``

  ``typecheck mask: any_type, closure_and_nativeclosure or null``

.. sq:function:: function console_command()

.. sq:function:: function command()

.. sq:attribute:: silentMode

.. sq:attribute:: printFn


