.. autogenerated

************
dagor.random
************

module 'dagor.random'



*Source files:*

*prog/gameLibs/quirrel/bindQuirrelEx/random.cpp*


Usage::

  let { DAGOR_RAND_MAX, rnd, frnd, srnd, rnd_float, rnd_int, rnd_range, set_rnd_seed, get_rnd_seed, gauss_rnd, uint32_hash, uint_noise1D, uint_noise2D, uint_noise3D } = require("dagor.random")

or::

  from "dagor.random" import *

.. code-block:: sq

    //'dagor.random' exports:
    {
      value DAGOR_RAND_MAX
      function rnd():  -> integer
      function frnd():  -> float
      function srnd():  -> float
      function rnd_float(a, b): float, float -> float
      function rnd_int(a, b): integer, integer -> integer
      function rnd_range()
      function set_rnd_seed(seed): integer -> null
      function get_rnd_seed():  -> integer
      function gauss_rnd(arg0): integer_or_float -> _undocumented_
      function uint32_hash()
      function uint_noise1D()
      function uint_noise2D()
      function uint_noise3D()
    }
    

.. sq:attribute:: DAGOR_RAND_MAX

.. sq:function:: function rnd()

  :return: integer

.. sq:function:: function frnd()

  :return: float

.. sq:function:: function srnd()

  :return: float

.. sq:function:: function rnd_float(a, b)

  :param a:  
  :type a: float

  :param b:  
  :type b: float

  :return: float

.. sq:function:: function rnd_int(a, b)

  :param a:  
  :type a: integer

  :param b:  
  :type b: integer

  :return: integer

.. sq:function:: function rnd_range()

.. sq:function:: function set_rnd_seed(seed)

  :param seed:  
  :type seed: integer

  :return: null

.. sq:function:: function get_rnd_seed()

  :return: integer

.. sq:function:: function gauss_rnd(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: integer_or_float

  ``nparamscheck:2``

  ``typecheck mask: any_type, integer_or_float``

.. sq:function:: function uint32_hash()

.. sq:function:: function uint_noise1D()

.. sq:function:: function uint_noise2D()

.. sq:function:: function uint_noise3D()


