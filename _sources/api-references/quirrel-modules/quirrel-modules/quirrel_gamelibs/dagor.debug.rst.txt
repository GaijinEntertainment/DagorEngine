.. autogenerated

***********
dagor.debug
***********

module 'dagor.debug'



*Source files:*

*prog/gameLibs/quirrel/bindQuirrelEx/sqratDagorDebug.cpp*


Usage::

  let { debug, fatal, screenlog, logerr, console_print, debug_dump_stack, assert, assertf, get_log_filename } = require("dagor.debug")

or::

  from "dagor.debug" import *

.. code-block:: sq

    //'dagor.debug' exports:
    {
      function debug(msg): string -> null
      function fatal(msg): string -> null
      function screenlog(msg): string -> null
      function logerr(arg0): string -> _undocumented_
      function console_print()
      function debug_dump_stack()
      function assert(arg0, arg1, ...): any_type, string, any_type -> _undocumented_
      function assertf(arg0, arg1): any_type, string -> _undocumented_
      function get_log_filename()
    }
    

.. sq:function:: function debug(msg)

  :param msg:  
  :type msg: string

  :return: null

.. sq:function:: function fatal(msg)

  :param msg:  
  :type msg: string

  :return: null

.. sq:function:: function screenlog(msg)

  :param msg:  
  :type msg: string

  :return: null

.. sq:function:: function logerr(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: string

  ``nparamscheck:2``

  ``typecheck mask: any_type, string``

.. sq:function:: function console_print()

.. sq:function:: function debug_dump_stack()

  ``nparamscheck:1``

  ``typecheck mask: any_type``

.. sq:function:: function assert(arg0, arg1, ...)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: any_type

  :param arg1: autodoc from typemask/paramscheck
  :type arg1: string

  :param ...: this function accepts unlimited arguments
  :type ...: any_type

  ``nparamscheck:-2``

  ``typecheck mask: any_type, any_type, string``

.. sq:function:: function assertf(arg0, arg1)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: any_type

  :param arg1: autodoc from typemask/paramscheck
  :type arg1: string

  ``nparamscheck:3``

  ``typecheck mask: any_type, any_type, string``

.. sq:function:: function get_log_filename()


