.. autogenerated

******
base64
******

module 'base64'



*Source files:*

*prog/gameLibs/quirrel/base64/base64.cpp*


Usage::

  let { encodeString, encodeUrlString, decodeString, decodeUrlString, encodeJson, encodeBlk, encodeBlob } = require("base64")

or::

  from "base64" import *

.. code-block:: sq

    //'base64' exports:
    {
      function encodeString(text): string -> string
      function encodeUrlString(text): string -> string
      function decodeString(text): string -> string
      function decodeUrlString(text): string -> string
      function encodeJson(obj): sqObject -> string
      function encodeBlk(blk): DataBlock -> string
      function encodeBlob(arg0): class_instance -> _undocumented_
    }
    

.. sq:function:: function encodeString(text)

  :param text:  
  :type text: string

  :return: string

.. sq:function:: function encodeUrlString(text)

  :param text:  
  :type text: string

  :return: string

.. sq:function:: function decodeString(text)

  :param text:  
  :type text: string

  :return: string

.. sq:function:: function decodeUrlString(text)

  :param text:  
  :type text: string

  :return: string

.. sq:function:: function encodeJson(obj)

  :param obj:  
  :type obj: sqObject

  :return: string

.. sq:function:: function encodeBlk(blk)

  :param blk:  
  :type blk: DataBlock

  :return: string

.. sq:function:: function encodeBlob(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: class_instance

  ``nparamscheck:2``

  ``typecheck mask: any_type, class_instance``


