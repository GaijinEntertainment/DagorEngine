.. autogenerated

*************
dagor.folders
*************

module 'dagor.folders'



*Source files:*

*prog/gameLibs/quirrel/bindQuirrelEx/dagorFolders.cpp*


Usage::

  let { get_exe_dir, get_game_dir, get_temp_dir, get_gamedata_dir, get_local_appdata_dir, get_common_appdata_dir, get_downloads_dir } = require("dagor.folders")

or::

  from "dagor.folders" import *

.. code-block:: sq

    //'dagor.folders' exports:
    {
      function get_exe_dir(arg0): table -> _undocumented_
      function get_game_dir(arg0): table -> _undocumented_
      function get_temp_dir(arg0): table -> _undocumented_
      function get_gamedata_dir(arg0): table -> _undocumented_
      function get_local_appdata_dir(arg0): table -> _undocumented_
      function get_common_appdata_dir(arg0): table -> _undocumented_
      function get_downloads_dir(arg0): table -> _undocumented_
    }
    

.. sq:function:: function get_exe_dir(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: table

  ``nparamscheck:1``

  ``typecheck mask: any_type, table``

.. sq:function:: function get_game_dir(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: table

  ``nparamscheck:1``

  ``typecheck mask: any_type, table``

.. sq:function:: function get_temp_dir(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: table

  ``nparamscheck:1``

  ``typecheck mask: any_type, table``

.. sq:function:: function get_gamedata_dir(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: table

  ``nparamscheck:1``

  ``typecheck mask: any_type, table``

.. sq:function:: function get_local_appdata_dir(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: table

  ``nparamscheck:1``

  ``typecheck mask: any_type, table``

.. sq:function:: function get_common_appdata_dir(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: table

  ``nparamscheck:1``

  ``typecheck mask: any_type, table``

.. sq:function:: function get_downloads_dir(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: table

  ``nparamscheck:1``

  ``typecheck mask: any_type, table``


