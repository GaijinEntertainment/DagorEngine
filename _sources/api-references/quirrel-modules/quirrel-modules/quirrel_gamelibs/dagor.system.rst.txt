.. autogenerated

************
dagor.system
************

module 'dagor.system'



*Source files:*

*prog/gameLibs/quirrel/bindQuirrelEx/dagorSystem.cpp*


Usage::

  let { dgs_get_settings, exit, get_arg_value_by_name, get_log_directory, get_all_arg_values_by_name, get_primary_screen_info, message_box, set_app_window_title, argv, DBGLEVEL, SANITIZER, ARCH_BITS, MB_OK, MB_OK_CANCEL, MB_YES_NO, MB_RETRY_CANCEL, MB_ABORT_RETRY_IGNORE, MB_YES_NO_CANCEL, MB_CANCEL_TRY_CONTINUE, MB_DEF_BUTTON_1, MB_DEF_BUTTON_2, MB_DEF_BUTTON_3, MB_ICON_ERROR, MB_ICON_WARNING, MB_ICON_QUESTION, MB_ICON_INFORMATION, MB_TOPMOST, MB_FOREGROUND, MB_NATIVE_DLG, MB_FAIL, MB_CLOSE, MB_BUTTON_1, MB_BUTTON_2, MB_BUTTON_3 } = require("dagor.system")

or::

  from "dagor.system" import *

.. code-block:: sq

    //'dagor.system' exports:
    {
      function dgs_get_settings():  -> DataBlock
      function exit(exit_code): integer -> null
      function get_arg_value_by_name():  -> string|null
      function get_log_directory()
      function get_all_arg_values_by_name(name): string -> array|null
      function get_primary_screen_info()
      function message_box(mbx_title, mbx_text, mbx_level): string, string, integer -> _undocumented_
      function set_app_window_title(title, s): string, any_type -> null
      const argv
      const DBGLEVEL
      const SANITIZER
      const ARCH_BITS
      const MB_OK
      const MB_OK_CANCEL
      const MB_YES_NO
      const MB_RETRY_CANCEL
      const MB_ABORT_RETRY_IGNORE
      const MB_YES_NO_CANCEL
      const MB_CANCEL_TRY_CONTINUE
      const MB_DEF_BUTTON_1
      const MB_DEF_BUTTON_2
      const MB_DEF_BUTTON_3
      const MB_ICON_ERROR
      const MB_ICON_WARNING
      const MB_ICON_QUESTION
      const MB_ICON_INFORMATION
      const MB_TOPMOST
      const MB_FOREGROUND
      const MB_NATIVE_DLG
      const MB_FAIL
      const MB_CLOSE
      const MB_BUTTON_1
      const MB_BUTTON_2
      const MB_BUTTON_3
    }
    

.. sq:function:: function dgs_get_settings()

  :return: datablock with game settings
  :rtype: DataBlock

.. sq:function:: function exit(exit_code)

  :param exit_code:  
  :type exit_code: integer

  :return: null

.. sq:function:: function get_arg_value_by_name()

  :return: null if no named argument provided
  :rtype: string|null

.. sq:function:: function get_log_directory()

.. sq:function:: function get_all_arg_values_by_name(name)

  :param name:  
  :type name: string

  ``nparamscheck:2``

  ``typecheck mask: any_type, string``

  :return: returns null or list [value1, value2,...] of all command line arguments provided in -name:value1 -name2:value2
  :rtype: array|null

format

.. sq:function:: function get_primary_screen_info()

.. sq:function:: function message_box(mbx_title, mbx_text, mbx_level)

  :param mbx_title:  
  :type mbx_title: string

  :param mbx_text:  
  :type mbx_text: string

  :param mbx_level: can be error, warning, info level
  :type mbx_level: integer

  ``nparamscheck:-2``

  ``typecheck mask: any_type, string, string, integer``

.. sq:function:: function set_app_window_title(title, s)

  :param title:  
  :type title: string

  :param s: title
  :type s: any_type

  :return: null

.. sq:attribute:: const argv

  ``type: array``

.. sq:attribute:: const DBGLEVEL

.. sq:attribute:: const SANITIZER

.. sq:attribute:: const ARCH_BITS

.. sq:attribute:: const MB_OK

.. sq:attribute:: const MB_OK_CANCEL

.. sq:attribute:: const MB_YES_NO

.. sq:attribute:: const MB_RETRY_CANCEL

.. sq:attribute:: const MB_ABORT_RETRY_IGNORE

.. sq:attribute:: const MB_YES_NO_CANCEL

.. sq:attribute:: const MB_CANCEL_TRY_CONTINUE

.. sq:attribute:: const MB_DEF_BUTTON_1

.. sq:attribute:: const MB_DEF_BUTTON_2

.. sq:attribute:: const MB_DEF_BUTTON_3

.. sq:attribute:: const MB_ICON_ERROR

.. sq:attribute:: const MB_ICON_WARNING

.. sq:attribute:: const MB_ICON_QUESTION

.. sq:attribute:: const MB_ICON_INFORMATION

.. sq:attribute:: const MB_TOPMOST

.. sq:attribute:: const MB_FOREGROUND

.. sq:attribute:: const MB_NATIVE_DLG

.. sq:attribute:: const MB_FAIL

.. sq:attribute:: const MB_CLOSE

.. sq:attribute:: const MB_BUTTON_1

.. sq:attribute:: const MB_BUTTON_2

.. sq:attribute:: const MB_BUTTON_3


