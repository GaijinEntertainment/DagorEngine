.. autogenerated

*************
entity_editor
*************

module 'entity_editor'



*Source files:*

*prog/gameLibs/publicInclude/daEditorE/editorCommon/inGameEditor.inc.cpp*


Usage::

  let { DE4_MODE_CREATE_ENTITY, get_instance, get_saved_components, get_template_name_for_ui, reset_component, save_component, save_add_template, save_del_template, is_editor_activated, is_any_entity_selected, is_asset_wnd_shown, get_scene_filepath, clear_entity_save_order, add_entity_save_order_comp, clear_groups, add_group_require, add_group_variant, add_group_variext, get_ecs_tags, set_start_work_mode, get_point_action_op, get_point_action_mod, get_point_action_has_pos, get_point_action_pos, get_point_action_ext_id, get_point_action_ext_name, get_point_action_ext_mtx, get_point_action_ext_sph, get_point_action_ext_eid, gather_ri_by_sphere, get_ri_from_entity, make_cam_spawn_tm } = require("entity_editor")

or::

  from "entity_editor" import *

.. code-block:: sq

    //'entity_editor' exports:
    {
      value DE4_MODE_CREATE_ENTITY
      function get_instance()
      function get_saved_components(arg0): integer -> _undocumented_
      function get_template_name_for_ui(eid_int): SQInteger -> string
      function reset_component(eid_int, comp_name): SQInteger, string -> null
      function save_component(eid_int, comp_name): SQInteger, string -> null
      function save_add_template(eid_int, templ_name): SQInteger, string -> null
      function save_del_template(eid_int, templ_name): SQInteger, string -> null
      function is_editor_activated():  -> bool
      function is_any_entity_selected():  -> bool
      function is_asset_wnd_shown():  -> bool
      function get_scene_filepath()
      function clear_entity_save_order():  -> null
      function add_entity_save_order_comp(comp_name_start): string -> null
      function clear_groups():  -> null
      function add_group_require(group_name, require): string, string -> null
      function add_group_variant(group_name, variant): string, string -> null
      function add_group_variext(group_name, variant, tsuffix): string, string, string -> null
      function get_ecs_tags()
      function set_start_work_mode(mode): string -> null
      function get_point_action_op()
      function get_point_action_mod():  -> integer
      function get_point_action_has_pos():  -> bool
      function get_point_action_pos():  -> integer
      function get_point_action_ext_id()
      function get_point_action_ext_name()
      function get_point_action_ext_mtx():  -> TMatrix
      function get_point_action_ext_sph():  -> integer
      function get_point_action_ext_eid():  -> integer
      function gather_ri_by_sphere(arg0, arg1, arg2, arg3): float, float, float, float -> _undocumented_
      function get_ri_from_entity(arg0): integer -> _undocumented_
      function make_cam_spawn_tm():  -> TMatrix
    }
    

.. sq:attribute:: DE4_MODE_CREATE_ENTITY

.. sq:function:: function get_instance()

.. sq:function:: function get_saved_components(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: integer

  ``nparamscheck:2``

  ``typecheck mask: table, integer``

.. sq:function:: function get_template_name_for_ui(eid_int)

  :param eid_int:  
  :type eid_int: SQInteger

  :return: string

.. sq:function:: function reset_component(eid_int, comp_name)

  :param eid_int:  
  :type eid_int: SQInteger

  :param comp_name:  
  :type comp_name: string

  :return: null

.. sq:function:: function save_component(eid_int, comp_name)

  :param eid_int:  
  :type eid_int: SQInteger

  :param comp_name:  
  :type comp_name: string

  :return: null

.. sq:function:: function save_add_template(eid_int, templ_name)

  :param eid_int:  
  :type eid_int: SQInteger

  :param templ_name:  
  :type templ_name: string

  :return: null

.. sq:function:: function save_del_template(eid_int, templ_name)

  :param eid_int:  
  :type eid_int: SQInteger

  :param templ_name:  
  :type templ_name: string

  :return: null

.. sq:function:: function is_editor_activated()

  :return: bool

.. sq:function:: function is_any_entity_selected()

  :return: bool

.. sq:function:: function is_asset_wnd_shown()

  :return: bool

.. sq:function:: function get_scene_filepath()

.. sq:function:: function clear_entity_save_order()

  :return: null

.. sq:function:: function add_entity_save_order_comp(comp_name_start)

  :param comp_name_start:  
  :type comp_name_start: string

  :return: null

.. sq:function:: function clear_groups()

  :return: null

.. sq:function:: function add_group_require(group_name, require)

  :param group_name:  
  :type group_name: string

  :param require:  
  :type require: string

  :return: null

.. sq:function:: function add_group_variant(group_name, variant)

  :param group_name:  
  :type group_name: string

  :param variant:  
  :type variant: string

  :return: null

.. sq:function:: function add_group_variext(group_name, variant, tsuffix)

  :param group_name:  
  :type group_name: string

  :param variant:  
  :type variant: string

  :param tsuffix:  
  :type tsuffix: string

  :return: null

.. sq:function:: function get_ecs_tags()

  ``nparamscheck:1``

  ``typecheck mask: any_type``

.. sq:function:: function set_start_work_mode(mode)

  :param mode:  
  :type mode: string

  :return: null

.. sq:function:: function get_point_action_op()

.. sq:function:: function get_point_action_mod()

  :return: integer

.. sq:function:: function get_point_action_has_pos()

  :return: bool

.. sq:function:: function get_point_action_pos()

  :return: integer

.. sq:function:: function get_point_action_ext_id()

.. sq:function:: function get_point_action_ext_name()

.. sq:function:: function get_point_action_ext_mtx()

  :return: TMatrix

.. sq:function:: function get_point_action_ext_sph()

  :return: integer

.. sq:function:: function get_point_action_ext_eid()

  :return: integer

.. sq:function:: function gather_ri_by_sphere(arg0, arg1, arg2, arg3)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: float

  :param arg1: autodoc from typemask/paramscheck
  :type arg1: float

  :param arg2: autodoc from typemask/paramscheck
  :type arg2: float

  :param arg3: autodoc from typemask/paramscheck
  :type arg3: float

  ``nparamscheck:5``

  ``typecheck mask: table, float, float, float, float``

.. sq:function:: function get_ri_from_entity(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: integer

  ``nparamscheck:2``

  ``typecheck mask: table, integer``

.. sq:function:: function make_cam_spawn_tm()

  :return: TMatrix


