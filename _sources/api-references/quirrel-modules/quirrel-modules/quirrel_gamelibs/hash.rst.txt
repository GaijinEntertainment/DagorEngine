.. autogenerated

****
hash
****

module 'hash'



*Source files:*

*prog/gameLibs/quirrel/bindQuirrelEx/hash.cpp*


Usage::

  let { md5, sha1, sha256, file_sha256, crc32, crc32_int, create_guid } = require("hash")

or::

  from "hash" import *

.. code-block:: sq

    //'hash' exports:
    {
      function md5(arg0): string -> _undocumented_
      function sha1(arg0): string -> _undocumented_
      function sha256(arg0): string -> _undocumented_
      function file_sha256(arg0): string -> _undocumented_
      function crc32(arg0, arg1, ...): string, integer, any_type -> _undocumented_
      function crc32_int(arg0, arg1, ...): string, integer, any_type -> _undocumented_
      function create_guid(arg0): string -> _undocumented_
    }
    

.. sq:function:: function md5(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: string

  ``nparamscheck:2``

  ``typecheck mask: any_type, string``

.. sq:function:: function sha1(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: string

  ``nparamscheck:2``

  ``typecheck mask: any_type, string``

.. sq:function:: function sha256(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: string

  ``nparamscheck:2``

  ``typecheck mask: any_type, string``

.. sq:function:: function file_sha256(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: string

  ``nparamscheck:2``

  ``typecheck mask: any_type, string``

.. sq:function:: function crc32(arg0, arg1, ...)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: string

  :param arg1: autodoc from typemask/paramscheck
  :type arg1: integer

  :param ...: this function accepts unlimited arguments
  :type ...: any_type

  ``nparamscheck:-2``

  ``typecheck mask: any_type, string, integer``

.. sq:function:: function crc32_int(arg0, arg1, ...)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: string

  :param arg1: autodoc from typemask/paramscheck
  :type arg1: integer

  :param ...: this function accepts unlimited arguments
  :type ...: any_type

  ``nparamscheck:-2``

  ``typecheck mask: any_type, string, integer``

.. sq:function:: function create_guid(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: string

  ``nparamscheck:1``

  ``typecheck mask: any_type, string``


