.. autogenerated

*********
videomode
*********

module 'videomode'



*Source files:*

*prog/daNetGame/ui/uiVideoMode.cpp*


Usage::

  let { apply_video_settings, get_video_modes, get_available_monitors, get_monitor_info, get_current_window_resolution, is_fullscreen_enabled, get_dlss_state, get_xess_state, get_fsr2_state, get_dlssg_support_state, set_dlssg_suppressed, get_dlssg_maximum_number_of_frames_generated, is_dlss_quality_available_at_resolution, is_xess_quality_available_at_resolution, is_dlss_ray_reconstruction_available, get_performance_display_mode_support, get_low_latency_modes, is_nvidia_gpu, is_amd_gpu, is_intel_gpu, is_inline_rt_supported, is_dx12, is_vulkan, is_gui_driver_select_enabled, is_upsampling, is_hdr_available, is_hdr_enabled, change_paper_white_nits, change_gamma, is_vrr_supported, get_default_static_resolution_scale, is_rendinst_tessellation_supported, is_only_low_gi_supported, is_hfr_supported, is_rt_supported } = require("videomode")

or::

  from "videomode" import *

.. code-block:: sq

    //'videomode' exports:
    {
      function apply_video_settings(changed_fields): Sqrat::Array -> null
      function get_video_modes()
      function get_available_monitors()
      function get_monitor_info()
      function get_current_window_resolution()
      function is_fullscreen_enabled()
      function get_dlss_state()
      function get_xess_state()
      function get_fsr2_state()
      function get_dlssg_support_state()
      function set_dlssg_suppressed()
      function get_dlssg_maximum_number_of_frames_generated()
      function is_dlss_quality_available_at_resolution()
      function is_xess_quality_available_at_resolution()
      function is_dlss_ray_reconstruction_available()
      function get_performance_display_mode_support()
      function get_low_latency_modes()
      function is_nvidia_gpu()
      function is_amd_gpu()
      function is_intel_gpu()
      function is_inline_rt_supported()
      function is_dx12()
      function is_vulkan()
      function is_gui_driver_select_enabled()
      function is_upsampling()
      function is_hdr_available(arg0): string -> _undocumented_
      function is_hdr_enabled()
      function change_paper_white_nits(field): sqObject -> null
      function change_gamma(field): sqObject -> null
      function is_vrr_supported()
      function get_default_static_resolution_scale()
      function is_rendinst_tessellation_supported()
      function is_only_low_gi_supported()
      function is_hfr_supported()
      function is_rt_supported()
    }
    

.. sq:function:: function apply_video_settings(changed_fields)

  :param changed_fields:  
  :type changed_fields: Sqrat::Array

  :return: null

.. sq:function:: function get_video_modes()

.. sq:function:: function get_available_monitors()

.. sq:function:: function get_monitor_info()

.. sq:function:: function get_current_window_resolution()

.. sq:function:: function is_fullscreen_enabled()

.. sq:function:: function get_dlss_state()

.. sq:function:: function get_xess_state()

.. sq:function:: function get_fsr2_state()

.. sq:function:: function get_dlssg_support_state()

.. sq:function:: function set_dlssg_suppressed()

.. sq:function:: function get_dlssg_maximum_number_of_frames_generated()

.. sq:function:: function is_dlss_quality_available_at_resolution()

.. sq:function:: function is_xess_quality_available_at_resolution()

.. sq:function:: function is_dlss_ray_reconstruction_available()

.. sq:function:: function get_performance_display_mode_support()

.. sq:function:: function get_low_latency_modes()

.. sq:function:: function is_nvidia_gpu()

.. sq:function:: function is_amd_gpu()

.. sq:function:: function is_intel_gpu()

.. sq:function:: function is_inline_rt_supported()

.. sq:function:: function is_dx12()

.. sq:function:: function is_vulkan()

.. sq:function:: function is_gui_driver_select_enabled()

.. sq:function:: function is_upsampling()

.. sq:function:: function is_hdr_available(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: string

  ``nparamscheck:2``

  ``typecheck mask: any_type, string``

.. sq:function:: function is_hdr_enabled()

.. sq:function:: function change_paper_white_nits(field)

  :param field:  
  :type field: sqObject

  :return: null

.. sq:function:: function change_gamma(field)

  :param field:  
  :type field: sqObject

  :return: null

.. sq:function:: function is_vrr_supported()

.. sq:function:: function get_default_static_resolution_scale()

.. sq:function:: function is_rendinst_tessellation_supported()

.. sq:function:: function is_only_low_gi_supported()

.. sq:function:: function is_hfr_supported()

.. sq:function:: function is_rt_supported()


