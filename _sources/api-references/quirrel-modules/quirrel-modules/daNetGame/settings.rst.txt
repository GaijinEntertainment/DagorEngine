.. autogenerated

********
settings
********

module 'settings'



*Source files:*

*prog/daNetGame/main/settings.cpp*


Usage::

  let { get_setting_by_blk_path, set_setting_by_blk_path, set_setting_by_blk_path_and_save, remove_setting_by_blk_path, save_settings, save_changed_settings, are_settings_changes_committed, commit_settings_changes } = require("settings")

or::

  from "settings" import *

.. code-block:: sq

    //'settings' exports:
    {
      function get_setting_by_blk_path(arg0): string -> _undocumented_
      function set_setting_by_blk_path(arg0, arg1): string, any_type -> _undocumented_
      function set_setting_by_blk_path_and_save(arg0, arg1): string, any_type -> _undocumented_
      function remove_setting_by_blk_path(arg0, arg1): string, any_type -> _undocumented_
      function save_settings()
      function save_changed_settings(changed_fields): Sqrat::Array -> null
      function are_settings_changes_committed()
      function commit_settings_changes():  -> null
    }
    

.. sq:function:: function get_setting_by_blk_path(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: string

  ``nparamscheck:2``

  ``typecheck mask: any_type, string``

.. sq:function:: function set_setting_by_blk_path(arg0, arg1)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: string

  :param arg1: autodoc from typemask/paramscheck
  :type arg1: any_type

  ``nparamscheck:3``

  ``typecheck mask: any_type, string, any_type``

.. sq:function:: function set_setting_by_blk_path_and_save(arg0, arg1)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: string

  :param arg1: autodoc from typemask/paramscheck
  :type arg1: any_type

  ``nparamscheck:3``

  ``typecheck mask: any_type, string, any_type``

.. sq:function:: function remove_setting_by_blk_path(arg0, arg1)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: string

  :param arg1: autodoc from typemask/paramscheck
  :type arg1: any_type

  ``nparamscheck:2``

  ``typecheck mask: any_type, string, any_type``

.. sq:function:: function save_settings()

  ``nparamscheck:1``

.. sq:function:: function save_changed_settings(changed_fields)

  :param changed_fields:  
  :type changed_fields: Sqrat::Array

  :return: null

.. sq:function:: function are_settings_changes_committed()

.. sq:function:: function commit_settings_changes()

  :return: null


